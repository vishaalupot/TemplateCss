/*!@license Copyright 2013, Heinrich Goebl, License: MIT, see https://github.com/hgoebl/mobile-detect.js*/
!function(a, b) {
    a(function() {
        "use strict";
        function a(a, b) {
            return null != a && null != b && a.toLowerCase() === b.toLowerCase()
        }
        function c(a, b) {
            var c, d, e = a.length;
            if (!e || !b)
                return !1;
            for (c = b.toLowerCase(),
            d = 0; d < e; ++d)
                if (c === a[d].toLowerCase())
                    return !0;
            return !1
        }
        function d(a) {
            for (var b in a)
                i.call(a, b) && (a[b] = new RegExp(a[b],"i"))
        }
        function e(a) {
            return (a || "").substr(0, 500)
        }
        function f(a, b) {
            this.ua = e(a),
            this._cache = {},
            this.maxPhoneWidth = b || 600
        }
        var g = {};
        g.mobileDetectRules = {
            phones: {
                iPhone: "\\biPhone\\b|\\biPod\\b",
                BlackBerry: "BlackBerry|\\bBB10\\b|rim[0-9]+|\\b(BBA100|BBB100|BBD100|BBE100|BBF100|STH100)\\b-[0-9]+",
                HTC: "HTC|HTC.*(Sensation|Evo|Vision|Explorer|6800|8100|8900|A7272|S510e|C110e|Legend|Desire|T8282)|APX515CKT|Qtek9090|APA9292KT|HD_mini|Sensation.*Z710e|PG86100|Z715e|Desire.*(A8181|HD)|ADR6200|ADR6400L|ADR6425|001HT|Inspire 4G|Android.*\\bEVO\\b|T-Mobile G1|Z520m|Android [0-9.]+; Pixel",
                Nexus: "Nexus One|Nexus S|Galaxy.*Nexus|Android.*Nexus.*Mobile|Nexus 4|Nexus 5|Nexus 6",
                Dell: "Dell[;]? (Streak|Aero|Venue|Venue Pro|Flash|Smoke|Mini 3iX)|XCD28|XCD35|\\b001DL\\b|\\b101DL\\b|\\bGS01\\b",
                Motorola: "Motorola|DROIDX|DROID BIONIC|\\bDroid\\b.*Build|Android.*Xoom|HRI39|MOT-|A1260|A1680|A555|A853|A855|A953|A955|A956|Motorola.*ELECTRIFY|Motorola.*i1|i867|i940|MB200|MB300|MB501|MB502|MB508|MB511|MB520|MB525|MB526|MB611|MB612|MB632|MB810|MB855|MB860|MB861|MB865|MB870|ME501|ME502|ME511|ME525|ME600|ME632|ME722|ME811|ME860|ME863|ME865|MT620|MT710|MT716|MT720|MT810|MT870|MT917|Motorola.*TITANIUM|WX435|WX445|XT300|XT301|XT311|XT316|XT317|XT319|XT320|XT390|XT502|XT530|XT531|XT532|XT535|XT603|XT610|XT611|XT615|XT681|XT701|XT702|XT711|XT720|XT800|XT806|XT860|XT862|XT875|XT882|XT883|XT894|XT901|XT907|XT909|XT910|XT912|XT928|XT926|XT915|XT919|XT925|XT1021|\\bMoto E\\b|XT1068|XT1092|XT1052",
                Samsung: "\\bSamsung\\b|SM-G950F|SM-G955F|SM-G9250|GT-19300|SGH-I337|BGT-S5230|GT-B2100|GT-B2700|GT-B2710|GT-B3210|GT-B3310|GT-B3410|GT-B3730|GT-B3740|GT-B5510|GT-B5512|GT-B5722|GT-B6520|GT-B7300|GT-B7320|GT-B7330|GT-B7350|GT-B7510|GT-B7722|GT-B7800|GT-C3010|GT-C3011|GT-C3060|GT-C3200|GT-C3212|GT-C3212I|GT-C3262|GT-C3222|GT-C3300|GT-C3300K|GT-C3303|GT-C3303K|GT-C3310|GT-C3322|GT-C3330|GT-C3350|GT-C3500|GT-C3510|GT-C3530|GT-C3630|GT-C3780|GT-C5010|GT-C5212|GT-C6620|GT-C6625|GT-C6712|GT-E1050|GT-E1070|GT-E1075|GT-E1080|GT-E1081|GT-E1085|GT-E1087|GT-E1100|GT-E1107|GT-E1110|GT-E1120|GT-E1125|GT-E1130|GT-E1160|GT-E1170|GT-E1175|GT-E1180|GT-E1182|GT-E1200|GT-E1210|GT-E1225|GT-E1230|GT-E1390|GT-E2100|GT-E2120|GT-E2121|GT-E2152|GT-E2220|GT-E2222|GT-E2230|GT-E2232|GT-E2250|GT-E2370|GT-E2550|GT-E2652|GT-E3210|GT-E3213|GT-I5500|GT-I5503|GT-I5700|GT-I5800|GT-I5801|GT-I6410|GT-I6420|GT-I7110|GT-I7410|GT-I7500|GT-I8000|GT-I8150|GT-I8160|GT-I8190|GT-I8320|GT-I8330|GT-I8350|GT-I8530|GT-I8700|GT-I8703|GT-I8910|GT-I9000|GT-I9001|GT-I9003|GT-I9010|GT-I9020|GT-I9023|GT-I9070|GT-I9082|GT-I9100|GT-I9103|GT-I9220|GT-I9250|GT-I9300|GT-I9305|GT-I9500|GT-I9505|GT-M3510|GT-M5650|GT-M7500|GT-M7600|GT-M7603|GT-M8800|GT-M8910|GT-N7000|GT-S3110|GT-S3310|GT-S3350|GT-S3353|GT-S3370|GT-S3650|GT-S3653|GT-S3770|GT-S3850|GT-S5210|GT-S5220|GT-S5229|GT-S5230|GT-S5233|GT-S5250|GT-S5253|GT-S5260|GT-S5263|GT-S5270|GT-S5300|GT-S5330|GT-S5350|GT-S5360|GT-S5363|GT-S5369|GT-S5380|GT-S5380D|GT-S5560|GT-S5570|GT-S5600|GT-S5603|GT-S5610|GT-S5620|GT-S5660|GT-S5670|GT-S5690|GT-S5750|GT-S5780|GT-S5830|GT-S5839|GT-S6102|GT-S6500|GT-S7070|GT-S7200|GT-S7220|GT-S7230|GT-S7233|GT-S7250|GT-S7500|GT-S7530|GT-S7550|GT-S7562|GT-S7710|GT-S8000|GT-S8003|GT-S8500|GT-S8530|GT-S8600|SCH-A310|SCH-A530|SCH-A570|SCH-A610|SCH-A630|SCH-A650|SCH-A790|SCH-A795|SCH-A850|SCH-A870|SCH-A890|SCH-A930|SCH-A950|SCH-A970|SCH-A990|SCH-I100|SCH-I110|SCH-I400|SCH-I405|SCH-I500|SCH-I510|SCH-I515|SCH-I600|SCH-I730|SCH-I760|SCH-I770|SCH-I830|SCH-I910|SCH-I920|SCH-I959|SCH-LC11|SCH-N150|SCH-N300|SCH-R100|SCH-R300|SCH-R351|SCH-R400|SCH-R410|SCH-T300|SCH-U310|SCH-U320|SCH-U350|SCH-U360|SCH-U365|SCH-U370|SCH-U380|SCH-U410|SCH-U430|SCH-U450|SCH-U460|SCH-U470|SCH-U490|SCH-U540|SCH-U550|SCH-U620|SCH-U640|SCH-U650|SCH-U660|SCH-U700|SCH-U740|SCH-U750|SCH-U810|SCH-U820|SCH-U900|SCH-U940|SCH-U960|SCS-26UC|SGH-A107|SGH-A117|SGH-A127|SGH-A137|SGH-A157|SGH-A167|SGH-A177|SGH-A187|SGH-A197|SGH-A227|SGH-A237|SGH-A257|SGH-A437|SGH-A517|SGH-A597|SGH-A637|SGH-A657|SGH-A667|SGH-A687|SGH-A697|SGH-A707|SGH-A717|SGH-A727|SGH-A737|SGH-A747|SGH-A767|SGH-A777|SGH-A797|SGH-A817|SGH-A827|SGH-A837|SGH-A847|SGH-A867|SGH-A877|SGH-A887|SGH-A897|SGH-A927|SGH-B100|SGH-B130|SGH-B200|SGH-B220|SGH-C100|SGH-C110|SGH-C120|SGH-C130|SGH-C140|SGH-C160|SGH-C170|SGH-C180|SGH-C200|SGH-C207|SGH-C210|SGH-C225|SGH-C230|SGH-C417|SGH-C450|SGH-D307|SGH-D347|SGH-D357|SGH-D407|SGH-D415|SGH-D780|SGH-D807|SGH-D980|SGH-E105|SGH-E200|SGH-E315|SGH-E316|SGH-E317|SGH-E335|SGH-E590|SGH-E635|SGH-E715|SGH-E890|SGH-F300|SGH-F480|SGH-I200|SGH-I300|SGH-I320|SGH-I550|SGH-I577|SGH-I600|SGH-I607|SGH-I617|SGH-I627|SGH-I637|SGH-I677|SGH-I700|SGH-I717|SGH-I727|SGH-i747M|SGH-I777|SGH-I780|SGH-I827|SGH-I847|SGH-I857|SGH-I896|SGH-I897|SGH-I900|SGH-I907|SGH-I917|SGH-I927|SGH-I937|SGH-I997|SGH-J150|SGH-J200|SGH-L170|SGH-L700|SGH-M110|SGH-M150|SGH-M200|SGH-N105|SGH-N500|SGH-N600|SGH-N620|SGH-N625|SGH-N700|SGH-N710|SGH-P107|SGH-P207|SGH-P300|SGH-P310|SGH-P520|SGH-P735|SGH-P777|SGH-Q105|SGH-R210|SGH-R220|SGH-R225|SGH-S105|SGH-S307|SGH-T109|SGH-T119|SGH-T139|SGH-T209|SGH-T219|SGH-T229|SGH-T239|SGH-T249|SGH-T259|SGH-T309|SGH-T319|SGH-T329|SGH-T339|SGH-T349|SGH-T359|SGH-T369|SGH-T379|SGH-T409|SGH-T429|SGH-T439|SGH-T459|SGH-T469|SGH-T479|SGH-T499|SGH-T509|SGH-T519|SGH-T539|SGH-T559|SGH-T589|SGH-T609|SGH-T619|SGH-T629|SGH-T639|SGH-T659|SGH-T669|SGH-T679|SGH-T709|SGH-T719|SGH-T729|SGH-T739|SGH-T746|SGH-T749|SGH-T759|SGH-T769|SGH-T809|SGH-T819|SGH-T839|SGH-T919|SGH-T929|SGH-T939|SGH-T959|SGH-T989|SGH-U100|SGH-U200|SGH-U800|SGH-V205|SGH-V206|SGH-X100|SGH-X105|SGH-X120|SGH-X140|SGH-X426|SGH-X427|SGH-X475|SGH-X495|SGH-X497|SGH-X507|SGH-X600|SGH-X610|SGH-X620|SGH-X630|SGH-X700|SGH-X820|SGH-X890|SGH-Z130|SGH-Z150|SGH-Z170|SGH-ZX10|SGH-ZX20|SHW-M110|SPH-A120|SPH-A400|SPH-A420|SPH-A460|SPH-A500|SPH-A560|SPH-A600|SPH-A620|SPH-A660|SPH-A700|SPH-A740|SPH-A760|SPH-A790|SPH-A800|SPH-A820|SPH-A840|SPH-A880|SPH-A900|SPH-A940|SPH-A960|SPH-D600|SPH-D700|SPH-D710|SPH-D720|SPH-I300|SPH-I325|SPH-I330|SPH-I350|SPH-I500|SPH-I600|SPH-I700|SPH-L700|SPH-M100|SPH-M220|SPH-M240|SPH-M300|SPH-M305|SPH-M320|SPH-M330|SPH-M350|SPH-M360|SPH-M370|SPH-M380|SPH-M510|SPH-M540|SPH-M550|SPH-M560|SPH-M570|SPH-M580|SPH-M610|SPH-M620|SPH-M630|SPH-M800|SPH-M810|SPH-M850|SPH-M900|SPH-M910|SPH-M920|SPH-M930|SPH-N100|SPH-N200|SPH-N240|SPH-N300|SPH-N400|SPH-Z400|SWC-E100|SCH-i909|GT-N7100|GT-N7105|SCH-I535|SM-N900A|SGH-I317|SGH-T999L|GT-S5360B|GT-I8262|GT-S6802|GT-S6312|GT-S6310|GT-S5312|GT-S5310|GT-I9105|GT-I8510|GT-S6790N|SM-G7105|SM-N9005|GT-S5301|GT-I9295|GT-I9195|SM-C101|GT-S7392|GT-S7560|GT-B7610|GT-I5510|GT-S7582|GT-S7530E|GT-I8750|SM-G9006V|SM-G9008V|SM-G9009D|SM-G900A|SM-G900D|SM-G900F|SM-G900H|SM-G900I|SM-G900J|SM-G900K|SM-G900L|SM-G900M|SM-G900P|SM-G900R4|SM-G900S|SM-G900T|SM-G900V|SM-G900W8|SHV-E160K|SCH-P709|SCH-P729|SM-T2558|GT-I9205|SM-G9350|SM-J120F|SM-G920F|SM-G920V|SM-G930F|SM-N910C|SM-A310F|GT-I9190|SM-J500FN|SM-G903F|SM-J330F",
                LG: "\\bLG\\b;|LG[- ]?(C800|C900|E400|E610|E900|E-900|F160|F180K|F180L|F180S|730|855|L160|LS740|LS840|LS970|LU6200|MS690|MS695|MS770|MS840|MS870|MS910|P500|P700|P705|VM696|AS680|AS695|AX840|C729|E970|GS505|272|C395|E739BK|E960|L55C|L75C|LS696|LS860|P769BK|P350|P500|P509|P870|UN272|US730|VS840|VS950|LN272|LN510|LS670|LS855|LW690|MN270|MN510|P509|P769|P930|UN200|UN270|UN510|UN610|US670|US740|US760|UX265|UX840|VN271|VN530|VS660|VS700|VS740|VS750|VS910|VS920|VS930|VX9200|VX11000|AX840A|LW770|P506|P925|P999|E612|D955|D802|MS323|M257)|LM-G710",
                Sony: "SonyST|SonyLT|SonyEricsson|SonyEricssonLT15iv|LT18i|E10i|LT28h|LT26w|SonyEricssonMT27i|C5303|C6902|C6903|C6906|C6943|D2533",
                Asus: "Asus.*Galaxy|PadFone.*Mobile",
                NokiaLumia: "Lumia [0-9]{3,4}",
                Micromax: "Micromax.*\\b(A210|A92|A88|A72|A111|A110Q|A115|A116|A110|A90S|A26|A51|A35|A54|A25|A27|A89|A68|A65|A57|A90)\\b",
                Palm: "PalmSource|Palm",
                Vertu: "Vertu|Vertu.*Ltd|Vertu.*Ascent|Vertu.*Ayxta|Vertu.*Constellation(F|Quest)?|Vertu.*Monika|Vertu.*Signature",
                Pantech: "PANTECH|IM-A850S|IM-A840S|IM-A830L|IM-A830K|IM-A830S|IM-A820L|IM-A810K|IM-A810S|IM-A800S|IM-T100K|IM-A725L|IM-A780L|IM-A775C|IM-A770K|IM-A760S|IM-A750K|IM-A740S|IM-A730S|IM-A720L|IM-A710K|IM-A690L|IM-A690S|IM-A650S|IM-A630K|IM-A600S|VEGA PTL21|PT003|P8010|ADR910L|P6030|P6020|P9070|P4100|P9060|P5000|CDM8992|TXT8045|ADR8995|IS11PT|P2030|P6010|P8000|PT002|IS06|CDM8999|P9050|PT001|TXT8040|P2020|P9020|P2000|P7040|P7000|C790",
                Fly: "IQ230|IQ444|IQ450|IQ440|IQ442|IQ441|IQ245|IQ256|IQ236|IQ255|IQ235|IQ245|IQ275|IQ240|IQ285|IQ280|IQ270|IQ260|IQ250",
                Wiko: "KITE 4G|HIGHWAY|GETAWAY|STAIRWAY|DARKSIDE|DARKFULL|DARKNIGHT|DARKMOON|SLIDE|WAX 4G|RAINBOW|BLOOM|SUNSET|GOA(?!nna)|LENNY|BARRY|IGGY|OZZY|CINK FIVE|CINK PEAX|CINK PEAX 2|CINK SLIM|CINK SLIM 2|CINK +|CINK KING|CINK PEAX|CINK SLIM|SUBLIM",
                iMobile: "i-mobile (IQ|i-STYLE|idea|ZAA|Hitz)",
                SimValley: "\\b(SP-80|XT-930|SX-340|XT-930|SX-310|SP-360|SP60|SPT-800|SP-120|SPT-800|SP-140|SPX-5|SPX-8|SP-100|SPX-8|SPX-12)\\b",
                Wolfgang: "AT-B24D|AT-AS50HD|AT-AS40W|AT-AS55HD|AT-AS45q2|AT-B26D|AT-AS50Q",
                Alcatel: "Alcatel",
                Nintendo: "Nintendo (3DS|Switch)",
                Amoi: "Amoi",
                INQ: "INQ",
                OnePlus: "ONEPLUS",
                GenericPhone: "Tapatalk|PDA;|SAGEM|\\bmmp\\b|pocket|\\bpsp\\b|symbian|Smartphone|smartfon|treo|up.browser|up.link|vodafone|\\bwap\\b|nokia|Series40|Series60|S60|SonyEricsson|N900|MAUI.*WAP.*Browser"
            },
            tablets: {
                iPad: "iPad|iPad.*Mobile",
                NexusTablet: "Android.*Nexus[\\s]+(7|9|10)",
                GoogleTablet: "Android.*Pixel C",
                SamsungTablet: "SAMSUNG.*Tablet|Galaxy.*Tab|SC-01C|GT-P1000|GT-P1003|GT-P1010|GT-P3105|GT-P6210|GT-P6800|GT-P6810|GT-P7100|GT-P7300|GT-P7310|GT-P7500|GT-P7510|SCH-I800|SCH-I815|SCH-I905|SGH-I957|SGH-I987|SGH-T849|SGH-T859|SGH-T869|SPH-P100|GT-P3100|GT-P3108|GT-P3110|GT-P5100|GT-P5110|GT-P6200|GT-P7320|GT-P7511|GT-N8000|GT-P8510|SGH-I497|SPH-P500|SGH-T779|SCH-I705|SCH-I915|GT-N8013|GT-P3113|GT-P5113|GT-P8110|GT-N8010|GT-N8005|GT-N8020|GT-P1013|GT-P6201|GT-P7501|GT-N5100|GT-N5105|GT-N5110|SHV-E140K|SHV-E140L|SHV-E140S|SHV-E150S|SHV-E230K|SHV-E230L|SHV-E230S|SHW-M180K|SHW-M180L|SHW-M180S|SHW-M180W|SHW-M300W|SHW-M305W|SHW-M380K|SHW-M380S|SHW-M380W|SHW-M430W|SHW-M480K|SHW-M480S|SHW-M480W|SHW-M485W|SHW-M486W|SHW-M500W|GT-I9228|SCH-P739|SCH-I925|GT-I9200|GT-P5200|GT-P5210|GT-P5210X|SM-T311|SM-T310|SM-T310X|SM-T210|SM-T210R|SM-T211|SM-P600|SM-P601|SM-P605|SM-P900|SM-P901|SM-T217|SM-T217A|SM-T217S|SM-P6000|SM-T3100|SGH-I467|XE500|SM-T110|GT-P5220|GT-I9200X|GT-N5110X|GT-N5120|SM-P905|SM-T111|SM-T2105|SM-T315|SM-T320|SM-T320X|SM-T321|SM-T520|SM-T525|SM-T530NU|SM-T230NU|SM-T330NU|SM-T900|XE500T1C|SM-P605V|SM-P905V|SM-T337V|SM-T537V|SM-T707V|SM-T807V|SM-P600X|SM-P900X|SM-T210X|SM-T230|SM-T230X|SM-T325|GT-P7503|SM-T531|SM-T330|SM-T530|SM-T705|SM-T705C|SM-T535|SM-T331|SM-T800|SM-T700|SM-T537|SM-T807|SM-P907A|SM-T337A|SM-T537A|SM-T707A|SM-T807A|SM-T237|SM-T807P|SM-P607T|SM-T217T|SM-T337T|SM-T807T|SM-T116NQ|SM-T116BU|SM-P550|SM-T350|SM-T550|SM-T9000|SM-P9000|SM-T705Y|SM-T805|GT-P3113|SM-T710|SM-T810|SM-T815|SM-T360|SM-T533|SM-T113|SM-T335|SM-T715|SM-T560|SM-T670|SM-T677|SM-T377|SM-T567|SM-T357T|SM-T555|SM-T561|SM-T713|SM-T719|SM-T813|SM-T819|SM-T580|SM-T355Y?|SM-T280|SM-T817A|SM-T820|SM-W700|SM-P580|SM-T587|SM-P350|SM-P555M|SM-P355M|SM-T113NU|SM-T815Y|SM-T585|SM-T285|SM-T825|SM-W708|SM-T835|SM-T830|SM-T837V|SM-T720|SM-T510|SM-T387V",
                Kindle: "Kindle|Silk.*Accelerated|Android.*\\b(KFOT|KFTT|KFJWI|KFJWA|KFOTE|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|WFJWAE|KFSAWA|KFSAWI|KFASWI|KFARWI|KFFOWI|KFGIWI|KFMEWI)\\b|Android.*Silk/[0-9.]+ like Chrome/[0-9.]+ (?!Mobile)",
                SurfaceTablet: "Windows NT [0-9.]+; ARM;.*(Tablet|ARMBJS)",
                HPTablet: "HP Slate (7|8|10)|HP ElitePad 900|hp-tablet|EliteBook.*Touch|HP 8|Slate 21|HP SlateBook 10",
                AsusTablet: "^.*PadFone((?!Mobile).)*$|Transformer|TF101|TF101G|TF300T|TF300TG|TF300TL|TF700T|TF700KL|TF701T|TF810C|ME171|ME301T|ME302C|ME371MG|ME370T|ME372MG|ME172V|ME173X|ME400C|Slider SL101|\\bK00F\\b|\\bK00C\\b|\\bK00E\\b|\\bK00L\\b|TX201LA|ME176C|ME102A|\\bM80TA\\b|ME372CL|ME560CG|ME372CG|ME302KL| K010 | K011 | K017 | K01E |ME572C|ME103K|ME170C|ME171C|\\bME70C\\b|ME581C|ME581CL|ME8510C|ME181C|P01Y|PO1MA|P01Z|\\bP027\\b|\\bP024\\b|\\bP00C\\b",
                BlackBerryTablet: "PlayBook|RIM Tablet",
                HTCtablet: "HTC_Flyer_P512|HTC Flyer|HTC Jetstream|HTC-P715a|HTC EVO View 4G|PG41200|PG09410",
                MotorolaTablet: "xoom|sholest|MZ615|MZ605|MZ505|MZ601|MZ602|MZ603|MZ604|MZ606|MZ607|MZ608|MZ609|MZ615|MZ616|MZ617",
                NookTablet: "Android.*Nook|NookColor|nook browser|BNRV200|BNRV200A|BNTV250|BNTV250A|BNTV400|BNTV600|LogicPD Zoom2",
                AcerTablet: "Android.*; \\b(A100|A101|A110|A200|A210|A211|A500|A501|A510|A511|A700|A701|W500|W500P|W501|W501P|W510|W511|W700|G100|G100W|B1-A71|B1-710|B1-711|A1-810|A1-811|A1-830)\\b|W3-810|\\bA3-A10\\b|\\bA3-A11\\b|\\bA3-A20\\b|\\bA3-A30",
                ToshibaTablet: "Android.*(AT100|AT105|AT200|AT205|AT270|AT275|AT300|AT305|AT1S5|AT500|AT570|AT700|AT830)|TOSHIBA.*FOLIO",
                LGTablet: "\\bL-06C|LG-V909|LG-V900|LG-V700|LG-V510|LG-V500|LG-V410|LG-V400|LG-VK810\\b",
                FujitsuTablet: "Android.*\\b(F-01D|F-02F|F-05E|F-10D|M532|Q572)\\b",
                PrestigioTablet: "PMP3170B|PMP3270B|PMP3470B|PMP7170B|PMP3370B|PMP3570C|PMP5870C|PMP3670B|PMP5570C|PMP5770D|PMP3970B|PMP3870C|PMP5580C|PMP5880D|PMP5780D|PMP5588C|PMP7280C|PMP7280C3G|PMP7280|PMP7880D|PMP5597D|PMP5597|PMP7100D|PER3464|PER3274|PER3574|PER3884|PER5274|PER5474|PMP5097CPRO|PMP5097|PMP7380D|PMP5297C|PMP5297C_QUAD|PMP812E|PMP812E3G|PMP812F|PMP810E|PMP880TD|PMT3017|PMT3037|PMT3047|PMT3057|PMT7008|PMT5887|PMT5001|PMT5002",
                LenovoTablet: "Lenovo TAB|Idea(Tab|Pad)( A1|A10| K1|)|ThinkPad([ ]+)?Tablet|YT3-850M|YT3-X90L|YT3-X90F|YT3-X90X|Lenovo.*(S2109|S2110|S5000|S6000|K3011|A3000|A3500|A1000|A2107|A2109|A1107|A5500|A7600|B6000|B8000|B8080)(-|)(FL|F|HV|H|)|TB-X103F|TB-X304X|TB-X304F|TB-X304L|TB-X505F|TB-X505L|TB-X505X|TB-X605F|TB-X605L|TB-8703F|TB-8703X|TB-8703N|TB-8704N|TB-8704F|TB-8704X|TB-8704V|TB-7304F|TB-7304I|TB-7304X|Tab2A7-10F|Tab2A7-20F|TB2-X30L|YT3-X50L|YT3-X50F|YT3-X50M|YT-X705F|YT-X703F|YT-X703L|YT-X705L|YT-X705X|TB2-X30F|TB2-X30L|TB2-X30M|A2107A-F|A2107A-H|TB3-730F|TB3-730M|TB3-730X|TB-7504F|TB-7504X",
                DellTablet: "Venue 11|Venue 8|Venue 7|Dell Streak 10|Dell Streak 7",
                YarvikTablet: "Android.*\\b(TAB210|TAB211|TAB224|TAB250|TAB260|TAB264|TAB310|TAB360|TAB364|TAB410|TAB411|TAB420|TAB424|TAB450|TAB460|TAB461|TAB464|TAB465|TAB467|TAB468|TAB07-100|TAB07-101|TAB07-150|TAB07-151|TAB07-152|TAB07-200|TAB07-201-3G|TAB07-210|TAB07-211|TAB07-212|TAB07-214|TAB07-220|TAB07-400|TAB07-485|TAB08-150|TAB08-200|TAB08-201-3G|TAB08-201-30|TAB09-100|TAB09-211|TAB09-410|TAB10-150|TAB10-201|TAB10-211|TAB10-400|TAB10-410|TAB13-201|TAB274EUK|TAB275EUK|TAB374EUK|TAB462EUK|TAB474EUK|TAB9-200)\\b",
                MedionTablet: "Android.*\\bOYO\\b|LIFE.*(P9212|P9514|P9516|S9512)|LIFETAB",
                ArnovaTablet: "97G4|AN10G2|AN7bG3|AN7fG3|AN8G3|AN8cG3|AN7G3|AN9G3|AN7dG3|AN7dG3ST|AN7dG3ChildPad|AN10bG3|AN10bG3DT|AN9G2",
                IntensoTablet: "INM8002KP|INM1010FP|INM805ND|Intenso Tab|TAB1004",
                IRUTablet: "M702pro",
                MegafonTablet: "MegaFon V9|\\bZTE V9\\b|Android.*\\bMT7A\\b",
                EbodaTablet: "E-Boda (Supreme|Impresspeed|Izzycomm|Essential)",
                AllViewTablet: "Allview.*(Viva|Alldro|City|Speed|All TV|Frenzy|Quasar|Shine|TX1|AX1|AX2)",
                ArchosTablet: "\\b(101G9|80G9|A101IT)\\b|Qilive 97R|Archos5|\\bARCHOS (70|79|80|90|97|101|FAMILYPAD|)(b|c|)(G10| Cobalt| TITANIUM(HD|)| Xenon| Neon|XSK| 2| XS 2| PLATINUM| CARBON|GAMEPAD)\\b",
                AinolTablet: "NOVO7|NOVO8|NOVO10|Novo7Aurora|Novo7Basic|NOVO7PALADIN|novo9-Spark",
                NokiaLumiaTablet: "Lumia 2520",
                SonyTablet: "Sony.*Tablet|Xperia Tablet|Sony Tablet S|SO-03E|SGPT12|SGPT13|SGPT114|SGPT121|SGPT122|SGPT123|SGPT111|SGPT112|SGPT113|SGPT131|SGPT132|SGPT133|SGPT211|SGPT212|SGPT213|SGP311|SGP312|SGP321|EBRD1101|EBRD1102|EBRD1201|SGP351|SGP341|SGP511|SGP512|SGP521|SGP541|SGP551|SGP621|SGP641|SGP612|SOT31|SGP771|SGP611|SGP612|SGP712",
                PhilipsTablet: "\\b(PI2010|PI3000|PI3100|PI3105|PI3110|PI3205|PI3210|PI3900|PI4010|PI7000|PI7100)\\b",
                CubeTablet: "Android.*(K8GT|U9GT|U10GT|U16GT|U17GT|U18GT|U19GT|U20GT|U23GT|U30GT)|CUBE U8GT",
                CobyTablet: "MID1042|MID1045|MID1125|MID1126|MID7012|MID7014|MID7015|MID7034|MID7035|MID7036|MID7042|MID7048|MID7127|MID8042|MID8048|MID8127|MID9042|MID9740|MID9742|MID7022|MID7010",
                MIDTablet: "M9701|M9000|M9100|M806|M1052|M806|T703|MID701|MID713|MID710|MID727|MID760|MID830|MID728|MID933|MID125|MID810|MID732|MID120|MID930|MID800|MID731|MID900|MID100|MID820|MID735|MID980|MID130|MID833|MID737|MID960|MID135|MID860|MID736|MID140|MID930|MID835|MID733|MID4X10",
                MSITablet: "MSI \\b(Primo 73K|Primo 73L|Primo 81L|Primo 77|Primo 93|Primo 75|Primo 76|Primo 73|Primo 81|Primo 91|Primo 90|Enjoy 71|Enjoy 7|Enjoy 10)\\b",
                SMiTTablet: "Android.*(\\bMID\\b|MID-560|MTV-T1200|MTV-PND531|MTV-P1101|MTV-PND530)",
                RockChipTablet: "Android.*(RK2818|RK2808A|RK2918|RK3066)|RK2738|RK2808A",
                FlyTablet: "IQ310|Fly Vision",
                bqTablet: "Android.*(bq)?.*\\b(Elcano|Curie|Edison|Maxwell|Kepler|Pascal|Tesla|Hypatia|Platon|Newton|Livingstone|Cervantes|Avant|Aquaris ([E|M]10|M8))\\b|Maxwell.*Lite|Maxwell.*Plus",
                HuaweiTablet: "MediaPad|MediaPad 7 Youth|IDEOS S7|S7-201c|S7-202u|S7-101|S7-103|S7-104|S7-105|S7-106|S7-201|S7-Slim|M2-A01L|BAH-L09|BAH-W09|AGS-L09|CMR-AL19",
                NecTablet: "\\bN-06D|\\bN-08D",
                PantechTablet: "Pantech.*P4100",
                BronchoTablet: "Broncho.*(N701|N708|N802|a710)",
                VersusTablet: "TOUCHPAD.*[78910]|\\bTOUCHTAB\\b",
                ZyncTablet: "z1000|Z99 2G|z930|z990|z909|Z919|z900",
                PositivoTablet: "TB07STA|TB10STA|TB07FTA|TB10FTA",
                NabiTablet: "Android.*\\bNabi",
                KoboTablet: "Kobo Touch|\\bK080\\b|\\bVox\\b Build|\\bArc\\b Build",
                DanewTablet: "DSlide.*\\b(700|701R|702|703R|704|802|970|971|972|973|974|1010|1012)\\b",
                TexetTablet: "NaviPad|TB-772A|TM-7045|TM-7055|TM-9750|TM-7016|TM-7024|TM-7026|TM-7041|TM-7043|TM-7047|TM-8041|TM-9741|TM-9747|TM-9748|TM-9751|TM-7022|TM-7021|TM-7020|TM-7011|TM-7010|TM-7023|TM-7025|TM-7037W|TM-7038W|TM-7027W|TM-9720|TM-9725|TM-9737W|TM-1020|TM-9738W|TM-9740|TM-9743W|TB-807A|TB-771A|TB-727A|TB-725A|TB-719A|TB-823A|TB-805A|TB-723A|TB-715A|TB-707A|TB-705A|TB-709A|TB-711A|TB-890HD|TB-880HD|TB-790HD|TB-780HD|TB-770HD|TB-721HD|TB-710HD|TB-434HD|TB-860HD|TB-840HD|TB-760HD|TB-750HD|TB-740HD|TB-730HD|TB-722HD|TB-720HD|TB-700HD|TB-500HD|TB-470HD|TB-431HD|TB-430HD|TB-506|TB-504|TB-446|TB-436|TB-416|TB-146SE|TB-126SE",
                PlaystationTablet: "Playstation.*(Portable|Vita)",
                TrekstorTablet: "ST10416-1|VT10416-1|ST70408-1|ST702xx-1|ST702xx-2|ST80208|ST97216|ST70104-2|VT10416-2|ST10216-2A|SurfTab",
                PyleAudioTablet: "\\b(PTBL10CEU|PTBL10C|PTBL72BC|PTBL72BCEU|PTBL7CEU|PTBL7C|PTBL92BC|PTBL92BCEU|PTBL9CEU|PTBL9CUK|PTBL9C)\\b",
                AdvanTablet: "Android.* \\b(E3A|T3X|T5C|T5B|T3E|T3C|T3B|T1J|T1F|T2A|T1H|T1i|E1C|T1-E|T5-A|T4|E1-B|T2Ci|T1-B|T1-D|O1-A|E1-A|T1-A|T3A|T4i)\\b ",
                DanyTechTablet: "Genius Tab G3|Genius Tab S2|Genius Tab Q3|Genius Tab G4|Genius Tab Q4|Genius Tab G-II|Genius TAB GII|Genius TAB GIII|Genius Tab S1",
                GalapadTablet: "Android.*\\bG1\\b(?!\\))",
                MicromaxTablet: "Funbook|Micromax.*\\b(P250|P560|P360|P362|P600|P300|P350|P500|P275)\\b",
                KarbonnTablet: "Android.*\\b(A39|A37|A34|ST8|ST10|ST7|Smart Tab3|Smart Tab2)\\b",
                AllFineTablet: "Fine7 Genius|Fine7 Shine|Fine7 Air|Fine8 Style|Fine9 More|Fine10 Joy|Fine11 Wide",
                PROSCANTablet: "\\b(PEM63|PLT1023G|PLT1041|PLT1044|PLT1044G|PLT1091|PLT4311|PLT4311PL|PLT4315|PLT7030|PLT7033|PLT7033D|PLT7035|PLT7035D|PLT7044K|PLT7045K|PLT7045KB|PLT7071KG|PLT7072|PLT7223G|PLT7225G|PLT7777G|PLT7810K|PLT7849G|PLT7851G|PLT7852G|PLT8015|PLT8031|PLT8034|PLT8036|PLT8080K|PLT8082|PLT8088|PLT8223G|PLT8234G|PLT8235G|PLT8816K|PLT9011|PLT9045K|PLT9233G|PLT9735|PLT9760G|PLT9770G)\\b",
                YONESTablet: "BQ1078|BC1003|BC1077|RK9702|BC9730|BC9001|IT9001|BC7008|BC7010|BC708|BC728|BC7012|BC7030|BC7027|BC7026",
                ChangJiaTablet: "TPC7102|TPC7103|TPC7105|TPC7106|TPC7107|TPC7201|TPC7203|TPC7205|TPC7210|TPC7708|TPC7709|TPC7712|TPC7110|TPC8101|TPC8103|TPC8105|TPC8106|TPC8203|TPC8205|TPC8503|TPC9106|TPC9701|TPC97101|TPC97103|TPC97105|TPC97106|TPC97111|TPC97113|TPC97203|TPC97603|TPC97809|TPC97205|TPC10101|TPC10103|TPC10106|TPC10111|TPC10203|TPC10205|TPC10503",
                GUTablet: "TX-A1301|TX-M9002|Q702|kf026",
                PointOfViewTablet: "TAB-P506|TAB-navi-7-3G-M|TAB-P517|TAB-P-527|TAB-P701|TAB-P703|TAB-P721|TAB-P731N|TAB-P741|TAB-P825|TAB-P905|TAB-P925|TAB-PR945|TAB-PL1015|TAB-P1025|TAB-PI1045|TAB-P1325|TAB-PROTAB[0-9]+|TAB-PROTAB25|TAB-PROTAB26|TAB-PROTAB27|TAB-PROTAB26XL|TAB-PROTAB2-IPS9|TAB-PROTAB30-IPS9|TAB-PROTAB25XXL|TAB-PROTAB26-IPS10|TAB-PROTAB30-IPS10",
                OvermaxTablet: "OV-(SteelCore|NewBase|Basecore|Baseone|Exellen|Quattor|EduTab|Solution|ACTION|BasicTab|TeddyTab|MagicTab|Stream|TB-08|TB-09)|Qualcore 1027",
                HCLTablet: "HCL.*Tablet|Connect-3G-2.0|Connect-2G-2.0|ME Tablet U1|ME Tablet U2|ME Tablet G1|ME Tablet X1|ME Tablet Y2|ME Tablet Sync",
                DPSTablet: "DPS Dream 9|DPS Dual 7",
                VistureTablet: "V97 HD|i75 3G|Visture V4( HD)?|Visture V5( HD)?|Visture V10",
                CrestaTablet: "CTP(-)?810|CTP(-)?818|CTP(-)?828|CTP(-)?838|CTP(-)?888|CTP(-)?978|CTP(-)?980|CTP(-)?987|CTP(-)?988|CTP(-)?989",
                MediatekTablet: "\\bMT8125|MT8389|MT8135|MT8377\\b",
                ConcordeTablet: "Concorde([ ]+)?Tab|ConCorde ReadMan",
                GoCleverTablet: "GOCLEVER TAB|A7GOCLEVER|M1042|M7841|M742|R1042BK|R1041|TAB A975|TAB A7842|TAB A741|TAB A741L|TAB M723G|TAB M721|TAB A1021|TAB I921|TAB R721|TAB I720|TAB T76|TAB R70|TAB R76.2|TAB R106|TAB R83.2|TAB M813G|TAB I721|GCTA722|TAB I70|TAB I71|TAB S73|TAB R73|TAB R74|TAB R93|TAB R75|TAB R76.1|TAB A73|TAB A93|TAB A93.2|TAB T72|TAB R83|TAB R974|TAB R973|TAB A101|TAB A103|TAB A104|TAB A104.2|R105BK|M713G|A972BK|TAB A971|TAB R974.2|TAB R104|TAB R83.3|TAB A1042",
                ModecomTablet: "FreeTAB 9000|FreeTAB 7.4|FreeTAB 7004|FreeTAB 7800|FreeTAB 2096|FreeTAB 7.5|FreeTAB 1014|FreeTAB 1001 |FreeTAB 8001|FreeTAB 9706|FreeTAB 9702|FreeTAB 7003|FreeTAB 7002|FreeTAB 1002|FreeTAB 7801|FreeTAB 1331|FreeTAB 1004|FreeTAB 8002|FreeTAB 8014|FreeTAB 9704|FreeTAB 1003",
                VoninoTablet: "\\b(Argus[ _]?S|Diamond[ _]?79HD|Emerald[ _]?78E|Luna[ _]?70C|Onyx[ _]?S|Onyx[ _]?Z|Orin[ _]?HD|Orin[ _]?S|Otis[ _]?S|SpeedStar[ _]?S|Magnet[ _]?M9|Primus[ _]?94[ _]?3G|Primus[ _]?94HD|Primus[ _]?QS|Android.*\\bQ8\\b|Sirius[ _]?EVO[ _]?QS|Sirius[ _]?QS|Spirit[ _]?S)\\b",
                ECSTablet: "V07OT2|TM105A|S10OT1|TR10CS1",
                StorexTablet: "eZee[_']?(Tab|Go)[0-9]+|TabLC7|Looney Tunes Tab",
                VodafoneTablet: "SmartTab([ ]+)?[0-9]+|SmartTabII10|SmartTabII7|VF-1497|VFD 1400",
                EssentielBTablet: "Smart[ ']?TAB[ ]+?[0-9]+|Family[ ']?TAB2",
                RossMoorTablet: "RM-790|RM-997|RMD-878G|RMD-974R|RMT-705A|RMT-701|RME-601|RMT-501|RMT-711",
                iMobileTablet: "i-mobile i-note",
                TolinoTablet: "tolino tab [0-9.]+|tolino shine",
                AudioSonicTablet: "\\bC-22Q|T7-QC|T-17B|T-17P\\b",
                AMPETablet: "Android.* A78 ",
                SkkTablet: "Android.* (SKYPAD|PHOENIX|CYCLOPS)",
                TecnoTablet: "TECNO P9|TECNO DP8D",
                JXDTablet: "Android.* \\b(F3000|A3300|JXD5000|JXD3000|JXD2000|JXD300B|JXD300|S5800|S7800|S602b|S5110b|S7300|S5300|S602|S603|S5100|S5110|S601|S7100a|P3000F|P3000s|P101|P200s|P1000m|P200m|P9100|P1000s|S6600b|S908|P1000|P300|S18|S6600|S9100)\\b",
                iJoyTablet: "Tablet (Spirit 7|Essentia|Galatea|Fusion|Onix 7|Landa|Titan|Scooby|Deox|Stella|Themis|Argon|Unique 7|Sygnus|Hexen|Finity 7|Cream|Cream X2|Jade|Neon 7|Neron 7|Kandy|Scape|Saphyr 7|Rebel|Biox|Rebel|Rebel 8GB|Myst|Draco 7|Myst|Tab7-004|Myst|Tadeo Jones|Tablet Boing|Arrow|Draco Dual Cam|Aurix|Mint|Amity|Revolution|Finity 9|Neon 9|T9w|Amity 4GB Dual Cam|Stone 4GB|Stone 8GB|Andromeda|Silken|X2|Andromeda II|Halley|Flame|Saphyr 9,7|Touch 8|Planet|Triton|Unique 10|Hexen 10|Memphis 4GB|Memphis 8GB|Onix 10)",
                FX2Tablet: "FX2 PAD7|FX2 PAD10",
                XoroTablet: "KidsPAD 701|PAD[ ]?712|PAD[ ]?714|PAD[ ]?716|PAD[ ]?717|PAD[ ]?718|PAD[ ]?720|PAD[ ]?721|PAD[ ]?722|PAD[ ]?790|PAD[ ]?792|PAD[ ]?900|PAD[ ]?9715D|PAD[ ]?9716DR|PAD[ ]?9718DR|PAD[ ]?9719QR|PAD[ ]?9720QR|TelePAD1030|Telepad1032|TelePAD730|TelePAD731|TelePAD732|TelePAD735Q|TelePAD830|TelePAD9730|TelePAD795|MegaPAD 1331|MegaPAD 1851|MegaPAD 2151",
                ViewsonicTablet: "ViewPad 10pi|ViewPad 10e|ViewPad 10s|ViewPad E72|ViewPad7|ViewPad E100|ViewPad 7e|ViewSonic VB733|VB100a",
                VerizonTablet: "QTAQZ3|QTAIR7|QTAQTZ3|QTASUN1|QTASUN2|QTAXIA1",
                OdysTablet: "LOOX|XENO10|ODYS[ -](Space|EVO|Xpress|NOON)|\\bXELIO\\b|Xelio10Pro|XELIO7PHONETAB|XELIO10EXTREME|XELIOPT2|NEO_QUAD10",
                CaptivaTablet: "CAPTIVA PAD",
                IconbitTablet: "NetTAB|NT-3702|NT-3702S|NT-3702S|NT-3603P|NT-3603P|NT-0704S|NT-0704S|NT-3805C|NT-3805C|NT-0806C|NT-0806C|NT-0909T|NT-0909T|NT-0907S|NT-0907S|NT-0902S|NT-0902S",
                TeclastTablet: "T98 4G|\\bP80\\b|\\bX90HD\\b|X98 Air|X98 Air 3G|\\bX89\\b|P80 3G|\\bX80h\\b|P98 Air|\\bX89HD\\b|P98 3G|\\bP90HD\\b|P89 3G|X98 3G|\\bP70h\\b|P79HD 3G|G18d 3G|\\bP79HD\\b|\\bP89s\\b|\\bA88\\b|\\bP10HD\\b|\\bP19HD\\b|G18 3G|\\bP78HD\\b|\\bA78\\b|\\bP75\\b|G17s 3G|G17h 3G|\\bP85t\\b|\\bP90\\b|\\bP11\\b|\\bP98t\\b|\\bP98HD\\b|\\bG18d\\b|\\bP85s\\b|\\bP11HD\\b|\\bP88s\\b|\\bA80HD\\b|\\bA80se\\b|\\bA10h\\b|\\bP89\\b|\\bP78s\\b|\\bG18\\b|\\bP85\\b|\\bA70h\\b|\\bA70\\b|\\bG17\\b|\\bP18\\b|\\bA80s\\b|\\bA11s\\b|\\bP88HD\\b|\\bA80h\\b|\\bP76s\\b|\\bP76h\\b|\\bP98\\b|\\bA10HD\\b|\\bP78\\b|\\bP88\\b|\\bA11\\b|\\bA10t\\b|\\bP76a\\b|\\bP76t\\b|\\bP76e\\b|\\bP85HD\\b|\\bP85a\\b|\\bP86\\b|\\bP75HD\\b|\\bP76v\\b|\\bA12\\b|\\bP75a\\b|\\bA15\\b|\\bP76Ti\\b|\\bP81HD\\b|\\bA10\\b|\\bT760VE\\b|\\bT720HD\\b|\\bP76\\b|\\bP73\\b|\\bP71\\b|\\bP72\\b|\\bT720SE\\b|\\bC520Ti\\b|\\bT760\\b|\\bT720VE\\b|T720-3GE|T720-WiFi",
                OndaTablet: "\\b(V975i|Vi30|VX530|V701|Vi60|V701s|Vi50|V801s|V719|Vx610w|VX610W|V819i|Vi10|VX580W|Vi10|V711s|V813|V811|V820w|V820|Vi20|V711|VI30W|V712|V891w|V972|V819w|V820w|Vi60|V820w|V711|V813s|V801|V819|V975s|V801|V819|V819|V818|V811|V712|V975m|V101w|V961w|V812|V818|V971|V971s|V919|V989|V116w|V102w|V973|Vi40)\\b[\\s]+|V10 \\b4G\\b",
                JaytechTablet: "TPC-PA762",
                BlaupunktTablet: "Endeavour 800NG|Endeavour 1010",
                DigmaTablet: "\\b(iDx10|iDx9|iDx8|iDx7|iDxD7|iDxD8|iDsQ8|iDsQ7|iDsQ8|iDsD10|iDnD7|3TS804H|iDsQ11|iDj7|iDs10)\\b",
                EvolioTablet: "ARIA_Mini_wifi|Aria[ _]Mini|Evolio X10|Evolio X7|Evolio X8|\\bEvotab\\b|\\bNeura\\b",
                LavaTablet: "QPAD E704|\\bIvoryS\\b|E-TAB IVORY|\\bE-TAB\\b",
                AocTablet: "MW0811|MW0812|MW0922|MTK8382|MW1031|MW0831|MW0821|MW0931|MW0712",
                MpmanTablet: "MP11 OCTA|MP10 OCTA|MPQC1114|MPQC1004|MPQC994|MPQC974|MPQC973|MPQC804|MPQC784|MPQC780|\\bMPG7\\b|MPDCG75|MPDCG71|MPDC1006|MP101DC|MPDC9000|MPDC905|MPDC706HD|MPDC706|MPDC705|MPDC110|MPDC100|MPDC99|MPDC97|MPDC88|MPDC8|MPDC77|MP709|MID701|MID711|MID170|MPDC703|MPQC1010",
                CelkonTablet: "CT695|CT888|CT[\\s]?910|CT7 Tab|CT9 Tab|CT3 Tab|CT2 Tab|CT1 Tab|C820|C720|\\bCT-1\\b",
                WolderTablet: "miTab \\b(DIAMOND|SPACE|BROOKLYN|NEO|FLY|MANHATTAN|FUNK|EVOLUTION|SKY|GOCAR|IRON|GENIUS|POP|MINT|EPSILON|BROADWAY|JUMP|HOP|LEGEND|NEW AGE|LINE|ADVANCE|FEEL|FOLLOW|LIKE|LINK|LIVE|THINK|FREEDOM|CHICAGO|CLEVELAND|BALTIMORE-GH|IOWA|BOSTON|SEATTLE|PHOENIX|DALLAS|IN 101|MasterChef)\\b",
                MediacomTablet: "M-MPI10C3G|M-SP10EG|M-SP10EGP|M-SP10HXAH|M-SP7HXAH|M-SP10HXBH|M-SP8HXAH|M-SP8MXA",
                MiTablet: "\\bMI PAD\\b|\\bHM NOTE 1W\\b",
                NibiruTablet: "Nibiru M1|Nibiru Jupiter One",
                NexoTablet: "NEXO NOVA|NEXO 10|NEXO AVIO|NEXO FREE|NEXO GO|NEXO EVO|NEXO 3G|NEXO SMART|NEXO KIDDO|NEXO MOBI",
                LeaderTablet: "TBLT10Q|TBLT10I|TBL-10WDKB|TBL-10WDKBO2013|TBL-W230V2|TBL-W450|TBL-W500|SV572|TBLT7I|TBA-AC7-8G|TBLT79|TBL-8W16|TBL-10W32|TBL-10WKB|TBL-W100",
                UbislateTablet: "UbiSlate[\\s]?7C",
                PocketBookTablet: "Pocketbook",
                KocasoTablet: "\\b(TB-1207)\\b",
                HisenseTablet: "\\b(F5281|E2371)\\b",
                Hudl: "Hudl HT7S3|Hudl 2",
                TelstraTablet: "T-Hub2",
                GenericTablet: "Android.*\\b97D\\b|Tablet(?!.*PC)|BNTV250A|MID-WCDMA|LogicPD Zoom2|\\bA7EB\\b|CatNova8|A1_07|CT704|CT1002|\\bM721\\b|rk30sdk|\\bEVOTAB\\b|M758A|ET904|ALUMIUM10|Smartfren Tab|Endeavour 1010|Tablet-PC-4|Tagi Tab|\\bM6pro\\b|CT1020W|arc 10HD|\\bTP750\\b|\\bQTAQZ3\\b|WVT101|TM1088|KT107"
            },
            oss: {
                AndroidOS: "Android",
                BlackBerryOS: "blackberry|\\bBB10\\b|rim tablet os",
                PalmOS: "PalmOS|avantgo|blazer|elaine|hiptop|palm|plucker|xiino",
                SymbianOS: "Symbian|SymbOS|Series60|Series40|SYB-[0-9]+|\\bS60\\b",
                WindowsMobileOS: "Windows CE.*(PPC|Smartphone|Mobile|[0-9]{3}x[0-9]{3})|Windows Mobile|Windows Phone [0-9.]+|WCE;",
                WindowsPhoneOS: "Windows Phone 10.0|Windows Phone 8.1|Windows Phone 8.0|Windows Phone OS|XBLWP7|ZuneWP7|Windows NT 6.[23]; ARM;",
                iOS: "\\biPhone.*Mobile|\\biPod|\\biPad|AppleCoreMedia",
                iPadOS: "CPU OS 13",
                MeeGoOS: "MeeGo",
                MaemoOS: "Maemo",
                JavaOS: "J2ME/|\\bMIDP\\b|\\bCLDC\\b",
                webOS: "webOS|hpwOS",
                badaOS: "\\bBada\\b",
                BREWOS: "BREW"
            },
            uas: {
                Chrome: "\\bCrMo\\b|CriOS|Android.*Chrome/[.0-9]* (Mobile)?",
                Dolfin: "\\bDolfin\\b",
                Opera: "Opera.*Mini|Opera.*Mobi|Android.*Opera|Mobile.*OPR/[0-9.]+$|Coast/[0-9.]+",
                Skyfire: "Skyfire",
                Edge: "Mobile Safari/[.0-9]* Edge",
                IE: "IEMobile|MSIEMobile",
                Firefox: "fennec|firefox.*maemo|(Mobile|Tablet).*Firefox|Firefox.*Mobile|FxiOS",
                Bolt: "bolt",
                TeaShark: "teashark",
                Blazer: "Blazer",
                Safari: "Version.*Mobile.*Safari|Safari.*Mobile|MobileSafari",
                WeChat: "\\bMicroMessenger\\b",
                UCBrowser: "UC.*Browser|UCWEB",
                baiduboxapp: "baiduboxapp",
                baidubrowser: "baidubrowser",
                DiigoBrowser: "DiigoBrowser",
                Mercury: "\\bMercury\\b",
                ObigoBrowser: "Obigo",
                NetFront: "NF-Browser",
                GenericBrowser: "NokiaBrowser|OviBrowser|OneBrowser|TwonkyBeamBrowser|SEMC.*Browser|FlyFlow|Minimo|NetFront|Novarra-Vision|MQQBrowser|MicroMessenger",
                PaleMoon: "Android.*PaleMoon|Mobile.*PaleMoon"
            },
            props: {
                Mobile: "Mobile/[VER]",
                Build: "Build/[VER]",
                Version: "Version/[VER]",
                VendorID: "VendorID/[VER]",
                iPad: "iPad.*CPU[a-z ]+[VER]",
                iPhone: "iPhone.*CPU[a-z ]+[VER]",
                iPod: "iPod.*CPU[a-z ]+[VER]",
                Kindle: "Kindle/[VER]",
                Chrome: ["Chrome/[VER]", "CriOS/[VER]", "CrMo/[VER]"],
                Coast: ["Coast/[VER]"],
                Dolfin: "Dolfin/[VER]",
                Firefox: ["Firefox/[VER]", "FxiOS/[VER]"],
                Fennec: "Fennec/[VER]",
                Edge: "Edge/[VER]",
                IE: ["IEMobile/[VER];", "IEMobile [VER]", "MSIE [VER];", "Trident/[0-9.]+;.*rv:[VER]"],
                NetFront: "NetFront/[VER]",
                NokiaBrowser: "NokiaBrowser/[VER]",
                Opera: [" OPR/[VER]", "Opera Mini/[VER]", "Version/[VER]"],
                "Opera Mini": "Opera Mini/[VER]",
                "Opera Mobi": "Version/[VER]",
                UCBrowser: ["UCWEB[VER]", "UC.*Browser/[VER]"],
                MQQBrowser: "MQQBrowser/[VER]",
                MicroMessenger: "MicroMessenger/[VER]",
                baiduboxapp: "baiduboxapp/[VER]",
                baidubrowser: "baidubrowser/[VER]",
                SamsungBrowser: "SamsungBrowser/[VER]",
                Iron: "Iron/[VER]",
                Safari: ["Version/[VER]", "Safari/[VER]"],
                Skyfire: "Skyfire/[VER]",
                Tizen: "Tizen/[VER]",
                Webkit: "webkit[ /][VER]",
                PaleMoon: "PaleMoon/[VER]",
                Gecko: "Gecko/[VER]",
                Trident: "Trident/[VER]",
                Presto: "Presto/[VER]",
                Goanna: "Goanna/[VER]",
                iOS: " \\bi?OS\\b [VER][ ;]{1}",
                Android: "Android [VER]",
                BlackBerry: ["BlackBerry[\\w]+/[VER]", "BlackBerry.*Version/[VER]", "Version/[VER]"],
                BREW: "BREW [VER]",
                Java: "Java/[VER]",
                "Windows Phone OS": ["Windows Phone OS [VER]", "Windows Phone [VER]"],
                "Windows Phone": "Windows Phone [VER]",
                "Windows CE": "Windows CE/[VER]",
                "Windows NT": "Windows NT [VER]",
                Symbian: ["SymbianOS/[VER]", "Symbian/[VER]"],
                webOS: ["webOS/[VER]", "hpwOS/[VER];"]
            },
            utils: {
                Bot: "Googlebot|facebookexternalhit|Google-AMPHTML|s~amp-validator|AdsBot-Google|Google Keyword Suggestion|Facebot|YandexBot|YandexMobileBot|bingbot|ia_archiver|AhrefsBot|Ezooms|GSLFbot|WBSearchBot|Twitterbot|TweetmemeBot|Twikle|PaperLiBot|Wotbox|UnwindFetchor|Exabot|MJ12bot|YandexImages|TurnitinBot|Pingdom|contentkingapp",
                MobileBot: "Googlebot-Mobile|AdsBot-Google-Mobile|YahooSeeker/M1A1-R2D2",
                DesktopMode: "WPDesktop",
                TV: "SonyDTV|HbbTV",
                WebKit: "(webkit)[ /]([\\w.]+)",
                Console: "\\b(Nintendo|Nintendo WiiU|Nintendo 3DS|Nintendo Switch|PLAYSTATION|Xbox)\\b",
                Watch: "SM-V700"
            }
        },
        g.detectMobileBrowsers = {
            fullPattern: /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i,
            shortPattern: /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i,
            tabletPattern: /android|ipad|playbook|silk/i
        };
        var h, i = Object.prototype.hasOwnProperty;
        return g.FALLBACK_PHONE = "UnknownPhone",
        g.FALLBACK_TABLET = "UnknownTablet",
        g.FALLBACK_MOBILE = "UnknownMobile",
        h = "isArray"in Array ? Array.isArray : function(a) {
            return "[object Array]" === Object.prototype.toString.call(a)
        }
        ,
        function() {
            var a, b, c, e, f, j, k = g.mobileDetectRules;
            for (a in k.props)
                if (i.call(k.props, a)) {
                    for (b = k.props[a],
                    h(b) || (b = [b]),
                    f = b.length,
                    e = 0; e < f; ++e)
                        c = b[e],
                        j = c.indexOf("[VER]"),
                        j >= 0 && (c = c.substring(0, j) + "([\\w._\\+]+)" + c.substring(j + 5)),
                        b[e] = new RegExp(c,"i");
                    k.props[a] = b
                }
            d(k.oss),
            d(k.phones),
            d(k.tablets),
            d(k.uas),
            d(k.utils),
            k.oss0 = {
                WindowsPhoneOS: k.oss.WindowsPhoneOS,
                WindowsMobileOS: k.oss.WindowsMobileOS
            }
        }(),
        g.findMatch = function(a, b) {
            for (var c in a)
                if (i.call(a, c) && a[c].test(b))
                    return c;
            return null
        }
        ,
        g.findMatches = function(a, b) {
            var c = [];
            for (var d in a)
                i.call(a, d) && a[d].test(b) && c.push(d);
            return c
        }
        ,
        g.getVersionStr = function(a, b) {
            var c, d, e, f, h = g.mobileDetectRules.props;
            if (i.call(h, a))
                for (c = h[a],
                e = c.length,
                d = 0; d < e; ++d)
                    if (f = c[d].exec(b),
                    null !== f)
                        return f[1];
            return null
        }
        ,
        g.getVersion = function(a, b) {
            var c = g.getVersionStr(a, b);
            return c ? g.prepareVersionNo(c) : NaN
        }
        ,
        g.prepareVersionNo = function(a) {
            var b;
            return b = a.split(/[a-z._ \/\-]/i),
            1 === b.length && (a = b[0]),
            b.length > 1 && (a = b[0] + ".",
            b.shift(),
            a += b.join("")),
            Number(a)
        }
        ,
        g.isMobileFallback = function(a) {
            return g.detectMobileBrowsers.fullPattern.test(a) || g.detectMobileBrowsers.shortPattern.test(a.substr(0, 4))
        }
        ,
        g.isTabletFallback = function(a) {
            return g.detectMobileBrowsers.tabletPattern.test(a)
        }
        ,
        g.prepareDetectionCache = function(a, c, d) {
            if (a.mobile === b) {
                var e, h, i;
                return (h = g.findMatch(g.mobileDetectRules.tablets, c)) ? (a.mobile = a.tablet = h,
                void (a.phone = null)) : (e = g.findMatch(g.mobileDetectRules.phones, c)) ? (a.mobile = a.phone = e,
                void (a.tablet = null)) : void (g.isMobileFallback(c) ? (i = f.isPhoneSized(d),
                i === b ? (a.mobile = g.FALLBACK_MOBILE,
                a.tablet = a.phone = null) : i ? (a.mobile = a.phone = g.FALLBACK_PHONE,
                a.tablet = null) : (a.mobile = a.tablet = g.FALLBACK_TABLET,
                a.phone = null)) : g.isTabletFallback(c) ? (a.mobile = a.tablet = g.FALLBACK_TABLET,
                a.phone = null) : a.mobile = a.tablet = a.phone = null)
            }
        }
        ,
        g.mobileGrade = function(a) {
            var b = null !== a.mobile();
            return a.os("iOS") && a.version("iPad") >= 4.3 || a.os("iOS") && a.version("iPhone") >= 3.1 || a.os("iOS") && a.version("iPod") >= 3.1 || a.version("Android") > 2.1 && a.is("Webkit") || a.version("Windows Phone OS") >= 7 || a.is("BlackBerry") && a.version("BlackBerry") >= 6 || a.match("Playbook.*Tablet") || a.version("webOS") >= 1.4 && a.match("Palm|Pre|Pixi") || a.match("hp.*TouchPad") || a.is("Firefox") && a.version("Firefox") >= 12 || a.is("Chrome") && a.is("AndroidOS") && a.version("Android") >= 4 || a.is("Skyfire") && a.version("Skyfire") >= 4.1 && a.is("AndroidOS") && a.version("Android") >= 2.3 || a.is("Opera") && a.version("Opera Mobi") > 11 && a.is("AndroidOS") || a.is("MeeGoOS") || a.is("Tizen") || a.is("Dolfin") && a.version("Bada") >= 2 || (a.is("UC Browser") || a.is("Dolfin")) && a.version("Android") >= 2.3 || a.match("Kindle Fire") || a.is("Kindle") && a.version("Kindle") >= 3 || a.is("AndroidOS") && a.is("NookTablet") || a.version("Chrome") >= 11 && !b || a.version("Safari") >= 5 && !b || a.version("Firefox") >= 4 && !b || a.version("MSIE") >= 7 && !b || a.version("Opera") >= 10 && !b ? "A" : a.os("iOS") && a.version("iPad") < 4.3 || a.os("iOS") && a.version("iPhone") < 3.1 || a.os("iOS") && a.version("iPod") < 3.1 || a.is("Blackberry") && a.version("BlackBerry") >= 5 && a.version("BlackBerry") < 6 || a.version("Opera Mini") >= 5 && a.version("Opera Mini") <= 6.5 && (a.version("Android") >= 2.3 || a.is("iOS")) || a.match("NokiaN8|NokiaC7|N97.*Series60|Symbian/3") || a.version("Opera Mobi") >= 11 && a.is("SymbianOS") ? "B" : (a.version("BlackBerry") < 5 || a.match("MSIEMobile|Windows CE.*Mobile") || a.version("Windows Mobile") <= 5.2,
            "C")
        }
        ,
        g.detectOS = function(a) {
            return g.findMatch(g.mobileDetectRules.oss0, a) || g.findMatch(g.mobileDetectRules.oss, a)
        }
        ,
        g.getDeviceSmallerSide = function() {
            return window.screen.width < window.screen.height ? window.screen.width : window.screen.height
        }
        ,
        f.prototype = {
            constructor: f,
            mobile: function() {
                return g.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth),
                this._cache.mobile
            },
            phone: function() {
                return g.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth),
                this._cache.phone
            },
            tablet: function() {
                return g.prepareDetectionCache(this._cache, this.ua, this.maxPhoneWidth),
                this._cache.tablet
            },
            userAgent: function() {
                return this._cache.userAgent === b && (this._cache.userAgent = g.findMatch(g.mobileDetectRules.uas, this.ua)),
                this._cache.userAgent
            },
            userAgents: function() {
                return this._cache.userAgents === b && (this._cache.userAgents = g.findMatches(g.mobileDetectRules.uas, this.ua)),
                this._cache.userAgents
            },
            os: function() {
                return this._cache.os === b && (this._cache.os = g.detectOS(this.ua)),
                this._cache.os
            },
            version: function(a) {
                return g.getVersion(a, this.ua)
            },
            versionStr: function(a) {
                return g.getVersionStr(a, this.ua)
            },
            is: function(b) {
                return c(this.userAgents(), b) || a(b, this.os()) || a(b, this.phone()) || a(b, this.tablet()) || c(g.findMatches(g.mobileDetectRules.utils, this.ua), b)
            },
            match: function(a) {
                return a instanceof RegExp || (a = new RegExp(a,"i")),
                a.test(this.ua)
            },
            isPhoneSized: function(a) {
                return f.isPhoneSized(a || this.maxPhoneWidth)
            },
            mobileGrade: function() {
                return this._cache.grade === b && (this._cache.grade = g.mobileGrade(this)),
                this._cache.grade
            }
        },
        "undefined" != typeof window && window.screen ? f.isPhoneSized = function(a) {
            return a < 0 ? b : g.getDeviceSmallerSide() <= a
        }
        : f.isPhoneSized = function() {}
        ,
        f._impl = g,
        f.version = "1.4.4 2019-09-21",
        f
    })
}(function(a) {
    if ("undefined" != typeof module && module.exports)
        return function(a) {
            module.exports = a()
        }
        ;
    if ("function" == typeof define && define.amd)
        return define;
    if ("undefined" != typeof window)
        return function(a) {
            window.MobileDetect = a()
        }
        ;
    throw new Error("unknown environment")
}());
!function(e, t) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : e.moment = t()
}(this, function() {
    "use strict";
    var H;
    function f() {
        return H.apply(null, arguments)
    }
    function a(e) {
        return e instanceof Array || "[object Array]" === Object.prototype.toString.call(e)
    }
    function F(e) {
        return null != e && "[object Object]" === Object.prototype.toString.call(e)
    }
    function c(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
    }
    function L(e) {
        if (Object.getOwnPropertyNames)
            return 0 === Object.getOwnPropertyNames(e).length;
        for (var t in e)
            if (c(e, t))
                return;
        return 1
    }
    function o(e) {
        return void 0 === e
    }
    function u(e) {
        return "number" == typeof e || "[object Number]" === Object.prototype.toString.call(e)
    }
    function V(e) {
        return e instanceof Date || "[object Date]" === Object.prototype.toString.call(e)
    }
    function G(e, t) {
        for (var n = [], s = e.length, i = 0; i < s; ++i)
            n.push(t(e[i], i));
        return n
    }
    function E(e, t) {
        for (var n in t)
            c(t, n) && (e[n] = t[n]);
        return c(t, "toString") && (e.toString = t.toString),
        c(t, "valueOf") && (e.valueOf = t.valueOf),
        e
    }
    function l(e, t, n, s) {
        return Pt(e, t, n, s, !0).utc()
    }
    function m(e) {
        return null == e._pf && (e._pf = {
            empty: !1,
            unusedTokens: [],
            unusedInput: [],
            overflow: -2,
            charsLeftOver: 0,
            nullInput: !1,
            invalidEra: null,
            invalidMonth: null,
            invalidFormat: !1,
            userInvalidated: !1,
            iso: !1,
            parsedDateParts: [],
            era: null,
            meridiem: null,
            rfc2822: !1,
            weekdayMismatch: !1
        }),
        e._pf
    }
    function A(e) {
        if (null == e._isValid) {
            var t = m(e)
              , n = j.call(t.parsedDateParts, function(e) {
                return null != e
            })
              , n = !isNaN(e._d.getTime()) && t.overflow < 0 && !t.empty && !t.invalidEra && !t.invalidMonth && !t.invalidWeekday && !t.weekdayMismatch && !t.nullInput && !t.invalidFormat && !t.userInvalidated && (!t.meridiem || t.meridiem && n);
            if (e._strict && (n = n && 0 === t.charsLeftOver && 0 === t.unusedTokens.length && void 0 === t.bigHour),
            null != Object.isFrozen && Object.isFrozen(e))
                return n;
            e._isValid = n
        }
        return e._isValid
    }
    function I(e) {
        var t = l(NaN);
        return null != e ? E(m(t), e) : m(t).userInvalidated = !0,
        t
    }
    var j = Array.prototype.some || function(e) {
        for (var t = Object(this), n = t.length >>> 0, s = 0; s < n; s++)
            if (s in t && e.call(this, t[s], s, t))
                return !0;
        return !1
    }
      , Z = f.momentProperties = []
      , z = !1;
    function $(e, t) {
        var n, s, i, r = Z.length;
        if (o(t._isAMomentObject) || (e._isAMomentObject = t._isAMomentObject),
        o(t._i) || (e._i = t._i),
        o(t._f) || (e._f = t._f),
        o(t._l) || (e._l = t._l),
        o(t._strict) || (e._strict = t._strict),
        o(t._tzm) || (e._tzm = t._tzm),
        o(t._isUTC) || (e._isUTC = t._isUTC),
        o(t._offset) || (e._offset = t._offset),
        o(t._pf) || (e._pf = m(t)),
        o(t._locale) || (e._locale = t._locale),
        0 < r)
            for (n = 0; n < r; n++)
                o(i = t[s = Z[n]]) || (e[s] = i);
        return e
    }
    function q(e) {
        $(this, e),
        this._d = new Date(null != e._d ? e._d.getTime() : NaN),
        this.isValid() || (this._d = new Date(NaN)),
        !1 === z && (z = !0,
        f.updateOffset(this),
        z = !1)
    }
    function h(e) {
        return e instanceof q || null != e && null != e._isAMomentObject
    }
    function B(e) {
        !1 === f.suppressDeprecationWarnings && "undefined" != typeof console && console.warn && console.warn("Deprecation warning: " + e)
    }
    function e(r, a) {
        var o = !0;
        return E(function() {
            if (null != f.deprecationHandler && f.deprecationHandler(null, r),
            o) {
                for (var e, t, n = [], s = arguments.length, i = 0; i < s; i++) {
                    if (e = "",
                    "object" == typeof arguments[i]) {
                        for (t in e += "\n[" + i + "] ",
                        arguments[0])
                            c(arguments[0], t) && (e += t + ": " + arguments[0][t] + ", ");
                        e = e.slice(0, -2)
                    } else
                        e = arguments[i];
                    n.push(e)
                }
                B(r + "\nArguments: " + Array.prototype.slice.call(n).join("") + "\n" + (new Error).stack),
                o = !1
            }
            return a.apply(this, arguments)
        }, a)
    }
    var J = {};
    function Q(e, t) {
        null != f.deprecationHandler && f.deprecationHandler(e, t),
        J[e] || (B(t),
        J[e] = !0)
    }
    function d(e) {
        return "undefined" != typeof Function && e instanceof Function || "[object Function]" === Object.prototype.toString.call(e)
    }
    function X(e, t) {
        var n, s = E({}, e);
        for (n in t)
            c(t, n) && (F(e[n]) && F(t[n]) ? (s[n] = {},
            E(s[n], e[n]),
            E(s[n], t[n])) : null != t[n] ? s[n] = t[n] : delete s[n]);
        for (n in e)
            c(e, n) && !c(t, n) && F(e[n]) && (s[n] = E({}, s[n]));
        return s
    }
    function K(e) {
        null != e && this.set(e)
    }
    f.suppressDeprecationWarnings = !1,
    f.deprecationHandler = null;
    var ee = Object.keys || function(e) {
        var t, n = [];
        for (t in e)
            c(e, t) && n.push(t);
        return n
    }
    ;
    function r(e, t, n) {
        var s = "" + Math.abs(e);
        return (0 <= e ? n ? "+" : "" : "-") + Math.pow(10, Math.max(0, t - s.length)).toString().substr(1) + s
    }
    var te = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g
      , ne = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g
      , se = {}
      , ie = {};
    function s(e, t, n, s) {
        var i = "string" == typeof s ? function() {
            return this[s]()
        }
        : s;
        e && (ie[e] = i),
        t && (ie[t[0]] = function() {
            return r(i.apply(this, arguments), t[1], t[2])
        }
        ),
        n && (ie[n] = function() {
            return this.localeData().ordinal(i.apply(this, arguments), e)
        }
        )
    }
    function re(e, t) {
        return e.isValid() ? (t = ae(t, e.localeData()),
        se[t] = se[t] || function(s) {
            for (var e, i = s.match(te), t = 0, r = i.length; t < r; t++)
                ie[i[t]] ? i[t] = ie[i[t]] : i[t] = (e = i[t]).match(/\[[\s\S]/) ? e.replace(/^\[|\]$/g, "") : e.replace(/\\/g, "");
            return function(e) {
                for (var t = "", n = 0; n < r; n++)
                    t += d(i[n]) ? i[n].call(e, s) : i[n];
                return t
            }
        }(t),
        se[t](e)) : e.localeData().invalidDate()
    }
    function ae(e, t) {
        var n = 5;
        function s(e) {
            return t.longDateFormat(e) || e
        }
        for (ne.lastIndex = 0; 0 <= n && ne.test(e); )
            e = e.replace(ne, s),
            ne.lastIndex = 0,
            --n;
        return e
    }
    var oe = {};
    function t(e, t) {
        var n = e.toLowerCase();
        oe[n] = oe[n + "s"] = oe[t] = e
    }
    function _(e) {
        return "string" == typeof e ? oe[e] || oe[e.toLowerCase()] : void 0
    }
    function ue(e) {
        var t, n, s = {};
        for (n in e)
            c(e, n) && (t = _(n)) && (s[t] = e[n]);
        return s
    }
    var le = {};
    function n(e, t) {
        le[e] = t
    }
    function he(e) {
        return e % 4 == 0 && e % 100 != 0 || e % 400 == 0
    }
    function y(e) {
        return e < 0 ? Math.ceil(e) || 0 : Math.floor(e)
    }
    function g(e) {
        var e = +e
          , t = 0;
        return t = 0 != e && isFinite(e) ? y(e) : t
    }
    function de(t, n) {
        return function(e) {
            return null != e ? (fe(this, t, e),
            f.updateOffset(this, n),
            this) : ce(this, t)
        }
    }
    function ce(e, t) {
        return e.isValid() ? e._d["get" + (e._isUTC ? "UTC" : "") + t]() : NaN
    }
    function fe(e, t, n) {
        e.isValid() && !isNaN(n) && ("FullYear" === t && he(e.year()) && 1 === e.month() && 29 === e.date() ? (n = g(n),
        e._d["set" + (e._isUTC ? "UTC" : "") + t](n, e.month(), We(n, e.month()))) : e._d["set" + (e._isUTC ? "UTC" : "") + t](n))
    }
    var i = /\d/
      , w = /\d\d/
      , me = /\d{3}/
      , _e = /\d{4}/
      , ye = /[+-]?\d{6}/
      , p = /\d\d?/
      , ge = /\d\d\d\d?/
      , we = /\d\d\d\d\d\d?/
      , pe = /\d{1,3}/
      , ke = /\d{1,4}/
      , ve = /[+-]?\d{1,6}/
      , Me = /\d+/
      , De = /[+-]?\d+/
      , Se = /Z|[+-]\d\d:?\d\d/gi
      , Ye = /Z|[+-]\d\d(?::?\d\d)?/gi
      , k = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;
    function v(e, n, s) {
        be[e] = d(n) ? n : function(e, t) {
            return e && s ? s : n
        }
    }
    function Oe(e, t) {
        return c(be, e) ? be[e](t._strict, t._locale) : new RegExp(M(e.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(e, t, n, s, i) {
            return t || n || s || i
        })))
    }
    function M(e) {
        return e.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&")
    }
    var be = {}
      , xe = {};
    function D(e, n) {
        var t, s, i = n;
        for ("string" == typeof e && (e = [e]),
        u(n) && (i = function(e, t) {
            t[n] = g(e)
        }
        ),
        s = e.length,
        t = 0; t < s; t++)
            xe[e[t]] = i
    }
    function Te(e, i) {
        D(e, function(e, t, n, s) {
            n._w = n._w || {},
            i(e, n._w, n, s)
        })
    }
    var S, Y = 0, O = 1, b = 2, x = 3, T = 4, N = 5, Ne = 6, Pe = 7, Re = 8;
    function We(e, t) {
        if (isNaN(e) || isNaN(t))
            return NaN;
        var n = (t % (n = 12) + n) % n;
        return e += (t - n) / 12,
        1 == n ? he(e) ? 29 : 28 : 31 - n % 7 % 2
    }
    S = Array.prototype.indexOf || function(e) {
        for (var t = 0; t < this.length; ++t)
            if (this[t] === e)
                return t;
        return -1
    }
    ,
    s("M", ["MM", 2], "Mo", function() {
        return this.month() + 1
    }),
    s("MMM", 0, 0, function(e) {
        return this.localeData().monthsShort(this, e)
    }),
    s("MMMM", 0, 0, function(e) {
        return this.localeData().months(this, e)
    }),
    t("month", "M"),
    n("month", 8),
    v("M", p),
    v("MM", p, w),
    v("MMM", function(e, t) {
        return t.monthsShortRegex(e)
    }),
    v("MMMM", function(e, t) {
        return t.monthsRegex(e)
    }),
    D(["M", "MM"], function(e, t) {
        t[O] = g(e) - 1
    }),
    D(["MMM", "MMMM"], function(e, t, n, s) {
        s = n._locale.monthsParse(e, s, n._strict);
        null != s ? t[O] = s : m(n).invalidMonth = e
    });
    var Ce = "January_February_March_April_May_June_July_August_September_October_November_December".split("_")
      , Ue = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_")
      , He = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/
      , Fe = k
      , Le = k;
    function Ve(e, t) {
        var n;
        if (e.isValid()) {
            if ("string" == typeof t)
                if (/^\d+$/.test(t))
                    t = g(t);
                else if (!u(t = e.localeData().monthsParse(t)))
                    return;
            n = Math.min(e.date(), We(e.year(), t)),
            e._d["set" + (e._isUTC ? "UTC" : "") + "Month"](t, n)
        }
    }
    function Ge(e) {
        return null != e ? (Ve(this, e),
        f.updateOffset(this, !0),
        this) : ce(this, "Month")
    }
    function Ee() {
        function e(e, t) {
            return t.length - e.length
        }
        for (var t, n = [], s = [], i = [], r = 0; r < 12; r++)
            t = l([2e3, r]),
            n.push(this.monthsShort(t, "")),
            s.push(this.months(t, "")),
            i.push(this.months(t, "")),
            i.push(this.monthsShort(t, ""));
        for (n.sort(e),
        s.sort(e),
        i.sort(e),
        r = 0; r < 12; r++)
            n[r] = M(n[r]),
            s[r] = M(s[r]);
        for (r = 0; r < 24; r++)
            i[r] = M(i[r]);
        this._monthsRegex = new RegExp("^(" + i.join("|") + ")","i"),
        this._monthsShortRegex = this._monthsRegex,
        this._monthsStrictRegex = new RegExp("^(" + s.join("|") + ")","i"),
        this._monthsShortStrictRegex = new RegExp("^(" + n.join("|") + ")","i")
    }
    function Ae(e) {
        return he(e) ? 366 : 365
    }
    s("Y", 0, 0, function() {
        var e = this.year();
        return e <= 9999 ? r(e, 4) : "+" + e
    }),
    s(0, ["YY", 2], 0, function() {
        return this.year() % 100
    }),
    s(0, ["YYYY", 4], 0, "year"),
    s(0, ["YYYYY", 5], 0, "year"),
    s(0, ["YYYYYY", 6, !0], 0, "year"),
    t("year", "y"),
    n("year", 1),
    v("Y", De),
    v("YY", p, w),
    v("YYYY", ke, _e),
    v("YYYYY", ve, ye),
    v("YYYYYY", ve, ye),
    D(["YYYYY", "YYYYYY"], Y),
    D("YYYY", function(e, t) {
        t[Y] = 2 === e.length ? f.parseTwoDigitYear(e) : g(e)
    }),
    D("YY", function(e, t) {
        t[Y] = f.parseTwoDigitYear(e)
    }),
    D("Y", function(e, t) {
        t[Y] = parseInt(e, 10)
    }),
    f.parseTwoDigitYear = function(e) {
        return g(e) + (68 < g(e) ? 1900 : 2e3)
    }
    ;
    var Ie = de("FullYear", !0);
    function je(e, t, n, s, i, r, a) {
        var o;
        return e < 100 && 0 <= e ? (o = new Date(e + 400,t,n,s,i,r,a),
        isFinite(o.getFullYear()) && o.setFullYear(e)) : o = new Date(e,t,n,s,i,r,a),
        o
    }
    function Ze(e) {
        var t;
        return e < 100 && 0 <= e ? ((t = Array.prototype.slice.call(arguments))[0] = e + 400,
        t = new Date(Date.UTC.apply(null, t)),
        isFinite(t.getUTCFullYear()) && t.setUTCFullYear(e)) : t = new Date(Date.UTC.apply(null, arguments)),
        t
    }
    function ze(e, t, n) {
        n = 7 + t - n;
        return n - (7 + Ze(e, 0, n).getUTCDay() - t) % 7 - 1
    }
    function $e(e, t, n, s, i) {
        var r, t = 1 + 7 * (t - 1) + (7 + n - s) % 7 + ze(e, s, i), n = t <= 0 ? Ae(r = e - 1) + t : t > Ae(e) ? (r = e + 1,
        t - Ae(e)) : (r = e,
        t);
        return {
            year: r,
            dayOfYear: n
        }
    }
    function qe(e, t, n) {
        var s, i, r = ze(e.year(), t, n), r = Math.floor((e.dayOfYear() - r - 1) / 7) + 1;
        return r < 1 ? s = r + P(i = e.year() - 1, t, n) : r > P(e.year(), t, n) ? (s = r - P(e.year(), t, n),
        i = e.year() + 1) : (i = e.year(),
        s = r),
        {
            week: s,
            year: i
        }
    }
    function P(e, t, n) {
        var s = ze(e, t, n)
          , t = ze(e + 1, t, n);
        return (Ae(e) - s + t) / 7
    }
    s("w", ["ww", 2], "wo", "week"),
    s("W", ["WW", 2], "Wo", "isoWeek"),
    t("week", "w"),
    t("isoWeek", "W"),
    n("week", 5),
    n("isoWeek", 5),
    v("w", p),
    v("ww", p, w),
    v("W", p),
    v("WW", p, w),
    Te(["w", "ww", "W", "WW"], function(e, t, n, s) {
        t[s.substr(0, 1)] = g(e)
    });
    function Be(e, t) {
        return e.slice(t, 7).concat(e.slice(0, t))
    }
    s("d", 0, "do", "day"),
    s("dd", 0, 0, function(e) {
        return this.localeData().weekdaysMin(this, e)
    }),
    s("ddd", 0, 0, function(e) {
        return this.localeData().weekdaysShort(this, e)
    }),
    s("dddd", 0, 0, function(e) {
        return this.localeData().weekdays(this, e)
    }),
    s("e", 0, 0, "weekday"),
    s("E", 0, 0, "isoWeekday"),
    t("day", "d"),
    t("weekday", "e"),
    t("isoWeekday", "E"),
    n("day", 11),
    n("weekday", 11),
    n("isoWeekday", 11),
    v("d", p),
    v("e", p),
    v("E", p),
    v("dd", function(e, t) {
        return t.weekdaysMinRegex(e)
    }),
    v("ddd", function(e, t) {
        return t.weekdaysShortRegex(e)
    }),
    v("dddd", function(e, t) {
        return t.weekdaysRegex(e)
    }),
    Te(["dd", "ddd", "dddd"], function(e, t, n, s) {
        s = n._locale.weekdaysParse(e, s, n._strict);
        null != s ? t.d = s : m(n).invalidWeekday = e
    }),
    Te(["d", "e", "E"], function(e, t, n, s) {
        t[s] = g(e)
    });
    var Je = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_")
      , Qe = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_")
      , Xe = "Su_Mo_Tu_We_Th_Fr_Sa".split("_")
      , Ke = k
      , et = k
      , tt = k;
    function nt() {
        function e(e, t) {
            return t.length - e.length
        }
        for (var t, n, s, i = [], r = [], a = [], o = [], u = 0; u < 7; u++)
            s = l([2e3, 1]).day(u),
            t = M(this.weekdaysMin(s, "")),
            n = M(this.weekdaysShort(s, "")),
            s = M(this.weekdays(s, "")),
            i.push(t),
            r.push(n),
            a.push(s),
            o.push(t),
            o.push(n),
            o.push(s);
        i.sort(e),
        r.sort(e),
        a.sort(e),
        o.sort(e),
        this._weekdaysRegex = new RegExp("^(" + o.join("|") + ")","i"),
        this._weekdaysShortRegex = this._weekdaysRegex,
        this._weekdaysMinRegex = this._weekdaysRegex,
        this._weekdaysStrictRegex = new RegExp("^(" + a.join("|") + ")","i"),
        this._weekdaysShortStrictRegex = new RegExp("^(" + r.join("|") + ")","i"),
        this._weekdaysMinStrictRegex = new RegExp("^(" + i.join("|") + ")","i")
    }
    function st() {
        return this.hours() % 12 || 12
    }
    function it(e, t) {
        s(e, 0, 0, function() {
            return this.localeData().meridiem(this.hours(), this.minutes(), t)
        })
    }
    function rt(e, t) {
        return t._meridiemParse
    }
    s("H", ["HH", 2], 0, "hour"),
    s("h", ["hh", 2], 0, st),
    s("k", ["kk", 2], 0, function() {
        return this.hours() || 24
    }),
    s("hmm", 0, 0, function() {
        return "" + st.apply(this) + r(this.minutes(), 2)
    }),
    s("hmmss", 0, 0, function() {
        return "" + st.apply(this) + r(this.minutes(), 2) + r(this.seconds(), 2)
    }),
    s("Hmm", 0, 0, function() {
        return "" + this.hours() + r(this.minutes(), 2)
    }),
    s("Hmmss", 0, 0, function() {
        return "" + this.hours() + r(this.minutes(), 2) + r(this.seconds(), 2)
    }),
    it("a", !0),
    it("A", !1),
    t("hour", "h"),
    n("hour", 13),
    v("a", rt),
    v("A", rt),
    v("H", p),
    v("h", p),
    v("k", p),
    v("HH", p, w),
    v("hh", p, w),
    v("kk", p, w),
    v("hmm", ge),
    v("hmmss", we),
    v("Hmm", ge),
    v("Hmmss", we),
    D(["H", "HH"], x),
    D(["k", "kk"], function(e, t, n) {
        e = g(e);
        t[x] = 24 === e ? 0 : e
    }),
    D(["a", "A"], function(e, t, n) {
        n._isPm = n._locale.isPM(e),
        n._meridiem = e
    }),
    D(["h", "hh"], function(e, t, n) {
        t[x] = g(e),
        m(n).bigHour = !0
    }),
    D("hmm", function(e, t, n) {
        var s = e.length - 2;
        t[x] = g(e.substr(0, s)),
        t[T] = g(e.substr(s)),
        m(n).bigHour = !0
    }),
    D("hmmss", function(e, t, n) {
        var s = e.length - 4
          , i = e.length - 2;
        t[x] = g(e.substr(0, s)),
        t[T] = g(e.substr(s, 2)),
        t[N] = g(e.substr(i)),
        m(n).bigHour = !0
    }),
    D("Hmm", function(e, t, n) {
        var s = e.length - 2;
        t[x] = g(e.substr(0, s)),
        t[T] = g(e.substr(s))
    }),
    D("Hmmss", function(e, t, n) {
        var s = e.length - 4
          , i = e.length - 2;
        t[x] = g(e.substr(0, s)),
        t[T] = g(e.substr(s, 2)),
        t[N] = g(e.substr(i))
    });
    k = de("Hours", !0);
    var at, ot = {
        calendar: {
            sameDay: "[Today at] LT",
            nextDay: "[Tomorrow at] LT",
            nextWeek: "dddd [at] LT",
            lastDay: "[Yesterday at] LT",
            lastWeek: "[Last] dddd [at] LT",
            sameElse: "L"
        },
        longDateFormat: {
            LTS: "h:mm:ss A",
            LT: "h:mm A",
            L: "MM/DD/YYYY",
            LL: "MMMM D, YYYY",
            LLL: "MMMM D, YYYY h:mm A",
            LLLL: "dddd, MMMM D, YYYY h:mm A"
        },
        invalidDate: "Invalid date",
        ordinal: "%d",
        dayOfMonthOrdinalParse: /\d{1,2}/,
        relativeTime: {
            future: "in %s",
            past: "%s ago",
            s: "a few seconds",
            ss: "%d seconds",
            m: "a minute",
            mm: "%d minutes",
            h: "an hour",
            hh: "%d hours",
            d: "a day",
            dd: "%d days",
            w: "a week",
            ww: "%d weeks",
            M: "a month",
            MM: "%d months",
            y: "a year",
            yy: "%d years"
        },
        months: Ce,
        monthsShort: Ue,
        week: {
            dow: 0,
            doy: 6
        },
        weekdays: Je,
        weekdaysMin: Xe,
        weekdaysShort: Qe,
        meridiemParse: /[ap]\.?m?\.?/i
    }, R = {}, ut = {};
    function lt(e) {
        return e && e.toLowerCase().replace("_", "-")
    }
    function ht(e) {
        for (var t, n, s, i, r = 0; r < e.length; ) {
            for (t = (i = lt(e[r]).split("-")).length,
            n = (n = lt(e[r + 1])) ? n.split("-") : null; 0 < t; ) {
                if (s = dt(i.slice(0, t).join("-")))
                    return s;
                if (n && n.length >= t && function(e, t) {
                    for (var n = Math.min(e.length, t.length), s = 0; s < n; s += 1)
                        if (e[s] !== t[s])
                            return s;
                    return n
                }(i, n) >= t - 1)
                    break;
                t--
            }
            r++
        }
        return at
    }
    function dt(t) {
        var e;
        if (void 0 === R[t] && "undefined" != typeof module && module && module.exports && null != t.match("^[^/\\\\]*$"))
            try {
                e = at._abbr,
                require("./locale/" + t),
                ct(e)
            } catch (e) {
                R[t] = null
            }
        return R[t]
    }
    function ct(e, t) {
        return e && ((t = o(t) ? mt(e) : ft(e, t)) ? at = t : "undefined" != typeof console && console.warn && console.warn("Locale " + e + " not found. Did you forget to load it?")),
        at._abbr
    }
    function ft(e, t) {
        if (null === t)
            return delete R[e],
            null;
        var n, s = ot;
        if (t.abbr = e,
        null != R[e])
            Q("defineLocaleOverride", "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),
            s = R[e]._config;
        else if (null != t.parentLocale)
            if (null != R[t.parentLocale])
                s = R[t.parentLocale]._config;
            else {
                if (null == (n = dt(t.parentLocale)))
                    return ut[t.parentLocale] || (ut[t.parentLocale] = []),
                    ut[t.parentLocale].push({
                        name: e,
                        config: t
                    }),
                    null;
                s = n._config
            }
        return R[e] = new K(X(s, t)),
        ut[e] && ut[e].forEach(function(e) {
            ft(e.name, e.config)
        }),
        ct(e),
        R[e]
    }
    function mt(e) {
        var t;
        if (!(e = e && e._locale && e._locale._abbr ? e._locale._abbr : e))
            return at;
        if (!a(e)) {
            if (t = dt(e))
                return t;
            e = [e]
        }
        return ht(e)
    }
    function _t(e) {
        var t = e._a;
        return t && -2 === m(e).overflow && (t = t[O] < 0 || 11 < t[O] ? O : t[b] < 1 || t[b] > We(t[Y], t[O]) ? b : t[x] < 0 || 24 < t[x] || 24 === t[x] && (0 !== t[T] || 0 !== t[N] || 0 !== t[Ne]) ? x : t[T] < 0 || 59 < t[T] ? T : t[N] < 0 || 59 < t[N] ? N : t[Ne] < 0 || 999 < t[Ne] ? Ne : -1,
        m(e)._overflowDayOfYear && (t < Y || b < t) && (t = b),
        m(e)._overflowWeeks && -1 === t && (t = Pe),
        m(e)._overflowWeekday && -1 === t && (t = Re),
        m(e).overflow = t),
        e
    }
    var yt = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/
      , gt = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/
      , wt = /Z|[+-]\d\d(?::?\d\d)?/
      , pt = [["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/], ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/], ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/], ["GGGG-[W]WW", /\d{4}-W\d\d/, !1], ["YYYY-DDD", /\d{4}-\d{3}/], ["YYYY-MM", /\d{4}-\d\d/, !1], ["YYYYYYMMDD", /[+-]\d{10}/], ["YYYYMMDD", /\d{8}/], ["GGGG[W]WWE", /\d{4}W\d{3}/], ["GGGG[W]WW", /\d{4}W\d{2}/, !1], ["YYYYDDD", /\d{7}/], ["YYYYMM", /\d{6}/, !1], ["YYYY", /\d{4}/, !1]]
      , kt = [["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/], ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/], ["HH:mm:ss", /\d\d:\d\d:\d\d/], ["HH:mm", /\d\d:\d\d/], ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/], ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/], ["HHmmss", /\d\d\d\d\d\d/], ["HHmm", /\d\d\d\d/], ["HH", /\d\d/]]
      , vt = /^\/?Date\((-?\d+)/i
      , Mt = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/
      , Dt = {
        UT: 0,
        GMT: 0,
        EDT: -240,
        EST: -300,
        CDT: -300,
        CST: -360,
        MDT: -360,
        MST: -420,
        PDT: -420,
        PST: -480
    };
    function St(e) {
        var t, n, s, i, r, a, o = e._i, u = yt.exec(o) || gt.exec(o), o = pt.length, l = kt.length;
        if (u) {
            for (m(e).iso = !0,
            t = 0,
            n = o; t < n; t++)
                if (pt[t][1].exec(u[1])) {
                    i = pt[t][0],
                    s = !1 !== pt[t][2];
                    break
                }
            if (null == i)
                e._isValid = !1;
            else {
                if (u[3]) {
                    for (t = 0,
                    n = l; t < n; t++)
                        if (kt[t][1].exec(u[3])) {
                            r = (u[2] || " ") + kt[t][0];
                            break
                        }
                    if (null == r)
                        return void (e._isValid = !1)
                }
                if (s || null == r) {
                    if (u[4]) {
                        if (!wt.exec(u[4]))
                            return void (e._isValid = !1);
                        a = "Z"
                    }
                    e._f = i + (r || "") + (a || ""),
                    Tt(e)
                } else
                    e._isValid = !1
            }
        } else
            e._isValid = !1
    }
    function Yt(e, t, n, s, i, r) {
        e = [function(e) {
            e = parseInt(e, 10);
            {
                if (e <= 49)
                    return 2e3 + e;
                if (e <= 999)
                    return 1900 + e
            }
            return e
        }(e), Ue.indexOf(t), parseInt(n, 10), parseInt(s, 10), parseInt(i, 10)];
        return r && e.push(parseInt(r, 10)),
        e
    }
    function Ot(e) {
        var t, n, s, i, r = Mt.exec(e._i.replace(/\([^()]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, ""));
        r ? (t = Yt(r[4], r[3], r[2], r[5], r[6], r[7]),
        n = r[1],
        s = t,
        i = e,
        n && Qe.indexOf(n) !== new Date(s[0],s[1],s[2]).getDay() ? (m(i).weekdayMismatch = !0,
        i._isValid = !1) : (e._a = t,
        e._tzm = (n = r[8],
        s = r[9],
        i = r[10],
        n ? Dt[n] : s ? 0 : 60 * (((n = parseInt(i, 10)) - (s = n % 100)) / 100) + s),
        e._d = Ze.apply(null, e._a),
        e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm),
        m(e).rfc2822 = !0)) : e._isValid = !1
    }
    function bt(e, t, n) {
        return null != e ? e : null != t ? t : n
    }
    function xt(e) {
        var t, n, s, i, r, a, o, u, l, h, d, c = [];
        if (!e._d) {
            for (s = e,
            i = new Date(f.now()),
            n = s._useUTC ? [i.getUTCFullYear(), i.getUTCMonth(), i.getUTCDate()] : [i.getFullYear(), i.getMonth(), i.getDate()],
            e._w && null == e._a[b] && null == e._a[O] && (null != (i = (s = e)._w).GG || null != i.W || null != i.E ? (u = 1,
            l = 4,
            r = bt(i.GG, s._a[Y], qe(W(), 1, 4).year),
            a = bt(i.W, 1),
            ((o = bt(i.E, 1)) < 1 || 7 < o) && (h = !0)) : (u = s._locale._week.dow,
            l = s._locale._week.doy,
            d = qe(W(), u, l),
            r = bt(i.gg, s._a[Y], d.year),
            a = bt(i.w, d.week),
            null != i.d ? ((o = i.d) < 0 || 6 < o) && (h = !0) : null != i.e ? (o = i.e + u,
            (i.e < 0 || 6 < i.e) && (h = !0)) : o = u),
            a < 1 || a > P(r, u, l) ? m(s)._overflowWeeks = !0 : null != h ? m(s)._overflowWeekday = !0 : (d = $e(r, a, o, u, l),
            s._a[Y] = d.year,
            s._dayOfYear = d.dayOfYear)),
            null != e._dayOfYear && (i = bt(e._a[Y], n[Y]),
            (e._dayOfYear > Ae(i) || 0 === e._dayOfYear) && (m(e)._overflowDayOfYear = !0),
            h = Ze(i, 0, e._dayOfYear),
            e._a[O] = h.getUTCMonth(),
            e._a[b] = h.getUTCDate()),
            t = 0; t < 3 && null == e._a[t]; ++t)
                e._a[t] = c[t] = n[t];
            for (; t < 7; t++)
                e._a[t] = c[t] = null == e._a[t] ? 2 === t ? 1 : 0 : e._a[t];
            24 === e._a[x] && 0 === e._a[T] && 0 === e._a[N] && 0 === e._a[Ne] && (e._nextDay = !0,
            e._a[x] = 0),
            e._d = (e._useUTC ? Ze : je).apply(null, c),
            r = e._useUTC ? e._d.getUTCDay() : e._d.getDay(),
            null != e._tzm && e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm),
            e._nextDay && (e._a[x] = 24),
            e._w && void 0 !== e._w.d && e._w.d !== r && (m(e).weekdayMismatch = !0)
        }
    }
    function Tt(e) {
        if (e._f === f.ISO_8601)
            St(e);
        else if (e._f === f.RFC_2822)
            Ot(e);
        else {
            e._a = [],
            m(e).empty = !0;
            for (var t, n, s, i, r, a = "" + e._i, o = a.length, u = 0, l = ae(e._f, e._locale).match(te) || [], h = l.length, d = 0; d < h; d++)
                n = l[d],
                (t = (a.match(Oe(n, e)) || [])[0]) && (0 < (s = a.substr(0, a.indexOf(t))).length && m(e).unusedInput.push(s),
                a = a.slice(a.indexOf(t) + t.length),
                u += t.length),
                ie[n] ? (t ? m(e).empty = !1 : m(e).unusedTokens.push(n),
                s = n,
                r = e,
                null != (i = t) && c(xe, s) && xe[s](i, r._a, r, s)) : e._strict && !t && m(e).unusedTokens.push(n);
            m(e).charsLeftOver = o - u,
            0 < a.length && m(e).unusedInput.push(a),
            e._a[x] <= 12 && !0 === m(e).bigHour && 0 < e._a[x] && (m(e).bigHour = void 0),
            m(e).parsedDateParts = e._a.slice(0),
            m(e).meridiem = e._meridiem,
            e._a[x] = function(e, t, n) {
                if (null == n)
                    return t;
                return null != e.meridiemHour ? e.meridiemHour(t, n) : null != e.isPM ? ((e = e.isPM(n)) && t < 12 && (t += 12),
                t = e || 12 !== t ? t : 0) : t
            }(e._locale, e._a[x], e._meridiem),
            null !== (o = m(e).era) && (e._a[Y] = e._locale.erasConvertYear(o, e._a[Y])),
            xt(e),
            _t(e)
        }
    }
    function Nt(e) {
        var t, n, s, i = e._i, r = e._f;
        if (e._locale = e._locale || mt(e._l),
        null === i || void 0 === r && "" === i)
            return I({
                nullInput: !0
            });
        if ("string" == typeof i && (e._i = i = e._locale.preparse(i)),
        h(i))
            return new q(_t(i));
        if (V(i))
            e._d = i;
        else if (a(r))
            !function(e) {
                var t, n, s, i, r, a, o = !1, u = e._f.length;
                if (0 === u)
                    return m(e).invalidFormat = !0,
                    e._d = new Date(NaN);
                for (i = 0; i < u; i++)
                    r = 0,
                    a = !1,
                    t = $({}, e),
                    null != e._useUTC && (t._useUTC = e._useUTC),
                    t._f = e._f[i],
                    Tt(t),
                    A(t) && (a = !0),
                    r = (r += m(t).charsLeftOver) + 10 * m(t).unusedTokens.length,
                    m(t).score = r,
                    o ? r < s && (s = r,
                    n = t) : (null == s || r < s || a) && (s = r,
                    n = t,
                    a && (o = !0));
                E(e, n || t)
            }(e);
        else if (r)
            Tt(e);
        else if (o(r = (i = e)._i))
            i._d = new Date(f.now());
        else
            V(r) ? i._d = new Date(r.valueOf()) : "string" == typeof r ? (n = i,
            null !== (t = vt.exec(n._i)) ? n._d = new Date(+t[1]) : (St(n),
            !1 === n._isValid && (delete n._isValid,
            Ot(n),
            !1 === n._isValid && (delete n._isValid,
            n._strict ? n._isValid = !1 : f.createFromInputFallback(n))))) : a(r) ? (i._a = G(r.slice(0), function(e) {
                return parseInt(e, 10)
            }),
            xt(i)) : F(r) ? (t = i)._d || (s = void 0 === (n = ue(t._i)).day ? n.date : n.day,
            t._a = G([n.year, n.month, s, n.hour, n.minute, n.second, n.millisecond], function(e) {
                return e && parseInt(e, 10)
            }),
            xt(t)) : u(r) ? i._d = new Date(r) : f.createFromInputFallback(i);
        return A(e) || (e._d = null),
        e
    }
    function Pt(e, t, n, s, i) {
        var r = {};
        return !0 !== t && !1 !== t || (s = t,
        t = void 0),
        !0 !== n && !1 !== n || (s = n,
        n = void 0),
        (F(e) && L(e) || a(e) && 0 === e.length) && (e = void 0),
        r._isAMomentObject = !0,
        r._useUTC = r._isUTC = i,
        r._l = n,
        r._i = e,
        r._f = t,
        r._strict = s,
        (i = new q(_t(Nt(i = r))))._nextDay && (i.add(1, "d"),
        i._nextDay = void 0),
        i
    }
    function W(e, t, n, s) {
        return Pt(e, t, n, s, !1)
    }
    f.createFromInputFallback = e("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.", function(e) {
        e._d = new Date(e._i + (e._useUTC ? " UTC" : ""))
    }),
    f.ISO_8601 = function() {}
    ,
    f.RFC_2822 = function() {}
    ;
    ge = e("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
        var e = W.apply(null, arguments);
        return this.isValid() && e.isValid() ? e < this ? this : e : I()
    }),
    we = e("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
        var e = W.apply(null, arguments);
        return this.isValid() && e.isValid() ? this < e ? this : e : I()
    });
    function Rt(e, t) {
        var n, s;
        if (!(t = 1 === t.length && a(t[0]) ? t[0] : t).length)
            return W();
        for (n = t[0],
        s = 1; s < t.length; ++s)
            t[s].isValid() && !t[s][e](n) || (n = t[s]);
        return n
    }
    var Wt = ["year", "quarter", "month", "week", "day", "hour", "minute", "second", "millisecond"];
    function Ct(e) {
        var e = ue(e)
          , t = e.year || 0
          , n = e.quarter || 0
          , s = e.month || 0
          , i = e.week || e.isoWeek || 0
          , r = e.day || 0
          , a = e.hour || 0
          , o = e.minute || 0
          , u = e.second || 0
          , l = e.millisecond || 0;
        this._isValid = function(e) {
            var t, n, s = !1, i = Wt.length;
            for (t in e)
                if (c(e, t) && (-1 === S.call(Wt, t) || null != e[t] && isNaN(e[t])))
                    return !1;
            for (n = 0; n < i; ++n)
                if (e[Wt[n]]) {
                    if (s)
                        return !1;
                    parseFloat(e[Wt[n]]) !== g(e[Wt[n]]) && (s = !0)
                }
            return !0
        }(e),
        this._milliseconds = +l + 1e3 * u + 6e4 * o + 1e3 * a * 60 * 60,
        this._days = +r + 7 * i,
        this._months = +s + 3 * n + 12 * t,
        this._data = {},
        this._locale = mt(),
        this._bubble()
    }
    function Ut(e) {
        return e instanceof Ct
    }
    function Ht(e) {
        return e < 0 ? -1 * Math.round(-1 * e) : Math.round(e)
    }
    function Ft(e, n) {
        s(e, 0, 0, function() {
            var e = this.utcOffset()
              , t = "+";
            return e < 0 && (e = -e,
            t = "-"),
            t + r(~~(e / 60), 2) + n + r(~~e % 60, 2)
        })
    }
    Ft("Z", ":"),
    Ft("ZZ", ""),
    v("Z", Ye),
    v("ZZ", Ye),
    D(["Z", "ZZ"], function(e, t, n) {
        n._useUTC = !0,
        n._tzm = Vt(Ye, e)
    });
    var Lt = /([\+\-]|\d\d)/gi;
    function Vt(e, t) {
        var t = (t || "").match(e);
        return null === t ? null : 0 === (t = 60 * (e = ((t[t.length - 1] || []) + "").match(Lt) || ["-", 0, 0])[1] + g(e[2])) ? 0 : "+" === e[0] ? t : -t
    }
    function Gt(e, t) {
        var n;
        return t._isUTC ? (t = t.clone(),
        n = (h(e) || V(e) ? e : W(e)).valueOf() - t.valueOf(),
        t._d.setTime(t._d.valueOf() + n),
        f.updateOffset(t, !1),
        t) : W(e).local()
    }
    function Et(e) {
        return -Math.round(e._d.getTimezoneOffset())
    }
    function At() {
        return !!this.isValid() && (this._isUTC && 0 === this._offset)
    }
    f.updateOffset = function() {}
    ;
    var It = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/
      , jt = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
    function C(e, t) {
        var n, s = e, i = null;
        return Ut(e) ? s = {
            ms: e._milliseconds,
            d: e._days,
            M: e._months
        } : u(e) || !isNaN(+e) ? (s = {},
        t ? s[t] = +e : s.milliseconds = +e) : (i = It.exec(e)) ? (n = "-" === i[1] ? -1 : 1,
        s = {
            y: 0,
            d: g(i[b]) * n,
            h: g(i[x]) * n,
            m: g(i[T]) * n,
            s: g(i[N]) * n,
            ms: g(Ht(1e3 * i[Ne])) * n
        }) : (i = jt.exec(e)) ? (n = "-" === i[1] ? -1 : 1,
        s = {
            y: Zt(i[2], n),
            M: Zt(i[3], n),
            w: Zt(i[4], n),
            d: Zt(i[5], n),
            h: Zt(i[6], n),
            m: Zt(i[7], n),
            s: Zt(i[8], n)
        }) : null == s ? s = {} : "object" == typeof s && ("from"in s || "to"in s) && (t = function(e, t) {
            var n;
            if (!e.isValid() || !t.isValid())
                return {
                    milliseconds: 0,
                    months: 0
                };
            t = Gt(t, e),
            e.isBefore(t) ? n = zt(e, t) : ((n = zt(t, e)).milliseconds = -n.milliseconds,
            n.months = -n.months);
            return n
        }(W(s.from), W(s.to)),
        (s = {}).ms = t.milliseconds,
        s.M = t.months),
        i = new Ct(s),
        Ut(e) && c(e, "_locale") && (i._locale = e._locale),
        Ut(e) && c(e, "_isValid") && (i._isValid = e._isValid),
        i
    }
    function Zt(e, t) {
        e = e && parseFloat(e.replace(",", "."));
        return (isNaN(e) ? 0 : e) * t
    }
    function zt(e, t) {
        var n = {};
        return n.months = t.month() - e.month() + 12 * (t.year() - e.year()),
        e.clone().add(n.months, "M").isAfter(t) && --n.months,
        n.milliseconds = +t - +e.clone().add(n.months, "M"),
        n
    }
    function $t(s, i) {
        return function(e, t) {
            var n;
            return null === t || isNaN(+t) || (Q(i, "moment()." + i + "(period, number) is deprecated. Please use moment()." + i + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),
            n = e,
            e = t,
            t = n),
            qt(this, C(e, t), s),
            this
        }
    }
    function qt(e, t, n, s) {
        var i = t._milliseconds
          , r = Ht(t._days)
          , t = Ht(t._months);
        e.isValid() && (s = null == s || s,
        t && Ve(e, ce(e, "Month") + t * n),
        r && fe(e, "Date", ce(e, "Date") + r * n),
        i && e._d.setTime(e._d.valueOf() + i * n),
        s && f.updateOffset(e, r || t))
    }
    C.fn = Ct.prototype,
    C.invalid = function() {
        return C(NaN)
    }
    ;
    Ce = $t(1, "add"),
    Je = $t(-1, "subtract");
    function Bt(e) {
        return "string" == typeof e || e instanceof String
    }
    function Jt(e) {
        return h(e) || V(e) || Bt(e) || u(e) || function(t) {
            var e = a(t)
              , n = !1;
            e && (n = 0 === t.filter(function(e) {
                return !u(e) && Bt(t)
            }).length);
            return e && n
        }(e) || function(e) {
            var t, n, s = F(e) && !L(e), i = !1, r = ["years", "year", "y", "months", "month", "M", "days", "day", "d", "dates", "date", "D", "hours", "hour", "h", "minutes", "minute", "m", "seconds", "second", "s", "milliseconds", "millisecond", "ms"], a = r.length;
            for (t = 0; t < a; t += 1)
                n = r[t],
                i = i || c(e, n);
            return s && i
        }(e) || null == e
    }
    function Qt(e, t) {
        if (e.date() < t.date())
            return -Qt(t, e);
        var n = 12 * (t.year() - e.year()) + (t.month() - e.month())
          , s = e.clone().add(n, "months")
          , t = t - s < 0 ? (t - s) / (s - e.clone().add(n - 1, "months")) : (t - s) / (e.clone().add(1 + n, "months") - s);
        return -(n + t) || 0
    }
    function Xt(e) {
        return void 0 === e ? this._locale._abbr : (null != (e = mt(e)) && (this._locale = e),
        this)
    }
    f.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ",
    f.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
    Xe = e("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function(e) {
        return void 0 === e ? this.localeData() : this.locale(e)
    });
    function Kt() {
        return this._locale
    }
    var en = 126227808e5;
    function tn(e, t) {
        return (e % t + t) % t
    }
    function nn(e, t, n) {
        return e < 100 && 0 <= e ? new Date(e + 400,t,n) - en : new Date(e,t,n).valueOf()
    }
    function sn(e, t, n) {
        return e < 100 && 0 <= e ? Date.UTC(e + 400, t, n) - en : Date.UTC(e, t, n)
    }
    function rn(e, t) {
        return t.erasAbbrRegex(e)
    }
    function an() {
        for (var e = [], t = [], n = [], s = [], i = this.eras(), r = 0, a = i.length; r < a; ++r)
            t.push(M(i[r].name)),
            e.push(M(i[r].abbr)),
            n.push(M(i[r].narrow)),
            s.push(M(i[r].name)),
            s.push(M(i[r].abbr)),
            s.push(M(i[r].narrow));
        this._erasRegex = new RegExp("^(" + s.join("|") + ")","i"),
        this._erasNameRegex = new RegExp("^(" + t.join("|") + ")","i"),
        this._erasAbbrRegex = new RegExp("^(" + e.join("|") + ")","i"),
        this._erasNarrowRegex = new RegExp("^(" + n.join("|") + ")","i")
    }
    function on(e, t) {
        s(0, [e, e.length], 0, t)
    }
    function un(e, t, n, s, i) {
        var r;
        return null == e ? qe(this, s, i).year : (r = P(e, s, i),
        function(e, t, n, s, i) {
            e = $e(e, t, n, s, i),
            t = Ze(e.year, 0, e.dayOfYear);
            return this.year(t.getUTCFullYear()),
            this.month(t.getUTCMonth()),
            this.date(t.getUTCDate()),
            this
        }
        .call(this, e, t = r < t ? r : t, n, s, i))
    }
    s("N", 0, 0, "eraAbbr"),
    s("NN", 0, 0, "eraAbbr"),
    s("NNN", 0, 0, "eraAbbr"),
    s("NNNN", 0, 0, "eraName"),
    s("NNNNN", 0, 0, "eraNarrow"),
    s("y", ["y", 1], "yo", "eraYear"),
    s("y", ["yy", 2], 0, "eraYear"),
    s("y", ["yyy", 3], 0, "eraYear"),
    s("y", ["yyyy", 4], 0, "eraYear"),
    v("N", rn),
    v("NN", rn),
    v("NNN", rn),
    v("NNNN", function(e, t) {
        return t.erasNameRegex(e)
    }),
    v("NNNNN", function(e, t) {
        return t.erasNarrowRegex(e)
    }),
    D(["N", "NN", "NNN", "NNNN", "NNNNN"], function(e, t, n, s) {
        s = n._locale.erasParse(e, s, n._strict);
        s ? m(n).era = s : m(n).invalidEra = e
    }),
    v("y", Me),
    v("yy", Me),
    v("yyy", Me),
    v("yyyy", Me),
    v("yo", function(e, t) {
        return t._eraYearOrdinalRegex || Me
    }),
    D(["y", "yy", "yyy", "yyyy"], Y),
    D(["yo"], function(e, t, n, s) {
        var i;
        n._locale._eraYearOrdinalRegex && (i = e.match(n._locale._eraYearOrdinalRegex)),
        n._locale.eraYearOrdinalParse ? t[Y] = n._locale.eraYearOrdinalParse(e, i) : t[Y] = parseInt(e, 10)
    }),
    s(0, ["gg", 2], 0, function() {
        return this.weekYear() % 100
    }),
    s(0, ["GG", 2], 0, function() {
        return this.isoWeekYear() % 100
    }),
    on("gggg", "weekYear"),
    on("ggggg", "weekYear"),
    on("GGGG", "isoWeekYear"),
    on("GGGGG", "isoWeekYear"),
    t("weekYear", "gg"),
    t("isoWeekYear", "GG"),
    n("weekYear", 1),
    n("isoWeekYear", 1),
    v("G", De),
    v("g", De),
    v("GG", p, w),
    v("gg", p, w),
    v("GGGG", ke, _e),
    v("gggg", ke, _e),
    v("GGGGG", ve, ye),
    v("ggggg", ve, ye),
    Te(["gggg", "ggggg", "GGGG", "GGGGG"], function(e, t, n, s) {
        t[s.substr(0, 2)] = g(e)
    }),
    Te(["gg", "GG"], function(e, t, n, s) {
        t[s] = f.parseTwoDigitYear(e)
    }),
    s("Q", 0, "Qo", "quarter"),
    t("quarter", "Q"),
    n("quarter", 7),
    v("Q", i),
    D("Q", function(e, t) {
        t[O] = 3 * (g(e) - 1)
    }),
    s("D", ["DD", 2], "Do", "date"),
    t("date", "D"),
    n("date", 9),
    v("D", p),
    v("DD", p, w),
    v("Do", function(e, t) {
        return e ? t._dayOfMonthOrdinalParse || t._ordinalParse : t._dayOfMonthOrdinalParseLenient
    }),
    D(["D", "DD"], b),
    D("Do", function(e, t) {
        t[b] = g(e.match(p)[0])
    });
    ke = de("Date", !0);
    s("DDD", ["DDDD", 3], "DDDo", "dayOfYear"),
    t("dayOfYear", "DDD"),
    n("dayOfYear", 4),
    v("DDD", pe),
    v("DDDD", me),
    D(["DDD", "DDDD"], function(e, t, n) {
        n._dayOfYear = g(e)
    }),
    s("m", ["mm", 2], 0, "minute"),
    t("minute", "m"),
    n("minute", 14),
    v("m", p),
    v("mm", p, w),
    D(["m", "mm"], T);
    var ln, _e = de("Minutes", !1), ve = (s("s", ["ss", 2], 0, "second"),
    t("second", "s"),
    n("second", 15),
    v("s", p),
    v("ss", p, w),
    D(["s", "ss"], N),
    de("Seconds", !1));
    for (s("S", 0, 0, function() {
        return ~~(this.millisecond() / 100)
    }),
    s(0, ["SS", 2], 0, function() {
        return ~~(this.millisecond() / 10)
    }),
    s(0, ["SSS", 3], 0, "millisecond"),
    s(0, ["SSSS", 4], 0, function() {
        return 10 * this.millisecond()
    }),
    s(0, ["SSSSS", 5], 0, function() {
        return 100 * this.millisecond()
    }),
    s(0, ["SSSSSS", 6], 0, function() {
        return 1e3 * this.millisecond()
    }),
    s(0, ["SSSSSSS", 7], 0, function() {
        return 1e4 * this.millisecond()
    }),
    s(0, ["SSSSSSSS", 8], 0, function() {
        return 1e5 * this.millisecond()
    }),
    s(0, ["SSSSSSSSS", 9], 0, function() {
        return 1e6 * this.millisecond()
    }),
    t("millisecond", "ms"),
    n("millisecond", 16),
    v("S", pe, i),
    v("SS", pe, w),
    v("SSS", pe, me),
    ln = "SSSS"; ln.length <= 9; ln += "S")
        v(ln, Me);
    function hn(e, t) {
        t[Ne] = g(1e3 * ("0." + e))
    }
    for (ln = "S"; ln.length <= 9; ln += "S")
        D(ln, hn);
    ye = de("Milliseconds", !1),
    s("z", 0, 0, "zoneAbbr"),
    s("zz", 0, 0, "zoneName");
    i = q.prototype;
    function dn(e) {
        return e
    }
    i.add = Ce,
    i.calendar = function(e, t) {
        1 === arguments.length && (arguments[0] ? Jt(arguments[0]) ? (e = arguments[0],
        t = void 0) : function(e) {
            for (var t = F(e) && !L(e), n = !1, s = ["sameDay", "nextDay", "lastDay", "nextWeek", "lastWeek", "sameElse"], i = 0; i < s.length; i += 1)
                n = n || c(e, s[i]);
            return t && n
        }(arguments[0]) && (t = arguments[0],
        e = void 0) : t = e = void 0);
        var e = e || W()
          , n = Gt(e, this).startOf("day")
          , n = f.calendarFormat(this, n) || "sameElse"
          , t = t && (d(t[n]) ? t[n].call(this, e) : t[n]);
        return this.format(t || this.localeData().calendar(n, this, W(e)))
    }
    ,
    i.clone = function() {
        return new q(this)
    }
    ,
    i.diff = function(e, t, n) {
        var s, i, r;
        if (!this.isValid())
            return NaN;
        if (!(s = Gt(e, this)).isValid())
            return NaN;
        switch (i = 6e4 * (s.utcOffset() - this.utcOffset()),
        t = _(t)) {
        case "year":
            r = Qt(this, s) / 12;
            break;
        case "month":
            r = Qt(this, s);
            break;
        case "quarter":
            r = Qt(this, s) / 3;
            break;
        case "second":
            r = (this - s) / 1e3;
            break;
        case "minute":
            r = (this - s) / 6e4;
            break;
        case "hour":
            r = (this - s) / 36e5;
            break;
        case "day":
            r = (this - s - i) / 864e5;
            break;
        case "week":
            r = (this - s - i) / 6048e5;
            break;
        default:
            r = this - s
        }
        return n ? r : y(r)
    }
    ,
    i.endOf = function(e) {
        var t, n;
        if (void 0 === (e = _(e)) || "millisecond" === e || !this.isValid())
            return this;
        switch (n = this._isUTC ? sn : nn,
        e) {
        case "year":
            t = n(this.year() + 1, 0, 1) - 1;
            break;
        case "quarter":
            t = n(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
            break;
        case "month":
            t = n(this.year(), this.month() + 1, 1) - 1;
            break;
        case "week":
            t = n(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
            break;
        case "isoWeek":
            t = n(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
            break;
        case "day":
        case "date":
            t = n(this.year(), this.month(), this.date() + 1) - 1;
            break;
        case "hour":
            t = this._d.valueOf(),
            t += 36e5 - tn(t + (this._isUTC ? 0 : 6e4 * this.utcOffset()), 36e5) - 1;
            break;
        case "minute":
            t = this._d.valueOf(),
            t += 6e4 - tn(t, 6e4) - 1;
            break;
        case "second":
            t = this._d.valueOf(),
            t += 1e3 - tn(t, 1e3) - 1;
            break
        }
        return this._d.setTime(t),
        f.updateOffset(this, !0),
        this
    }
    ,
    i.format = function(e) {
        return e = e || (this.isUtc() ? f.defaultFormatUtc : f.defaultFormat),
        e = re(this, e),
        this.localeData().postformat(e)
    }
    ,
    i.from = function(e, t) {
        return this.isValid() && (h(e) && e.isValid() || W(e).isValid()) ? C({
            to: this,
            from: e
        }).locale(this.locale()).humanize(!t) : this.localeData().invalidDate()
    }
    ,
    i.fromNow = function(e) {
        return this.from(W(), e)
    }
    ,
    i.to = function(e, t) {
        return this.isValid() && (h(e) && e.isValid() || W(e).isValid()) ? C({
            from: this,
            to: e
        }).locale(this.locale()).humanize(!t) : this.localeData().invalidDate()
    }
    ,
    i.toNow = function(e) {
        return this.to(W(), e)
    }
    ,
    i.get = function(e) {
        return d(this[e = _(e)]) ? this[e]() : this
    }
    ,
    i.invalidAt = function() {
        return m(this).overflow
    }
    ,
    i.isAfter = function(e, t) {
        return e = h(e) ? e : W(e),
        !(!this.isValid() || !e.isValid()) && ("millisecond" === (t = _(t) || "millisecond") ? this.valueOf() > e.valueOf() : e.valueOf() < this.clone().startOf(t).valueOf())
    }
    ,
    i.isBefore = function(e, t) {
        return e = h(e) ? e : W(e),
        !(!this.isValid() || !e.isValid()) && ("millisecond" === (t = _(t) || "millisecond") ? this.valueOf() < e.valueOf() : this.clone().endOf(t).valueOf() < e.valueOf())
    }
    ,
    i.isBetween = function(e, t, n, s) {
        return e = h(e) ? e : W(e),
        t = h(t) ? t : W(t),
        !!(this.isValid() && e.isValid() && t.isValid()) && (("(" === (s = s || "()")[0] ? this.isAfter(e, n) : !this.isBefore(e, n)) && (")" === s[1] ? this.isBefore(t, n) : !this.isAfter(t, n)))
    }
    ,
    i.isSame = function(e, t) {
        var e = h(e) ? e : W(e);
        return !(!this.isValid() || !e.isValid()) && ("millisecond" === (t = _(t) || "millisecond") ? this.valueOf() === e.valueOf() : (e = e.valueOf(),
        this.clone().startOf(t).valueOf() <= e && e <= this.clone().endOf(t).valueOf()))
    }
    ,
    i.isSameOrAfter = function(e, t) {
        return this.isSame(e, t) || this.isAfter(e, t)
    }
    ,
    i.isSameOrBefore = function(e, t) {
        return this.isSame(e, t) || this.isBefore(e, t)
    }
    ,
    i.isValid = function() {
        return A(this)
    }
    ,
    i.lang = Xe,
    i.locale = Xt,
    i.localeData = Kt,
    i.max = we,
    i.min = ge,
    i.parsingFlags = function() {
        return E({}, m(this))
    }
    ,
    i.set = function(e, t) {
        if ("object" == typeof e)
            for (var n = function(e) {
                var t, n = [];
                for (t in e)
                    c(e, t) && n.push({
                        unit: t,
                        priority: le[t]
                    });
                return n.sort(function(e, t) {
                    return e.priority - t.priority
                }),
                n
            }(e = ue(e)), s = n.length, i = 0; i < s; i++)
                this[n[i].unit](e[n[i].unit]);
        else if (d(this[e = _(e)]))
            return this[e](t);
        return this
    }
    ,
    i.startOf = function(e) {
        var t, n;
        if (void 0 === (e = _(e)) || "millisecond" === e || !this.isValid())
            return this;
        switch (n = this._isUTC ? sn : nn,
        e) {
        case "year":
            t = n(this.year(), 0, 1);
            break;
        case "quarter":
            t = n(this.year(), this.month() - this.month() % 3, 1);
            break;
        case "month":
            t = n(this.year(), this.month(), 1);
            break;
        case "week":
            t = n(this.year(), this.month(), this.date() - this.weekday());
            break;
        case "isoWeek":
            t = n(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
            break;
        case "day":
        case "date":
            t = n(this.year(), this.month(), this.date());
            break;
        case "hour":
            t = this._d.valueOf(),
            t -= tn(t + (this._isUTC ? 0 : 6e4 * this.utcOffset()), 36e5);
            break;
        case "minute":
            t = this._d.valueOf(),
            t -= tn(t, 6e4);
            break;
        case "second":
            t = this._d.valueOf(),
            t -= tn(t, 1e3);
            break
        }
        return this._d.setTime(t),
        f.updateOffset(this, !0),
        this
    }
    ,
    i.subtract = Je,
    i.toArray = function() {
        var e = this;
        return [e.year(), e.month(), e.date(), e.hour(), e.minute(), e.second(), e.millisecond()]
    }
    ,
    i.toObject = function() {
        var e = this;
        return {
            years: e.year(),
            months: e.month(),
            date: e.date(),
            hours: e.hours(),
            minutes: e.minutes(),
            seconds: e.seconds(),
            milliseconds: e.milliseconds()
        }
    }
    ,
    i.toDate = function() {
        return new Date(this.valueOf())
    }
    ,
    i.toISOString = function(e) {
        if (!this.isValid())
            return null;
        var t = (e = !0 !== e) ? this.clone().utc() : this;
        return t.year() < 0 || 9999 < t.year() ? re(t, e ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ") : d(Date.prototype.toISOString) ? e ? this.toDate().toISOString() : new Date(this.valueOf() + 60 * this.utcOffset() * 1e3).toISOString().replace("Z", re(t, "Z")) : re(t, e ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ")
    }
    ,
    i.inspect = function() {
        if (!this.isValid())
            return "moment.invalid(/* " + this._i + " */)";
        var e, t = "moment", n = "";
        return this.isLocal() || (t = 0 === this.utcOffset() ? "moment.utc" : "moment.parseZone",
        n = "Z"),
        t = "[" + t + '("]',
        e = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY",
        this.format(t + e + "-MM-DD[T]HH:mm:ss.SSS" + (n + '[")]'))
    }
    ,
    "undefined" != typeof Symbol && null != Symbol.for && (i[Symbol.for("nodejs.util.inspect.custom")] = function() {
        return "Moment<" + this.format() + ">"
    }
    ),
    i.toJSON = function() {
        return this.isValid() ? this.toISOString() : null
    }
    ,
    i.toString = function() {
        return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")
    }
    ,
    i.unix = function() {
        return Math.floor(this.valueOf() / 1e3)
    }
    ,
    i.valueOf = function() {
        return this._d.valueOf() - 6e4 * (this._offset || 0)
    }
    ,
    i.creationData = function() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict
        }
    }
    ,
    i.eraName = function() {
        for (var e, t = this.localeData().eras(), n = 0, s = t.length; n < s; ++n) {
            if (e = this.clone().startOf("day").valueOf(),
            t[n].since <= e && e <= t[n].until)
                return t[n].name;
            if (t[n].until <= e && e <= t[n].since)
                return t[n].name
        }
        return ""
    }
    ,
    i.eraNarrow = function() {
        for (var e, t = this.localeData().eras(), n = 0, s = t.length; n < s; ++n) {
            if (e = this.clone().startOf("day").valueOf(),
            t[n].since <= e && e <= t[n].until)
                return t[n].narrow;
            if (t[n].until <= e && e <= t[n].since)
                return t[n].narrow
        }
        return ""
    }
    ,
    i.eraAbbr = function() {
        for (var e, t = this.localeData().eras(), n = 0, s = t.length; n < s; ++n) {
            if (e = this.clone().startOf("day").valueOf(),
            t[n].since <= e && e <= t[n].until)
                return t[n].abbr;
            if (t[n].until <= e && e <= t[n].since)
                return t[n].abbr
        }
        return ""
    }
    ,
    i.eraYear = function() {
        for (var e, t, n = this.localeData().eras(), s = 0, i = n.length; s < i; ++s)
            if (e = n[s].since <= n[s].until ? 1 : -1,
            t = this.clone().startOf("day").valueOf(),
            n[s].since <= t && t <= n[s].until || n[s].until <= t && t <= n[s].since)
                return (this.year() - f(n[s].since).year()) * e + n[s].offset;
        return this.year()
    }
    ,
    i.year = Ie,
    i.isLeapYear = function() {
        return he(this.year())
    }
    ,
    i.weekYear = function(e) {
        return un.call(this, e, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy)
    }
    ,
    i.isoWeekYear = function(e) {
        return un.call(this, e, this.isoWeek(), this.isoWeekday(), 1, 4)
    }
    ,
    i.quarter = i.quarters = function(e) {
        return null == e ? Math.ceil((this.month() + 1) / 3) : this.month(3 * (e - 1) + this.month() % 3)
    }
    ,
    i.month = Ge,
    i.daysInMonth = function() {
        return We(this.year(), this.month())
    }
    ,
    i.week = i.weeks = function(e) {
        var t = this.localeData().week(this);
        return null == e ? t : this.add(7 * (e - t), "d")
    }
    ,
    i.isoWeek = i.isoWeeks = function(e) {
        var t = qe(this, 1, 4).week;
        return null == e ? t : this.add(7 * (e - t), "d")
    }
    ,
    i.weeksInYear = function() {
        var e = this.localeData()._week;
        return P(this.year(), e.dow, e.doy)
    }
    ,
    i.weeksInWeekYear = function() {
        var e = this.localeData()._week;
        return P(this.weekYear(), e.dow, e.doy)
    }
    ,
    i.isoWeeksInYear = function() {
        return P(this.year(), 1, 4)
    }
    ,
    i.isoWeeksInISOWeekYear = function() {
        return P(this.isoWeekYear(), 1, 4)
    }
    ,
    i.date = ke,
    i.day = i.days = function(e) {
        if (!this.isValid())
            return null != e ? this : NaN;
        var t, n, s = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        return null != e ? (t = e,
        n = this.localeData(),
        e = "string" != typeof t ? t : isNaN(t) ? "number" == typeof (t = n.weekdaysParse(t)) ? t : null : parseInt(t, 10),
        this.add(e - s, "d")) : s
    }
    ,
    i.weekday = function(e) {
        if (!this.isValid())
            return null != e ? this : NaN;
        var t = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return null == e ? t : this.add(e - t, "d")
    }
    ,
    i.isoWeekday = function(e) {
        return this.isValid() ? null != e ? (t = e,
        n = this.localeData(),
        n = "string" == typeof t ? n.weekdaysParse(t) % 7 || 7 : isNaN(t) ? null : t,
        this.day(this.day() % 7 ? n : n - 7)) : this.day() || 7 : null != e ? this : NaN;
        var t, n
    }
    ,
    i.dayOfYear = function(e) {
        var t = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 864e5) + 1;
        return null == e ? t : this.add(e - t, "d")
    }
    ,
    i.hour = i.hours = k,
    i.minute = i.minutes = _e,
    i.second = i.seconds = ve,
    i.millisecond = i.milliseconds = ye,
    i.utcOffset = function(e, t, n) {
        var s, i = this._offset || 0;
        if (!this.isValid())
            return null != e ? this : NaN;
        if (null == e)
            return this._isUTC ? i : Et(this);
        if ("string" == typeof e) {
            if (null === (e = Vt(Ye, e)))
                return this
        } else
            Math.abs(e) < 16 && !n && (e *= 60);
        return !this._isUTC && t && (s = Et(this)),
        this._offset = e,
        this._isUTC = !0,
        null != s && this.add(s, "m"),
        i !== e && (!t || this._changeInProgress ? qt(this, C(e - i, "m"), 1, !1) : this._changeInProgress || (this._changeInProgress = !0,
        f.updateOffset(this, !0),
        this._changeInProgress = null)),
        this
    }
    ,
    i.utc = function(e) {
        return this.utcOffset(0, e)
    }
    ,
    i.local = function(e) {
        return this._isUTC && (this.utcOffset(0, e),
        this._isUTC = !1,
        e && this.subtract(Et(this), "m")),
        this
    }
    ,
    i.parseZone = function() {
        var e;
        return null != this._tzm ? this.utcOffset(this._tzm, !1, !0) : "string" == typeof this._i && (null != (e = Vt(Se, this._i)) ? this.utcOffset(e) : this.utcOffset(0, !0)),
        this
    }
    ,
    i.hasAlignedHourOffset = function(e) {
        return !!this.isValid() && (e = e ? W(e).utcOffset() : 0,
        (this.utcOffset() - e) % 60 == 0)
    }
    ,
    i.isDST = function() {
        return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset()
    }
    ,
    i.isLocal = function() {
        return !!this.isValid() && !this._isUTC
    }
    ,
    i.isUtcOffset = function() {
        return !!this.isValid() && this._isUTC
    }
    ,
    i.isUtc = At,
    i.isUTC = At,
    i.zoneAbbr = function() {
        return this._isUTC ? "UTC" : ""
    }
    ,
    i.zoneName = function() {
        return this._isUTC ? "Coordinated Universal Time" : ""
    }
    ,
    i.dates = e("dates accessor is deprecated. Use date instead.", ke),
    i.months = e("months accessor is deprecated. Use month instead", Ge),
    i.years = e("years accessor is deprecated. Use year instead", Ie),
    i.zone = e("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/", function(e, t) {
        return null != e ? (this.utcOffset(e = "string" != typeof e ? -e : e, t),
        this) : -this.utcOffset()
    }),
    i.isDSTShifted = e("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information", function() {
        if (!o(this._isDSTShifted))
            return this._isDSTShifted;
        var e, t = {};
        return $(t, this),
        (t = Nt(t))._a ? (e = (t._isUTC ? l : W)(t._a),
        this._isDSTShifted = this.isValid() && 0 < function(e, t, n) {
            for (var s = Math.min(e.length, t.length), i = Math.abs(e.length - t.length), r = 0, a = 0; a < s; a++)
                (n && e[a] !== t[a] || !n && g(e[a]) !== g(t[a])) && r++;
            return r + i
        }(t._a, e.toArray())) : this._isDSTShifted = !1,
        this._isDSTShifted
    });
    w = K.prototype;
    function cn(e, t, n, s) {
        var i = mt()
          , s = l().set(s, t);
        return i[n](s, e)
    }
    function fn(e, t, n) {
        if (u(e) && (t = e,
        e = void 0),
        e = e || "",
        null != t)
            return cn(e, t, n, "month");
        for (var s = [], i = 0; i < 12; i++)
            s[i] = cn(e, i, n, "month");
        return s
    }
    function mn(e, t, n, s) {
        t = ("boolean" == typeof e ? u(t) && (n = t,
        t = void 0) : (t = e,
        e = !1,
        u(n = t) && (n = t,
        t = void 0)),
        t || "");
        var i, r = mt(), a = e ? r._week.dow : 0, o = [];
        if (null != n)
            return cn(t, (n + a) % 7, s, "day");
        for (i = 0; i < 7; i++)
            o[i] = cn(t, (i + a) % 7, s, "day");
        return o
    }
    w.calendar = function(e, t, n) {
        return d(e = this._calendar[e] || this._calendar.sameElse) ? e.call(t, n) : e
    }
    ,
    w.longDateFormat = function(e) {
        var t = this._longDateFormat[e]
          , n = this._longDateFormat[e.toUpperCase()];
        return t || !n ? t : (this._longDateFormat[e] = n.match(te).map(function(e) {
            return "MMMM" === e || "MM" === e || "DD" === e || "dddd" === e ? e.slice(1) : e
        }).join(""),
        this._longDateFormat[e])
    }
    ,
    w.invalidDate = function() {
        return this._invalidDate
    }
    ,
    w.ordinal = function(e) {
        return this._ordinal.replace("%d", e)
    }
    ,
    w.preparse = dn,
    w.postformat = dn,
    w.relativeTime = function(e, t, n, s) {
        var i = this._relativeTime[n];
        return d(i) ? i(e, t, n, s) : i.replace(/%d/i, e)
    }
    ,
    w.pastFuture = function(e, t) {
        return d(e = this._relativeTime[0 < e ? "future" : "past"]) ? e(t) : e.replace(/%s/i, t)
    }
    ,
    w.set = function(e) {
        var t, n;
        for (n in e)
            c(e, n) && (d(t = e[n]) ? this[n] = t : this["_" + n] = t);
        this._config = e,
        this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source)
    }
    ,
    w.eras = function(e, t) {
        for (var n, s = this._eras || mt("en")._eras, i = 0, r = s.length; i < r; ++i) {
            switch (typeof s[i].since) {
            case "string":
                n = f(s[i].since).startOf("day"),
                s[i].since = n.valueOf();
                break
            }
            switch (typeof s[i].until) {
            case "undefined":
                s[i].until = 1 / 0;
                break;
            case "string":
                n = f(s[i].until).startOf("day").valueOf(),
                s[i].until = n.valueOf();
                break
            }
        }
        return s
    }
    ,
    w.erasParse = function(e, t, n) {
        var s, i, r, a, o, u = this.eras();
        for (e = e.toUpperCase(),
        s = 0,
        i = u.length; s < i; ++s)
            if (r = u[s].name.toUpperCase(),
            a = u[s].abbr.toUpperCase(),
            o = u[s].narrow.toUpperCase(),
            n)
                switch (t) {
                case "N":
                case "NN":
                case "NNN":
                    if (a === e)
                        return u[s];
                    break;
                case "NNNN":
                    if (r === e)
                        return u[s];
                    break;
                case "NNNNN":
                    if (o === e)
                        return u[s];
                    break
                }
            else if (0 <= [r, a, o].indexOf(e))
                return u[s]
    }
    ,
    w.erasConvertYear = function(e, t) {
        var n = e.since <= e.until ? 1 : -1;
        return void 0 === t ? f(e.since).year() : f(e.since).year() + (t - e.offset) * n
    }
    ,
    w.erasAbbrRegex = function(e) {
        return c(this, "_erasAbbrRegex") || an.call(this),
        e ? this._erasAbbrRegex : this._erasRegex
    }
    ,
    w.erasNameRegex = function(e) {
        return c(this, "_erasNameRegex") || an.call(this),
        e ? this._erasNameRegex : this._erasRegex
    }
    ,
    w.erasNarrowRegex = function(e) {
        return c(this, "_erasNarrowRegex") || an.call(this),
        e ? this._erasNarrowRegex : this._erasRegex
    }
    ,
    w.months = function(e, t) {
        return e ? (a(this._months) ? this._months : this._months[(this._months.isFormat || He).test(t) ? "format" : "standalone"])[e.month()] : a(this._months) ? this._months : this._months.standalone
    }
    ,
    w.monthsShort = function(e, t) {
        return e ? (a(this._monthsShort) ? this._monthsShort : this._monthsShort[He.test(t) ? "format" : "standalone"])[e.month()] : a(this._monthsShort) ? this._monthsShort : this._monthsShort.standalone
    }
    ,
    w.monthsParse = function(e, t, n) {
        var s, i;
        if (this._monthsParseExact)
            return function(e, t, n) {
                var s, i, r, e = e.toLocaleLowerCase();
                if (!this._monthsParse)
                    for (this._monthsParse = [],
                    this._longMonthsParse = [],
                    this._shortMonthsParse = [],
                    s = 0; s < 12; ++s)
                        r = l([2e3, s]),
                        this._shortMonthsParse[s] = this.monthsShort(r, "").toLocaleLowerCase(),
                        this._longMonthsParse[s] = this.months(r, "").toLocaleLowerCase();
                return n ? "MMM" === t ? -1 !== (i = S.call(this._shortMonthsParse, e)) ? i : null : -1 !== (i = S.call(this._longMonthsParse, e)) ? i : null : "MMM" === t ? -1 !== (i = S.call(this._shortMonthsParse, e)) || -1 !== (i = S.call(this._longMonthsParse, e)) ? i : null : -1 !== (i = S.call(this._longMonthsParse, e)) || -1 !== (i = S.call(this._shortMonthsParse, e)) ? i : null
            }
            .call(this, e, t, n);
        for (this._monthsParse || (this._monthsParse = [],
        this._longMonthsParse = [],
        this._shortMonthsParse = []),
        s = 0; s < 12; s++) {
            if (i = l([2e3, s]),
            n && !this._longMonthsParse[s] && (this._longMonthsParse[s] = new RegExp("^" + this.months(i, "").replace(".", "") + "$","i"),
            this._shortMonthsParse[s] = new RegExp("^" + this.monthsShort(i, "").replace(".", "") + "$","i")),
            n || this._monthsParse[s] || (i = "^" + this.months(i, "") + "|^" + this.monthsShort(i, ""),
            this._monthsParse[s] = new RegExp(i.replace(".", ""),"i")),
            n && "MMMM" === t && this._longMonthsParse[s].test(e))
                return s;
            if (n && "MMM" === t && this._shortMonthsParse[s].test(e))
                return s;
            if (!n && this._monthsParse[s].test(e))
                return s
        }
    }
    ,
    w.monthsRegex = function(e) {
        return this._monthsParseExact ? (c(this, "_monthsRegex") || Ee.call(this),
        e ? this._monthsStrictRegex : this._monthsRegex) : (c(this, "_monthsRegex") || (this._monthsRegex = Le),
        this._monthsStrictRegex && e ? this._monthsStrictRegex : this._monthsRegex)
    }
    ,
    w.monthsShortRegex = function(e) {
        return this._monthsParseExact ? (c(this, "_monthsRegex") || Ee.call(this),
        e ? this._monthsShortStrictRegex : this._monthsShortRegex) : (c(this, "_monthsShortRegex") || (this._monthsShortRegex = Fe),
        this._monthsShortStrictRegex && e ? this._monthsShortStrictRegex : this._monthsShortRegex)
    }
    ,
    w.week = function(e) {
        return qe(e, this._week.dow, this._week.doy).week
    }
    ,
    w.firstDayOfYear = function() {
        return this._week.doy
    }
    ,
    w.firstDayOfWeek = function() {
        return this._week.dow
    }
    ,
    w.weekdays = function(e, t) {
        return t = a(this._weekdays) ? this._weekdays : this._weekdays[e && !0 !== e && this._weekdays.isFormat.test(t) ? "format" : "standalone"],
        !0 === e ? Be(t, this._week.dow) : e ? t[e.day()] : t
    }
    ,
    w.weekdaysMin = function(e) {
        return !0 === e ? Be(this._weekdaysMin, this._week.dow) : e ? this._weekdaysMin[e.day()] : this._weekdaysMin
    }
    ,
    w.weekdaysShort = function(e) {
        return !0 === e ? Be(this._weekdaysShort, this._week.dow) : e ? this._weekdaysShort[e.day()] : this._weekdaysShort
    }
    ,
    w.weekdaysParse = function(e, t, n) {
        var s, i;
        if (this._weekdaysParseExact)
            return function(e, t, n) {
                var s, i, r, e = e.toLocaleLowerCase();
                if (!this._weekdaysParse)
                    for (this._weekdaysParse = [],
                    this._shortWeekdaysParse = [],
                    this._minWeekdaysParse = [],
                    s = 0; s < 7; ++s)
                        r = l([2e3, 1]).day(s),
                        this._minWeekdaysParse[s] = this.weekdaysMin(r, "").toLocaleLowerCase(),
                        this._shortWeekdaysParse[s] = this.weekdaysShort(r, "").toLocaleLowerCase(),
                        this._weekdaysParse[s] = this.weekdays(r, "").toLocaleLowerCase();
                return n ? "dddd" === t ? -1 !== (i = S.call(this._weekdaysParse, e)) ? i : null : "ddd" === t ? -1 !== (i = S.call(this._shortWeekdaysParse, e)) ? i : null : -1 !== (i = S.call(this._minWeekdaysParse, e)) ? i : null : "dddd" === t ? -1 !== (i = S.call(this._weekdaysParse, e)) || -1 !== (i = S.call(this._shortWeekdaysParse, e)) || -1 !== (i = S.call(this._minWeekdaysParse, e)) ? i : null : "ddd" === t ? -1 !== (i = S.call(this._shortWeekdaysParse, e)) || -1 !== (i = S.call(this._weekdaysParse, e)) || -1 !== (i = S.call(this._minWeekdaysParse, e)) ? i : null : -1 !== (i = S.call(this._minWeekdaysParse, e)) || -1 !== (i = S.call(this._weekdaysParse, e)) || -1 !== (i = S.call(this._shortWeekdaysParse, e)) ? i : null
            }
            .call(this, e, t, n);
        for (this._weekdaysParse || (this._weekdaysParse = [],
        this._minWeekdaysParse = [],
        this._shortWeekdaysParse = [],
        this._fullWeekdaysParse = []),
        s = 0; s < 7; s++) {
            if (i = l([2e3, 1]).day(s),
            n && !this._fullWeekdaysParse[s] && (this._fullWeekdaysParse[s] = new RegExp("^" + this.weekdays(i, "").replace(".", "\\.?") + "$","i"),
            this._shortWeekdaysParse[s] = new RegExp("^" + this.weekdaysShort(i, "").replace(".", "\\.?") + "$","i"),
            this._minWeekdaysParse[s] = new RegExp("^" + this.weekdaysMin(i, "").replace(".", "\\.?") + "$","i")),
            this._weekdaysParse[s] || (i = "^" + this.weekdays(i, "") + "|^" + this.weekdaysShort(i, "") + "|^" + this.weekdaysMin(i, ""),
            this._weekdaysParse[s] = new RegExp(i.replace(".", ""),"i")),
            n && "dddd" === t && this._fullWeekdaysParse[s].test(e))
                return s;
            if (n && "ddd" === t && this._shortWeekdaysParse[s].test(e))
                return s;
            if (n && "dd" === t && this._minWeekdaysParse[s].test(e))
                return s;
            if (!n && this._weekdaysParse[s].test(e))
                return s
        }
    }
    ,
    w.weekdaysRegex = function(e) {
        return this._weekdaysParseExact ? (c(this, "_weekdaysRegex") || nt.call(this),
        e ? this._weekdaysStrictRegex : this._weekdaysRegex) : (c(this, "_weekdaysRegex") || (this._weekdaysRegex = Ke),
        this._weekdaysStrictRegex && e ? this._weekdaysStrictRegex : this._weekdaysRegex)
    }
    ,
    w.weekdaysShortRegex = function(e) {
        return this._weekdaysParseExact ? (c(this, "_weekdaysRegex") || nt.call(this),
        e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex) : (c(this, "_weekdaysShortRegex") || (this._weekdaysShortRegex = et),
        this._weekdaysShortStrictRegex && e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex)
    }
    ,
    w.weekdaysMinRegex = function(e) {
        return this._weekdaysParseExact ? (c(this, "_weekdaysRegex") || nt.call(this),
        e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex) : (c(this, "_weekdaysMinRegex") || (this._weekdaysMinRegex = tt),
        this._weekdaysMinStrictRegex && e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex)
    }
    ,
    w.isPM = function(e) {
        return "p" === (e + "").toLowerCase().charAt(0)
    }
    ,
    w.meridiem = function(e, t, n) {
        return 11 < e ? n ? "pm" : "PM" : n ? "am" : "AM"
    }
    ,
    ct("en", {
        eras: [{
            since: "0001-01-01",
            until: 1 / 0,
            offset: 1,
            name: "Anno Domini",
            narrow: "AD",
            abbr: "AD"
        }, {
            since: "0000-12-31",
            until: -1 / 0,
            offset: 1,
            name: "Before Christ",
            narrow: "BC",
            abbr: "BC"
        }],
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function(e) {
            var t = e % 10;
            return e + (1 === g(e % 100 / 10) ? "th" : 1 == t ? "st" : 2 == t ? "nd" : 3 == t ? "rd" : "th")
        }
    }),
    f.lang = e("moment.lang is deprecated. Use moment.locale instead.", ct),
    f.langData = e("moment.langData is deprecated. Use moment.localeData instead.", mt);
    var _n = Math.abs;
    function yn(e, t, n, s) {
        t = C(t, n);
        return e._milliseconds += s * t._milliseconds,
        e._days += s * t._days,
        e._months += s * t._months,
        e._bubble()
    }
    function gn(e) {
        return e < 0 ? Math.floor(e) : Math.ceil(e)
    }
    function wn(e) {
        return 4800 * e / 146097
    }
    function pn(e) {
        return 146097 * e / 4800
    }
    function kn(e) {
        return function() {
            return this.as(e)
        }
    }
    pe = kn("ms"),
    me = kn("s"),
    Ce = kn("m"),
    we = kn("h"),
    ge = kn("d"),
    Je = kn("w"),
    k = kn("M"),
    _e = kn("Q"),
    ve = kn("y");
    function vn(e) {
        return function() {
            return this.isValid() ? this._data[e] : NaN
        }
    }
    var ye = vn("milliseconds")
      , ke = vn("seconds")
      , Ie = vn("minutes")
      , w = vn("hours")
      , Mn = vn("days")
      , Dn = vn("months")
      , Sn = vn("years");
    var Yn = Math.round
      , On = {
        ss: 44,
        s: 45,
        m: 45,
        h: 22,
        d: 26,
        w: null,
        M: 11
    };
    function bn(e, t, n, s) {
        var i = C(e).abs()
          , r = Yn(i.as("s"))
          , a = Yn(i.as("m"))
          , o = Yn(i.as("h"))
          , u = Yn(i.as("d"))
          , l = Yn(i.as("M"))
          , h = Yn(i.as("w"))
          , i = Yn(i.as("y"))
          , r = (r <= n.ss ? ["s", r] : r < n.s && ["ss", r]) || a <= 1 && ["m"] || a < n.m && ["mm", a] || o <= 1 && ["h"] || o < n.h && ["hh", o] || u <= 1 && ["d"] || u < n.d && ["dd", u];
        return (r = (r = null != n.w ? r || h <= 1 && ["w"] || h < n.w && ["ww", h] : r) || l <= 1 && ["M"] || l < n.M && ["MM", l] || i <= 1 && ["y"] || ["yy", i])[2] = t,
        r[3] = 0 < +e,
        r[4] = s,
        function(e, t, n, s, i) {
            return i.relativeTime(t || 1, !!n, e, s)
        }
        .apply(null, r)
    }
    var xn = Math.abs;
    function Tn(e) {
        return (0 < e) - (e < 0) || +e
    }
    function Nn() {
        if (!this.isValid())
            return this.localeData().invalidDate();
        var e, t, n, s, i, r, a, o = xn(this._milliseconds) / 1e3, u = xn(this._days), l = xn(this._months), h = this.asSeconds();
        return h ? (e = y(o / 60),
        t = y(e / 60),
        o %= 60,
        e %= 60,
        n = y(l / 12),
        l %= 12,
        s = o ? o.toFixed(3).replace(/\.?0+$/, "") : "",
        i = Tn(this._months) !== Tn(h) ? "-" : "",
        r = Tn(this._days) !== Tn(h) ? "-" : "",
        a = Tn(this._milliseconds) !== Tn(h) ? "-" : "",
        (h < 0 ? "-" : "") + "P" + (n ? i + n + "Y" : "") + (l ? i + l + "M" : "") + (u ? r + u + "D" : "") + (t || e || o ? "T" : "") + (t ? a + t + "H" : "") + (e ? a + e + "M" : "") + (o ? a + s + "S" : "")) : "P0D"
    }
    var U = Ct.prototype;
    return U.isValid = function() {
        return this._isValid
    }
    ,
    U.abs = function() {
        var e = this._data;
        return this._milliseconds = _n(this._milliseconds),
        this._days = _n(this._days),
        this._months = _n(this._months),
        e.milliseconds = _n(e.milliseconds),
        e.seconds = _n(e.seconds),
        e.minutes = _n(e.minutes),
        e.hours = _n(e.hours),
        e.months = _n(e.months),
        e.years = _n(e.years),
        this
    }
    ,
    U.add = function(e, t) {
        return yn(this, e, t, 1)
    }
    ,
    U.subtract = function(e, t) {
        return yn(this, e, t, -1)
    }
    ,
    U.as = function(e) {
        if (!this.isValid())
            return NaN;
        var t, n, s = this._milliseconds;
        if ("month" === (e = _(e)) || "quarter" === e || "year" === e)
            switch (t = this._days + s / 864e5,
            n = this._months + wn(t),
            e) {
            case "month":
                return n;
            case "quarter":
                return n / 3;
            case "year":
                return n / 12
            }
        else
            switch (t = this._days + Math.round(pn(this._months)),
            e) {
            case "week":
                return t / 7 + s / 6048e5;
            case "day":
                return t + s / 864e5;
            case "hour":
                return 24 * t + s / 36e5;
            case "minute":
                return 1440 * t + s / 6e4;
            case "second":
                return 86400 * t + s / 1e3;
            case "millisecond":
                return Math.floor(864e5 * t) + s;
            default:
                throw new Error("Unknown unit " + e)
            }
    }
    ,
    U.asMilliseconds = pe,
    U.asSeconds = me,
    U.asMinutes = Ce,
    U.asHours = we,
    U.asDays = ge,
    U.asWeeks = Je,
    U.asMonths = k,
    U.asQuarters = _e,
    U.asYears = ve,
    U.valueOf = function() {
        return this.isValid() ? this._milliseconds + 864e5 * this._days + this._months % 12 * 2592e6 + 31536e6 * g(this._months / 12) : NaN
    }
    ,
    U._bubble = function() {
        var e = this._milliseconds
          , t = this._days
          , n = this._months
          , s = this._data;
        return 0 <= e && 0 <= t && 0 <= n || e <= 0 && t <= 0 && n <= 0 || (e += 864e5 * gn(pn(n) + t),
        n = t = 0),
        s.milliseconds = e % 1e3,
        e = y(e / 1e3),
        s.seconds = e % 60,
        e = y(e / 60),
        s.minutes = e % 60,
        e = y(e / 60),
        s.hours = e % 24,
        t += y(e / 24),
        n += e = y(wn(t)),
        t -= gn(pn(e)),
        e = y(n / 12),
        n %= 12,
        s.days = t,
        s.months = n,
        s.years = e,
        this
    }
    ,
    U.clone = function() {
        return C(this)
    }
    ,
    U.get = function(e) {
        return e = _(e),
        this.isValid() ? this[e + "s"]() : NaN
    }
    ,
    U.milliseconds = ye,
    U.seconds = ke,
    U.minutes = Ie,
    U.hours = w,
    U.days = Mn,
    U.weeks = function() {
        return y(this.days() / 7)
    }
    ,
    U.months = Dn,
    U.years = Sn,
    U.humanize = function(e, t) {
        if (!this.isValid())
            return this.localeData().invalidDate();
        var n = !1
          , s = On;
        return "object" == typeof e && (t = e,
        e = !1),
        "boolean" == typeof e && (n = e),
        "object" == typeof t && (s = Object.assign({}, On, t),
        null != t.s && null == t.ss && (s.ss = t.s - 1)),
        e = this.localeData(),
        t = bn(this, !n, s, e),
        n && (t = e.pastFuture(+this, t)),
        e.postformat(t)
    }
    ,
    U.toISOString = Nn,
    U.toString = Nn,
    U.toJSON = Nn,
    U.locale = Xt,
    U.localeData = Kt,
    U.toIsoString = e("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", Nn),
    U.lang = Xe,
    s("X", 0, 0, "unix"),
    s("x", 0, 0, "valueOf"),
    v("x", De),
    v("X", /[+-]?\d+(\.\d{1,3})?/),
    D("X", function(e, t, n) {
        n._d = new Date(1e3 * parseFloat(e))
    }),
    D("x", function(e, t, n) {
        n._d = new Date(g(e))
    }),
    f.version = "2.29.4",
    H = W,
    f.fn = i,
    f.min = function() {
        return Rt("isBefore", [].slice.call(arguments, 0))
    }
    ,
    f.max = function() {
        return Rt("isAfter", [].slice.call(arguments, 0))
    }
    ,
    f.now = function() {
        return Date.now ? Date.now() : +new Date
    }
    ,
    f.utc = l,
    f.unix = function(e) {
        return W(1e3 * e)
    }
    ,
    f.months = function(e, t) {
        return fn(e, t, "months")
    }
    ,
    f.isDate = V,
    f.locale = ct,
    f.invalid = I,
    f.duration = C,
    f.isMoment = h,
    f.weekdays = function(e, t, n) {
        return mn(e, t, n, "weekdays")
    }
    ,
    f.parseZone = function() {
        return W.apply(null, arguments).parseZone()
    }
    ,
    f.localeData = mt,
    f.isDuration = Ut,
    f.monthsShort = function(e, t) {
        return fn(e, t, "monthsShort")
    }
    ,
    f.weekdaysMin = function(e, t, n) {
        return mn(e, t, n, "weekdaysMin")
    }
    ,
    f.defineLocale = ft,
    f.updateLocale = function(e, t) {
        var n, s;
        return null != t ? (s = ot,
        null != R[e] && null != R[e].parentLocale ? R[e].set(X(R[e]._config, t)) : (t = X(s = null != (n = dt(e)) ? n._config : s, t),
        null == n && (t.abbr = e),
        (s = new K(t)).parentLocale = R[e],
        R[e] = s),
        ct(e)) : null != R[e] && (null != R[e].parentLocale ? (R[e] = R[e].parentLocale,
        e === ct() && ct(e)) : null != R[e] && delete R[e]),
        R[e]
    }
    ,
    f.locales = function() {
        return ee(R)
    }
    ,
    f.weekdaysShort = function(e, t, n) {
        return mn(e, t, n, "weekdaysShort")
    }
    ,
    f.normalizeUnits = _,
    f.relativeTimeRounding = function(e) {
        return void 0 === e ? Yn : "function" == typeof e && (Yn = e,
        !0)
    }
    ,
    f.relativeTimeThreshold = function(e, t) {
        return void 0 !== On[e] && (void 0 === t ? On[e] : (On[e] = t,
        "s" === e && (On.ss = t - 1),
        !0))
    }
    ,
    f.calendarFormat = function(e, t) {
        return (e = e.diff(t, "days", !0)) < -6 ? "sameElse" : e < -1 ? "lastWeek" : e < 0 ? "lastDay" : e < 1 ? "sameDay" : e < 2 ? "nextDay" : e < 7 ? "nextWeek" : "sameElse"
    }
    ,
    f.prototype = i,
    f.HTML5_FMT = {
        DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
        DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
        DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
        DATE: "YYYY-MM-DD",
        TIME: "HH:mm",
        TIME_SECONDS: "HH:mm:ss",
        TIME_MS: "HH:mm:ss.SSS",
        WEEK: "GGGG-[W]WW",
        MONTH: "YYYY-MM"
    },
    f
});
//# sourceMappingURL=moment.min.js.map
/*
 * International Telephone Input v11.0.7
 * https://github.com/jackocnr/intl-tel-input.git
 * Licensed under the MIT license
 */
// wrap in UMD - see https://github.com/umdjs/umd/blob/master/jqueryPluginCommonjs.js
(function(factory) {
    if (typeof define === "function" && define.amd) {
        define(["jquery"], function($) {
            factory($, window, document);
        });
    } else if (typeof module === "object" && module.exports) {
        module.exports = factory(require("jquery"), window, document);
    } else {
        factory(jQuery, window, document);
    }
}
)(function($, window, document, undefined) {
    "use strict";
    // these vars persist through all instances of the plugin
    var pluginName = "intlTelInput"
      , id = 1
      , // give each instance it's own id for namespaced event handling
    defaults = {
        // whether or not to allow the dropdown
        allowDropdown: true,
        // if there is just a dial code in the input: remove it on blur, and re-add it on focus
        autoHideDialCode: true,
        // add a placeholder in the input with an example number for the selected country
        autoPlaceholder: "polite",
        // modify the auto placeholder
        customPlaceholder: null,
        // append menu to a specific element
        dropdownContainer: "",
        // don't display these countries
        excludeCountries: [],
        // format the input value during initialisation and on setNumber
        formatOnDisplay: true,
        // geoIp lookup function
        geoIpLookup: null,
        // initial country
        initialCountry: "",
        // don't insert international dial codes
        nationalMode: false,
        // display only these countries
        onlyCountries: [],
        // number type to use for placeholders
        placeholderNumberType: "MOBILE",
        // the countries at the top of the list. defaults to united states and united kingdom
        preferredCountries: ["iq", "ru", "ua", "ae"],
        // display the country dial code next to the selected flag so it's not part of the typed number
        separateDialCode: false,
        // specify the path to the libphonenumber script to enable validation/formatting
        utilsScript: ""
    }
      , keys = {
        UP: 38,
        DOWN: 40,
        ENTER: 13,
        ESC: 27,
        PLUS: 43,
        A: 65,
        Z: 90,
        SPACE: 32,
        TAB: 9
    }
      , // https://en.wikipedia.org/wiki/List_of_North_American_Numbering_Plan_area_codes#Non-geographic_area_codes
    regionlessNanpNumbers = ["800", "822", "833", "844", "855", "866", "877", "880", "881", "882", "883", "884", "885", "886", "887", "888", "889"];
    // keep track of if the window.load event has fired as impossible to check after the fact
    $(window).on("load", function() {
        // UPDATE: use a public static field so we can fudge it in the tests
        $.fn[pluginName].windowLoaded = true;
    });
    function Plugin(element, options) {
        this.telInput = $(element);
        this.options = $.extend({}, defaults, options);
        // event namespace
        this.ns = "." + pluginName + id++;
        // Chrome, FF, Safari, IE9+
        this.isGoodBrowser = Boolean(element.setSelectionRange);
        this.hadInitialPlaceholder = Boolean($(element).attr("placeholder"));
    }
    Plugin.prototype = {
        _init: function() {
            // if in nationalMode, disable options relating to dial codes
            if (this.options.nationalMode) {
                this.options.autoHideDialCode = false;
            }
            // if separateDialCode then doesn't make sense to A) insert dial code into input (autoHideDialCode), and B) display national numbers (because we're displaying the country dial code next to them)
            if (this.options.separateDialCode) {
                this.options.autoHideDialCode = this.options.nationalMode = false;
            }
            // we cannot just test screen size as some smartphones/website meta tags will report desktop resolutions
            // Note: for some reason jasmine breaks if you put this in the main Plugin function with the rest of these declarations
            // Note: to target Android Mobiles (and not Tablets), we must find "Android" and "Mobile"
            this.isMobile = /Android.+Mobile|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
            if (this.isMobile) {
                // trigger the mobile dropdown css
                $("body").addClass("iti-mobile");
                // on mobile, we want a full screen dropdown, so we must append it to the body
                if (!this.options.dropdownContainer) {
                    this.options.dropdownContainer = "body";
                }
            }
            // we return these deferred objects from the _init() call so they can be watched, and then we resolve them when each specific request returns
            // Note: again, jasmine breaks when I put these in the Plugin function
            this.autoCountryDeferred = new $.Deferred();
            this.utilsScriptDeferred = new $.Deferred();
            // in various situations there could be no country selected initially, but we need to be able to assume this variable exists
            this.selectedCountryData = {};
            // process all the data: onlyCountries, excludeCountries, preferredCountries etc
            this._processCountryData();
            // generate the markup
            this._generateMarkup();
            // set the initial state of the input value and the selected flag
            this._setInitialState();
            // start all of the event listeners: autoHideDialCode, input keydown, selectedFlag click
            this._initListeners();
            // utils script, and auto country
            this._initRequests();
            // return the deferreds
            return [this.autoCountryDeferred, this.utilsScriptDeferred];
        },
        /********************
   *  PRIVATE METHODS
   ********************/
        // prepare all of the country data, including onlyCountries, excludeCountries and preferredCountries options
        _processCountryData: function() {
            // process onlyCountries or excludeCountries array if present
            this._processAllCountries();
            // process the countryCodes map
            this._processCountryCodes();
            // process the preferredCountries
            this._processPreferredCountries();
        },
        // add a country code to this.countryCodes
        _addCountryCode: function(iso2, dialCode, priority) {
            if (!(dialCode in this.countryCodes)) {
                this.countryCodes[dialCode] = [];
            }
            var index = priority || 0;
            this.countryCodes[dialCode][index] = iso2;
        },
        // filter the given countries using the process function
        _filterCountries: function(countryArray, processFunc) {
            var i;
            // standardise case
            for (i = 0; i < countryArray.length; i++) {
                countryArray[i] = countryArray[i].toLowerCase();
            }
            // build instance country array
            this.countries = [];
            for (i = 0; i < allCountries.length; i++) {
                if (processFunc($.inArray(allCountries[i].iso2, countryArray))) {
                    this.countries.push(allCountries[i]);
                }
            }
        },
        // process onlyCountries or excludeCountries array if present
        _processAllCountries: function() {
            if (this.options.onlyCountries.length) {
                // process onlyCountries option
                this._filterCountries(this.options.onlyCountries, function(arrayPos) {
                    // if country is in array
                    return arrayPos > -1;
                });
            } else if (this.options.excludeCountries.length) {
                // process excludeCountries option
                this._filterCountries(this.options.excludeCountries, function(arrayPos) {
                    // if country is not in array
                    return arrayPos == -1;
                });
            } else {
                this.countries = allCountries;
            }
        },
        // process the countryCodes map
        _processCountryCodes: function() {
            this.countryCodes = {};
            for (var i = 0; i < this.countries.length; i++) {
                var c = this.countries[i];
                this._addCountryCode(c.iso2, c.dialCode, c.priority);
                // area codes
                if (c.areaCodes) {
                    for (var j = 0; j < c.areaCodes.length; j++) {
                        // full dial code is country code + dial code
                        this._addCountryCode(c.iso2, c.dialCode + c.areaCodes[j]);
                    }
                }
            }
        },
        // process preferred countries - iterate through the preferences, fetching the country data for each one
        _processPreferredCountries: function() {
            this.preferredCountries = [];
            for (var i = 0; i < this.options.preferredCountries.length; i++) {
                var countryCode = this.options.preferredCountries[i].toLowerCase()
                  , countryData = this._getCountryData(countryCode, false, true);
                if (countryData) {
                    this.preferredCountries.push(countryData);
                }
            }
        },
        // generate all of the markup for the plugin: the selected flag overlay, and the dropdown
        _generateMarkup: function() {
            // prevent autocomplete as there's no safe, cross-browser event we can react to, so it can easily put the plugin in an inconsistent state e.g. the wrong flag selected for the autocompleted number, which on submit could mean the wrong number is saved (esp in nationalMode)
            this.telInput.attr("autocomplete", "off");
            // containers (mostly for positioning)
            var parentClass = "intl-tel-input";
            if (this.options.allowDropdown) {
                parentClass += " allow-dropdown";
            }
            if (this.options.separateDialCode) {
                parentClass += " separate-dial-code";
            }
            this.telInput.wrap($("<div>", {
                "class": parentClass
            }));
            this.flagsContainer = $("<div>", {
                "class": "flag-container"
            }).insertBefore(this.telInput);
            // currently selected flag (displayed to left of input)
            var selectedFlag = $("<div>", {
                "class": "selected-flag"
            });
            selectedFlag.appendTo(this.flagsContainer);
            this.selectedFlagInner = $("<div>", {
                "class": "iti-flag"
            }).appendTo(selectedFlag);
            if (this.options.separateDialCode) {
                this.selectedDialCode = $("<div>", {
                    "class": "selected-dial-code"
                }).appendTo(selectedFlag);
            }
            if (this.options.allowDropdown) {
                // make element focusable and tab naviagable
                selectedFlag.attr("tabindex", "0");
                // CSS triangle
                $("<div>", {
                    "class": "iti-arrow"
                }).appendTo(selectedFlag);
                // country dropdown: preferred countries, then divider, then all countries
                this.countryList = $("<ul>", {
                    "class": "country-list hide"
                });
                if (this.preferredCountries.length) {
                    this._appendListItems(this.preferredCountries, "preferred");
                    $("<li>", {
                        "class": "divider"
                    }).appendTo(this.countryList);
                }
                this._appendListItems(this.countries, "");
                // this is useful in lots of places
                this.countryListItems = this.countryList.children(".country");
                // create dropdownContainer markup
                if (this.options.dropdownContainer) {
                    this.dropdown = $("<div>", {
                        "class": "intl-tel-input iti-container"
                    }).append(this.countryList);
                } else {
                    this.countryList.appendTo(this.flagsContainer);
                }
            } else {
                // a little hack so we don't break anything
                this.countryListItems = $();
            }
        },
        // add a country <li> to the countryList <ul> container
        _appendListItems: function(countries, className) {
            // we create so many DOM elements, it is faster to build a temp string
            // and then add everything to the DOM in one go at the end
            var tmp = "";
            // for each country
            for (var i = 0; i < countries.length; i++) {
                var c = countries[i];
                // open the list item
                tmp += "<li class='country " + className + "' data-dial-code='" + c.dialCode + "' data-country-code='" + c.iso2 + "'>";
                // add the flag
                tmp += "<div class='flag-box'><div class='iti-flag " + c.iso2 + "'></div></div>";
                // and the country name and dial code
                tmp += "<span class='country-name'>" + c.name + "</span>";
                tmp += "<span class='dial-code'>+" + c.dialCode + "</span>";
                // close the list item
                tmp += "</li>";
            }
            this.countryList.append(tmp);
        },
        // set the initial state of the input value and the selected flag by:
        // 1. extracting a dial code from the given number
        // 2. using explicit initialCountry
        // 3. picking the first preferred country
        // 4. picking the first country
        _setInitialState: function() {
            var val = this.telInput.val();
            // if we already have a dial code, and it's not a regionlessNanp we can go ahead and set the flag, else fall back to default
            if (this._getDialCode(val) && !this._isRegionlessNanp(val)) {
                this._updateFlagFromNumber(val);
            } else if (this.options.initialCountry !== "auto") {
                // see if we should select a flag
                if (this.options.initialCountry) {
                    this._setFlag(this.options.initialCountry.toLowerCase());
                } else {
                    // no dial code and no initialCountry, so default to first in list
                    this.defaultCountry = this.preferredCountries.length ? this.preferredCountries[0].iso2 : this.countries[0].iso2;
                    if (!val) {
                        this._setFlag(this.defaultCountry);
                    }
                }
                // if empty and no nationalMode and no autoHideDialCode then insert the default dial code
                if (!val && !this.options.nationalMode && !this.options.autoHideDialCode && !this.options.separateDialCode) {
                    this.telInput.val("+" + this.selectedCountryData.dialCode);
                }
            }
            // NOTE: if initialCountry is set to auto, that will be handled separately
            // format
            if (val) {
                // this wont be run after _updateDialCode as that's only called if no val
                this._updateValFromNumber(val);
            }
        },
        // initialise the main event listeners: input keyup, and click selected flag
        _initListeners: function() {
            this._initKeyListeners();
            if (this.options.autoHideDialCode) {
                this._initFocusListeners();
            }
            if (this.options.allowDropdown) {
                this._initDropdownListeners();
            }
        },
        // initialise the dropdown listeners
        _initDropdownListeners: function() {
            var that = this;
            // hack for input nested inside label: clicking the selected-flag to open the dropdown would then automatically trigger a 2nd click on the input which would close it again
            var label = this.telInput.closest("label");
            if (label.length) {
                label.on("click" + this.ns, function(e) {
                    // if the dropdown is closed, then focus the input, else ignore the click
                    if (that.countryList.hasClass("hide")) {
                        that.telInput.focus();
                    } else {
                        e.preventDefault();
                    }
                });
            }
            // toggle country dropdown on click
            var selectedFlag = this.selectedFlagInner.parent();
            selectedFlag.on("click" + this.ns, function(e) {
                // only intercept this event if we're opening the dropdown
                // else let it bubble up to the top ("click-off-to-close" listener)
                // we cannot just stopPropagation as it may be needed to close another instance
                if (that.countryList.hasClass("hide") && !that.telInput.prop("disabled") && !that.telInput.prop("readonly")) {
                    that._showDropdown();
                }
            });
            // open dropdown list if currently focused
            this.flagsContainer.on("keydown" + that.ns, function(e) {
                var isDropdownHidden = that.countryList.hasClass("hide");
                if (isDropdownHidden && (e.which == keys.UP || e.which == keys.DOWN || e.which == keys.SPACE || e.which == keys.ENTER)) {
                    // prevent form from being submitted if "ENTER" was pressed
                    e.preventDefault();
                    // prevent event from being handled again by document
                    e.stopPropagation();
                    that._showDropdown();
                }
                // allow navigation from dropdown to input on TAB
                if (e.which == keys.TAB) {
                    that._closeDropdown();
                }
            });
        },
        // init many requests: utils script / geo ip lookup
        _initRequests: function() {
            var that = this;
            // if the user has specified the path to the utils script, fetch it on window.load, else resolve
            if (this.options.utilsScript) {
                // if the plugin is being initialised after the window.load event has already been fired
                if ($.fn[pluginName].windowLoaded) {
                    $.fn[pluginName].loadUtils(this.options.utilsScript, this.utilsScriptDeferred);
                } else {
                    // wait until the load event so we don't block any other requests e.g. the flags image
                    $(window).on("load", function() {
                        $.fn[pluginName].loadUtils(that.options.utilsScript, that.utilsScriptDeferred);
                    });
                }
            } else {
                this.utilsScriptDeferred.resolve();
            }
            if (this.options.initialCountry === "auto") {
                this._loadAutoCountry();
            } else {
                this.autoCountryDeferred.resolve();
            }
        },
        // perform the geo ip lookup
        _loadAutoCountry: function() {
            var that = this;
            // 3 options:
            // 1) already loaded (we're done)
            // 2) not already started loading (start)
            // 3) already started loading (do nothing - just wait for loading callback to fire)
            if ($.fn[pluginName].autoCountry) {
                this.handleAutoCountry();
            } else if (!$.fn[pluginName].startedLoadingAutoCountry) {
                // don't do this twice!
                $.fn[pluginName].startedLoadingAutoCountry = true;
                if (typeof this.options.geoIpLookup === "function") {
                    this.options.geoIpLookup(function(countryCode) {
                        $.fn[pluginName].autoCountry = countryCode.toLowerCase();
                        // tell all instances the auto country is ready
                        // TODO: this should just be the current instances
                        // UPDATE: use setTimeout in case their geoIpLookup function calls this callback straight away (e.g. if they have already done the geo ip lookup somewhere else). Using setTimeout means that the current thread of execution will finish before executing this, which allows the plugin to finish initialising.
                        setTimeout(function() {
                            $(".intl-tel-input input").intlTelInput("handleAutoCountry");
                        });
                    });
                }
            }
        },
        // initialize any key listeners
        _initKeyListeners: function() {
            var that = this;
            // update flag on keyup
            // (keep this listener separate otherwise the setTimeout breaks all the tests)
            this.telInput.on("keyup" + this.ns, function() {
                if (that._updateFlagFromNumber(that.telInput.val())) {
                    that._triggerCountryChange();
                }
            });
            // update flag on cut/paste events (now supported in all major browsers)
            this.telInput.on("cut" + this.ns + " paste" + this.ns, function() {
                // hack because "paste" event is fired before input is updated
                setTimeout(function() {
                    if (that._updateFlagFromNumber(that.telInput.val())) {
                        that._triggerCountryChange();
                    }
                });
            });
        },
        // adhere to the input's maxlength attr
        _cap: function(number) {
            var max = this.telInput.attr("maxlength");
            return max && number.length > max ? number.substr(0, max) : number;
        },
        // listen for mousedown, focus and blur
        _initFocusListeners: function() {
            var that = this;
            // mousedown decides where the cursor goes, so if we're focusing we must preventDefault as we'll be inserting the dial code, and we want the cursor to be at the end no matter where they click
            this.telInput.on("mousedown" + this.ns, function(e) {
                if (!that.telInput.is(":focus") && !that.telInput.val()) {
                    e.preventDefault();
                    // but this also cancels the focus, so we must trigger that manually
                    that.telInput.focus();
                }
            });
            // on focus: if empty, insert the dial code for the currently selected flag
            this.telInput.on("focus" + this.ns, function(e) {
                if (!that.telInput.val() && !that.telInput.prop("readonly") && that.selectedCountryData.dialCode) {
                    // insert the dial code
                    that.telInput.val("+" + that.selectedCountryData.dialCode);
                    // after auto-inserting a dial code, if the first key they hit is '+' then assume they are entering a new number, so remove the dial code. use keypress instead of keydown because keydown gets triggered for the shift key (required to hit the + key), and instead of keyup because that shows the new '+' before removing the old one
                    that.telInput.one("keypress.plus" + that.ns, function(e) {
                        if (e.which == keys.PLUS) {
                            that.telInput.val("");
                        }
                    });
                    // after tabbing in, make sure the cursor is at the end we must use setTimeout to get outside of the focus handler as it seems the selection happens after that
                    setTimeout(function() {
                        var input = that.telInput[0];
                        if (that.isGoodBrowser) {
                            var len = that.telInput.val().length;
                            input.setSelectionRange(len, len);
                        }
                    });
                }
            });
            // on blur or form submit: if just a dial code then remove it
            var form = this.telInput.prop("form");
            if (form) {
                $(form).on("submit" + this.ns, function() {
                    that._removeEmptyDialCode();
                });
            }
            this.telInput.on("blur" + this.ns, function() {
                that._removeEmptyDialCode();
            });
        },
        _removeEmptyDialCode: function() {
            var value = this.telInput.val()
              , startsPlus = value.charAt(0) == "+";
            if (startsPlus) {
                var numeric = this._getNumeric(value);
                // if just a plus, or if just a dial code
                if (!numeric || this.selectedCountryData.dialCode == numeric) {
                    this.telInput.val("");
                }
            }
            // remove the keypress listener we added on focus
            this.telInput.off("keypress.plus" + this.ns);
        },
        // extract the numeric digits from the given string
        _getNumeric: function(s) {
            return s.replace(/\D/g, "");
        },
        // show the dropdown
        _showDropdown: function() {
            this._setDropdownPosition();
            // update highlighting and scroll to active list item
            var activeListItem = this.countryList.children(".active");
            if (activeListItem.length) {
                this._highlightListItem(activeListItem);
                this._scrollTo(activeListItem);
            }
            // bind all the dropdown-related listeners: mouseover, click, click-off, keydown
            this._bindDropdownListeners();
            // update the arrow
            this.selectedFlagInner.children(".iti-arrow").addClass("up");
        },
        // decide where to position dropdown (depends on position within viewport, and scroll)
        _setDropdownPosition: function() {
            var that = this;
            if (this.options.dropdownContainer) {
                this.dropdown.appendTo(this.options.dropdownContainer);
            }
            // show the menu and grab the dropdown height
            this.dropdownHeight = this.countryList.removeClass("hide").outerHeight();
            if (!this.isMobile) {
                var pos = this.telInput.offset()
                  , inputTop = pos.top
                  , windowTop = $(window).scrollTop()
                  , // dropdownFitsBelow = (dropdownBottom < windowBottom)
                dropdownFitsBelow = inputTop + this.telInput.outerHeight() + this.dropdownHeight < windowTop + $(window).height()
                  , dropdownFitsAbove = inputTop - this.dropdownHeight > windowTop;
                // by default, the dropdown will be below the input. If we want to position it above the input, we add the dropup class.
                this.countryList.toggleClass("dropup", !dropdownFitsBelow && dropdownFitsAbove);
                // if dropdownContainer is enabled, calculate postion
                if (this.options.dropdownContainer) {
                    // by default the dropdown will be directly over the input because it's not in the flow. If we want to position it below, we need to add some extra top value.
                    var extraTop = !dropdownFitsBelow && dropdownFitsAbove ? 0 : this.telInput.innerHeight();
                    // calculate placement
                    this.dropdown.css({
                        top: inputTop + extraTop,
                        left: pos.left
                    });
                    // close menu on window scroll
                    $(window).on("scroll" + this.ns, function() {
                        that._closeDropdown();
                    });
                }
            }
        },
        // we only bind dropdown listeners when the dropdown is open
        _bindDropdownListeners: function() {
            var that = this;
            // when mouse over a list item, just highlight that one
            // we add the class "highlight", so if they hit "enter" we know which one to select
            this.countryList.on("mouseover" + this.ns, ".country", function(e) {
                that._highlightListItem($(this));
            });
            // listen for country selection
            this.countryList.on("click" + this.ns, ".country", function(e) {
                that._selectListItem($(this));
            });
            // click off to close
            // (except when this initial opening click is bubbling up)
            // we cannot just stopPropagation as it may be needed to close another instance
            var isOpening = true;
            $("html").on("click" + this.ns, function(e) {
                if (!isOpening) {
                    that._closeDropdown();
                }
                isOpening = false;
            });
            // listen for up/down scrolling, enter to select, or letters to jump to country name.
            // use keydown as keypress doesn't fire for non-char keys and we want to catch if they
            // just hit down and hold it to scroll down (no keyup event).
            // listen on the document because that's where key events are triggered if no input has focus
            var query = ""
              , queryTimer = null;
            $(document).on("keydown" + this.ns, function(e) {
                // prevent down key from scrolling the whole page,
                // and enter key from submitting a form etc
                e.preventDefault();
                if (e.which == keys.UP || e.which == keys.DOWN) {
                    // up and down to navigate
                    that._handleUpDownKey(e.which);
                } else if (e.which == keys.ENTER) {
                    // enter to select
                    that._handleEnterKey();
                } else if (e.which == keys.ESC) {
                    // esc to close
                    that._closeDropdown();
                } else if (e.which >= keys.A && e.which <= keys.Z || e.which == keys.SPACE) {
                    // upper case letters (note: keyup/keydown only return upper case letters)
                    // jump to countries that start with the query string
                    if (queryTimer) {
                        clearTimeout(queryTimer);
                    }
                    query += String.fromCharCode(e.which);
                    that._searchForCountry(query);
                    // if the timer hits 1 second, reset the query
                    queryTimer = setTimeout(function() {
                        query = "";
                    }, 1e3);
                }
            });
        },
        // highlight the next/prev item in the list (and ensure it is visible)
        _handleUpDownKey: function(key) {
            var current = this.countryList.children(".highlight").first();
            var next = key == keys.UP ? current.prev() : current.next();
            if (next.length) {
                // skip the divider
                if (next.hasClass("divider")) {
                    next = key == keys.UP ? next.prev() : next.next();
                }
                this._highlightListItem(next);
                this._scrollTo(next);
            }
        },
        // select the currently highlighted item
        _handleEnterKey: function() {
            var currentCountry = this.countryList.children(".highlight").first();
            if (currentCountry.length) {
                this._selectListItem(currentCountry);
            }
        },
        // find the first list item whose name starts with the query string
        _searchForCountry: function(query) {
            for (var i = 0; i < this.countries.length; i++) {
                if (this._startsWith(this.countries[i].name, query)) {
                    var listItem = this.countryList.children("[data-country-code=" + this.countries[i].iso2 + "]").not(".preferred");
                    // update highlighting and scroll
                    this._highlightListItem(listItem);
                    this._scrollTo(listItem, true);
                    break;
                }
            }
        },
        // check if (uppercase) string a starts with string b
        _startsWith: function(a, b) {
            return a.substr(0, b.length).toUpperCase() == b;
        },
        // update the input's value to the given val (format first if possible)
        // NOTE: this is called from _setInitialState, handleUtils and setNumber
        _updateValFromNumber: function(number) {
            if (this.options.formatOnDisplay && window.intlTelInputUtils && this.selectedCountryData) {
                var format = !this.options.separateDialCode && (this.options.nationalMode || number.charAt(0) != "+") ? intlTelInputUtils.numberFormat.NATIONAL : intlTelInputUtils.numberFormat.INTERNATIONAL;
                number = intlTelInputUtils.formatNumber(number, this.selectedCountryData.iso2, format);
            }
            number = this._beforeSetNumber(number);
            this.telInput.val(number);
        },
        // check if need to select a new flag based on the given number
        // Note: called from _setInitialState, keyup handler, setNumber
        _updateFlagFromNumber: function(number) {
            // if we're in nationalMode and we already have US/Canada selected, make sure the number starts with a +1 so _getDialCode will be able to extract the area code
            // update: if we dont yet have selectedCountryData, but we're here (trying to update the flag from the number), that means we're initialising the plugin with a number that already has a dial code, so fine to ignore this bit
            if (number && this.options.nationalMode && this.selectedCountryData.dialCode == "1" && number.charAt(0) != "+") {
                if (number.charAt(0) != "1") {
                    number = "1" + number;
                }
                number = "+" + number;
            }
            // try and extract valid dial code from input
            var dialCode = this._getDialCode(number)
              , countryCode = null
              , numeric = this._getNumeric(number);
            if (dialCode) {
                // check if one of the matching countries is already selected
                var countryCodes = this.countryCodes[this._getNumeric(dialCode)]
                  , alreadySelected = $.inArray(this.selectedCountryData.iso2, countryCodes) > -1
                  , // check if the given number contains a NANP area code i.e. the only dialCode that could be extracted was +1 (instead of say +1204) and the actual number's length is >=4
                isNanpAreaCode = dialCode == "+1" && numeric.length >= 4
                  , nanpSelected = this.selectedCountryData.dialCode == "1";
                // only update the flag if:
                // A) NOT (we currently have a NANP flag selected, and the number is a regionlessNanp)
                // AND
                // B) either a matching country is not already selected OR the number contains a NANP area code (ensure the flag is set to the first matching country)
                if (!(nanpSelected && this._isRegionlessNanp(numeric)) && (!alreadySelected || isNanpAreaCode)) {
                    // if using onlyCountries option, countryCodes[0] may be empty, so we must find the first non-empty index
                    for (var j = 0; j < countryCodes.length; j++) {
                        if (countryCodes[j]) {
                            countryCode = countryCodes[j];
                            break;
                        }
                    }
                }
            } else if (number.charAt(0) == "+" && numeric.length) {
                // invalid dial code, so empty
                // Note: use getNumeric here because the number has not been formatted yet, so could contain bad chars
                countryCode = "";
            } else if (!number || number == "+") {
                // empty, or just a plus, so default
                countryCode = this.defaultCountry;
            }
            if (countryCode !== null) {
                return this._setFlag(countryCode);
            }
            return false;
        },
        // check if the given number is a regionless NANP number (expects the number to contain an international dial code)
        _isRegionlessNanp: function(number) {
            var numeric = this._getNumeric(number);
            if (numeric.charAt(0) == "1") {
                var areaCode = numeric.substr(1, 3);
                return $.inArray(areaCode, regionlessNanpNumbers) > -1;
            }
            return false;
        },
        // remove highlighting from other list items and highlight the given item
        _highlightListItem: function(listItem) {
            this.countryListItems.removeClass("highlight");
            listItem.addClass("highlight");
        },
        // find the country data for the given country code
        // the ignoreOnlyCountriesOption is only used during init() while parsing the onlyCountries array
        _getCountryData: function(countryCode, ignoreOnlyCountriesOption, allowFail) {
            var countryList = ignoreOnlyCountriesOption ? allCountries : this.countries;
            for (var i = 0; i < countryList.length; i++) {
                if (countryList[i].iso2 == countryCode) {
                    return countryList[i];
                }
            }
            if (allowFail) {
                return null;
            } else {
                throw new Error("No country data for '" + countryCode + "'");
            }
        },
        // select the given flag, update the placeholder and the active list item
        // Note: called from _setInitialState, _updateFlagFromNumber, _selectListItem, setCountry
        _setFlag: function(countryCode) {
            var prevCountry = this.selectedCountryData.iso2 ? this.selectedCountryData : {};
            // do this first as it will throw an error and stop if countryCode is invalid
            this.selectedCountryData = countryCode ? this._getCountryData(countryCode, false, false) : {};
            // update the defaultCountry - we only need the iso2 from now on, so just store that
            if (this.selectedCountryData.iso2) {
                this.defaultCountry = this.selectedCountryData.iso2;
            }
            this.selectedFlagInner.attr("class", "iti-flag " + countryCode);
            // update the selected country's title attribute
            var title = countryCode ? this.selectedCountryData.name + ": +" + this.selectedCountryData.dialCode : "Unknown";
            this.selectedFlagInner.parent().attr("title", title);
            if (this.options.separateDialCode) {
                var dialCode = this.selectedCountryData.dialCode ? "+" + this.selectedCountryData.dialCode : ""
                  , parent = this.telInput.parent();
                if (prevCountry.dialCode) {
                    parent.removeClass("iti-sdc-" + (prevCountry.dialCode.length + 1));
                }
                if (dialCode) {
                    parent.addClass("iti-sdc-" + dialCode.length);
                }
                this.selectedDialCode.text(dialCode);
            }
            // and the input's placeholder
            this._updatePlaceholder();
            // update the active list item
            this.countryListItems.removeClass("active");
            if (countryCode) {
                this.countryListItems.find(".iti-flag." + countryCode).first().closest(".country").addClass("active");
            }
            // return if the flag has changed or not
            return prevCountry.iso2 !== countryCode;
        },
        // update the input placeholder to an example number from the currently selected country
        _updatePlaceholder: function() {
            var shouldSetPlaceholder = this.options.autoPlaceholder === "aggressive" || !this.hadInitialPlaceholder && (this.options.autoPlaceholder === true || this.options.autoPlaceholder === "polite");
            if (window.intlTelInputUtils && shouldSetPlaceholder) {
                var numberType = intlTelInputUtils.numberType[this.options.placeholderNumberType]
                  , placeholder = this.selectedCountryData.iso2 ? intlTelInputUtils.getExampleNumber(this.selectedCountryData.iso2, this.options.nationalMode, numberType) : "";
                placeholder = this._beforeSetNumber(placeholder);
                if (typeof this.options.customPlaceholder === "function") {
                    placeholder = this.options.customPlaceholder(placeholder, this.selectedCountryData);
                }
                this.telInput.attr("placeholder", placeholder);
            }
        },
        // called when the user selects a list item from the dropdown
        _selectListItem: function(listItem) {
            // update selected flag and active list item
            var flagChanged = this._setFlag(listItem.attr("data-country-code"));
            this._closeDropdown();
            this._updateDialCode(listItem.attr("data-dial-code"), true);
            // focus the input
            this.telInput.focus();
            // put cursor at end - this fix is required for FF and IE11 (with nationalMode=false i.e. auto inserting dial code), who try to put the cursor at the beginning the first time
            if (this.isGoodBrowser) {
                var len = this.telInput.val().length;
                this.telInput[0].setSelectionRange(len, len);
            }
            if (flagChanged) {
                this._triggerCountryChange();
            }
        },
        // close the dropdown and unbind any listeners
        _closeDropdown: function() {
            this.countryList.addClass("hide");
            // update the arrow
            this.selectedFlagInner.children(".iti-arrow").removeClass("up");
            // unbind key events
            $(document).off(this.ns);
            // unbind click-off-to-close
            $("html").off(this.ns);
            // unbind hover and click listeners
            this.countryList.off(this.ns);
            // remove menu from container
            if (this.options.dropdownContainer) {
                if (!this.isMobile) {
                    $(window).off("scroll" + this.ns);
                }
                this.dropdown.detach();
            }
        },
        // check if an element is visible within it's container, else scroll until it is
        _scrollTo: function(element, middle) {
            var container = this.countryList
              , containerHeight = container.height()
              , containerTop = container.offset().top
              , containerBottom = containerTop + containerHeight
              , elementHeight = element.outerHeight()
              , elementTop = element.offset().top
              , elementBottom = elementTop + elementHeight
              , newScrollTop = elementTop - containerTop + container.scrollTop()
              , middleOffset = containerHeight / 2 - elementHeight / 2;
            if (elementTop < containerTop) {
                // scroll up
                if (middle) {
                    newScrollTop -= middleOffset;
                }
                container.scrollTop(newScrollTop);
            } else if (elementBottom > containerBottom) {
                // scroll down
                if (middle) {
                    newScrollTop += middleOffset;
                }
                var heightDifference = containerHeight - elementHeight;
                container.scrollTop(newScrollTop - heightDifference);
            }
        },
        // replace any existing dial code with the new one
        // Note: called from _selectListItem and setCountry
        _updateDialCode: function(newDialCode, hasSelectedListItem) {
            var inputVal = this.telInput.val(), newNumber;
            // save having to pass this every time
            newDialCode = "+" + newDialCode;
            if (inputVal.charAt(0) == "+") {
                // there's a plus so we're dealing with a replacement (doesn't matter if nationalMode or not)
                var prevDialCode = this._getDialCode(inputVal);
                if (prevDialCode) {
                    // current number contains a valid dial code, so replace it
                    newNumber = inputVal.replace(prevDialCode, newDialCode);
                } else {
                    // current number contains an invalid dial code, so ditch it
                    // (no way to determine where the invalid dial code ends and the rest of the number begins)
                    newNumber = newDialCode;
                }
            } else if (this.options.nationalMode || this.options.separateDialCode) {
                // don't do anything
                return;
            } else {
                // nationalMode is disabled
                if (inputVal) {
                    // there is an existing value with no dial code: prefix the new dial code
                    newNumber = newDialCode + inputVal;
                } else if (hasSelectedListItem || !this.options.autoHideDialCode) {
                    // no existing value and either they've just selected a list item, or autoHideDialCode is disabled: insert new dial code
                    newNumber = newDialCode;
                } else {
                    return;
                }
            }
            this.telInput.val(newNumber);
        },
        // try and extract a valid international dial code from a full telephone number
        // Note: returns the raw string inc plus character and any whitespace/dots etc
        _getDialCode: function(number) {
            var dialCode = "";
            // only interested in international numbers (starting with a plus)
            if (number.charAt(0) == "+") {
                var numericChars = "";
                // iterate over chars
                for (var i = 0; i < number.length; i++) {
                    var c = number.charAt(i);
                    // if char is number
                    if ($.isNumeric(c)) {
                        numericChars += c;
                        // if current numericChars make a valid dial code
                        if (this.countryCodes[numericChars]) {
                            // store the actual raw string (useful for matching later)
                            dialCode = number.substr(0, i + 1);
                        }
                        // longest dial code is 4 chars
                        if (numericChars.length == 4) {
                            break;
                        }
                    }
                }
            }
            return dialCode;
        },
        // get the input val, adding the dial code if separateDialCode is enabled
        _getFullNumber: function() {
            var val = $.trim(this.telInput.val()), dialCode = this.selectedCountryData.dialCode, prefix, numericVal = this._getNumeric(val), // normalized means ensure starts with a 1, so we can match against the full dial code
            normalizedVal = numericVal.charAt(0) == "1" ? numericVal : "1" + numericVal;
            if (this.options.separateDialCode) {
                prefix = "+" + dialCode;
            } else if (val.charAt(0) != "+" && val.charAt(0) != "1" && dialCode && dialCode.charAt(0) == "1" && dialCode.length == 4 && dialCode != normalizedVal.substr(0, 4)) {
                // if the user has entered a national NANP number, then ensure it includes the full dial code / area code
                prefix = dialCode.substr(1);
            } else {
                prefix = "";
            }
            return prefix + val;
        },
        // remove the dial code if separateDialCode is enabled
        _beforeSetNumber: function(number) {
            if (this.options.separateDialCode) {
                var dialCode = this._getDialCode(number);
                if (dialCode) {
                    // US dialCode is "+1", which is what we want
                    // CA dialCode is "+1 123", which is wrong - should be "+1" (as it has multiple area codes)
                    // AS dialCode is "+1 684", which is what we want
                    // Solution: if the country has area codes, then revert to just the dial code
                    if (this.selectedCountryData.areaCodes !== null) {
                        dialCode = "+" + this.selectedCountryData.dialCode;
                    }
                    // a lot of numbers will have a space separating the dial code and the main number, and some NANP numbers will have a hyphen e.g. +1 684-733-1234 - in both cases we want to get rid of it
                    // NOTE: don't just trim all non-numerics as may want to preserve an open parenthesis etc
                    var start = number[dialCode.length] === " " || number[dialCode.length] === "-" ? dialCode.length + 1 : dialCode.length;
                    number = number.substr(start);
                }
            }
            return this._cap(number);
        },
        // trigger the 'countrychange' event
        _triggerCountryChange: function() {
            this.telInput.trigger("countrychange", this.selectedCountryData);
        },
        /**************************
   *  SECRET PUBLIC METHODS
   **************************/
        // this is called when the geoip call returns
        handleAutoCountry: function() {
            if (this.options.initialCountry === "auto") {
                // we must set this even if there is an initial val in the input: in case the initial val is invalid and they delete it - they should see their auto country
                this.defaultCountry = $.fn[pluginName].autoCountry;
                // if there's no initial value in the input, then update the flag
                if (!this.telInput.val()) {
                    this.setCountry(this.defaultCountry);
                }
                this.autoCountryDeferred.resolve();
            }
        },
        // this is called when the utils request completes
        handleUtils: function() {
            // if the request was successful
            if (window.intlTelInputUtils) {
                // if there's an initial value in the input, then format it
                if (this.telInput.val()) {
                    this._updateValFromNumber(this.telInput.val());
                }
                this._updatePlaceholder();
            }
            this.utilsScriptDeferred.resolve();
        },
        /********************
   *  PUBLIC METHODS
   ********************/
        // remove plugin
        destroy: function() {
            if (this.allowDropdown) {
                // make sure the dropdown is closed (and unbind listeners)
                this._closeDropdown();
                // click event to open dropdown
                this.selectedFlagInner.parent().off(this.ns);
                // label click hack
                this.telInput.closest("label").off(this.ns);
            }
            // unbind submit event handler on form
            if (this.options.autoHideDialCode) {
                var form = this.telInput.prop("form");
                if (form) {
                    $(form).off(this.ns);
                }
            }
            // unbind all events: key events, and focus/blur events if autoHideDialCode=true
            this.telInput.off(this.ns);
            // remove markup (but leave the original input)
            var container = this.telInput.parent();
            container.before(this.telInput).remove();
        },
        // get the extension from the current number
        getExtension: function() {
            if (window.intlTelInputUtils) {
                return intlTelInputUtils.getExtension(this._getFullNumber(), this.selectedCountryData.iso2);
            }
            return "";
        },
        // format the number to the given format
        getNumber: function(format) {
            if (window.intlTelInputUtils) {
                return intlTelInputUtils.formatNumber(this._getFullNumber(), this.selectedCountryData.iso2, format);
            }
            return "";
        },
        // get the type of the entered number e.g. landline/mobile
        getNumberType: function() {
            if (window.intlTelInputUtils) {
                return intlTelInputUtils.getNumberType(this._getFullNumber(), this.selectedCountryData.iso2);
            }
            return -99;
        },
        // get the country data for the currently selected flag
        getSelectedCountryData: function() {
            return this.selectedCountryData;
        },
        // get the validation error
        getValidationError: function() {
            if (window.intlTelInputUtils) {
                return intlTelInputUtils.getValidationError(this._getFullNumber(), this.selectedCountryData.iso2);
            }
            return -99;
        },
        // validate the input val - assumes the global function isValidNumber (from utilsScript)
        isValidNumber: function() {
            var val = $.trim(this._getFullNumber())
              , countryCode = this.options.nationalMode ? this.selectedCountryData.iso2 : "";
            return window.intlTelInputUtils ? intlTelInputUtils.isValidNumber(val, countryCode) : null;
        },
        // update the selected flag, and update the input val accordingly
        setCountry: function(countryCode) {
            countryCode = countryCode.toLowerCase();
            // check if already selected
            if (!this.selectedFlagInner.hasClass(countryCode)) {
                this._setFlag(countryCode);
                this._updateDialCode(this.selectedCountryData.dialCode, false);
                this._triggerCountryChange();
            }
        },
        // set the input value and update the flag
        setNumber: function(number) {
            // we must update the flag first, which updates this.selectedCountryData, which is used for formatting the number before displaying it
            var flagChanged = this._updateFlagFromNumber(number);
            this._updateValFromNumber(number);
            if (flagChanged) {
                this._triggerCountryChange();
            }
        }
    };
    // using https://github.com/jquery-boilerplate/jquery-boilerplate/wiki/Extending-jQuery-Boilerplate
    // (adapted to allow public functions)
    $.fn[pluginName] = function(options) {
        var args = arguments;
        // Is the first parameter an object (options), or was omitted,
        // instantiate a new instance of the plugin.
        if (options === undefined || typeof options === "object") {
            // collect all of the deferred objects for all instances created with this selector
            var deferreds = [];
            this.each(function() {
                if (!$.data(this, "plugin_" + pluginName)) {
                    var instance = new Plugin(this,options);
                    var instanceDeferreds = instance._init();
                    // we now have 2 deffereds: 1 for auto country, 1 for utils script
                    deferreds.push(instanceDeferreds[0]);
                    deferreds.push(instanceDeferreds[1]);
                    $.data(this, "plugin_" + pluginName, instance);
                }
            });
            // return the promise from the "master" deferred object that tracks all the others
            return $.when.apply(null, deferreds);
        } else if (typeof options === "string" && options[0] !== "_") {
            // If the first parameter is a string and it doesn't start
            // with an underscore or "contains" the `init`-function,
            // treat this as a call to a public method.
            // Cache the method call to make it possible to return a value
            var returns;
            this.each(function() {
                var instance = $.data(this, "plugin_" + pluginName);
                // Tests that there's already a plugin-instance
                // and checks that the requested public method exists
                if (instance instanceof Plugin && typeof instance[options] === "function") {
                    // Call the method of our plugin instance,
                    // and pass it the supplied arguments.
                    returns = instance[options].apply(instance, Array.prototype.slice.call(args, 1));
                }
                // Allow instances to be destroyed via the 'destroy' method
                if (options === "destroy") {
                    $.data(this, "plugin_" + pluginName, null);
                }
            });
            // If the earlier cached method gives a value back return the value,
            // otherwise return this to preserve chainability.
            return returns !== undefined ? returns : this;
        }
    }
    ;
    /********************
 *  STATIC METHODS
 ********************/
    // get the country data object
    $.fn[pluginName].getCountryData = function() {
        return allCountries;
    }
    ;
    // load the utils script
    $.fn[pluginName].loadUtils = function(path, utilsScriptDeferred) {
        if (!$.fn[pluginName].loadedUtilsScript) {
            // don't do this twice! (dont just check if window.intlTelInputUtils exists as if init plugin multiple times in quick succession, it may not have finished loading yet)
            $.fn[pluginName].loadedUtilsScript = true;
            // dont use $.getScript as it prevents caching
            $.ajax({
                type: "GET",
                url: path,
                complete: function() {
                    // tell all instances that the utils request is complete
                    $(".intl-tel-input input").intlTelInput("handleUtils");
                },
                dataType: "script",
                cache: true
            });
        } else if (utilsScriptDeferred) {
            utilsScriptDeferred.resolve();
        }
    }
    ;
    // default options
    $.fn[pluginName].defaults = defaults;
    // version
    $.fn[pluginName].version = "11.0.7";
    // Array of country objects for the flag dropdown.
    // Here is the criteria for the plugin to support a given country/territory
    // - It has an iso2 code: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
    // - It has it's own country calling code (it is not a sub-region of another country): https://en.wikipedia.org/wiki/List_of_country_calling_codes
    // - It has a flag in the region-flags project: https://github.com/behdad/region-flags/tree/gh-pages/png
    // - It is supported by libphonenumber (it must be listed on this page): https://github.com/googlei18n/libphonenumber/blob/master/resources/ShortNumberMetadata.xml
    // Each country array has the following information:
    // [
    //    Country name,
    //    iso2 code,
    //    International dial code,
    //    Order (if >1 country with same dial code),
    //    Area codes
    // ]
    var allCountries = [["Afghanistan (‫افغانستان‬‎)", "af", "93"], ["Albania (Shqipëri)", "al", "355"], ["Algeria (‫الجزائر‬‎)", "dz", "213"], ["American Samoa", "as", "1684"], ["Andorra", "ad", "376"], ["Angola", "ao", "244"], ["Anguilla", "ai", "1264"], ["Antigua and Barbuda", "ag", "1268"], ["Argentina", "ar", "54"], ["Armenia (Հայաստան)", "am", "374"], ["Aruba", "aw", "297"], ["Australia", "au", "61", 0], ["Austria (Österreich)", "at", "43"], ["Azerbaijan (Azərbaycan)", "az", "994"], ["Bahamas", "bs", "1242"], ["Bahrain (‫البحرين‬‎)", "bh", "973"], ["Bangladesh (বাংলাদেশ)", "bd", "880"], ["Barbados", "bb", "1246"], ["Belarus (Беларусь)", "by", "375"], ["Belgium (België)", "be", "32"], ["Belize", "bz", "501"], ["Benin (Bénin)", "bj", "229"], ["Bermuda", "bm", "1441"], ["Bhutan (འབྲུག)", "bt", "975"], ["Bolivia", "bo", "591"], ["Bosnia and Herzegovina (Босна и Херцеговина)", "ba", "387"], ["Botswana", "bw", "267"], ["Brazil (Brasil)", "br", "55"], ["British Indian Ocean Territory", "io", "246"], ["British Virgin Islands", "vg", "1284"], ["Brunei", "bn", "673"], ["Bulgaria (България)", "bg", "359"], ["Burkina Faso", "bf", "226"], ["Burundi (Uburundi)", "bi", "257"], ["Cambodia (កម្ពុជា)", "kh", "855"], ["Cameroon (Cameroun)", "cm", "237"], ["Canada", "ca", "1", 1, ["204", "226", "236", "249", "250", "289", "306", "343", "365", "387", "403", "416", "418", "431", "437", "438", "450", "506", "514", "519", "548", "579", "581", "587", "604", "613", "639", "647", "672", "705", "709", "742", "778", "780", "782", "807", "819", "825", "867", "873", "902", "905"]], ["Cape Verde (Kabu Verdi)", "cv", "238"], ["Caribbean Netherlands", "bq", "599", 1], ["Cayman Islands", "ky", "1345"], ["Central African Republic (République centrafricaine)", "cf", "236"], ["Chad (Tchad)", "td", "235"], ["Chile", "cl", "56"], ["China (中国)", "cn", "86"], ["Christmas Island", "cx", "61", 2], ["Cocos (Keeling) Islands", "cc", "61", 1], ["Colombia", "co", "57"], ["Comoros (‫جزر القمر‬‎)", "km", "269"], ["Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)", "cd", "243"], ["Congo (Republic) (Congo-Brazzaville)", "cg", "242"], ["Cook Islands", "ck", "682"], ["Costa Rica", "cr", "506"], ["Côte d’Ivoire", "ci", "225"], ["Croatia (Hrvatska)", "hr", "385"], ["Cuba", "cu", "53"], ["Curaçao", "cw", "599", 0], ["Cyprus (Κύπρος)", "cy", "357"], ["Czech Republic (Česká republika)", "cz", "420"], ["Denmark (Danmark)", "dk", "45"], ["Djibouti", "dj", "253"], ["Dominica", "dm", "1767"], ["Dominican Republic (República Dominicana)", "do", "1", 2, ["809", "829", "849"]], ["Ecuador", "ec", "593"], ["Egypt (‫مصر‬‎)", "eg", "20"], ["El Salvador", "sv", "503"], ["Equatorial Guinea (Guinea Ecuatorial)", "gq", "240"], ["Eritrea", "er", "291"], ["Estonia (Eesti)", "ee", "372"], ["Ethiopia", "et", "251"], ["Falkland Islands (Islas Malvinas)", "fk", "500"], ["Faroe Islands (Føroyar)", "fo", "298"], ["Fiji", "fj", "679"], ["Finland (Suomi)", "fi", "358", 0], ["France", "fr", "33"], ["French Guiana (Guyane française)", "gf", "594"], ["French Polynesia (Polynésie française)", "pf", "689"], ["Gabon", "ga", "241"], ["Gambia", "gm", "220"], ["Georgia (საქართველო)", "ge", "995"], ["Germany (Deutschland)", "de", "49"], ["Ghana (Gaana)", "gh", "233"], ["Gibraltar", "gi", "350"], ["Greece (Ελλάδα)", "gr", "30"], ["Greenland (Kalaallit Nunaat)", "gl", "299"], ["Grenada", "gd", "1473"], ["Guadeloupe", "gp", "590", 0], ["Guam", "gu", "1671"], ["Guatemala", "gt", "502"], ["Guernsey", "gg", "44", 1], ["Guinea (Guinée)", "gn", "224"], ["Guinea-Bissau (Guiné Bissau)", "gw", "245"], ["Guyana", "gy", "592"], ["Haiti", "ht", "509"], ["Honduras", "hn", "504"], ["Hong Kong (香港)", "hk", "852"], ["Hungary (Magyarország)", "hu", "36"], ["Iceland (Ísland)", "is", "354"], ["India (भारत)", "in", "91"], ["Indonesia", "id", "62"], ["Iran (‫ایران‬‎)", "ir", "98"], ["Iraq (‫العراق‬‎)", "iq", "964"], ["Ireland", "ie", "353"], ["Isle of Man", "im", "44", 2], ["Israel (‫ישראל‬‎)", "il", "972"], ["Italy (Italia)", "it", "39", 0], ["Jamaica", "jm", "1876"], ["Japan (日本)", "jp", "81"], ["Jersey", "je", "44", 3], ["Jordan (‫الأردن‬‎)", "jo", "962"], ["Kazakhstan (Казахстан)", "kz", "7", 1], ["Kenya", "ke", "254"], ["Kiribati", "ki", "686"], ["Kosovo", "xk", "383"], ["Kuwait (‫الكويت‬‎)", "kw", "965"], ["Kyrgyzstan (Кыргызстан)", "kg", "996"], ["Laos (ລາວ)", "la", "856"], ["Latvia (Latvija)", "lv", "371"], ["Lebanon (‫لبنان‬‎)", "lb", "961"], ["Lesotho", "ls", "266"], ["Liberia", "lr", "231"], ["Libya (‫ليبيا‬‎)", "ly", "218"], ["Liechtenstein", "li", "423"], ["Lithuania (Lietuva)", "lt", "370"], ["Luxembourg", "lu", "352"], ["Macau (澳門)", "mo", "853"], ["Macedonia (FYROM) (Македонија)", "mk", "389"], ["Madagascar (Madagasikara)", "mg", "261"], ["Malawi", "mw", "265"], ["Malaysia", "my", "60"], ["Maldives", "mv", "960"], ["Mali", "ml", "223"], ["Malta", "mt", "356"], ["Marshall Islands", "mh", "692"], ["Martinique", "mq", "596"], ["Mauritania (‫موريتانيا‬‎)", "mr", "222"], ["Mauritius (Moris)", "mu", "230"], ["Mayotte", "yt", "262", 1], ["Mexico (México)", "mx", "52"], ["Micronesia", "fm", "691"], ["Moldova (Republica Moldova)", "md", "373"], ["Monaco", "mc", "377"], ["Mongolia (Монгол)", "mn", "976"], ["Montenegro (Crna Gora)", "me", "382"], ["Montserrat", "ms", "1664"], ["Morocco (‫المغرب‬‎)", "ma", "212", 0], ["Mozambique (Moçambique)", "mz", "258"], ["Myanmar (Burma) (မြန်မာ)", "mm", "95"], ["Namibia (Namibië)", "na", "264"], ["Nauru", "nr", "674"], ["Nepal (नेपाल)", "np", "977"], ["Netherlands (Nederland)", "nl", "31"], ["New Caledonia (Nouvelle-Calédonie)", "nc", "687"], ["New Zealand", "nz", "64"], ["Nicaragua", "ni", "505"], ["Niger (Nijar)", "ne", "227"], ["Nigeria", "ng", "234"], ["Niue", "nu", "683"], ["Norfolk Island", "nf", "672"], ["North Korea (조선 민주주의 인민 공화국)", "kp", "850"], ["Northern Mariana Islands", "mp", "1670"], ["Norway (Norge)", "no", "47", 0], ["Oman (‫عُمان‬‎)", "om", "968"], ["Pakistan (‫پاکستان‬‎)", "pk", "92"], ["Palau", "pw", "680"], ["Palestine (‫فلسطين‬‎)", "ps", "970"], ["Panama (Panamá)", "pa", "507"], ["Papua New Guinea", "pg", "675"], ["Paraguay", "py", "595"], ["Peru (Perú)", "pe", "51"], ["Philippines", "ph", "63"], ["Poland (Polska)", "pl", "48"], ["Portugal", "pt", "351"], ["Puerto Rico", "pr", "1", 3, ["787", "939"]], ["Qatar (‫قطر‬‎)", "qa", "974"], ["Réunion (La Réunion)", "re", "262", 0], ["Romania (România)", "ro", "40"], ["Russia (Россия)", "ru", "7", 0], ["Rwanda", "rw", "250"], ["Saint Barthélemy (Saint-Barthélemy)", "bl", "590", 1], ["Saint Helena", "sh", "290"], ["Saint Kitts and Nevis", "kn", "1869"], ["Saint Lucia", "lc", "1758"], ["Saint Martin (Saint-Martin (partie française))", "mf", "590", 2], ["Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)", "pm", "508"], ["Saint Vincent and the Grenadines", "vc", "1784"], ["Samoa", "ws", "685"], ["San Marino", "sm", "378"], ["São Tomé and Príncipe (São Tomé e Príncipe)", "st", "239"], ["Saudi Arabia (‫المملكة العربية السعودية‬‎)", "sa", "966"], ["Senegal (Sénégal)", "sn", "221"], ["Serbia (Србија)", "rs", "381"], ["Seychelles", "sc", "248"], ["Sierra Leone", "sl", "232"], ["Singapore", "sg", "65"], ["Sint Maarten", "sx", "1721"], ["Slovakia (Slovensko)", "sk", "421"], ["Slovenia (Slovenija)", "si", "386"], ["Solomon Islands", "sb", "677"], ["Somalia (Soomaaliya)", "so", "252"], ["South Africa", "za", "27"], ["South Korea (대한민국)", "kr", "82"], ["South Sudan (‫جنوب السودان‬‎)", "ss", "211"], ["Spain (España)", "es", "34"], ["Sri Lanka (ශ්‍රී ලංකාව)", "lk", "94"], ["Sudan (‫السودان‬‎)", "sd", "249"], ["Suriname", "sr", "597"], ["Svalbard and Jan Mayen", "sj", "47", 1], ["Swaziland", "sz", "268"], ["Sweden (Sverige)", "se", "46"], ["Switzerland (Schweiz)", "ch", "41"], ["Syria (‫سوريا‬‎)", "sy", "963"], ["Taiwan (台灣)", "tw", "886"], ["Tajikistan", "tj", "992"], ["Tanzania", "tz", "255"], ["Thailand (ไทย)", "th", "66"], ["Timor-Leste", "tl", "670"], ["Togo", "tg", "228"], ["Tokelau", "tk", "690"], ["Tonga", "to", "676"], ["Trinidad and Tobago", "tt", "1868"], ["Tunisia (‫تونس‬‎)", "tn", "216"], ["Turkey (Türkiye)", "tr", "90"], ["Turkmenistan", "tm", "993"], ["Turks and Caicos Islands", "tc", "1649"], ["Tuvalu", "tv", "688"], ["U.S. Virgin Islands", "vi", "1340"], ["Uganda", "ug", "256"], ["Ukraine (Україна)", "ua", "380"], ["United Arab Emirates (‫الإمارات العربية المتحدة‬‎)", "ae", "971"], ["United Kingdom", "gb", "44", 0], ["United States", "us", "1", 0], ["Uruguay", "uy", "598"], ["Uzbekistan (Oʻzbekiston)", "uz", "998"], ["Vanuatu", "vu", "678"], ["Vatican City (Città del Vaticano)", "va", "39", 1], ["Venezuela", "ve", "58"], ["Vietnam (Việt Nam)", "vn", "84"], ["Wallis and Futuna", "wf", "681"], ["Western Sahara (‫الصحراء الغربية‬‎)", "eh", "212", 1], ["Yemen (‫اليمن‬‎)", "ye", "967"], ["Zambia", "zm", "260"], ["Zimbabwe", "zw", "263"], ["Åland Islands", "ax", "358", 1]];
    // loop over all of the countries above
    for (var i = 0; i < allCountries.length; i++) {
        var c = allCountries[i];
        allCountries[i] = {
            name: c[0],
            iso2: c[1],
            dialCode: c[2],
            priority: c[3] || 0,
            areaCodes: c[4] || null
        };
    }
});
/*!
* screenfull
* v3.3.2 - 2017-10-27
* (c) Sindre Sorhus; MIT License
*/
(function() {
    'use strict';

    var document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};
    var isCommonjs = typeof module !== 'undefined' && module.exports;
    var keyboardAllowed = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT'in Element;

    var fn = (function() {
        var val;

        var fnMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'], // New WebKit
        ['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'
        ], // Old WebKit (Safari 5.1)
        ['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'
        ], ['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'], ['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];

        var i = 0;
        var l = fnMap.length;
        var ret = {};

        for (; i < l; i++) {
            val = fnMap[i];
            if (val && val[1]in document) {
                for (i = 0; i < val.length; i++) {
                    ret[fnMap[0][i]] = val[i];
                }
                return ret;
            }
        }

        return false;
    }
    )();

    var eventNameMap = {
        change: fn.fullscreenchange,
        error: fn.fullscreenerror
    };

    var screenfull = {
        request: function(elem) {
            var request = fn.requestFullscreen;

            elem = elem || document.documentElement;

            // Work around Safari 5.1 bug: reports support for
            // keyboard in fullscreen even though it doesn't.
            // Browser sniffing, since the alternative with
            // setTimeout is even worse.
            if (/ Version\/5\.1(?:\.\d+)? Safari\//.test(navigator.userAgent)) {
                elem[request]();
            } else {
                elem[request]();
            }
        },
        exit: function() {
            document[fn.exitFullscreen]();
        },
        toggle: function(elem) {
            if (this.isFullscreen) {
                this.exit();
            } else {
                this.request(elem);
            }
        },
        onchange: function(callback) {
            this.on('change', callback);
        },
        onerror: function(callback) {
            this.on('error', callback);
        },
        on: function(event, callback) {
            var eventName = eventNameMap[event];
            if (eventName) {
                document.addEventListener(eventName, callback, false);
            }
        },
        off: function(event, callback) {
            var eventName = eventNameMap[event];
            if (eventName) {
                document.removeEventListener(eventName, callback, false);
            }
        },
        raw: fn
    };

    if (!fn) {
        if (isCommonjs) {
            module.exports = false;
        } else {
            window.screenfull = false;
        }

        return;
    }

    Object.defineProperties(screenfull, {
        isFullscreen: {
            get: function() {
                return Boolean(document[fn.fullscreenElement]);
            }
        },
        element: {
            enumerable: true,
            get: function() {
                return document[fn.fullscreenElement];
            }
        },
        enabled: {
            enumerable: true,
            get: function() {
                // Coerce to boolean in case of old WebKit
                return Boolean(document[fn.fullscreenEnabled]);
            }
        }
    });

    if (isCommonjs) {
        module.exports = screenfull;
    } else {
        window.screenfull = screenfull;
    }
}
)();
/**
 * Minified by jsDelivr using UglifyJS v3.0.24.
 * Original file: /npm/js-cookie@2.2.0/src/js.cookie.js
 * 
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
!function(e) {
    var n = !1;
    if ("function" == typeof define && define.amd && (define(e),
    n = !0),
    "object" == typeof exports && (module.exports = e(),
    n = !0),
    !n) {
        var o = window.Cookies
          , t = window.Cookies = e();
        t.noConflict = function() {
            return window.Cookies = o,
            t
        }
    }
}(function() {
    function e() {
        for (var e = 0, n = {}; e < arguments.length; e++) {
            var o = arguments[e];
            for (var t in o)
                n[t] = o[t]
        }
        return n
    }
    function n(o) {
        function t(n, r, i) {
            var c;
            if ("undefined" != typeof document) {
                if (arguments.length > 1) {
                    if ("number" == typeof (i = e({
                        path: "/"
                    }, t.defaults, i)).expires) {
                        var a = new Date;
                        a.setMilliseconds(a.getMilliseconds() + 864e5 * i.expires),
                        i.expires = a
                    }
                    i.expires = i.expires ? i.expires.toUTCString() : "";
                    try {
                        c = JSON.stringify(r),
                        /^[\{\[]/.test(c) && (r = c)
                    } catch (e) {}
                    r = o.write ? o.write(r, n) : encodeURIComponent(String(r)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent),
                    n = (n = (n = encodeURIComponent(String(n))).replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)).replace(/[\(\)]/g, escape);
                    var s = "";
                    for (var f in i)
                        i[f] && (s += "; " + f,
                        !0 !== i[f] && (s += "=" + i[f]));
                    return document.cookie = n + "=" + r + s
                }
                n || (c = {});
                for (var p = document.cookie ? document.cookie.split("; ") : [], d = /(%[0-9A-Z]{2})+/g, u = 0; u < p.length; u++) {
                    var l = p[u].split("=")
                      , C = l.slice(1).join("=");
                    this.json || '"' !== C.charAt(0) || (C = C.slice(1, -1));
                    try {
                        var g = l[0].replace(d, decodeURIComponent);
                        if (C = o.read ? o.read(C, g) : o(C, g) || C.replace(d, decodeURIComponent),
                        this.json)
                            try {
                                C = JSON.parse(C)
                            } catch (e) {}
                        if (n === g) {
                            c = C;
                            break
                        }
                        n || (c[g] = C)
                    } catch (e) {}
                }
                return c
            }
        }
        return t.set = t,
        t.get = function(e) {
            return t.call(t, e)
        }
        ,
        t.getJSON = function() {
            return t.apply({
                json: !0
            }, [].slice.call(arguments))
        }
        ,
        t.defaults = {},
        t.remove = function(n, o) {
            t(n, "", e(o, {
                expires: -1
            }))
        }
        ,
        t.withConverter = n,
        t
    }
    return n(function() {})
});
//# sourceMappingURL=/sm/f6937b1819ab68f00d8b787ead6c16bfb67977e0c408909621a3b2ff82dbad4a.map
;(function(window, $) {
    $(document).ajaxSuccess(function(event, xhr, settings) {
        var re = new RegExp(/playerloginid/g);
        var loggedOut = xhr.responseText.match(re);

        if (loggedOut) {
            document.location.href = '/';
            return false;
        }
    });
}
)(window, jQuery);

/**
 * MBP - Mobile boilerplate helper functions
 */

(function(document) {

    window.MBP = window.MBP || {};

    /**
     * Fix for iPhone viewport scale bug
     * http://www.blog.highub.com/mobile-2/a-fix-for-iphone-viewport-scale-bug/
     */

    MBP.viewportmeta = document.querySelector && document.querySelector('meta[name="viewport"]');
    MBP.ua = navigator.userAgent;

    MBP.scaleFix = function() {
        if (MBP.viewportmeta && /iPhone|iPad|iPod/.test(MBP.ua) && !/Opera Mini/.test(MBP.ua)) {
            MBP.viewportmeta.content = 'width=device-width, minimum-scale=1.0, maximum-scale=1.0';
            document.addEventListener('gesturestart', MBP.gestureStart, false);
        }
    }
    ;

    MBP.gestureStart = function() {
        MBP.viewportmeta.content = 'width=device-width, minimum-scale=0.25, maximum-scale=1.6';
    }
    ;

    /**
     * Normalized hide address bar for iOS & Android
     * (c) Scott Jehl, scottjehl.com
     * MIT License
     */

    // If we split this up into two functions we can reuse
    // this function if we aren't doing full page reloads.

    // If we cache this we don't need to re-calibrate everytime we call
    // the hide url bar
    MBP.BODY_SCROLL_TOP = false;

    // So we don't redefine this function everytime we
    // we call hideUrlBar
    MBP.getScrollTop = function() {
        var win = window;
        var doc = document;

        return win.pageYOffset || doc.compatMode === 'CSS1Compat' && doc.documentElement.scrollTop || doc.body.scrollTop || 0;
    }
    ;

    // It should be up to the mobile
    MBP.hideUrlBar = function() {
        var win = window;

        // if there is a hash, or MBP.BODY_SCROLL_TOP hasn't been set yet, wait till that happens
        if (!location.hash && MBP.BODY_SCROLL_TOP !== false) {
            win.scrollTo(0, MBP.BODY_SCROLL_TOP === 1 ? 0 : 1);
        }
    }
    ;

    MBP.hideUrlBarOnLoad = function() {
        var win = window;
        var doc = win.document;
        var bodycheck;

        // If there's a hash, or addEventListener is undefined, stop here
        if (!win.navigator.standalone && !location.hash && win.addEventListener) {

            // scroll to 1
            window.scrollTo(0, 1);
            MBP.BODY_SCROLL_TOP = 1;

            // reset to 0 on bodyready, if needed
            bodycheck = setInterval(function() {
                if (doc.body) {
                    clearInterval(bodycheck);
                    MBP.BODY_SCROLL_TOP = MBP.getScrollTop();
                    MBP.hideUrlBar();
                }
            }, 15);

            win.addEventListener('load', function() {
                setTimeout(function() {
                    // at load, if user hasn't scrolled more than 20 or so...
                    if (MBP.getScrollTop() < 20) {
                        // reset to hide addr bar at onload
                        MBP.hideUrlBar();
                    }
                }, 0);
            }, false);
        }
    }
    ;

    /**
     * Fast Buttons - read wiki below before using
     * https://github.com/h5bp/mobile-boilerplate/wiki/JavaScript-Helper
     */

    MBP.fastButton = function(element, handler, pressedClass) {
        this.handler = handler;
        // styling of .pressed is defined in the project's CSS files
        this.pressedClass = typeof pressedClass === 'undefined' ? 'pressed' : pressedClass;

        MBP.listenForGhostClicks();

        if (element.length && element.length > 1) {
            for (var singleElIdx in element) {
                this.addClickEvent(element[singleElIdx]);
            }
        } else {
            this.addClickEvent(element);
        }
    }
    ;

    MBP.fastButton.prototype.handleEvent = function(event) {
        event = event || window.event;

        switch (event.type) {
        case 'touchstart':
            this.onTouchStart(event);
            break;
        case 'touchmove':
            this.onTouchMove(event);
            break;
        case 'touchend':
            this.onClick(event);
            break;
        case 'click':
            this.onClick(event);
            break;
        }
    }
    ;

    MBP.fastButton.prototype.onTouchStart = function(event) {
        var element = event.target || event.srcElement;
        event.stopPropagation();
        element.addEventListener('touchend', this, false);
        document.body.addEventListener('touchmove', this, false);
        this.startX = event.touches[0].clientX;
        this.startY = event.touches[0].clientY;

        element.className += ' ' + this.pressedClass;
    }
    ;

    MBP.fastButton.prototype.onTouchMove = function(event) {
        if (Math.abs(event.touches[0].clientX - this.startX) > 10 || Math.abs(event.touches[0].clientY - this.startY) > 10) {
            this.reset(event);
        }
    }
    ;

    MBP.fastButton.prototype.onClick = function(event) {
        event = event || window.event;
        var element = event.target || event.srcElement;
        if (event.stopPropagation) {
            event.stopPropagation();
        }
        this.reset(event);
        this.handler.apply(event.currentTarget, [event]);
        if (event.type == 'touchend') {
            MBP.preventGhostClick(this.startX, this.startY);
        }
        var pattern = new RegExp(' ?' + this.pressedClass,'gi');
        element.className = element.className.replace(pattern, '');
    }
    ;

    MBP.fastButton.prototype.reset = function(event) {
        var element = event.target || event.srcElement;
        rmEvt(element, 'touchend', this, false);
        rmEvt(document.body, 'touchmove', this, false);

        var pattern = new RegExp(' ?' + this.pressedClass,'gi');
        element.className = element.className.replace(pattern, '');
    }
    ;

    MBP.fastButton.prototype.addClickEvent = function(element) {
        addEvt(element, 'touchstart', this, false);
        addEvt(element, 'click', this, false);
    }
    ;

    MBP.preventGhostClick = function(x, y) {
        MBP.coords.push(x, y);
        window.setTimeout(function() {
            MBP.coords.splice(0, 2);
        }, 2500);
    }
    ;

    MBP.ghostClickHandler = function(event) {
        if (!MBP.hadTouchEvent && MBP.dodgyAndroid) {
            // This is a bit of fun for Android 2.3...
            // If you change window.location via fastButton, a click event will fire
            // on the new page, as if the events are continuing from the previous page.
            // We pick that event up here, but MBP.coords is empty, because it's a new page,
            // so we don't prevent it. Here's we're assuming that click events on touch devices
            // that occur without a preceding touchStart are to be ignored.
            event.stopPropagation();
            event.preventDefault();
            return;
        }
        for (var i = 0, len = MBP.coords.length; i < len; i += 2) {
            var x = MBP.coords[i];
            var y = MBP.coords[i + 1];
            if (Math.abs(event.clientX - x) < 25 && Math.abs(event.clientY - y) < 25) {
                event.stopPropagation();
                event.preventDefault();
            }
        }
    }
    ;

    // This bug only affects touch Android 2.3 devices, but a simple ontouchstart test creates a false positive on
    // some Blackberry devices. https://github.com/Modernizr/Modernizr/issues/372
    // The browser sniffing is to avoid the Blackberry case. Bah
    MBP.dodgyAndroid = ('ontouchstart'in window) && (navigator.userAgent.indexOf('Android 2.3') != -1);

    MBP.listenForGhostClicks = (function() {
        var alreadyRan = false;

        return function() {
            if (alreadyRan) {
                return;
            }

            if (document.addEventListener) {
                document.addEventListener('click', MBP.ghostClickHandler, true);
            }
            addEvt(document.documentElement, 'touchstart', function() {
                MBP.hadTouchEvent = true;
            }, false);

            alreadyRan = true;
        }
        ;
    }
    )();

    MBP.coords = [];

    // fn arg can be an object or a function, thanks to handleEvent
    // read more about the explanation at: http://www.thecssninja.com/javascript/handleevent
    function addEvt(el, evt, fn, bubble) {
        if ('addEventListener'in el) {
            // BBOS6 doesn't support handleEvent, catch and polyfill
            try {
                el.addEventListener(evt, fn, bubble);
            } catch (e) {
                if (typeof fn == 'object' && fn.handleEvent) {
                    el.addEventListener(evt, function(e) {
                        // Bind fn as this and set first arg as event object
                        fn.handleEvent.call(fn, e);
                    }, bubble);
                } else {
                    throw e;
                }
            }
        } else if ('attachEvent'in el) {
            // check if the callback is an object and contains handleEvent
            if (typeof fn == 'object' && fn.handleEvent) {
                el.attachEvent('on' + evt, function() {
                    // Bind fn as this
                    fn.handleEvent.call(fn);
                });
            } else {
                el.attachEvent('on' + evt, fn);
            }
        }
    }

    function rmEvt(el, evt, fn, bubble) {
        if ('removeEventListener'in el) {
            // BBOS6 doesn't support handleEvent, catch and polyfill
            try {
                el.removeEventListener(evt, fn, bubble);
            } catch (e) {
                if (typeof fn == 'object' && fn.handleEvent) {
                    el.removeEventListener(evt, function(e) {
                        // Bind fn as this and set first arg as event object
                        fn.handleEvent.call(fn, e);
                    }, bubble);
                } else {
                    throw e;
                }
            }
        } else if ('detachEvent'in el) {
            // check if the callback is an object and contains handleEvent
            if (typeof fn == 'object' && fn.handleEvent) {
                el.detachEvent("on" + evt, function() {
                    // Bind fn as this
                    fn.handleEvent.call(fn);
                });
            } else {
                el.detachEvent('on' + evt, fn);
            }
        }
    }

    /**
     * Autogrow
     * http://googlecode.blogspot.com/2009/07/gmail-for-mobile-html5-series.html
     */

    MBP.autogrow = function(element, lh) {
        function handler(e) {
            var newHeight = this.scrollHeight;
            var currentHeight = this.clientHeight;
            if (newHeight > currentHeight) {
                this.style.height = newHeight + 3 * textLineHeight + 'px';
            }
        }

        var setLineHeight = (lh) ? lh : 12;
        var textLineHeight = element.currentStyle ? element.currentStyle.lineHeight : getComputedStyle(element, null).lineHeight;

        textLineHeight = (textLineHeight.indexOf('px') == -1) ? setLineHeight : parseInt(textLineHeight, 10);

        element.style.overflow = 'hidden';
        element.addEventListener ? element.addEventListener('input', handler, false) : element.attachEvent('onpropertychange', handler);
    }
    ;

    /**
     * Enable CSS active pseudo styles in Mobile Safari
     * http://alxgbsn.co.uk/2011/10/17/enable-css-active-pseudo-styles-in-mobile-safari/
     */

    MBP.enableActive = function() {
        document.addEventListener('touchstart', function() {}, false);
    }
    ;

    /**
     * Prevent default scrolling on document window
     */

    MBP.preventScrolling = function() {
        document.addEventListener('touchmove', function(e) {
            if (e.target.type === 'range') {
                return;
            }
            e.preventDefault();
        }, false);
    }
    ;

    /**
     * Prevent iOS from zooming onfocus
     * https://github.com/h5bp/mobile-boilerplate/pull/108
     * Adapted from original jQuery code here: http://nerd.vasilis.nl/prevent-ios-from-zooming-onfocus/
     */

    MBP.preventZoom = function() {
        if (MBP.viewportmeta && navigator.platform.match(/iPad|iPhone|iPod/i)) {
            var formFields = document.querySelectorAll('input, select, textarea');
            var contentString = 'width=device-width,initial-scale=1,maximum-scale=';
            var i = 0;
            var fieldLength = formFields.length;

            var setViewportOnFocus = function() {
                MBP.viewportmeta.content = contentString + '1';
            };

            var setViewportOnBlur = function() {
                MBP.viewportmeta.content = contentString + '10';
            };

            for (; i < fieldLength; i++) {
                formFields[i].onfocus = setViewportOnFocus;
                formFields[i].onblur = setViewportOnBlur;
            }
        }
    }
    ;

    /**
     * iOS Startup Image helper
     */

    MBP.startupImage = function() {
        var portrait;
        var landscape;
        var pixelRatio;
        var head;
        var link1;
        var link2;

        pixelRatio = window.devicePixelRatio;
        head = document.getElementsByTagName('head')[0];

        if (navigator.platform === 'iPad') {
            portrait = pixelRatio === 2 ? 'img/startup/startup-tablet-portrait-retina.png' : 'img/startup/startup-tablet-portrait.png';
            landscape = pixelRatio === 2 ? 'img/startup/startup-tablet-landscape-retina.png' : 'img/startup/startup-tablet-landscape.png';

            link1 = document.createElement('link');
            link1.setAttribute('rel', 'apple-touch-startup-image');
            link1.setAttribute('media', 'screen and (orientation: portrait)');
            link1.setAttribute('href', portrait);
            head.appendChild(link1);

            link2 = document.createElement('link');
            link2.setAttribute('rel', 'apple-touch-startup-image');
            link2.setAttribute('media', 'screen and (orientation: landscape)');
            link2.setAttribute('href', landscape);
            head.appendChild(link2);
        } else {
            portrait = pixelRatio === 2 ? "img/startup/startup-retina.png" : "img/startup/startup.png";
            portrait = screen.height === 568 ? "img/startup/startup-retina-4in.png" : portrait;
            link1 = document.createElement('link');
            link1.setAttribute('rel', 'apple-touch-startup-image');
            link1.setAttribute('href', portrait);
            head.appendChild(link1);
        }

        //hack to fix letterboxed full screen web apps on 4" iPhone / iPod with iOS 6
        if (navigator.platform.match(/iPhone|iPod/i) && (screen.height === 568) && navigator.userAgent.match(/\bOS 6_/)) {
            if (MBP.viewportmeta) {
                MBP.viewportmeta.content = MBP.viewportmeta.content.replace(/\bwidth\s*=\s*320\b/, 'width=320.1').replace(/\bwidth\s*=\s*device-width\b/, '');
            }
        }
    }
    ;

}
)(document);

/* =========================================================
 * bootstrap-datepicker.js 
 * http://www.eyecon.ro/bootstrap-datepicker
 * =========================================================
 * Copyright 2012 Stefan Petre
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================= */

!function($) {

    // Picker object

    var Datepicker = function(element, options) {
        this.element = $(element);
        this.format = DPGlobal.parseFormat(options.format || this.element.data('date-format') || 'mm/dd/yyyy');
        this.picker = $(DPGlobal.template).appendTo('body').on({
            click: $.proxy(this.click, this)//,
            //mousedown: $.proxy(this.mousedown, this)
        });
        this.isInput = this.element.is('input');
        this.component = this.element.is('.date') ? this.element.find('.add-on') : false;

        if (this.isInput) {
            this.element.on({
                focus: $.proxy(this.show, this),
                //blur: $.proxy(this.hide, this),
                keyup: $.proxy(this.update, this)
            });
        } else {
            if (this.component) {
                this.component.on('click', $.proxy(this.show, this));
            } else {
                this.element.on('click', $.proxy(this.show, this));
            }
        }

        this.minViewMode = options.minViewMode || this.element.data('date-minviewmode') || 0;
        if (typeof this.minViewMode === 'string') {
            switch (this.minViewMode) {
            case 'months':
                this.minViewMode = 1;
                break;
            case 'years':
                this.minViewMode = 2;
                break;
            default:
                this.minViewMode = 0;
                break;
            }
        }
        this.viewMode = options.viewMode || this.element.data('date-viewmode') || 0;
        if (typeof this.viewMode === 'string') {
            switch (this.viewMode) {
            case 'months':
                this.viewMode = 1;
                break;
            case 'years':
                this.viewMode = 2;
                break;
            default:
                this.viewMode = 0;
                break;
            }
        }
        this.startViewMode = this.viewMode;
        this.weekStart = options.weekStart || this.element.data('date-weekstart') || 0;
        this.weekEnd = this.weekStart === 0 ? 6 : this.weekStart - 1;
        this.onRender = options.onRender;
        this.fillDow();
        this.fillMonths();
        this.update();
        this.showMode();
    };

    Datepicker.prototype = {
        constructor: Datepicker,

        show: function(e) {
            this.picker.show();
            this.height = this.component ? this.component.outerHeight() : this.element.outerHeight();
            this.place();
            $(window).on('resize', $.proxy(this.place, this));
            if (e) {
                e.stopPropagation();
                e.preventDefault();
            }
            if (!this.isInput) {}
            var that = this;
            $(document).on('mousedown', function(ev) {
                if ($(ev.target).closest('.datepicker').length == 0) {
                    that.hide();
                }
            });
            this.element.trigger({
                type: 'show',
                date: this.date
            });
        },

        hide: function() {
            this.picker.hide();
            $(window).off('resize', this.place);
            this.viewMode = this.startViewMode;
            this.showMode();
            if (!this.isInput) {
                $(document).off('mousedown', this.hide);
            }
            //this.set();
            this.element.trigger({
                type: 'hide',
                date: this.date
            });
        },

        set: function() {
            var formated = DPGlobal.formatDate(this.date, this.format);
            if (!this.isInput) {
                if (this.component) {
                    this.element.find('input').prop('value', formated);
                }
                this.element.data('date', formated);
            } else {
                this.element.prop('value', formated);
            }
        },

        setValue: function(newDate) {
            if (typeof newDate === 'string') {
                this.date = DPGlobal.parseDate(newDate, this.format);
            } else {
                this.date = new Date(newDate);
            }
            this.set();
            this.viewDate = new Date(this.date.getFullYear(),this.date.getMonth(),1,0,0,0,0);
            this.fill();
        },

        place: function() {
            var offset = this.component ? this.component.offset() : this.element.offset();
            this.picker.css({
                top: offset.top + this.height,
                left: offset.left
            });
        },

        update: function(newDate) {
            this.date = DPGlobal.parseDate(typeof newDate === 'string' ? newDate : (this.isInput ? this.element.prop('value') : this.element.data('date')), this.format);
            this.viewDate = new Date(this.date.getFullYear(),this.date.getMonth(),1,0,0,0,0);
            this.fill();
        },

        fillDow: function() {
            var dowCnt = this.weekStart;
            var html = '<tr>';
            while (dowCnt < this.weekStart + 7) {
                html += '<th class="dow">' + DPGlobal.dates.daysMin[(dowCnt++) % 7] + '</th>';
            }
            html += '</tr>';
            this.picker.find('.datepicker-days thead').append(html);
        },

        fillMonths: function() {
            var html = '';
            var i = 0
            while (i < 12) {
                html += '<span class="month">' + DPGlobal.dates.monthsShort[i++] + '</span>';
            }
            this.picker.find('.datepicker-months td').append(html);
        },

        fill: function() {
            var d = new Date(this.viewDate)
              , year = d.getFullYear()
              , month = d.getMonth()
              , currentDate = this.date.valueOf();
            this.picker.find('.datepicker-days th:eq(1)').text(DPGlobal.dates.months[month] + ' ' + year);
            var prevMonth = new Date(year,month - 1,28,0,0,0,0)
              , day = DPGlobal.getDaysInMonth(prevMonth.getFullYear(), prevMonth.getMonth());
            prevMonth.setDate(day);
            prevMonth.setDate(day - (prevMonth.getDay() - this.weekStart + 7) % 7);
            var nextMonth = new Date(prevMonth);
            nextMonth.setDate(nextMonth.getDate() + 42);
            nextMonth = nextMonth.valueOf();
            var html = [];
            var clsName, prevY, prevM;
            while (prevMonth.valueOf() < nextMonth) {
                if (prevMonth.getDay() === this.weekStart) {
                    html.push('<tr>');
                }
                clsName = this.onRender(prevMonth);
                prevY = prevMonth.getFullYear();
                prevM = prevMonth.getMonth();
                if ((prevM < month && prevY === year) || prevY < year) {
                    clsName += ' old';
                } else if ((prevM > month && prevY === year) || prevY > year) {
                    clsName += ' new';
                }
                if (prevMonth.valueOf() === currentDate) {
                    clsName += ' active';
                }
                html.push('<td class="day ' + clsName + '">' + prevMonth.getDate() + '</td>');
                if (prevMonth.getDay() === this.weekEnd) {
                    html.push('</tr>');
                }
                prevMonth.setDate(prevMonth.getDate() + 1);
            }
            this.picker.find('.datepicker-days tbody').empty().append(html.join(''));
            var currentYear = this.date.getFullYear();

            var months = this.picker.find('.datepicker-months').find('th:eq(1)').text(year).end().find('span').removeClass('active');
            if (currentYear === year) {
                months.eq(this.date.getMonth()).addClass('active');
            }

            html = '';
            year = parseInt(year / 10, 10) * 10;
            var yearCont = this.picker.find('.datepicker-years').find('th:eq(1)').text(year + '-' + (year + 9)).end().find('td');
            year -= 1;
            for (var i = -1; i < 11; i++) {
                html += '<span class="year' + (i === -1 || i === 10 ? ' old' : '') + (currentYear === year ? ' active' : '') + '">' + year + '</span>';
                year += 1;
            }
            yearCont.html(html);
        },

        click: function(e) {
            e.stopPropagation();
            e.preventDefault();
            var target = $(e.target).closest('span, td, th');
            if (target.length === 1) {
                switch (target[0].nodeName.toLowerCase()) {
                case 'th':
                    switch (target[0].className) {
                    case 'switch':
                        this.showMode(1);
                        break;
                    case 'prev':
                    case 'next':
                        this.viewDate['set' + DPGlobal.modes[this.viewMode].navFnc].call(this.viewDate, this.viewDate['get' + DPGlobal.modes[this.viewMode].navFnc].call(this.viewDate) + DPGlobal.modes[this.viewMode].navStep * (target[0].className === 'prev' ? -1 : 1));
                        this.fill();
                        this.set();
                        break;
                    }
                    break;
                case 'span':
                    if (target.is('.month')) {
                        var month = target.parent().find('span').index(target);
                        this.viewDate.setMonth(month);
                    } else {
                        var year = parseInt(target.text(), 10) || 0;
                        this.viewDate.setFullYear(year);
                    }
                    if (this.viewMode !== 0) {
                        this.date = new Date(this.viewDate);
                        this.element.trigger({
                            type: 'changeDate',
                            date: this.date,
                            viewMode: DPGlobal.modes[this.viewMode].clsName
                        });
                    }
                    this.showMode(-1);
                    this.fill();
                    this.set();
                    break;
                case 'td':
                    if (target.is('.day') && !target.is('.disabled')) {
                        var day = parseInt(target.text(), 10) || 1;
                        var month = this.viewDate.getMonth();
                        if (target.is('.old')) {
                            month -= 1;
                        } else if (target.is('.new')) {
                            month += 1;
                        }
                        var year = this.viewDate.getFullYear();
                        this.date = new Date(year,month,day,0,0,0,0);
                        this.viewDate = new Date(year,month,Math.min(28, day),0,0,0,0);
                        this.fill();
                        this.set();
                        this.element.trigger({
                            type: 'changeDate',
                            date: this.date,
                            viewMode: DPGlobal.modes[this.viewMode].clsName
                        });
                    }
                    break;
                }
            }
        },

        mousedown: function(e) {
            e.stopPropagation();
            e.preventDefault();
        },

        showMode: function(dir) {
            if (dir) {
                this.viewMode = Math.max(this.minViewMode, Math.min(2, this.viewMode + dir));
            }
            this.picker.find('>div').hide().filter('.datepicker-' + DPGlobal.modes[this.viewMode].clsName).show();
        }
    };

    $.fn.datepicker = function(option, val) {
        return this.each(function() {
            var $this = $(this)
              , data = $this.data('datepicker')
              , options = typeof option === 'object' && option;
            if (!data) {
                $this.data('datepicker', (data = new Datepicker(this,$.extend({}, $.fn.datepicker.defaults, options))));
            }
            if (typeof option === 'string')
                data[option](val);
        });
    }
    ;

    $.fn.datepicker.defaults = {
        onRender: function(date) {
            return '';
        }
    };
    $.fn.datepicker.Constructor = Datepicker;

    var DPGlobal = {
        modes: [{
            clsName: 'days',
            navFnc: 'Month',
            navStep: 1
        }, {
            clsName: 'months',
            navFnc: 'FullYear',
            navStep: 1
        }, {
            clsName: 'years',
            navFnc: 'FullYear',
            navStep: 10
        }],
        dates: {
            days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"],
            daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
            daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa", "Su"],
            months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
        },
        isLeapYear: function(year) {
            return (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0))
        },
        getDaysInMonth: function(year, month) {
            return [31, (DPGlobal.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month]
        },
        parseFormat: function(format) {
            var separator = format.match(/[.\/\-\s].*?/)
              , parts = format.split(/\W+/);
            if (!separator || !parts || parts.length === 0) {
                throw new Error("Invalid date format.");
            }
            return {
                separator: separator,
                parts: parts
            };
        },
        parseDate: function(date, format) {
            var parts = date.split(format.separator), date = new Date(), val;
            date.setHours(0);
            date.setMinutes(0);
            date.setSeconds(0);
            date.setMilliseconds(0);
            if (parts.length === format.parts.length) {
                var year = date.getFullYear()
                  , day = date.getDate()
                  , month = date.getMonth();
                for (var i = 0, cnt = format.parts.length; i < cnt; i++) {
                    val = parseInt(parts[i], 10) || 1;
                    switch (format.parts[i]) {
                    case 'dd':
                    case 'd':
                        day = val;
                        date.setDate(val);
                        break;
                    case 'mm':
                    case 'm':
                        month = val - 1;
                        date.setMonth(val - 1);
                        break;
                    case 'yy':
                        year = 2000 + val;
                        date.setFullYear(2000 + val);
                        break;
                    case 'yyyy':
                        year = val;
                        date.setFullYear(val);
                        break;
                    }
                }
                date = new Date(year,month,day,0,0,0);
            }
            return date;
        },
        formatDate: function(date, format) {
            var val = {
                d: date.getDate(),
                m: date.getMonth() + 1,
                yy: date.getFullYear().toString().substring(2),
                yyyy: date.getFullYear()
            };
            val.dd = (val.d < 10 ? '0' : '') + val.d;
            val.mm = (val.m < 10 ? '0' : '') + val.m;
            var date = [];
            for (var i = 0, cnt = format.parts.length; i < cnt; i++) {
                date.push(val[format.parts[i]]);
            }
            return date.join(format.separator);
        },
        headTemplate: '<thead>' + '<tr>' + '<th class="prev">&lsaquo;</th>' + '<th colspan="5" class="switch"></th>' + '<th class="next">&rsaquo;</th>' + '</tr>' + '</thead>',
        contTemplate: '<tbody><tr><td colspan="7"></td></tr></tbody>'
    };
    DPGlobal.template = '<div class="datepicker dropdown-menu">' + '<div class="datepicker-days">' + '<table class=" table-condensed">' + DPGlobal.headTemplate + '<tbody></tbody>' + '</table>' + '</div>' + '<div class="datepicker-months">' + '<table class="table-condensed">' + DPGlobal.headTemplate + DPGlobal.contTemplate + '</table>' + '</div>' + '<div class="datepicker-years">' + '<table class="table-condensed">' + DPGlobal.headTemplate + DPGlobal.contTemplate + '</table>' + '</div>' + '</div>';

}(window.jQuery);
;(function(window, $) {

    $.fn.extend({
        runTimer: function() {
            var $this = $(this);

            setInterval(function() {
                $this.html(getTime());
            }, 1000);
        }
    });

    function getTime() {
        var time = new Date();

        return ("0" + time.getHours()).slice(-2) + ":" + ("0" + time.getMinutes()).slice(-2) + ":" + ("0" + time.getSeconds()).slice(-2)
    }

}
)(window, jQuery);
/*! Select2 4.0.6-rc.0 | https://github.com/select2/select2/blob/master/LICENSE.md */
!function(a) {
    "function" == typeof define && define.amd ? define(["jquery"], a) : "object" == typeof module && module.exports ? module.exports = function(b, c) {
        return void 0 === c && (c = "undefined" != typeof window ? require("jquery") : require("jquery")(b)),
        a(c),
        c
    }
    : a(jQuery)
}(function(a) {
    var b = function() {
        if (a && a.fn && a.fn.select2 && a.fn.select2.amd)
            var b = a.fn.select2.amd;
        var b;
        return function() {
            if (!b || !b.requirejs) {
                b ? c = b : b = {};
                var a, c, d;
                !function(b) {
                    function e(a, b) {
                        return v.call(a, b)
                    }
                    function f(a, b) {
                        var c, d, e, f, g, h, i, j, k, l, m, n, o = b && b.split("/"), p = t.map, q = p && p["*"] || {};
                        if (a) {
                            for (a = a.split("/"),
                            g = a.length - 1,
                            t.nodeIdCompat && x.test(a[g]) && (a[g] = a[g].replace(x, "")),
                            "." === a[0].charAt(0) && o && (n = o.slice(0, o.length - 1),
                            a = n.concat(a)),
                            k = 0; k < a.length; k++)
                                if ("." === (m = a[k]))
                                    a.splice(k, 1),
                                    k -= 1;
                                else if (".." === m) {
                                    if (0 === k || 1 === k && ".." === a[2] || ".." === a[k - 1])
                                        continue;
                                    k > 0 && (a.splice(k - 1, 2),
                                    k -= 2)
                                }
                            a = a.join("/")
                        }
                        if ((o || q) && p) {
                            for (c = a.split("/"),
                            k = c.length; k > 0; k -= 1) {
                                if (d = c.slice(0, k).join("/"),
                                o)
                                    for (l = o.length; l > 0; l -= 1)
                                        if ((e = p[o.slice(0, l).join("/")]) && (e = e[d])) {
                                            f = e,
                                            h = k;
                                            break
                                        }
                                if (f)
                                    break;
                                !i && q && q[d] && (i = q[d],
                                j = k)
                            }
                            !f && i && (f = i,
                            h = j),
                            f && (c.splice(0, h, f),
                            a = c.join("/"))
                        }
                        return a
                    }
                    function g(a, c) {
                        return function() {
                            var d = w.call(arguments, 0);
                            return "string" != typeof d[0] && 1 === d.length && d.push(null),
                            o.apply(b, d.concat([a, c]))
                        }
                    }
                    function h(a) {
                        return function(b) {
                            return f(b, a)
                        }
                    }
                    function i(a) {
                        return function(b) {
                            r[a] = b
                        }
                    }
                    function j(a) {
                        if (e(s, a)) {
                            var c = s[a];
                            delete s[a],
                            u[a] = !0,
                            n.apply(b, c)
                        }
                        if (!e(r, a) && !e(u, a))
                            throw new Error("No " + a);
                        return r[a]
                    }
                    function k(a) {
                        var b, c = a ? a.indexOf("!") : -1;
                        return c > -1 && (b = a.substring(0, c),
                        a = a.substring(c + 1, a.length)),
                        [b, a]
                    }
                    function l(a) {
                        return a ? k(a) : []
                    }
                    function m(a) {
                        return function() {
                            return t && t.config && t.config[a] || {}
                        }
                    }
                    var n, o, p, q, r = {}, s = {}, t = {}, u = {}, v = Object.prototype.hasOwnProperty, w = [].slice, x = /\.js$/;
                    p = function(a, b) {
                        var c, d = k(a), e = d[0], g = b[1];
                        return a = d[1],
                        e && (e = f(e, g),
                        c = j(e)),
                        e ? a = c && c.normalize ? c.normalize(a, h(g)) : f(a, g) : (a = f(a, g),
                        d = k(a),
                        e = d[0],
                        a = d[1],
                        e && (c = j(e))),
                        {
                            f: e ? e + "!" + a : a,
                            n: a,
                            pr: e,
                            p: c
                        }
                    }
                    ,
                    q = {
                        require: function(a) {
                            return g(a)
                        },
                        exports: function(a) {
                            var b = r[a];
                            return void 0 !== b ? b : r[a] = {}
                        },
                        module: function(a) {
                            return {
                                id: a,
                                uri: "",
                                exports: r[a],
                                config: m(a)
                            }
                        }
                    },
                    n = function(a, c, d, f) {
                        var h, k, m, n, o, t, v, w = [], x = typeof d;
                        if (f = f || a,
                        t = l(f),
                        "undefined" === x || "function" === x) {
                            for (c = !c.length && d.length ? ["require", "exports", "module"] : c,
                            o = 0; o < c.length; o += 1)
                                if (n = p(c[o], t),
                                "require" === (k = n.f))
                                    w[o] = q.require(a);
                                else if ("exports" === k)
                                    w[o] = q.exports(a),
                                    v = !0;
                                else if ("module" === k)
                                    h = w[o] = q.module(a);
                                else if (e(r, k) || e(s, k) || e(u, k))
                                    w[o] = j(k);
                                else {
                                    if (!n.p)
                                        throw new Error(a + " missing " + k);
                                    n.p.load(n.n, g(f, !0), i(k), {}),
                                    w[o] = r[k]
                                }
                            m = d ? d.apply(r[a], w) : void 0,
                            a && (h && h.exports !== b && h.exports !== r[a] ? r[a] = h.exports : m === b && v || (r[a] = m))
                        } else
                            a && (r[a] = d)
                    }
                    ,
                    a = c = o = function(a, c, d, e, f) {
                        if ("string" == typeof a)
                            return q[a] ? q[a](c) : j(p(a, l(c)).f);
                        if (!a.splice) {
                            if (t = a,
                            t.deps && o(t.deps, t.callback),
                            !c)
                                return;
                            c.splice ? (a = c,
                            c = d,
                            d = null) : a = b
                        }
                        return c = c || function() {}
                        ,
                        "function" == typeof d && (d = e,
                        e = f),
                        e ? n(b, a, c, d) : setTimeout(function() {
                            n(b, a, c, d)
                        }, 4),
                        o
                    }
                    ,
                    o.config = function(a) {
                        return o(a)
                    }
                    ,
                    a._defined = r,
                    d = function(a, b, c) {
                        if ("string" != typeof a)
                            throw new Error("See almond README: incorrect module build, no module name");
                        b.splice || (c = b,
                        b = []),
                        e(r, a) || e(s, a) || (s[a] = [a, b, c])
                    }
                    ,
                    d.amd = {
                        jQuery: !0
                    }
                }(),
                b.requirejs = a,
                b.require = c,
                b.define = d
            }
        }(),
        b.define("almond", function() {}),
        b.define("jquery", [], function() {
            var b = a || $;
            return null == b && console && console.error && console.error("Select2: An instance of jQuery or a jQuery-compatible library was not found. Make sure that you are including jQuery before Select2 on your web page."),
            b
        }),
        b.define("select2/utils", ["jquery"], function(a) {
            function b(a) {
                var b = a.prototype
                  , c = [];
                for (var d in b) {
                    "function" == typeof b[d] && ("constructor" !== d && c.push(d))
                }
                return c
            }
            var c = {};
            c.Extend = function(a, b) {
                function c() {
                    this.constructor = a
                }
                var d = {}.hasOwnProperty;
                for (var e in b)
                    d.call(b, e) && (a[e] = b[e]);
                return c.prototype = b.prototype,
                a.prototype = new c,
                a.__super__ = b.prototype,
                a
            }
            ,
            c.Decorate = function(a, c) {
                function d() {
                    var b = Array.prototype.unshift
                      , d = c.prototype.constructor.length
                      , e = a.prototype.constructor;
                    d > 0 && (b.call(arguments, a.prototype.constructor),
                    e = c.prototype.constructor),
                    e.apply(this, arguments)
                }
                function e() {
                    this.constructor = d
                }
                var f = b(c)
                  , g = b(a);
                c.displayName = a.displayName,
                d.prototype = new e;
                for (var h = 0; h < g.length; h++) {
                    var i = g[h];
                    d.prototype[i] = a.prototype[i]
                }
                for (var j = (function(a) {
                    var b = function() {};
                    a in d.prototype && (b = d.prototype[a]);
                    var e = c.prototype[a];
                    return function() {
                        return Array.prototype.unshift.call(arguments, b),
                        e.apply(this, arguments)
                    }
                }
                ), k = 0; k < f.length; k++) {
                    var l = f[k];
                    d.prototype[l] = j(l)
                }
                return d
            }
            ;
            var d = function() {
                this.listeners = {}
            };
            d.prototype.on = function(a, b) {
                this.listeners = this.listeners || {},
                a in this.listeners ? this.listeners[a].push(b) : this.listeners[a] = [b]
            }
            ,
            d.prototype.trigger = function(a) {
                var b = Array.prototype.slice
                  , c = b.call(arguments, 1);
                this.listeners = this.listeners || {},
                null == c && (c = []),
                0 === c.length && c.push({}),
                c[0]._type = a,
                a in this.listeners && this.invoke(this.listeners[a], b.call(arguments, 1)),
                "*"in this.listeners && this.invoke(this.listeners["*"], arguments)
            }
            ,
            d.prototype.invoke = function(a, b) {
                for (var c = 0, d = a.length; c < d; c++)
                    a[c].apply(this, b)
            }
            ,
            c.Observable = d,
            c.generateChars = function(a) {
                for (var b = "", c = 0; c < a; c++) {
                    b += Math.floor(36 * Math.random()).toString(36)
                }
                return b
            }
            ,
            c.bind = function(a, b) {
                return function() {
                    a.apply(b, arguments)
                }
            }
            ,
            c._convertData = function(a) {
                for (var b in a) {
                    var c = b.split("-")
                      , d = a;
                    if (1 !== c.length) {
                        for (var e = 0; e < c.length; e++) {
                            var f = c[e];
                            f = f.substring(0, 1).toLowerCase() + f.substring(1),
                            f in d || (d[f] = {}),
                            e == c.length - 1 && (d[f] = a[b]),
                            d = d[f]
                        }
                        delete a[b]
                    }
                }
                return a
            }
            ,
            c.hasScroll = function(b, c) {
                var d = a(c)
                  , e = c.style.overflowX
                  , f = c.style.overflowY;
                return (e !== f || "hidden" !== f && "visible" !== f) && ("scroll" === e || "scroll" === f || (d.innerHeight() < c.scrollHeight || d.innerWidth() < c.scrollWidth))
            }
            ,
            c.escapeMarkup = function(a) {
                var b = {
                    "\\": "&#92;",
                    "&": "&amp;",
                    "<": "&lt;",
                    ">": "&gt;",
                    '"': "&quot;",
                    "'": "&#39;",
                    "/": "&#47;"
                };
                return "string" != typeof a ? a : String(a).replace(/[&<>"'\/\\]/g, function(a) {
                    return b[a]
                })
            }
            ,
            c.appendMany = function(b, c) {
                if ("1.7" === a.fn.jquery.substr(0, 3)) {
                    var d = a();
                    a.map(c, function(a) {
                        d = d.add(a)
                    }),
                    c = d
                }
                b.append(c)
            }
            ,
            c.__cache = {};
            var e = 0;
            return c.GetUniqueElementId = function(a) {
                var b = a.getAttribute("data-select2-id");
                return null == b && (a.id ? (b = a.id,
                a.setAttribute("data-select2-id", b)) : (a.setAttribute("data-select2-id", ++e),
                b = e.toString())),
                b
            }
            ,
            c.StoreData = function(a, b, d) {
                var e = c.GetUniqueElementId(a);
                c.__cache[e] || (c.__cache[e] = {}),
                c.__cache[e][b] = d
            }
            ,
            c.GetData = function(b, d) {
                var e = c.GetUniqueElementId(b);
                return d ? c.__cache[e] && null != c.__cache[e][d] ? c.__cache[e][d] : a(b).data(d) : c.__cache[e]
            }
            ,
            c.RemoveData = function(a) {
                var b = c.GetUniqueElementId(a);
                null != c.__cache[b] && delete c.__cache[b]
            }
            ,
            c
        }),
        b.define("select2/results", ["jquery", "./utils"], function(a, b) {
            function c(a, b, d) {
                this.$element = a,
                this.data = d,
                this.options = b,
                c.__super__.constructor.call(this)
            }
            return b.Extend(c, b.Observable),
            c.prototype.render = function() {
                var b = a('<ul class="select2-results__options" role="tree"></ul>');
                return this.options.get("multiple") && b.attr("aria-multiselectable", "true"),
                this.$results = b,
                b
            }
            ,
            c.prototype.clear = function() {
                this.$results.empty()
            }
            ,
            c.prototype.displayMessage = function(b) {
                var c = this.options.get("escapeMarkup");
                this.clear(),
                this.hideLoading();
                var d = a('<li role="treeitem" aria-live="assertive" class="select2-results__option"></li>')
                  , e = this.options.get("translations").get(b.message);
                d.append(c(e(b.args))),
                d[0].className += " select2-results__message",
                this.$results.append(d)
            }
            ,
            c.prototype.hideMessages = function() {
                this.$results.find(".select2-results__message").remove()
            }
            ,
            c.prototype.append = function(a) {
                this.hideLoading();
                var b = [];
                if (null == a.results || 0 === a.results.length)
                    return void (0 === this.$results.children().length && this.trigger("results:message", {
                        message: "noResults"
                    }));
                a.results = this.sort(a.results);
                for (var c = 0; c < a.results.length; c++) {
                    var d = a.results[c]
                      , e = this.option(d);
                    b.push(e)
                }
                this.$results.append(b)
            }
            ,
            c.prototype.position = function(a, b) {
                b.find(".select2-results").append(a)
            }
            ,
            c.prototype.sort = function(a) {
                return this.options.get("sorter")(a)
            }
            ,
            c.prototype.highlightFirstItem = function() {
                var a = this.$results.find(".select2-results__option[aria-selected]")
                  , b = a.filter("[aria-selected=true]");
                b.length > 0 ? b.first().trigger("mouseenter") : a.first().trigger("mouseenter"),
                this.ensureHighlightVisible()
            }
            ,
            c.prototype.setClasses = function() {
                var c = this;
                this.data.current(function(d) {
                    var e = a.map(d, function(a) {
                        return a.id.toString()
                    });
                    c.$results.find(".select2-results__option[aria-selected]").each(function() {
                        var c = a(this)
                          , d = b.GetData(this, "data")
                          , f = "" + d.id;
                        null != d.element && d.element.selected || null == d.element && a.inArray(f, e) > -1 ? c.attr("aria-selected", "true") : c.attr("aria-selected", "false")
                    })
                })
            }
            ,
            c.prototype.showLoading = function(a) {
                this.hideLoading();
                var b = this.options.get("translations").get("searching")
                  , c = {
                    disabled: !0,
                    loading: !0,
                    text: b(a)
                }
                  , d = this.option(c);
                d.className += " loading-results",
                this.$results.prepend(d)
            }
            ,
            c.prototype.hideLoading = function() {
                this.$results.find(".loading-results").remove()
            }
            ,
            c.prototype.option = function(c) {
                var d = document.createElement("li");
                d.className = "select2-results__option";
                var e = {
                    role: "treeitem",
                    "aria-selected": "false"
                };
                c.disabled && (delete e["aria-selected"],
                e["aria-disabled"] = "true"),
                null == c.id && delete e["aria-selected"],
                null != c._resultId && (d.id = c._resultId),
                c.title && (d.title = c.title),
                c.children && (e.role = "group",
                e["aria-label"] = c.text,
                delete e["aria-selected"]);
                for (var f in e) {
                    var g = e[f];
                    d.setAttribute(f, g)
                }
                if (c.children) {
                    var h = a(d)
                      , i = document.createElement("strong");
                    i.className = "select2-results__group";
                    a(i);
                    this.template(c, i);
                    for (var j = [], k = 0; k < c.children.length; k++) {
                        var l = c.children[k]
                          , m = this.option(l);
                        j.push(m)
                    }
                    var n = a("<ul></ul>", {
                        class: "select2-results__options select2-results__options--nested"
                    });
                    n.append(j),
                    h.append(i),
                    h.append(n)
                } else
                    this.template(c, d);
                return b.StoreData(d, "data", c),
                d
            }
            ,
            c.prototype.bind = function(c, d) {
                var e = this
                  , f = c.id + "-results";
                this.$results.attr("id", f),
                c.on("results:all", function(a) {
                    e.clear(),
                    e.append(a.data),
                    c.isOpen() && (e.setClasses(),
                    e.highlightFirstItem())
                }),
                c.on("results:append", function(a) {
                    e.append(a.data),
                    c.isOpen() && e.setClasses()
                }),
                c.on("query", function(a) {
                    e.hideMessages(),
                    e.showLoading(a)
                }),
                c.on("select", function() {
                    c.isOpen() && (e.setClasses(),
                    e.highlightFirstItem())
                }),
                c.on("unselect", function() {
                    c.isOpen() && (e.setClasses(),
                    e.highlightFirstItem())
                }),
                c.on("open", function() {
                    e.$results.attr("aria-expanded", "true"),
                    e.$results.attr("aria-hidden", "false"),
                    e.setClasses(),
                    e.ensureHighlightVisible()
                }),
                c.on("close", function() {
                    e.$results.attr("aria-expanded", "false"),
                    e.$results.attr("aria-hidden", "true"),
                    e.$results.removeAttr("aria-activedescendant")
                }),
                c.on("results:toggle", function() {
                    var a = e.getHighlightedResults();
                    0 !== a.length && a.trigger("mouseup")
                }),
                c.on("results:select", function() {
                    var a = e.getHighlightedResults();
                    if (0 !== a.length) {
                        var c = b.GetData(a[0], "data");
                        "true" == a.attr("aria-selected") ? e.trigger("close", {}) : e.trigger("select", {
                            data: c
                        })
                    }
                }),
                c.on("results:previous", function() {
                    var a = e.getHighlightedResults()
                      , b = e.$results.find("[aria-selected]")
                      , c = b.index(a);
                    if (0 !== c) {
                        var d = c - 1;
                        0 === a.length && (d = 0);
                        var f = b.eq(d);
                        f.trigger("mouseenter");
                        var g = e.$results.offset().top
                          , h = f.offset().top
                          , i = e.$results.scrollTop() + (h - g);
                        0 === d ? e.$results.scrollTop(0) : h - g < 0 && e.$results.scrollTop(i)
                    }
                }),
                c.on("results:next", function() {
                    var a = e.getHighlightedResults()
                      , b = e.$results.find("[aria-selected]")
                      , c = b.index(a)
                      , d = c + 1;
                    if (!(d >= b.length)) {
                        var f = b.eq(d);
                        f.trigger("mouseenter");
                        var g = e.$results.offset().top + e.$results.outerHeight(!1)
                          , h = f.offset().top + f.outerHeight(!1)
                          , i = e.$results.scrollTop() + h - g;
                        0 === d ? e.$results.scrollTop(0) : h > g && e.$results.scrollTop(i)
                    }
                }),
                c.on("results:focus", function(a) {
                    a.element.addClass("select2-results__option--highlighted")
                }),
                c.on("results:message", function(a) {
                    e.displayMessage(a)
                }),
                a.fn.mousewheel && this.$results.on("mousewheel", function(a) {
                    var b = e.$results.scrollTop()
                      , c = e.$results.get(0).scrollHeight - b + a.deltaY
                      , d = a.deltaY > 0 && b - a.deltaY <= 0
                      , f = a.deltaY < 0 && c <= e.$results.height();
                    d ? (e.$results.scrollTop(0),
                    a.preventDefault(),
                    a.stopPropagation()) : f && (e.$results.scrollTop(e.$results.get(0).scrollHeight - e.$results.height()),
                    a.preventDefault(),
                    a.stopPropagation())
                }),
                this.$results.on("mouseup", ".select2-results__option[aria-selected]", function(c) {
                    var d = a(this)
                      , f = b.GetData(this, "data");
                    if ("true" === d.attr("aria-selected"))
                        return void (e.options.get("multiple") ? e.trigger("unselect", {
                            originalEvent: c,
                            data: f
                        }) : e.trigger("close", {}));
                    e.trigger("select", {
                        originalEvent: c,
                        data: f
                    })
                }),
                this.$results.on("mouseenter", ".select2-results__option[aria-selected]", function(c) {
                    var d = b.GetData(this, "data");
                    e.getHighlightedResults().removeClass("select2-results__option--highlighted"),
                    e.trigger("results:focus", {
                        data: d,
                        element: a(this)
                    })
                })
            }
            ,
            c.prototype.getHighlightedResults = function() {
                return this.$results.find(".select2-results__option--highlighted")
            }
            ,
            c.prototype.destroy = function() {
                this.$results.remove()
            }
            ,
            c.prototype.ensureHighlightVisible = function() {
                var a = this.getHighlightedResults();
                if (0 !== a.length) {
                    var b = this.$results.find("[aria-selected]")
                      , c = b.index(a)
                      , d = this.$results.offset().top
                      , e = a.offset().top
                      , f = this.$results.scrollTop() + (e - d)
                      , g = e - d;
                    f -= 2 * a.outerHeight(!1),
                    c <= 2 ? this.$results.scrollTop(0) : (g > this.$results.outerHeight() || g < 0) && this.$results.scrollTop(f)
                }
            }
            ,
            c.prototype.template = function(b, c) {
                var d = this.options.get("templateResult")
                  , e = this.options.get("escapeMarkup")
                  , f = d(b, c);
                null == f ? c.style.display = "none" : "string" == typeof f ? c.innerHTML = e(f) : a(c).append(f)
            }
            ,
            c
        }),
        b.define("select2/keys", [], function() {
            return {
                BACKSPACE: 8,
                TAB: 9,
                ENTER: 13,
                SHIFT: 16,
                CTRL: 17,
                ALT: 18,
                ESC: 27,
                SPACE: 32,
                PAGE_UP: 33,
                PAGE_DOWN: 34,
                END: 35,
                HOME: 36,
                LEFT: 37,
                UP: 38,
                RIGHT: 39,
                DOWN: 40,
                DELETE: 46
            }
        }),
        b.define("select2/selection/base", ["jquery", "../utils", "../keys"], function(a, b, c) {
            function d(a, b) {
                this.$element = a,
                this.options = b,
                d.__super__.constructor.call(this)
            }
            return b.Extend(d, b.Observable),
            d.prototype.render = function() {
                var c = a('<span class="select2-selection" role="combobox"  aria-haspopup="true" aria-expanded="false"></span>');
                return this._tabindex = 0,
                null != b.GetData(this.$element[0], "old-tabindex") ? this._tabindex = b.GetData(this.$element[0], "old-tabindex") : null != this.$element.attr("tabindex") && (this._tabindex = this.$element.attr("tabindex")),
                c.attr("title", this.$element.attr("title")),
                c.attr("tabindex", this._tabindex),
                this.$selection = c,
                c
            }
            ,
            d.prototype.bind = function(a, b) {
                var d = this
                  , e = (a.id,
                a.id + "-results");
                this.container = a,
                this.$selection.on("focus", function(a) {
                    d.trigger("focus", a)
                }),
                this.$selection.on("blur", function(a) {
                    d._handleBlur(a)
                }),
                this.$selection.on("keydown", function(a) {
                    d.trigger("keypress", a),
                    a.which === c.SPACE && a.preventDefault()
                }),
                a.on("results:focus", function(a) {
                    d.$selection.attr("aria-activedescendant", a.data._resultId)
                }),
                a.on("selection:update", function(a) {
                    d.update(a.data)
                }),
                a.on("open", function() {
                    d.$selection.attr("aria-expanded", "true"),
                    d.$selection.attr("aria-owns", e),
                    d._attachCloseHandler(a)
                }),
                a.on("close", function() {
                    d.$selection.attr("aria-expanded", "false"),
                    d.$selection.removeAttr("aria-activedescendant"),
                    d.$selection.removeAttr("aria-owns"),
                    d.$selection.focus(),
                    d._detachCloseHandler(a)
                }),
                a.on("enable", function() {
                    d.$selection.attr("tabindex", d._tabindex)
                }),
                a.on("disable", function() {
                    d.$selection.attr("tabindex", "-1")
                })
            }
            ,
            d.prototype._handleBlur = function(b) {
                var c = this;
                window.setTimeout(function() {
                    document.activeElement == c.$selection[0] || a.contains(c.$selection[0], document.activeElement) || c.trigger("blur", b)
                }, 1)
            }
            ,
            d.prototype._attachCloseHandler = function(c) {
                a(document.body).on("mousedown.select2." + c.id, function(c) {
                    var d = a(c.target)
                      , e = d.closest(".select2");
                    a(".select2.select2-container--open").each(function() {
                        a(this),
                        this != e[0] && b.GetData(this, "element").select2("close")
                    })
                })
            }
            ,
            d.prototype._detachCloseHandler = function(b) {
                a(document.body).off("mousedown.select2." + b.id)
            }
            ,
            d.prototype.position = function(a, b) {
                b.find(".selection").append(a)
            }
            ,
            d.prototype.destroy = function() {
                this._detachCloseHandler(this.container)
            }
            ,
            d.prototype.update = function(a) {
                throw new Error("The `update` method must be defined in child classes.")
            }
            ,
            d
        }),
        b.define("select2/selection/single", ["jquery", "./base", "../utils", "../keys"], function(a, b, c, d) {
            function e() {
                e.__super__.constructor.apply(this, arguments)
            }
            return c.Extend(e, b),
            e.prototype.render = function() {
                var a = e.__super__.render.call(this);
                return a.addClass("select2-selection--single"),
                a.html('<span class="select2-selection__rendered"></span><span class="select2-selection__arrow" role="presentation"><b role="presentation"></b></span>'),
                a
            }
            ,
            e.prototype.bind = function(a, b) {
                var c = this;
                e.__super__.bind.apply(this, arguments);
                var d = a.id + "-container";
                this.$selection.find(".select2-selection__rendered").attr("id", d).attr("role", "textbox").attr("aria-readonly", "true"),
                this.$selection.attr("aria-labelledby", d),
                this.$selection.on("mousedown", function(a) {
                    1 === a.which && c.trigger("toggle", {
                        originalEvent: a
                    })
                }),
                this.$selection.on("focus", function(a) {}),
                this.$selection.on("blur", function(a) {}),
                a.on("focus", function(b) {
                    a.isOpen() || c.$selection.focus()
                })
            }
            ,
            e.prototype.clear = function() {
                var a = this.$selection.find(".select2-selection__rendered");
                a.empty(),
                a.removeAttr("title")
            }
            ,
            e.prototype.display = function(a, b) {
                var c = this.options.get("templateSelection");
                return this.options.get("escapeMarkup")(c(a, b))
            }
            ,
            e.prototype.selectionContainer = function() {
                return a("<span></span>")
            }
            ,
            e.prototype.update = function(a) {
                if (0 === a.length)
                    return void this.clear();
                var b = a[0]
                  , c = this.$selection.find(".select2-selection__rendered")
                  , d = this.display(b, c);
                c.empty().append(d),
                c.attr("title", b.title || b.text)
            }
            ,
            e
        }),
        b.define("select2/selection/multiple", ["jquery", "./base", "../utils"], function(a, b, c) {
            function d(a, b) {
                d.__super__.constructor.apply(this, arguments)
            }
            return c.Extend(d, b),
            d.prototype.render = function() {
                var a = d.__super__.render.call(this);
                return a.addClass("select2-selection--multiple"),
                a.html('<ul class="select2-selection__rendered"></ul>'),
                a
            }
            ,
            d.prototype.bind = function(b, e) {
                var f = this;
                d.__super__.bind.apply(this, arguments),
                this.$selection.on("click", function(a) {
                    f.trigger("toggle", {
                        originalEvent: a
                    })
                }),
                this.$selection.on("click", ".select2-selection__choice__remove", function(b) {
                    if (!f.options.get("disabled")) {
                        var d = a(this)
                          , e = d.parent()
                          , g = c.GetData(e[0], "data");
                        f.trigger("unselect", {
                            originalEvent: b,
                            data: g
                        })
                    }
                })
            }
            ,
            d.prototype.clear = function() {
                var a = this.$selection.find(".select2-selection__rendered");
                a.empty(),
                a.removeAttr("title")
            }
            ,
            d.prototype.display = function(a, b) {
                var c = this.options.get("templateSelection");
                return this.options.get("escapeMarkup")(c(a, b))
            }
            ,
            d.prototype.selectionContainer = function() {
                return a('<li class="select2-selection__choice"><span class="select2-selection__choice__remove" role="presentation">&times;</span></li>')
            }
            ,
            d.prototype.update = function(a) {
                if (this.clear(),
                0 !== a.length) {
                    for (var b = [], d = 0; d < a.length; d++) {
                        var e = a[d]
                          , f = this.selectionContainer()
                          , g = this.display(e, f);
                        f.append(g),
                        f.attr("title", e.title || e.text),
                        c.StoreData(f[0], "data", e),
                        b.push(f)
                    }
                    var h = this.$selection.find(".select2-selection__rendered");
                    c.appendMany(h, b)
                }
            }
            ,
            d
        }),
        b.define("select2/selection/placeholder", ["../utils"], function(a) {
            function b(a, b, c) {
                this.placeholder = this.normalizePlaceholder(c.get("placeholder")),
                a.call(this, b, c)
            }
            return b.prototype.normalizePlaceholder = function(a, b) {
                return "string" == typeof b && (b = {
                    id: "",
                    text: b
                }),
                b
            }
            ,
            b.prototype.createPlaceholder = function(a, b) {
                var c = this.selectionContainer();
                return c.html(this.display(b)),
                c.addClass("select2-selection__placeholder").removeClass("select2-selection__choice"),
                c
            }
            ,
            b.prototype.update = function(a, b) {
                var c = 1 == b.length && b[0].id != this.placeholder.id;
                if (b.length > 1 || c)
                    return a.call(this, b);
                this.clear();
                var d = this.createPlaceholder(this.placeholder);
                this.$selection.find(".select2-selection__rendered").append(d)
            }
            ,
            b
        }),
        b.define("select2/selection/allowClear", ["jquery", "../keys", "../utils"], function(a, b, c) {
            function d() {}
            return d.prototype.bind = function(a, b, c) {
                var d = this;
                a.call(this, b, c),
                null == this.placeholder && this.options.get("debug") && window.console && console.error && console.error("Select2: The `allowClear` option should be used in combination with the `placeholder` option."),
                this.$selection.on("mousedown", ".select2-selection__clear", function(a) {
                    d._handleClear(a)
                }),
                b.on("keypress", function(a) {
                    d._handleKeyboardClear(a, b)
                })
            }
            ,
            d.prototype._handleClear = function(a, b) {
                if (!this.options.get("disabled")) {
                    var d = this.$selection.find(".select2-selection__clear");
                    if (0 !== d.length) {
                        b.stopPropagation();
                        var e = c.GetData(d[0], "data")
                          , f = this.$element.val();
                        this.$element.val(this.placeholder.id);
                        var g = {
                            data: e
                        };
                        if (this.trigger("clear", g),
                        g.prevented)
                            return void this.$element.val(f);
                        for (var h = 0; h < e.length; h++)
                            if (g = {
                                data: e[h]
                            },
                            this.trigger("unselect", g),
                            g.prevented)
                                return void this.$element.val(f);
                        this.$element.trigger("change"),
                        this.trigger("toggle", {})
                    }
                }
            }
            ,
            d.prototype._handleKeyboardClear = function(a, c, d) {
                d.isOpen() || c.which != b.DELETE && c.which != b.BACKSPACE || this._handleClear(c)
            }
            ,
            d.prototype.update = function(b, d) {
                if (b.call(this, d),
                !(this.$selection.find(".select2-selection__placeholder").length > 0 || 0 === d.length)) {
                    var e = a('<span class="select2-selection__clear">&times;</span>');
                    c.StoreData(e[0], "data", d),
                    this.$selection.find(".select2-selection__rendered").prepend(e)
                }
            }
            ,
            d
        }),
        b.define("select2/selection/search", ["jquery", "../utils", "../keys"], function(a, b, c) {
            function d(a, b, c) {
                a.call(this, b, c)
            }
            return d.prototype.render = function(b) {
                var c = a('<li class="select2-search select2-search--inline"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="none" spellcheck="false" role="textbox" aria-autocomplete="list" /></li>');
                this.$searchContainer = c,
                this.$search = c.find("input");
                var d = b.call(this);
                return this._transferTabIndex(),
                d
            }
            ,
            d.prototype.bind = function(a, d, e) {
                var f = this;
                a.call(this, d, e),
                d.on("open", function() {
                    f.$search.trigger("focus")
                }),
                d.on("close", function() {
                    f.$search.val(""),
                    f.$search.removeAttr("aria-activedescendant"),
                    f.$search.trigger("focus")
                }),
                d.on("enable", function() {
                    f.$search.prop("disabled", !1),
                    f._transferTabIndex()
                }),
                d.on("disable", function() {
                    f.$search.prop("disabled", !0)
                }),
                d.on("focus", function(a) {
                    f.$search.trigger("focus")
                }),
                d.on("results:focus", function(a) {
                    f.$search.attr("aria-activedescendant", a.id)
                }),
                this.$selection.on("focusin", ".select2-search--inline", function(a) {
                    f.trigger("focus", a)
                }),
                this.$selection.on("focusout", ".select2-search--inline", function(a) {
                    f._handleBlur(a)
                }),
                this.$selection.on("keydown", ".select2-search--inline", function(a) {
                    if (a.stopPropagation(),
                    f.trigger("keypress", a),
                    f._keyUpPrevented = a.isDefaultPrevented(),
                    a.which === c.BACKSPACE && "" === f.$search.val()) {
                        var d = f.$searchContainer.prev(".select2-selection__choice");
                        if (d.length > 0) {
                            var e = b.GetData(d[0], "data");
                            f.searchRemoveChoice(e),
                            a.preventDefault()
                        }
                    }
                });
                var g = document.documentMode
                  , h = g && g <= 11;
                this.$selection.on("input.searchcheck", ".select2-search--inline", function(a) {
                    if (h)
                        return void f.$selection.off("input.search input.searchcheck");
                    f.$selection.off("keyup.search")
                }),
                this.$selection.on("keyup.search input.search", ".select2-search--inline", function(a) {
                    if (h && "input" === a.type)
                        return void f.$selection.off("input.search input.searchcheck");
                    var b = a.which;
                    b != c.SHIFT && b != c.CTRL && b != c.ALT && b != c.TAB && f.handleSearch(a)
                })
            }
            ,
            d.prototype._transferTabIndex = function(a) {
                this.$search.attr("tabindex", this.$selection.attr("tabindex")),
                this.$selection.attr("tabindex", "-1")
            }
            ,
            d.prototype.createPlaceholder = function(a, b) {
                this.$search.attr("placeholder", b.text)
            }
            ,
            d.prototype.update = function(a, b) {
                var c = this.$search[0] == document.activeElement;
                this.$search.attr("placeholder", ""),
                a.call(this, b),
                this.$selection.find(".select2-selection__rendered").append(this.$searchContainer),
                this.resizeSearch(),
                c && this.$search.focus()
            }
            ,
            d.prototype.handleSearch = function() {
                if (this.resizeSearch(),
                !this._keyUpPrevented) {
                    var a = this.$search.val();
                    this.trigger("query", {
                        term: a
                    })
                }
                this._keyUpPrevented = !1
            }
            ,
            d.prototype.searchRemoveChoice = function(a, b) {
                this.trigger("unselect", {
                    data: b
                }),
                this.$search.val(b.text),
                this.handleSearch()
            }
            ,
            d.prototype.resizeSearch = function() {
                this.$search.css("width", "25px");
                var a = "";
                if ("" !== this.$search.attr("placeholder"))
                    a = this.$selection.find(".select2-selection__rendered").innerWidth();
                else {
                    a = .75 * (this.$search.val().length + 1) + "em"
                }
                this.$search.css("width", a)
            }
            ,
            d
        }),
        b.define("select2/selection/eventRelay", ["jquery"], function(a) {
            function b() {}
            return b.prototype.bind = function(b, c, d) {
                var e = this
                  , f = ["open", "opening", "close", "closing", "select", "selecting", "unselect", "unselecting", "clear", "clearing"]
                  , g = ["opening", "closing", "selecting", "unselecting", "clearing"];
                b.call(this, c, d),
                c.on("*", function(b, c) {
                    if (-1 !== a.inArray(b, f)) {
                        c = c || {};
                        var d = a.Event("select2:" + b, {
                            params: c
                        });
                        e.$element.trigger(d),
                        -1 !== a.inArray(b, g) && (c.prevented = d.isDefaultPrevented())
                    }
                })
            }
            ,
            b
        }),
        b.define("select2/translation", ["jquery", "require"], function(a, b) {
            function c(a) {
                this.dict = a || {}
            }
            return c.prototype.all = function() {
                return this.dict
            }
            ,
            c.prototype.get = function(a) {
                return this.dict[a]
            }
            ,
            c.prototype.extend = function(b) {
                this.dict = a.extend({}, b.all(), this.dict)
            }
            ,
            c._cache = {},
            c.loadPath = function(a) {
                if (!(a in c._cache)) {
                    var d = b(a);
                    c._cache[a] = d
                }
                return new c(c._cache[a])
            }
            ,
            c
        }),
        b.define("select2/diacritics", [], function() {
            return {
                "Ⓐ": "A",
                "Ａ": "A",
                "À": "A",
                "Á": "A",
                "Â": "A",
                "Ầ": "A",
                "Ấ": "A",
                "Ẫ": "A",
                "Ẩ": "A",
                "Ã": "A",
                "Ā": "A",
                "Ă": "A",
                "Ằ": "A",
                "Ắ": "A",
                "Ẵ": "A",
                "Ẳ": "A",
                "Ȧ": "A",
                "Ǡ": "A",
                "Ä": "A",
                "Ǟ": "A",
                "Ả": "A",
                "Å": "A",
                "Ǻ": "A",
                "Ǎ": "A",
                "Ȁ": "A",
                "Ȃ": "A",
                "Ạ": "A",
                "Ậ": "A",
                "Ặ": "A",
                "Ḁ": "A",
                "Ą": "A",
                "Ⱥ": "A",
                "Ɐ": "A",
                "Ꜳ": "AA",
                "Æ": "AE",
                "Ǽ": "AE",
                "Ǣ": "AE",
                "Ꜵ": "AO",
                "Ꜷ": "AU",
                "Ꜹ": "AV",
                "Ꜻ": "AV",
                "Ꜽ": "AY",
                "Ⓑ": "B",
                "Ｂ": "B",
                "Ḃ": "B",
                "Ḅ": "B",
                "Ḇ": "B",
                "Ƀ": "B",
                "Ƃ": "B",
                "Ɓ": "B",
                "Ⓒ": "C",
                "Ｃ": "C",
                "Ć": "C",
                "Ĉ": "C",
                "Ċ": "C",
                "Č": "C",
                "Ç": "C",
                "Ḉ": "C",
                "Ƈ": "C",
                "Ȼ": "C",
                "Ꜿ": "C",
                "Ⓓ": "D",
                "Ｄ": "D",
                "Ḋ": "D",
                "Ď": "D",
                "Ḍ": "D",
                "Ḑ": "D",
                "Ḓ": "D",
                "Ḏ": "D",
                "Đ": "D",
                "Ƌ": "D",
                "Ɗ": "D",
                "Ɖ": "D",
                "Ꝺ": "D",
                "Ǳ": "DZ",
                "Ǆ": "DZ",
                "ǲ": "Dz",
                "ǅ": "Dz",
                "Ⓔ": "E",
                "Ｅ": "E",
                "È": "E",
                "É": "E",
                "Ê": "E",
                "Ề": "E",
                "Ế": "E",
                "Ễ": "E",
                "Ể": "E",
                "Ẽ": "E",
                "Ē": "E",
                "Ḕ": "E",
                "Ḗ": "E",
                "Ĕ": "E",
                "Ė": "E",
                "Ë": "E",
                "Ẻ": "E",
                "Ě": "E",
                "Ȅ": "E",
                "Ȇ": "E",
                "Ẹ": "E",
                "Ệ": "E",
                "Ȩ": "E",
                "Ḝ": "E",
                "Ę": "E",
                "Ḙ": "E",
                "Ḛ": "E",
                "Ɛ": "E",
                "Ǝ": "E",
                "Ⓕ": "F",
                "Ｆ": "F",
                "Ḟ": "F",
                "Ƒ": "F",
                "Ꝼ": "F",
                "Ⓖ": "G",
                "Ｇ": "G",
                "Ǵ": "G",
                "Ĝ": "G",
                "Ḡ": "G",
                "Ğ": "G",
                "Ġ": "G",
                "Ǧ": "G",
                "Ģ": "G",
                "Ǥ": "G",
                "Ɠ": "G",
                "Ꞡ": "G",
                "Ᵹ": "G",
                "Ꝿ": "G",
                "Ⓗ": "H",
                "Ｈ": "H",
                "Ĥ": "H",
                "Ḣ": "H",
                "Ḧ": "H",
                "Ȟ": "H",
                "Ḥ": "H",
                "Ḩ": "H",
                "Ḫ": "H",
                "Ħ": "H",
                "Ⱨ": "H",
                "Ⱶ": "H",
                "Ɥ": "H",
                "Ⓘ": "I",
                "Ｉ": "I",
                "Ì": "I",
                "Í": "I",
                "Î": "I",
                "Ĩ": "I",
                "Ī": "I",
                "Ĭ": "I",
                "İ": "I",
                "Ï": "I",
                "Ḯ": "I",
                "Ỉ": "I",
                "Ǐ": "I",
                "Ȉ": "I",
                "Ȋ": "I",
                "Ị": "I",
                "Į": "I",
                "Ḭ": "I",
                "Ɨ": "I",
                "Ⓙ": "J",
                "Ｊ": "J",
                "Ĵ": "J",
                "Ɉ": "J",
                "Ⓚ": "K",
                "Ｋ": "K",
                "Ḱ": "K",
                "Ǩ": "K",
                "Ḳ": "K",
                "Ķ": "K",
                "Ḵ": "K",
                "Ƙ": "K",
                "Ⱪ": "K",
                "Ꝁ": "K",
                "Ꝃ": "K",
                "Ꝅ": "K",
                "Ꞣ": "K",
                "Ⓛ": "L",
                "Ｌ": "L",
                "Ŀ": "L",
                "Ĺ": "L",
                "Ľ": "L",
                "Ḷ": "L",
                "Ḹ": "L",
                "Ļ": "L",
                "Ḽ": "L",
                "Ḻ": "L",
                "Ł": "L",
                "Ƚ": "L",
                "Ɫ": "L",
                "Ⱡ": "L",
                "Ꝉ": "L",
                "Ꝇ": "L",
                "Ꞁ": "L",
                "Ǉ": "LJ",
                "ǈ": "Lj",
                "Ⓜ": "M",
                "Ｍ": "M",
                "Ḿ": "M",
                "Ṁ": "M",
                "Ṃ": "M",
                "Ɱ": "M",
                "Ɯ": "M",
                "Ⓝ": "N",
                "Ｎ": "N",
                "Ǹ": "N",
                "Ń": "N",
                "Ñ": "N",
                "Ṅ": "N",
                "Ň": "N",
                "Ṇ": "N",
                "Ņ": "N",
                "Ṋ": "N",
                "Ṉ": "N",
                "Ƞ": "N",
                "Ɲ": "N",
                "Ꞑ": "N",
                "Ꞥ": "N",
                "Ǌ": "NJ",
                "ǋ": "Nj",
                "Ⓞ": "O",
                "Ｏ": "O",
                "Ò": "O",
                "Ó": "O",
                "Ô": "O",
                "Ồ": "O",
                "Ố": "O",
                "Ỗ": "O",
                "Ổ": "O",
                "Õ": "O",
                "Ṍ": "O",
                "Ȭ": "O",
                "Ṏ": "O",
                "Ō": "O",
                "Ṑ": "O",
                "Ṓ": "O",
                "Ŏ": "O",
                "Ȯ": "O",
                "Ȱ": "O",
                "Ö": "O",
                "Ȫ": "O",
                "Ỏ": "O",
                "Ő": "O",
                "Ǒ": "O",
                "Ȍ": "O",
                "Ȏ": "O",
                "Ơ": "O",
                "Ờ": "O",
                "Ớ": "O",
                "Ỡ": "O",
                "Ở": "O",
                "Ợ": "O",
                "Ọ": "O",
                "Ộ": "O",
                "Ǫ": "O",
                "Ǭ": "O",
                "Ø": "O",
                "Ǿ": "O",
                "Ɔ": "O",
                "Ɵ": "O",
                "Ꝋ": "O",
                "Ꝍ": "O",
                "Ƣ": "OI",
                "Ꝏ": "OO",
                "Ȣ": "OU",
                "Ⓟ": "P",
                "Ｐ": "P",
                "Ṕ": "P",
                "Ṗ": "P",
                "Ƥ": "P",
                "Ᵽ": "P",
                "Ꝑ": "P",
                "Ꝓ": "P",
                "Ꝕ": "P",
                "Ⓠ": "Q",
                "Ｑ": "Q",
                "Ꝗ": "Q",
                "Ꝙ": "Q",
                "Ɋ": "Q",
                "Ⓡ": "R",
                "Ｒ": "R",
                "Ŕ": "R",
                "Ṙ": "R",
                "Ř": "R",
                "Ȑ": "R",
                "Ȓ": "R",
                "Ṛ": "R",
                "Ṝ": "R",
                "Ŗ": "R",
                "Ṟ": "R",
                "Ɍ": "R",
                "Ɽ": "R",
                "Ꝛ": "R",
                "Ꞧ": "R",
                "Ꞃ": "R",
                "Ⓢ": "S",
                "Ｓ": "S",
                "ẞ": "S",
                "Ś": "S",
                "Ṥ": "S",
                "Ŝ": "S",
                "Ṡ": "S",
                "Š": "S",
                "Ṧ": "S",
                "Ṣ": "S",
                "Ṩ": "S",
                "Ș": "S",
                "Ş": "S",
                "Ȿ": "S",
                "Ꞩ": "S",
                "Ꞅ": "S",
                "Ⓣ": "T",
                "Ｔ": "T",
                "Ṫ": "T",
                "Ť": "T",
                "Ṭ": "T",
                "Ț": "T",
                "Ţ": "T",
                "Ṱ": "T",
                "Ṯ": "T",
                "Ŧ": "T",
                "Ƭ": "T",
                "Ʈ": "T",
                "Ⱦ": "T",
                "Ꞇ": "T",
                "Ꜩ": "TZ",
                "Ⓤ": "U",
                "Ｕ": "U",
                "Ù": "U",
                "Ú": "U",
                "Û": "U",
                "Ũ": "U",
                "Ṹ": "U",
                "Ū": "U",
                "Ṻ": "U",
                "Ŭ": "U",
                "Ü": "U",
                "Ǜ": "U",
                "Ǘ": "U",
                "Ǖ": "U",
                "Ǚ": "U",
                "Ủ": "U",
                "Ů": "U",
                "Ű": "U",
                "Ǔ": "U",
                "Ȕ": "U",
                "Ȗ": "U",
                "Ư": "U",
                "Ừ": "U",
                "Ứ": "U",
                "Ữ": "U",
                "Ử": "U",
                "Ự": "U",
                "Ụ": "U",
                "Ṳ": "U",
                "Ų": "U",
                "Ṷ": "U",
                "Ṵ": "U",
                "Ʉ": "U",
                "Ⓥ": "V",
                "Ｖ": "V",
                "Ṽ": "V",
                "Ṿ": "V",
                "Ʋ": "V",
                "Ꝟ": "V",
                "Ʌ": "V",
                "Ꝡ": "VY",
                "Ⓦ": "W",
                "Ｗ": "W",
                "Ẁ": "W",
                "Ẃ": "W",
                "Ŵ": "W",
                "Ẇ": "W",
                "Ẅ": "W",
                "Ẉ": "W",
                "Ⱳ": "W",
                "Ⓧ": "X",
                "Ｘ": "X",
                "Ẋ": "X",
                "Ẍ": "X",
                "Ⓨ": "Y",
                "Ｙ": "Y",
                "Ỳ": "Y",
                "Ý": "Y",
                "Ŷ": "Y",
                "Ỹ": "Y",
                "Ȳ": "Y",
                "Ẏ": "Y",
                "Ÿ": "Y",
                "Ỷ": "Y",
                "Ỵ": "Y",
                "Ƴ": "Y",
                "Ɏ": "Y",
                "Ỿ": "Y",
                "Ⓩ": "Z",
                "Ｚ": "Z",
                "Ź": "Z",
                "Ẑ": "Z",
                "Ż": "Z",
                "Ž": "Z",
                "Ẓ": "Z",
                "Ẕ": "Z",
                "Ƶ": "Z",
                "Ȥ": "Z",
                "Ɀ": "Z",
                "Ⱬ": "Z",
                "Ꝣ": "Z",
                "ⓐ": "a",
                "ａ": "a",
                "ẚ": "a",
                "à": "a",
                "á": "a",
                "â": "a",
                "ầ": "a",
                "ấ": "a",
                "ẫ": "a",
                "ẩ": "a",
                "ã": "a",
                "ā": "a",
                "ă": "a",
                "ằ": "a",
                "ắ": "a",
                "ẵ": "a",
                "ẳ": "a",
                "ȧ": "a",
                "ǡ": "a",
                "ä": "a",
                "ǟ": "a",
                "ả": "a",
                "å": "a",
                "ǻ": "a",
                "ǎ": "a",
                "ȁ": "a",
                "ȃ": "a",
                "ạ": "a",
                "ậ": "a",
                "ặ": "a",
                "ḁ": "a",
                "ą": "a",
                "ⱥ": "a",
                "ɐ": "a",
                "ꜳ": "aa",
                "æ": "ae",
                "ǽ": "ae",
                "ǣ": "ae",
                "ꜵ": "ao",
                "ꜷ": "au",
                "ꜹ": "av",
                "ꜻ": "av",
                "ꜽ": "ay",
                "ⓑ": "b",
                "ｂ": "b",
                "ḃ": "b",
                "ḅ": "b",
                "ḇ": "b",
                "ƀ": "b",
                "ƃ": "b",
                "ɓ": "b",
                "ⓒ": "c",
                "ｃ": "c",
                "ć": "c",
                "ĉ": "c",
                "ċ": "c",
                "č": "c",
                "ç": "c",
                "ḉ": "c",
                "ƈ": "c",
                "ȼ": "c",
                "ꜿ": "c",
                "ↄ": "c",
                "ⓓ": "d",
                "ｄ": "d",
                "ḋ": "d",
                "ď": "d",
                "ḍ": "d",
                "ḑ": "d",
                "ḓ": "d",
                "ḏ": "d",
                "đ": "d",
                "ƌ": "d",
                "ɖ": "d",
                "ɗ": "d",
                "ꝺ": "d",
                "ǳ": "dz",
                "ǆ": "dz",
                "ⓔ": "e",
                "ｅ": "e",
                "è": "e",
                "é": "e",
                "ê": "e",
                "ề": "e",
                "ế": "e",
                "ễ": "e",
                "ể": "e",
                "ẽ": "e",
                "ē": "e",
                "ḕ": "e",
                "ḗ": "e",
                "ĕ": "e",
                "ė": "e",
                "ë": "e",
                "ẻ": "e",
                "ě": "e",
                "ȅ": "e",
                "ȇ": "e",
                "ẹ": "e",
                "ệ": "e",
                "ȩ": "e",
                "ḝ": "e",
                "ę": "e",
                "ḙ": "e",
                "ḛ": "e",
                "ɇ": "e",
                "ɛ": "e",
                "ǝ": "e",
                "ⓕ": "f",
                "ｆ": "f",
                "ḟ": "f",
                "ƒ": "f",
                "ꝼ": "f",
                "ⓖ": "g",
                "ｇ": "g",
                "ǵ": "g",
                "ĝ": "g",
                "ḡ": "g",
                "ğ": "g",
                "ġ": "g",
                "ǧ": "g",
                "ģ": "g",
                "ǥ": "g",
                "ɠ": "g",
                "ꞡ": "g",
                "ᵹ": "g",
                "ꝿ": "g",
                "ⓗ": "h",
                "ｈ": "h",
                "ĥ": "h",
                "ḣ": "h",
                "ḧ": "h",
                "ȟ": "h",
                "ḥ": "h",
                "ḩ": "h",
                "ḫ": "h",
                "ẖ": "h",
                "ħ": "h",
                "ⱨ": "h",
                "ⱶ": "h",
                "ɥ": "h",
                "ƕ": "hv",
                "ⓘ": "i",
                "ｉ": "i",
                "ì": "i",
                "í": "i",
                "î": "i",
                "ĩ": "i",
                "ī": "i",
                "ĭ": "i",
                "ï": "i",
                "ḯ": "i",
                "ỉ": "i",
                "ǐ": "i",
                "ȉ": "i",
                "ȋ": "i",
                "ị": "i",
                "į": "i",
                "ḭ": "i",
                "ɨ": "i",
                "ı": "i",
                "ⓙ": "j",
                "ｊ": "j",
                "ĵ": "j",
                "ǰ": "j",
                "ɉ": "j",
                "ⓚ": "k",
                "ｋ": "k",
                "ḱ": "k",
                "ǩ": "k",
                "ḳ": "k",
                "ķ": "k",
                "ḵ": "k",
                "ƙ": "k",
                "ⱪ": "k",
                "ꝁ": "k",
                "ꝃ": "k",
                "ꝅ": "k",
                "ꞣ": "k",
                "ⓛ": "l",
                "ｌ": "l",
                "ŀ": "l",
                "ĺ": "l",
                "ľ": "l",
                "ḷ": "l",
                "ḹ": "l",
                "ļ": "l",
                "ḽ": "l",
                "ḻ": "l",
                "ſ": "l",
                "ł": "l",
                "ƚ": "l",
                "ɫ": "l",
                "ⱡ": "l",
                "ꝉ": "l",
                "ꞁ": "l",
                "ꝇ": "l",
                "ǉ": "lj",
                "ⓜ": "m",
                "ｍ": "m",
                "ḿ": "m",
                "ṁ": "m",
                "ṃ": "m",
                "ɱ": "m",
                "ɯ": "m",
                "ⓝ": "n",
                "ｎ": "n",
                "ǹ": "n",
                "ń": "n",
                "ñ": "n",
                "ṅ": "n",
                "ň": "n",
                "ṇ": "n",
                "ņ": "n",
                "ṋ": "n",
                "ṉ": "n",
                "ƞ": "n",
                "ɲ": "n",
                "ŉ": "n",
                "ꞑ": "n",
                "ꞥ": "n",
                "ǌ": "nj",
                "ⓞ": "o",
                "ｏ": "o",
                "ò": "o",
                "ó": "o",
                "ô": "o",
                "ồ": "o",
                "ố": "o",
                "ỗ": "o",
                "ổ": "o",
                "õ": "o",
                "ṍ": "o",
                "ȭ": "o",
                "ṏ": "o",
                "ō": "o",
                "ṑ": "o",
                "ṓ": "o",
                "ŏ": "o",
                "ȯ": "o",
                "ȱ": "o",
                "ö": "o",
                "ȫ": "o",
                "ỏ": "o",
                "ő": "o",
                "ǒ": "o",
                "ȍ": "o",
                "ȏ": "o",
                "ơ": "o",
                "ờ": "o",
                "ớ": "o",
                "ỡ": "o",
                "ở": "o",
                "ợ": "o",
                "ọ": "o",
                "ộ": "o",
                "ǫ": "o",
                "ǭ": "o",
                "ø": "o",
                "ǿ": "o",
                "ɔ": "o",
                "ꝋ": "o",
                "ꝍ": "o",
                "ɵ": "o",
                "ƣ": "oi",
                "ȣ": "ou",
                "ꝏ": "oo",
                "ⓟ": "p",
                "ｐ": "p",
                "ṕ": "p",
                "ṗ": "p",
                "ƥ": "p",
                "ᵽ": "p",
                "ꝑ": "p",
                "ꝓ": "p",
                "ꝕ": "p",
                "ⓠ": "q",
                "ｑ": "q",
                "ɋ": "q",
                "ꝗ": "q",
                "ꝙ": "q",
                "ⓡ": "r",
                "ｒ": "r",
                "ŕ": "r",
                "ṙ": "r",
                "ř": "r",
                "ȑ": "r",
                "ȓ": "r",
                "ṛ": "r",
                "ṝ": "r",
                "ŗ": "r",
                "ṟ": "r",
                "ɍ": "r",
                "ɽ": "r",
                "ꝛ": "r",
                "ꞧ": "r",
                "ꞃ": "r",
                "ⓢ": "s",
                "ｓ": "s",
                "ß": "s",
                "ś": "s",
                "ṥ": "s",
                "ŝ": "s",
                "ṡ": "s",
                "š": "s",
                "ṧ": "s",
                "ṣ": "s",
                "ṩ": "s",
                "ș": "s",
                "ş": "s",
                "ȿ": "s",
                "ꞩ": "s",
                "ꞅ": "s",
                "ẛ": "s",
                "ⓣ": "t",
                "ｔ": "t",
                "ṫ": "t",
                "ẗ": "t",
                "ť": "t",
                "ṭ": "t",
                "ț": "t",
                "ţ": "t",
                "ṱ": "t",
                "ṯ": "t",
                "ŧ": "t",
                "ƭ": "t",
                "ʈ": "t",
                "ⱦ": "t",
                "ꞇ": "t",
                "ꜩ": "tz",
                "ⓤ": "u",
                "ｕ": "u",
                "ù": "u",
                "ú": "u",
                "û": "u",
                "ũ": "u",
                "ṹ": "u",
                "ū": "u",
                "ṻ": "u",
                "ŭ": "u",
                "ü": "u",
                "ǜ": "u",
                "ǘ": "u",
                "ǖ": "u",
                "ǚ": "u",
                "ủ": "u",
                "ů": "u",
                "ű": "u",
                "ǔ": "u",
                "ȕ": "u",
                "ȗ": "u",
                "ư": "u",
                "ừ": "u",
                "ứ": "u",
                "ữ": "u",
                "ử": "u",
                "ự": "u",
                "ụ": "u",
                "ṳ": "u",
                "ų": "u",
                "ṷ": "u",
                "ṵ": "u",
                "ʉ": "u",
                "ⓥ": "v",
                "ｖ": "v",
                "ṽ": "v",
                "ṿ": "v",
                "ʋ": "v",
                "ꝟ": "v",
                "ʌ": "v",
                "ꝡ": "vy",
                "ⓦ": "w",
                "ｗ": "w",
                "ẁ": "w",
                "ẃ": "w",
                "ŵ": "w",
                "ẇ": "w",
                "ẅ": "w",
                "ẘ": "w",
                "ẉ": "w",
                "ⱳ": "w",
                "ⓧ": "x",
                "ｘ": "x",
                "ẋ": "x",
                "ẍ": "x",
                "ⓨ": "y",
                "ｙ": "y",
                "ỳ": "y",
                "ý": "y",
                "ŷ": "y",
                "ỹ": "y",
                "ȳ": "y",
                "ẏ": "y",
                "ÿ": "y",
                "ỷ": "y",
                "ẙ": "y",
                "ỵ": "y",
                "ƴ": "y",
                "ɏ": "y",
                "ỿ": "y",
                "ⓩ": "z",
                "ｚ": "z",
                "ź": "z",
                "ẑ": "z",
                "ż": "z",
                "ž": "z",
                "ẓ": "z",
                "ẕ": "z",
                "ƶ": "z",
                "ȥ": "z",
                "ɀ": "z",
                "ⱬ": "z",
                "ꝣ": "z",
                "Ά": "Α",
                "Έ": "Ε",
                "Ή": "Η",
                "Ί": "Ι",
                "Ϊ": "Ι",
                "Ό": "Ο",
                "Ύ": "Υ",
                "Ϋ": "Υ",
                "Ώ": "Ω",
                "ά": "α",
                "έ": "ε",
                "ή": "η",
                "ί": "ι",
                "ϊ": "ι",
                "ΐ": "ι",
                "ό": "ο",
                "ύ": "υ",
                "ϋ": "υ",
                "ΰ": "υ",
                "ω": "ω",
                "ς": "σ"
            }
        }),
        b.define("select2/data/base", ["../utils"], function(a) {
            function b(a, c) {
                b.__super__.constructor.call(this)
            }
            return a.Extend(b, a.Observable),
            b.prototype.current = function(a) {
                throw new Error("The `current` method must be defined in child classes.")
            }
            ,
            b.prototype.query = function(a, b) {
                throw new Error("The `query` method must be defined in child classes.")
            }
            ,
            b.prototype.bind = function(a, b) {}
            ,
            b.prototype.destroy = function() {}
            ,
            b.prototype.generateResultId = function(b, c) {
                var d = b.id + "-result-";
                return d += a.generateChars(4),
                null != c.id ? d += "-" + c.id.toString() : d += "-" + a.generateChars(4),
                d
            }
            ,
            b
        }),
        b.define("select2/data/select", ["./base", "../utils", "jquery"], function(a, b, c) {
            function d(a, b) {
                this.$element = a,
                this.options = b,
                d.__super__.constructor.call(this)
            }
            return b.Extend(d, a),
            d.prototype.current = function(a) {
                var b = []
                  , d = this;
                this.$element.find(":selected").each(function() {
                    var a = c(this)
                      , e = d.item(a);
                    b.push(e)
                }),
                a(b)
            }
            ,
            d.prototype.select = function(a) {
                var b = this;
                if (a.selected = !0,
                c(a.element).is("option"))
                    return a.element.selected = !0,
                    void this.$element.trigger("change");
                if (this.$element.prop("multiple"))
                    this.current(function(d) {
                        var e = [];
                        a = [a],
                        a.push.apply(a, d);
                        for (var f = 0; f < a.length; f++) {
                            var g = a[f].id;
                            -1 === c.inArray(g, e) && e.push(g)
                        }
                        b.$element.val(e),
                        b.$element.trigger("change")
                    });
                else {
                    var d = a.id;
                    this.$element.val(d),
                    this.$element.trigger("change")
                }
            }
            ,
            d.prototype.unselect = function(a) {
                var b = this;
                if (this.$element.prop("multiple")) {
                    if (a.selected = !1,
                    c(a.element).is("option"))
                        return a.element.selected = !1,
                        void this.$element.trigger("change");
                    this.current(function(d) {
                        for (var e = [], f = 0; f < d.length; f++) {
                            var g = d[f].id;
                            g !== a.id && -1 === c.inArray(g, e) && e.push(g)
                        }
                        b.$element.val(e),
                        b.$element.trigger("change")
                    })
                }
            }
            ,
            d.prototype.bind = function(a, b) {
                var c = this;
                this.container = a,
                a.on("select", function(a) {
                    c.select(a.data)
                }),
                a.on("unselect", function(a) {
                    c.unselect(a.data)
                })
            }
            ,
            d.prototype.destroy = function() {
                this.$element.find("*").each(function() {
                    b.RemoveData(this)
                })
            }
            ,
            d.prototype.query = function(a, b) {
                var d = []
                  , e = this;
                this.$element.children().each(function() {
                    var b = c(this);
                    if (b.is("option") || b.is("optgroup")) {
                        var f = e.item(b)
                          , g = e.matches(a, f);
                        null !== g && d.push(g)
                    }
                }),
                b({
                    results: d
                })
            }
            ,
            d.prototype.addOptions = function(a) {
                b.appendMany(this.$element, a)
            }
            ,
            d.prototype.option = function(a) {
                var d;
                a.children ? (d = document.createElement("optgroup"),
                d.label = a.text) : (d = document.createElement("option"),
                void 0 !== d.textContent ? d.textContent = a.text : d.innerText = a.text),
                void 0 !== a.id && (d.value = a.id),
                a.disabled && (d.disabled = !0),
                a.selected && (d.selected = !0),
                a.title && (d.title = a.title);
                var e = c(d)
                  , f = this._normalizeItem(a);
                return f.element = d,
                b.StoreData(d, "data", f),
                e
            }
            ,
            d.prototype.item = function(a) {
                var d = {};
                if (null != (d = b.GetData(a[0], "data")))
                    return d;
                if (a.is("option"))
                    d = {
                        id: a.val(),
                        text: a.text(),
                        disabled: a.prop("disabled"),
                        selected: a.prop("selected"),
                        title: a.prop("title")
                    };
                else if (a.is("optgroup")) {
                    d = {
                        text: a.prop("label"),
                        children: [],
                        title: a.prop("title")
                    };
                    for (var e = a.children("option"), f = [], g = 0; g < e.length; g++) {
                        var h = c(e[g])
                          , i = this.item(h);
                        f.push(i)
                    }
                    d.children = f
                }
                return d = this._normalizeItem(d),
                d.element = a[0],
                b.StoreData(a[0], "data", d),
                d
            }
            ,
            d.prototype._normalizeItem = function(a) {
                a !== Object(a) && (a = {
                    id: a,
                    text: a
                }),
                a = c.extend({}, {
                    text: ""
                }, a);
                var b = {
                    selected: !1,
                    disabled: !1
                };
                return null != a.id && (a.id = a.id.toString()),
                null != a.text && (a.text = a.text.toString()),
                null == a._resultId && a.id && null != this.container && (a._resultId = this.generateResultId(this.container, a)),
                c.extend({}, b, a)
            }
            ,
            d.prototype.matches = function(a, b) {
                return this.options.get("matcher")(a, b)
            }
            ,
            d
        }),
        b.define("select2/data/array", ["./select", "../utils", "jquery"], function(a, b, c) {
            function d(a, b) {
                var c = b.get("data") || [];
                d.__super__.constructor.call(this, a, b),
                this.addOptions(this.convertToOptions(c))
            }
            return b.Extend(d, a),
            d.prototype.select = function(a) {
                var b = this.$element.find("option").filter(function(b, c) {
                    return c.value == a.id.toString()
                });
                0 === b.length && (b = this.option(a),
                this.addOptions(b)),
                d.__super__.select.call(this, a)
            }
            ,
            d.prototype.convertToOptions = function(a) {
                function d(a) {
                    return function() {
                        return c(this).val() == a.id
                    }
                }
                for (var e = this, f = this.$element.find("option"), g = f.map(function() {
                    return e.item(c(this)).id
                }).get(), h = [], i = 0; i < a.length; i++) {
                    var j = this._normalizeItem(a[i]);
                    if (c.inArray(j.id, g) >= 0) {
                        var k = f.filter(d(j))
                          , l = this.item(k)
                          , m = c.extend(!0, {}, j, l)
                          , n = this.option(m);
                        k.replaceWith(n)
                    } else {
                        var o = this.option(j);
                        if (j.children) {
                            var p = this.convertToOptions(j.children);
                            b.appendMany(o, p)
                        }
                        h.push(o)
                    }
                }
                return h
            }
            ,
            d
        }),
        b.define("select2/data/ajax", ["./array", "../utils", "jquery"], function(a, b, c) {
            function d(a, b) {
                this.ajaxOptions = this._applyDefaults(b.get("ajax")),
                null != this.ajaxOptions.processResults && (this.processResults = this.ajaxOptions.processResults),
                d.__super__.constructor.call(this, a, b)
            }
            return b.Extend(d, a),
            d.prototype._applyDefaults = function(a) {
                var b = {
                    data: function(a) {
                        return c.extend({}, a, {
                            q: a.term
                        })
                    },
                    transport: function(a, b, d) {
                        var e = c.ajax(a);
                        return e.then(b),
                        e.fail(d),
                        e
                    }
                };
                return c.extend({}, b, a, !0)
            }
            ,
            d.prototype.processResults = function(a) {
                return a
            }
            ,
            d.prototype.query = function(a, b) {
                function d() {
                    var d = f.transport(f, function(d) {
                        var f = e.processResults(d, a);
                        e.options.get("debug") && window.console && console.error && (f && f.results && c.isArray(f.results) || console.error("Select2: The AJAX results did not return an array in the `results` key of the response.")),
                        b(f)
                    }, function() {
                        "status"in d && (0 === d.status || "0" === d.status) || e.trigger("results:message", {
                            message: "errorLoading"
                        })
                    });
                    e._request = d
                }
                var e = this;
                null != this._request && (c.isFunction(this._request.abort) && this._request.abort(),
                this._request = null);
                var f = c.extend({
                    type: "GET"
                }, this.ajaxOptions);
                "function" == typeof f.url && (f.url = f.url.call(this.$element, a)),
                "function" == typeof f.data && (f.data = f.data.call(this.$element, a)),
                this.ajaxOptions.delay && null != a.term ? (this._queryTimeout && window.clearTimeout(this._queryTimeout),
                this._queryTimeout = window.setTimeout(d, this.ajaxOptions.delay)) : d()
            }
            ,
            d
        }),
        b.define("select2/data/tags", ["jquery"], function(a) {
            function b(b, c, d) {
                var e = d.get("tags")
                  , f = d.get("createTag");
                void 0 !== f && (this.createTag = f);
                var g = d.get("insertTag");
                if (void 0 !== g && (this.insertTag = g),
                b.call(this, c, d),
                a.isArray(e))
                    for (var h = 0; h < e.length; h++) {
                        var i = e[h]
                          , j = this._normalizeItem(i)
                          , k = this.option(j);
                        this.$element.append(k)
                    }
            }
            return b.prototype.query = function(a, b, c) {
                function d(a, f) {
                    for (var g = a.results, h = 0; h < g.length; h++) {
                        var i = g[h]
                          , j = null != i.children && !d({
                            results: i.children
                        }, !0);
                        if ((i.text || "").toUpperCase() === (b.term || "").toUpperCase() || j)
                            return !f && (a.data = g,
                            void c(a))
                    }
                    if (f)
                        return !0;
                    var k = e.createTag(b);
                    if (null != k) {
                        var l = e.option(k);
                        l.attr("data-select2-tag", !0),
                        e.addOptions([l]),
                        e.insertTag(g, k)
                    }
                    a.results = g,
                    c(a)
                }
                var e = this;
                if (this._removeOldTags(),
                null == b.term || null != b.page)
                    return void a.call(this, b, c);
                a.call(this, b, d)
            }
            ,
            b.prototype.createTag = function(b, c) {
                var d = a.trim(c.term);
                return "" === d ? null : {
                    id: d,
                    text: d
                }
            }
            ,
            b.prototype.insertTag = function(a, b, c) {
                b.unshift(c)
            }
            ,
            b.prototype._removeOldTags = function(b) {
                this._lastTag;
                this.$element.find("option[data-select2-tag]").each(function() {
                    this.selected || a(this).remove()
                })
            }
            ,
            b
        }),
        b.define("select2/data/tokenizer", ["jquery"], function(a) {
            function b(a, b, c) {
                var d = c.get("tokenizer");
                void 0 !== d && (this.tokenizer = d),
                a.call(this, b, c)
            }
            return b.prototype.bind = function(a, b, c) {
                a.call(this, b, c),
                this.$search = b.dropdown.$search || b.selection.$search || c.find(".select2-search__field")
            }
            ,
            b.prototype.query = function(b, c, d) {
                function e(b) {
                    var c = g._normalizeItem(b);
                    if (!g.$element.find("option").filter(function() {
                        return a(this).val() === c.id
                    }).length) {
                        var d = g.option(c);
                        d.attr("data-select2-tag", !0),
                        g._removeOldTags(),
                        g.addOptions([d])
                    }
                    f(c)
                }
                function f(a) {
                    g.trigger("select", {
                        data: a
                    })
                }
                var g = this;
                c.term = c.term || "";
                var h = this.tokenizer(c, this.options, e);
                h.term !== c.term && (this.$search.length && (this.$search.val(h.term),
                this.$search.focus()),
                c.term = h.term),
                b.call(this, c, d)
            }
            ,
            b.prototype.tokenizer = function(b, c, d, e) {
                for (var f = d.get("tokenSeparators") || [], g = c.term, h = 0, i = this.createTag || function(a) {
                    return {
                        id: a.term,
                        text: a.term
                    }
                }
                ; h < g.length; ) {
                    var j = g[h];
                    if (-1 !== a.inArray(j, f)) {
                        var k = g.substr(0, h)
                          , l = a.extend({}, c, {
                            term: k
                        })
                          , m = i(l);
                        null != m ? (e(m),
                        g = g.substr(h + 1) || "",
                        h = 0) : h++
                    } else
                        h++
                }
                return {
                    term: g
                }
            }
            ,
            b
        }),
        b.define("select2/data/minimumInputLength", [], function() {
            function a(a, b, c) {
                this.minimumInputLength = c.get("minimumInputLength"),
                a.call(this, b, c)
            }
            return a.prototype.query = function(a, b, c) {
                if (b.term = b.term || "",
                b.term.length < this.minimumInputLength)
                    return void this.trigger("results:message", {
                        message: "inputTooShort",
                        args: {
                            minimum: this.minimumInputLength,
                            input: b.term,
                            params: b
                        }
                    });
                a.call(this, b, c)
            }
            ,
            a
        }),
        b.define("select2/data/maximumInputLength", [], function() {
            function a(a, b, c) {
                this.maximumInputLength = c.get("maximumInputLength"),
                a.call(this, b, c)
            }
            return a.prototype.query = function(a, b, c) {
                if (b.term = b.term || "",
                this.maximumInputLength > 0 && b.term.length > this.maximumInputLength)
                    return void this.trigger("results:message", {
                        message: "inputTooLong",
                        args: {
                            maximum: this.maximumInputLength,
                            input: b.term,
                            params: b
                        }
                    });
                a.call(this, b, c)
            }
            ,
            a
        }),
        b.define("select2/data/maximumSelectionLength", [], function() {
            function a(a, b, c) {
                this.maximumSelectionLength = c.get("maximumSelectionLength"),
                a.call(this, b, c)
            }
            return a.prototype.query = function(a, b, c) {
                var d = this;
                this.current(function(e) {
                    var f = null != e ? e.length : 0;
                    if (d.maximumSelectionLength > 0 && f >= d.maximumSelectionLength)
                        return void d.trigger("results:message", {
                            message: "maximumSelected",
                            args: {
                                maximum: d.maximumSelectionLength
                            }
                        });
                    a.call(d, b, c)
                })
            }
            ,
            a
        }),
        b.define("select2/dropdown", ["jquery", "./utils"], function(a, b) {
            function c(a, b) {
                this.$element = a,
                this.options = b,
                c.__super__.constructor.call(this)
            }
            return b.Extend(c, b.Observable),
            c.prototype.render = function() {
                var b = a('<span class="select2-dropdown"><span class="select2-results"></span></span>');
                return b.attr("dir", this.options.get("dir")),
                this.$dropdown = b,
                b
            }
            ,
            c.prototype.bind = function() {}
            ,
            c.prototype.position = function(a, b) {}
            ,
            c.prototype.destroy = function() {
                this.$dropdown.remove()
            }
            ,
            c
        }),
        b.define("select2/dropdown/search", ["jquery", "../utils"], function(a, b) {
            function c() {}
            return c.prototype.render = function(b) {
                var c = b.call(this)
                  , d = a('<span class="select2-search select2-search--dropdown"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="none" spellcheck="false" role="textbox" /></span>');
                return this.$searchContainer = d,
                this.$search = d.find("input"),
                c.prepend(d),
                c
            }
            ,
            c.prototype.bind = function(b, c, d) {
                var e = this;
                b.call(this, c, d),
                this.$search.on("keydown", function(a) {
                    e.trigger("keypress", a),
                    e._keyUpPrevented = a.isDefaultPrevented()
                }),
                this.$search.on("input", function(b) {
                    a(this).off("keyup")
                }),
                this.$search.on("keyup input", function(a) {
                    e.handleSearch(a)
                }),
                c.on("open", function() {
                    e.$search.attr("tabindex", 0),
                    e.$search.focus(),
                    window.setTimeout(function() {
                        e.$search.focus()
                    }, 0)
                }),
                c.on("close", function() {
                    e.$search.attr("tabindex", -1),
                    e.$search.val(""),
                    e.$search.blur()
                }),
                c.on("focus", function() {
                    c.isOpen() || e.$search.focus()
                }),
                c.on("results:all", function(a) {
                    if (null == a.query.term || "" === a.query.term) {
                        e.showSearch(a) ? e.$searchContainer.removeClass("select2-search--hide") : e.$searchContainer.addClass("select2-search--hide")
                    }
                })
            }
            ,
            c.prototype.handleSearch = function(a) {
                if (!this._keyUpPrevented) {
                    var b = this.$search.val();
                    this.trigger("query", {
                        term: b
                    })
                }
                this._keyUpPrevented = !1
            }
            ,
            c.prototype.showSearch = function(a, b) {
                return !0
            }
            ,
            c
        }),
        b.define("select2/dropdown/hidePlaceholder", [], function() {
            function a(a, b, c, d) {
                this.placeholder = this.normalizePlaceholder(c.get("placeholder")),
                a.call(this, b, c, d)
            }
            return a.prototype.append = function(a, b) {
                b.results = this.removePlaceholder(b.results),
                a.call(this, b)
            }
            ,
            a.prototype.normalizePlaceholder = function(a, b) {
                return "string" == typeof b && (b = {
                    id: "",
                    text: b
                }),
                b
            }
            ,
            a.prototype.removePlaceholder = function(a, b) {
                for (var c = b.slice(0), d = b.length - 1; d >= 0; d--) {
                    var e = b[d];
                    this.placeholder.id === e.id && c.splice(d, 1)
                }
                return c
            }
            ,
            a
        }),
        b.define("select2/dropdown/infiniteScroll", ["jquery"], function(a) {
            function b(a, b, c, d) {
                this.lastParams = {},
                a.call(this, b, c, d),
                this.$loadingMore = this.createLoadingMore(),
                this.loading = !1
            }
            return b.prototype.append = function(a, b) {
                this.$loadingMore.remove(),
                this.loading = !1,
                a.call(this, b),
                this.showLoadingMore(b) && this.$results.append(this.$loadingMore)
            }
            ,
            b.prototype.bind = function(b, c, d) {
                var e = this;
                b.call(this, c, d),
                c.on("query", function(a) {
                    e.lastParams = a,
                    e.loading = !0
                }),
                c.on("query:append", function(a) {
                    e.lastParams = a,
                    e.loading = !0
                }),
                this.$results.on("scroll", function() {
                    var b = a.contains(document.documentElement, e.$loadingMore[0]);
                    if (!e.loading && b) {
                        e.$results.offset().top + e.$results.outerHeight(!1) + 50 >= e.$loadingMore.offset().top + e.$loadingMore.outerHeight(!1) && e.loadMore()
                    }
                })
            }
            ,
            b.prototype.loadMore = function() {
                this.loading = !0;
                var b = a.extend({}, {
                    page: 1
                }, this.lastParams);
                b.page++,
                this.trigger("query:append", b)
            }
            ,
            b.prototype.showLoadingMore = function(a, b) {
                return b.pagination && b.pagination.more
            }
            ,
            b.prototype.createLoadingMore = function() {
                var b = a('<li class="select2-results__option select2-results__option--load-more"role="treeitem" aria-disabled="true"></li>')
                  , c = this.options.get("translations").get("loadingMore");
                return b.html(c(this.lastParams)),
                b
            }
            ,
            b
        }),
        b.define("select2/dropdown/attachBody", ["jquery", "../utils"], function(a, b) {
            function c(b, c, d) {
                this.$dropdownParent = d.get("dropdownParent") || a(document.body),
                b.call(this, c, d)
            }
            return c.prototype.bind = function(a, b, c) {
                var d = this
                  , e = !1;
                a.call(this, b, c),
                b.on("open", function() {
                    d._showDropdown(),
                    d._attachPositioningHandler(b),
                    e || (e = !0,
                    b.on("results:all", function() {
                        d._positionDropdown(),
                        d._resizeDropdown()
                    }),
                    b.on("results:append", function() {
                        d._positionDropdown(),
                        d._resizeDropdown()
                    }))
                }),
                b.on("close", function() {
                    d._hideDropdown(),
                    d._detachPositioningHandler(b)
                }),
                this.$dropdownContainer.on("mousedown", function(a) {
                    a.stopPropagation()
                })
            }
            ,
            c.prototype.destroy = function(a) {
                a.call(this),
                this.$dropdownContainer.remove()
            }
            ,
            c.prototype.position = function(a, b, c) {
                b.attr("class", c.attr("class")),
                b.removeClass("select2"),
                b.addClass("select2-container--open"),
                b.css({
                    position: "absolute",
                    top: -999999
                }),
                this.$container = c
            }
            ,
            c.prototype.render = function(b) {
                var c = a("<span></span>")
                  , d = b.call(this);
                return c.append(d),
                this.$dropdownContainer = c,
                c
            }
            ,
            c.prototype._hideDropdown = function(a) {
                this.$dropdownContainer.detach()
            }
            ,
            c.prototype._attachPositioningHandler = function(c, d) {
                var e = this
                  , f = "scroll.select2." + d.id
                  , g = "resize.select2." + d.id
                  , h = "orientationchange.select2." + d.id
                  , i = this.$container.parents().filter(b.hasScroll);
                i.each(function() {
                    b.StoreData(this, "select2-scroll-position", {
                        x: a(this).scrollLeft(),
                        y: a(this).scrollTop()
                    })
                }),
                i.on(f, function(c) {
                    var d = b.GetData(this, "select2-scroll-position");
                    a(this).scrollTop(d.y)
                }),
                a(window).on(f + " " + g + " " + h, function(a) {
                    e._positionDropdown(),
                    e._resizeDropdown()
                })
            }
            ,
            c.prototype._detachPositioningHandler = function(c, d) {
                var e = "scroll.select2." + d.id
                  , f = "resize.select2." + d.id
                  , g = "orientationchange.select2." + d.id;
                this.$container.parents().filter(b.hasScroll).off(e),
                a(window).off(e + " " + f + " " + g)
            }
            ,
            c.prototype._positionDropdown = function() {
                var b = a(window)
                  , c = this.$dropdown.hasClass("select2-dropdown--above")
                  , d = this.$dropdown.hasClass("select2-dropdown--below")
                  , e = null
                  , f = this.$container.offset();
                f.bottom = f.top + this.$container.outerHeight(!1);
                var g = {
                    height: this.$container.outerHeight(!1)
                };
                g.top = f.top,
                g.bottom = f.top + g.height;
                var h = {
                    height: this.$dropdown.outerHeight(!1)
                }
                  , i = {
                    top: b.scrollTop(),
                    bottom: b.scrollTop() + b.height()
                }
                  , j = i.top < f.top - h.height
                  , k = i.bottom > f.bottom + h.height
                  , l = {
                    left: f.left,
                    top: g.bottom
                }
                  , m = this.$dropdownParent;
                "static" === m.css("position") && (m = m.offsetParent());
                var n = m.offset();
                l.top -= n.top,
                l.left -= n.left,
                c || d || (e = "below"),
                k || !j || c ? !j && k && c && (e = "below") : e = "above",
                ("above" == e || c && "below" !== e) && (l.top = g.top - n.top - h.height),
                null != e && (this.$dropdown.removeClass("select2-dropdown--below select2-dropdown--above").addClass("select2-dropdown--" + e),
                this.$container.removeClass("select2-container--below select2-container--above").addClass("select2-container--" + e)),
                this.$dropdownContainer.css(l)
            }
            ,
            c.prototype._resizeDropdown = function() {
                var a = {
                    width: this.$container.outerWidth(!1) + "px"
                };
                this.options.get("dropdownAutoWidth") && (a.minWidth = a.width,
                a.position = "relative",
                a.width = "auto"),
                this.$dropdown.css(a)
            }
            ,
            c.prototype._showDropdown = function(a) {
                this.$dropdownContainer.appendTo(this.$dropdownParent),
                this._positionDropdown(),
                this._resizeDropdown()
            }
            ,
            c
        }),
        b.define("select2/dropdown/minimumResultsForSearch", [], function() {
            function a(b) {
                for (var c = 0, d = 0; d < b.length; d++) {
                    var e = b[d];
                    e.children ? c += a(e.children) : c++
                }
                return c
            }
            function b(a, b, c, d) {
                this.minimumResultsForSearch = c.get("minimumResultsForSearch"),
                this.minimumResultsForSearch < 0 && (this.minimumResultsForSearch = 1 / 0),
                a.call(this, b, c, d)
            }
            return b.prototype.showSearch = function(b, c) {
                return !(a(c.data.results) < this.minimumResultsForSearch) && b.call(this, c)
            }
            ,
            b
        }),
        b.define("select2/dropdown/selectOnClose", ["../utils"], function(a) {
            function b() {}
            return b.prototype.bind = function(a, b, c) {
                var d = this;
                a.call(this, b, c),
                b.on("close", function(a) {
                    d._handleSelectOnClose(a)
                })
            }
            ,
            b.prototype._handleSelectOnClose = function(b, c) {
                if (c && null != c.originalSelect2Event) {
                    var d = c.originalSelect2Event;
                    if ("select" === d._type || "unselect" === d._type)
                        return
                }
                var e = this.getHighlightedResults();
                if (!(e.length < 1)) {
                    var f = a.GetData(e[0], "data");
                    null != f.element && f.element.selected || null == f.element && f.selected || this.trigger("select", {
                        data: f
                    })
                }
            }
            ,
            b
        }),
        b.define("select2/dropdown/closeOnSelect", [], function() {
            function a() {}
            return a.prototype.bind = function(a, b, c) {
                var d = this;
                a.call(this, b, c),
                b.on("select", function(a) {
                    d._selectTriggered(a)
                }),
                b.on("unselect", function(a) {
                    d._selectTriggered(a)
                })
            }
            ,
            a.prototype._selectTriggered = function(a, b) {
                var c = b.originalEvent;
                c && c.ctrlKey || this.trigger("close", {
                    originalEvent: c,
                    originalSelect2Event: b
                })
            }
            ,
            a
        }),
        b.define("select2/i18n/en", [], function() {
            return {
                errorLoading: function() {
                    return "The results could not be loaded."
                },
                inputTooLong: function(a) {
                    var b = a.input.length - a.maximum
                      , c = "Please delete " + b + " character";
                    return 1 != b && (c += "s"),
                    c
                },
                inputTooShort: function(a) {
                    return "Please enter " + (a.minimum - a.input.length) + " or more characters"
                },
                loadingMore: function() {
                    return "Loading more results…"
                },
                maximumSelected: function(a) {
                    var b = "You can only select " + a.maximum + " item";
                    return 1 != a.maximum && (b += "s"),
                    b
                },
                noResults: function() {
                    return "No results found"
                },
                searching: function() {
                    return "Searching…"
                }
            }
        }),
        b.define("select2/defaults", ["jquery", "require", "./results", "./selection/single", "./selection/multiple", "./selection/placeholder", "./selection/allowClear", "./selection/search", "./selection/eventRelay", "./utils", "./translation", "./diacritics", "./data/select", "./data/array", "./data/ajax", "./data/tags", "./data/tokenizer", "./data/minimumInputLength", "./data/maximumInputLength", "./data/maximumSelectionLength", "./dropdown", "./dropdown/search", "./dropdown/hidePlaceholder", "./dropdown/infiniteScroll", "./dropdown/attachBody", "./dropdown/minimumResultsForSearch", "./dropdown/selectOnClose", "./dropdown/closeOnSelect", "./i18n/en"], function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C) {
            function D() {
                this.reset()
            }
            return D.prototype.apply = function(l) {
                if (l = a.extend(!0, {}, this.defaults, l),
                null == l.dataAdapter) {
                    if (null != l.ajax ? l.dataAdapter = o : null != l.data ? l.dataAdapter = n : l.dataAdapter = m,
                    l.minimumInputLength > 0 && (l.dataAdapter = j.Decorate(l.dataAdapter, r)),
                    l.maximumInputLength > 0 && (l.dataAdapter = j.Decorate(l.dataAdapter, s)),
                    l.maximumSelectionLength > 0 && (l.dataAdapter = j.Decorate(l.dataAdapter, t)),
                    l.tags && (l.dataAdapter = j.Decorate(l.dataAdapter, p)),
                    null == l.tokenSeparators && null == l.tokenizer || (l.dataAdapter = j.Decorate(l.dataAdapter, q)),
                    null != l.query) {
                        var C = b(l.amdBase + "compat/query");
                        l.dataAdapter = j.Decorate(l.dataAdapter, C)
                    }
                    if (null != l.initSelection) {
                        var D = b(l.amdBase + "compat/initSelection");
                        l.dataAdapter = j.Decorate(l.dataAdapter, D)
                    }
                }
                if (null == l.resultsAdapter && (l.resultsAdapter = c,
                null != l.ajax && (l.resultsAdapter = j.Decorate(l.resultsAdapter, x)),
                null != l.placeholder && (l.resultsAdapter = j.Decorate(l.resultsAdapter, w)),
                l.selectOnClose && (l.resultsAdapter = j.Decorate(l.resultsAdapter, A))),
                null == l.dropdownAdapter) {
                    if (l.multiple)
                        l.dropdownAdapter = u;
                    else {
                        var E = j.Decorate(u, v);
                        l.dropdownAdapter = E
                    }
                    if (0 !== l.minimumResultsForSearch && (l.dropdownAdapter = j.Decorate(l.dropdownAdapter, z)),
                    l.closeOnSelect && (l.dropdownAdapter = j.Decorate(l.dropdownAdapter, B)),
                    null != l.dropdownCssClass || null != l.dropdownCss || null != l.adaptDropdownCssClass) {
                        var F = b(l.amdBase + "compat/dropdownCss");
                        l.dropdownAdapter = j.Decorate(l.dropdownAdapter, F)
                    }
                    l.dropdownAdapter = j.Decorate(l.dropdownAdapter, y)
                }
                if (null == l.selectionAdapter) {
                    if (l.multiple ? l.selectionAdapter = e : l.selectionAdapter = d,
                    null != l.placeholder && (l.selectionAdapter = j.Decorate(l.selectionAdapter, f)),
                    l.allowClear && (l.selectionAdapter = j.Decorate(l.selectionAdapter, g)),
                    l.multiple && (l.selectionAdapter = j.Decorate(l.selectionAdapter, h)),
                    null != l.containerCssClass || null != l.containerCss || null != l.adaptContainerCssClass) {
                        var G = b(l.amdBase + "compat/containerCss");
                        l.selectionAdapter = j.Decorate(l.selectionAdapter, G)
                    }
                    l.selectionAdapter = j.Decorate(l.selectionAdapter, i)
                }
                if ("string" == typeof l.language)
                    if (l.language.indexOf("-") > 0) {
                        var H = l.language.split("-")
                          , I = H[0];
                        l.language = [l.language, I]
                    } else
                        l.language = [l.language];
                if (a.isArray(l.language)) {
                    var J = new k;
                    l.language.push("en");
                    for (var K = l.language, L = 0; L < K.length; L++) {
                        var M = K[L]
                          , N = {};
                        try {
                            N = k.loadPath(M)
                        } catch (a) {
                            try {
                                M = this.defaults.amdLanguageBase + M,
                                N = k.loadPath(M)
                            } catch (a) {
                                l.debug && window.console && console.warn && console.warn('Select2: The language file for "' + M + '" could not be automatically loaded. A fallback will be used instead.');
                                continue
                            }
                        }
                        J.extend(N)
                    }
                    l.translations = J
                } else {
                    var O = k.loadPath(this.defaults.amdLanguageBase + "en")
                      , P = new k(l.language);
                    P.extend(O),
                    l.translations = P
                }
                return l
            }
            ,
            D.prototype.reset = function() {
                function b(a) {
                    function b(a) {
                        return l[a] || a
                    }
                    return a.replace(/[^\u0000-\u007E]/g, b)
                }
                function c(d, e) {
                    if ("" === a.trim(d.term))
                        return e;
                    if (e.children && e.children.length > 0) {
                        for (var f = a.extend(!0, {}, e), g = e.children.length - 1; g >= 0; g--) {
                            null == c(d, e.children[g]) && f.children.splice(g, 1)
                        }
                        return f.children.length > 0 ? f : c(d, f)
                    }
                    var h = b(e.text).toUpperCase()
                      , i = b(d.term).toUpperCase();
                    return h.indexOf(i) > -1 ? e : null
                }
                this.defaults = {
                    amdBase: "./",
                    amdLanguageBase: "./i18n/",
                    closeOnSelect: !0,
                    debug: !1,
                    dropdownAutoWidth: !1,
                    escapeMarkup: j.escapeMarkup,
                    language: C,
                    matcher: c,
                    minimumInputLength: 0,
                    maximumInputLength: 0,
                    maximumSelectionLength: 0,
                    minimumResultsForSearch: 0,
                    selectOnClose: !1,
                    sorter: function(a) {
                        return a
                    },
                    templateResult: function(a) {
                        return a.text
                    },
                    templateSelection: function(a) {
                        return a.text
                    },
                    theme: "default",
                    width: "resolve"
                }
            }
            ,
            D.prototype.set = function(b, c) {
                var d = a.camelCase(b)
                  , e = {};
                e[d] = c;
                var f = j._convertData(e);
                a.extend(!0, this.defaults, f)
            }
            ,
            new D
        }),
        b.define("select2/options", ["require", "jquery", "./defaults", "./utils"], function(a, b, c, d) {
            function e(b, e) {
                if (this.options = b,
                null != e && this.fromElement(e),
                this.options = c.apply(this.options),
                e && e.is("input")) {
                    var f = a(this.get("amdBase") + "compat/inputData");
                    this.options.dataAdapter = d.Decorate(this.options.dataAdapter, f)
                }
            }
            return e.prototype.fromElement = function(a) {
                var c = ["select2"];
                null == this.options.multiple && (this.options.multiple = a.prop("multiple")),
                null == this.options.disabled && (this.options.disabled = a.prop("disabled")),
                null == this.options.language && (a.prop("lang") ? this.options.language = a.prop("lang").toLowerCase() : a.closest("[lang]").prop("lang") && (this.options.language = a.closest("[lang]").prop("lang"))),
                null == this.options.dir && (a.prop("dir") ? this.options.dir = a.prop("dir") : a.closest("[dir]").prop("dir") ? this.options.dir = a.closest("[dir]").prop("dir") : this.options.dir = "ltr"),
                a.prop("disabled", this.options.disabled),
                a.prop("multiple", this.options.multiple),
                d.GetData(a[0], "select2Tags") && (this.options.debug && window.console && console.warn && console.warn('Select2: The `data-select2-tags` attribute has been changed to use the `data-data` and `data-tags="true"` attributes and will be removed in future versions of Select2.'),
                d.StoreData(a[0], "data", d.GetData(a[0], "select2Tags")),
                d.StoreData(a[0], "tags", !0)),
                d.GetData(a[0], "ajaxUrl") && (this.options.debug && window.console && console.warn && console.warn("Select2: The `data-ajax-url` attribute has been changed to `data-ajax--url` and support for the old attribute will be removed in future versions of Select2."),
                a.attr("ajax--url", d.GetData(a[0], "ajaxUrl")),
                d.StoreData(a[0], "ajax-Url", d.GetData(a[0], "ajaxUrl")));
                var e = {};
                e = b.fn.jquery && "1." == b.fn.jquery.substr(0, 2) && a[0].dataset ? b.extend(!0, {}, a[0].dataset, d.GetData(a[0])) : d.GetData(a[0]);
                var f = b.extend(!0, {}, e);
                f = d._convertData(f);
                for (var g in f)
                    b.inArray(g, c) > -1 || (b.isPlainObject(this.options[g]) ? b.extend(this.options[g], f[g]) : this.options[g] = f[g]);
                return this
            }
            ,
            e.prototype.get = function(a) {
                return this.options[a]
            }
            ,
            e.prototype.set = function(a, b) {
                this.options[a] = b
            }
            ,
            e
        }),
        b.define("select2/core", ["jquery", "./options", "./utils", "./keys"], function(a, b, c, d) {
            var e = function(a, d) {
                null != c.GetData(a[0], "select2") && c.GetData(a[0], "select2").destroy(),
                this.$element = a,
                this.id = this._generateId(a),
                d = d || {},
                this.options = new b(d,a),
                e.__super__.constructor.call(this);
                var f = a.attr("tabindex") || 0;
                c.StoreData(a[0], "old-tabindex", f),
                a.attr("tabindex", "-1");
                var g = this.options.get("dataAdapter");
                this.dataAdapter = new g(a,this.options);
                var h = this.render();
                this._placeContainer(h);
                var i = this.options.get("selectionAdapter");
                this.selection = new i(a,this.options),
                this.$selection = this.selection.render(),
                this.selection.position(this.$selection, h);
                var j = this.options.get("dropdownAdapter");
                this.dropdown = new j(a,this.options),
                this.$dropdown = this.dropdown.render(),
                this.dropdown.position(this.$dropdown, h);
                var k = this.options.get("resultsAdapter");
                this.results = new k(a,this.options,this.dataAdapter),
                this.$results = this.results.render(),
                this.results.position(this.$results, this.$dropdown);
                var l = this;
                this._bindAdapters(),
                this._registerDomEvents(),
                this._registerDataEvents(),
                this._registerSelectionEvents(),
                this._registerDropdownEvents(),
                this._registerResultsEvents(),
                this._registerEvents(),
                this.dataAdapter.current(function(a) {
                    l.trigger("selection:update", {
                        data: a
                    })
                }),
                a.addClass("select2-hidden-accessible"),
                a.attr("aria-hidden", "true"),
                this._syncAttributes(),
                c.StoreData(a[0], "select2", this)
            };
            return c.Extend(e, c.Observable),
            e.prototype._generateId = function(a) {
                var b = "";
                return b = null != a.attr("id") ? a.attr("id") : null != a.attr("name") ? a.attr("name") + "-" + c.generateChars(2) : c.generateChars(4),
                b = b.replace(/(:|\.|\[|\]|,)/g, ""),
                b = "select2-" + b
            }
            ,
            e.prototype._placeContainer = function(a) {
                a.insertAfter(this.$element);
                var b = this._resolveWidth(this.$element, this.options.get("width"));
                null != b && a.css("width", b)
            }
            ,
            e.prototype._resolveWidth = function(a, b) {
                var c = /^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i;
                if ("resolve" == b) {
                    var d = this._resolveWidth(a, "style");
                    return null != d ? d : this._resolveWidth(a, "element")
                }
                if ("element" == b) {
                    var e = a.outerWidth(!1);
                    return e <= 0 ? "auto" : e + "px"
                }
                if ("style" == b) {
                    var f = a.attr("style");
                    if ("string" != typeof f)
                        return null;
                    for (var g = f.split(";"), h = 0, i = g.length; h < i; h += 1) {
                        var j = g[h].replace(/\s/g, "")
                          , k = j.match(c);
                        if (null !== k && k.length >= 1)
                            return k[1]
                    }
                    return null
                }
                return b
            }
            ,
            e.prototype._bindAdapters = function() {
                this.dataAdapter.bind(this, this.$container),
                this.selection.bind(this, this.$container),
                this.dropdown.bind(this, this.$container),
                this.results.bind(this, this.$container)
            }
            ,
            e.prototype._registerDomEvents = function() {
                var b = this;
                this.$element.on("change.select2", function() {
                    b.dataAdapter.current(function(a) {
                        b.trigger("selection:update", {
                            data: a
                        })
                    })
                }),
                this.$element.on("focus.select2", function(a) {
                    b.trigger("focus", a)
                }),
                this._syncA = c.bind(this._syncAttributes, this),
                this._syncS = c.bind(this._syncSubtree, this),
                this.$element[0].attachEvent && this.$element[0].attachEvent("onpropertychange", this._syncA);
                var d = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
                null != d ? (this._observer = new d(function(c) {
                    a.each(c, b._syncA),
                    a.each(c, b._syncS)
                }
                ),
                this._observer.observe(this.$element[0], {
                    attributes: !0,
                    childList: !0,
                    subtree: !1
                })) : this.$element[0].addEventListener && (this.$element[0].addEventListener("DOMAttrModified", b._syncA, !1),
                this.$element[0].addEventListener("DOMNodeInserted", b._syncS, !1),
                this.$element[0].addEventListener("DOMNodeRemoved", b._syncS, !1))
            }
            ,
            e.prototype._registerDataEvents = function() {
                var a = this;
                this.dataAdapter.on("*", function(b, c) {
                    a.trigger(b, c)
                })
            }
            ,
            e.prototype._registerSelectionEvents = function() {
                var b = this
                  , c = ["toggle", "focus"];
                this.selection.on("toggle", function() {
                    b.toggleDropdown()
                }),
                this.selection.on("focus", function(a) {
                    b.focus(a)
                }),
                this.selection.on("*", function(d, e) {
                    -1 === a.inArray(d, c) && b.trigger(d, e)
                })
            }
            ,
            e.prototype._registerDropdownEvents = function() {
                var a = this;
                this.dropdown.on("*", function(b, c) {
                    a.trigger(b, c)
                })
            }
            ,
            e.prototype._registerResultsEvents = function() {
                var a = this;
                this.results.on("*", function(b, c) {
                    a.trigger(b, c)
                })
            }
            ,
            e.prototype._registerEvents = function() {
                var a = this;
                this.on("open", function() {
                    a.$container.addClass("select2-container--open")
                }),
                this.on("close", function() {
                    a.$container.removeClass("select2-container--open")
                }),
                this.on("enable", function() {
                    a.$container.removeClass("select2-container--disabled")
                }),
                this.on("disable", function() {
                    a.$container.addClass("select2-container--disabled")
                }),
                this.on("blur", function() {
                    a.$container.removeClass("select2-container--focus")
                }),
                this.on("query", function(b) {
                    a.isOpen() || a.trigger("open", {}),
                    this.dataAdapter.query(b, function(c) {
                        a.trigger("results:all", {
                            data: c,
                            query: b
                        })
                    })
                }),
                this.on("query:append", function(b) {
                    this.dataAdapter.query(b, function(c) {
                        a.trigger("results:append", {
                            data: c,
                            query: b
                        })
                    })
                }),
                this.on("keypress", function(b) {
                    var c = b.which;
                    a.isOpen() ? c === d.ESC || c === d.TAB || c === d.UP && b.altKey ? (a.close(),
                    b.preventDefault()) : c === d.ENTER ? (a.trigger("results:select", {}),
                    b.preventDefault()) : c === d.SPACE && b.ctrlKey ? (a.trigger("results:toggle", {}),
                    b.preventDefault()) : c === d.UP ? (a.trigger("results:previous", {}),
                    b.preventDefault()) : c === d.DOWN && (a.trigger("results:next", {}),
                    b.preventDefault()) : (c === d.ENTER || c === d.SPACE || c === d.DOWN && b.altKey) && (a.open(),
                    b.preventDefault())
                })
            }
            ,
            e.prototype._syncAttributes = function() {
                this.options.set("disabled", this.$element.prop("disabled")),
                this.options.get("disabled") ? (this.isOpen() && this.close(),
                this.trigger("disable", {})) : this.trigger("enable", {})
            }
            ,
            e.prototype._syncSubtree = function(a, b) {
                var c = !1
                  , d = this;
                if (!a || !a.target || "OPTION" === a.target.nodeName || "OPTGROUP" === a.target.nodeName) {
                    if (b)
                        if (b.addedNodes && b.addedNodes.length > 0)
                            for (var e = 0; e < b.addedNodes.length; e++) {
                                var f = b.addedNodes[e];
                                f.selected && (c = !0)
                            }
                        else
                            b.removedNodes && b.removedNodes.length > 0 && (c = !0);
                    else
                        c = !0;
                    c && this.dataAdapter.current(function(a) {
                        d.trigger("selection:update", {
                            data: a
                        })
                    })
                }
            }
            ,
            e.prototype.trigger = function(a, b) {
                var c = e.__super__.trigger
                  , d = {
                    open: "opening",
                    close: "closing",
                    select: "selecting",
                    unselect: "unselecting",
                    clear: "clearing"
                };
                if (void 0 === b && (b = {}),
                a in d) {
                    var f = d[a]
                      , g = {
                        prevented: !1,
                        name: a,
                        args: b
                    };
                    if (c.call(this, f, g),
                    g.prevented)
                        return void (b.prevented = !0)
                }
                c.call(this, a, b)
            }
            ,
            e.prototype.toggleDropdown = function() {
                this.options.get("disabled") || (this.isOpen() ? this.close() : this.open())
            }
            ,
            e.prototype.open = function() {
                this.isOpen() || this.trigger("query", {})
            }
            ,
            e.prototype.close = function() {
                this.isOpen() && this.trigger("close", {})
            }
            ,
            e.prototype.isOpen = function() {
                return this.$container.hasClass("select2-container--open")
            }
            ,
            e.prototype.hasFocus = function() {
                return this.$container.hasClass("select2-container--focus")
            }
            ,
            e.prototype.focus = function(a) {
                this.hasFocus() || (this.$container.addClass("select2-container--focus"),
                this.trigger("focus", {}))
            }
            ,
            e.prototype.enable = function(a) {
                this.options.get("debug") && window.console && console.warn && console.warn('Select2: The `select2("enable")` method has been deprecated and will be removed in later Select2 versions. Use $element.prop("disabled") instead.'),
                null != a && 0 !== a.length || (a = [!0]);
                var b = !a[0];
                this.$element.prop("disabled", b)
            }
            ,
            e.prototype.data = function() {
                this.options.get("debug") && arguments.length > 0 && window.console && console.warn && console.warn('Select2: Data can no longer be set using `select2("data")`. You should consider setting the value instead using `$element.val()`.');
                var a = [];
                return this.dataAdapter.current(function(b) {
                    a = b
                }),
                a
            }
            ,
            e.prototype.val = function(b) {
                if (this.options.get("debug") && window.console && console.warn && console.warn('Select2: The `select2("val")` method has been deprecated and will be removed in later Select2 versions. Use $element.val() instead.'),
                null == b || 0 === b.length)
                    return this.$element.val();
                var c = b[0];
                a.isArray(c) && (c = a.map(c, function(a) {
                    return a.toString()
                })),
                this.$element.val(c).trigger("change")
            }
            ,
            e.prototype.destroy = function() {
                this.$container.remove(),
                this.$element[0].detachEvent && this.$element[0].detachEvent("onpropertychange", this._syncA),
                null != this._observer ? (this._observer.disconnect(),
                this._observer = null) : this.$element[0].removeEventListener && (this.$element[0].removeEventListener("DOMAttrModified", this._syncA, !1),
                this.$element[0].removeEventListener("DOMNodeInserted", this._syncS, !1),
                this.$element[0].removeEventListener("DOMNodeRemoved", this._syncS, !1)),
                this._syncA = null,
                this._syncS = null,
                this.$element.off(".select2"),
                this.$element.attr("tabindex", c.GetData(this.$element[0], "old-tabindex")),
                this.$element.removeClass("select2-hidden-accessible"),
                this.$element.attr("aria-hidden", "false"),
                c.RemoveData(this.$element[0]),
                this.dataAdapter.destroy(),
                this.selection.destroy(),
                this.dropdown.destroy(),
                this.results.destroy(),
                this.dataAdapter = null,
                this.selection = null,
                this.dropdown = null,
                this.results = null
            }
            ,
            e.prototype.render = function() {
                var b = a('<span class="select2 select2-container"><span class="selection"></span><span class="dropdown-wrapper" aria-hidden="true"></span></span>');
                return b.attr("dir", this.options.get("dir")),
                this.$container = b,
                this.$container.addClass("select2-container--" + this.options.get("theme")),
                c.StoreData(b[0], "element", this.$element),
                b
            }
            ,
            e
        }),
        b.define("jquery-mousewheel", ["jquery"], function(a) {
            return a
        }),
        b.define("jquery.select2", ["jquery", "jquery-mousewheel", "./select2/core", "./select2/defaults", "./select2/utils"], function(a, b, c, d, e) {
            if (null == a.fn.select2) {
                var f = ["open", "close", "destroy"];
                a.fn.select2 = function(b) {
                    if ("object" == typeof (b = b || {}))
                        return this.each(function() {
                            var d = a.extend(!0, {}, b);
                            new c(a(this),d)
                        }),
                        this;
                    if ("string" == typeof b) {
                        var d, g = Array.prototype.slice.call(arguments, 1);
                        return this.each(function() {
                            var a = e.GetData(this, "select2");
                            null == a && window.console && console.error && console.error("The select2('" + b + "') method was called on an element that is not using Select2."),
                            d = a[b].apply(a, g)
                        }),
                        a.inArray(b, f) > -1 ? this : d
                    }
                    throw new Error("Invalid arguments for Select2: " + b)
                }
            }
            return null == a.fn.select2.defaults && (a.fn.select2.defaults = d),
            c
        }),
        {
            define: b.define,
            require: b.require
        }
    }()
      , c = b.require("jquery.select2");
    return a.fn.select2.amd = b,
    c
});
$(document).on('hidden.bs.modal', function(event) {
    if ($('.modal.fade').hasClass('show') == true) {
        $('body').addClass('modal-open');
    }
    ;
});
$(document).ready(function() {
    var _blockingOverlayOptions = {
        overlayCSS: {
            backgroundColor: 'rgba(255, 255, 255, 0.1)'
        },
        css: {
            background: 'transparent',
            border: 0
        },
        message: '<div class="block-overlay loading"></div>'
    };

    var _blockingUIOverlayOptions = {
        overlayCSS: {
            backgroundColor: 'rgba(255, 255, 255, 0.1)',
            zIndex: 99998
        },
        css: {
            background: 'transparent',
            border: 0,
            zIndex: 999999,
            top: '50%',
            left: '50%',
            width: '100%',
            height: '100%',
            transform: 'translate(-50%, -50%)'
        },
        message: '<div class="block-overlay loading"></div>'
    };

    var ModalHelper = {};

    PopupFactory = function(popupId, params) {
        var PopupClassName = popupId.split('-').reverse().reduce(function(name, part) {
            name = part[0].toUpperCase() + part.slice(1) + name;

            return name;
        }, 'Popup');

        return new ModalHelper[PopupClassName](params);
    }
    ;

    ModalHelper.InstantLoginPopup = function(params) {
        this.params = params || {};
        return this.init();
    }
    ;

    ModalHelper.InstantLoginPopup.prototype = {
        init: function() {
            $.when($.ajax({
                url: '/login/login'
            })).then(this._buildPopup.bind(this));
        },

        _buildPopup: function(resp, status, xhr) {
            var _self = this;
            const isLoggedIn = $('body').hasClass('LoggedIn');
            const loginPopupIsOpen = $('.modal#LoginPopup').is(':visible');

            if (isLoggedIn || loginPopupIsOpen) {
                return;
            }
            _self.$popup = $('#loginPopup');

            if (!_self.$popup.length) {
                _self.$popup = $('<div>', {
                    class: 'modal fade',
                    id: 'loginPopup',
                    tabindex: '-1',
                    role: 'dialog'
                });
            }

            if (~xhr.getResponseHeader('Content-Type').indexOf('text/html')) {
                var obj = $(resp).find('#hasrestrictedservices');
                if (obj.length) {
                    var val = obj[0].value;
                    var languageCode = obj.attr('data-language-code');
                    var href = `//${window.location.host}/${languageCode}/error/${val}`;
                    setTimeout(function() {
                        window.location.href = href;
                    }, 0);

                    return true;
                }

                _self.$popup.html(resp);

                this._bindActions(_self.$popup);

                $(document.body).append(_self.$popup);

                _self.$popup.modal({
                    backdrop: 'static',
                    keyboard: false
                }).modal('show');

                _self.$popup.unbind('hidden.bs.modal')
                if (_self.params.onClose && typeof _self.params.onClose === 'function')
                    _self.$popup.on('hidden.bs.modal', _self.params.onClose)
                if (_self.params.afterShow && typeof _self.params.afterShow === 'function')
                    _self.params.afterShow();
            } else {
                _self.$popup.modal('hide');

                setTimeout(function() {
                    if (_self.params.callback && typeof _self.params.callback === 'function') {
                        _self.params.callback();
                    } else {
                        window.location.reload();
                    }

                    _self.$popup.remove();
                }, 250);
            }
        },

        _bindActions: function($popup) {
            var _self = this
              , $form = $popup.find('form')
              , $btn = $popup.find('#popupLoginBtn')
              , $forgotPwdBtn = $popup.find('.forgot-password-url')
              , $signUpBtn = $popup.find('.btn-sign-up')
              , $clickedGameHref = localStorage.getItem('clickedGameHref');

            $form.on('submit', function(e) {
                e.preventDefault();
                $.validator.unobtrusive.parse($form);
                $form.validate();
                var requestData = $form.serialize() + '&ReturnUrl=' + window.location.pathname;

                if ($form.valid()) {
                    $btn.addClass('loading');
                    $.when($.ajax({
                        url: '/login/login',
                        method: 'POST',
                        data: requestData,
                        datatype: 'json',
                        success: function(resp, status, xhr) {
                            if (xhr.getResponseHeader('Content-Type').indexOf('text/html')) {
                                _self._buildPopup(resp, status, xhr);
                            } else {
                                if (!_self.$popup.find('.login-error').length) {
                                    window.location.href = resp;
                                }

                                _self._buildPopup(resp, status, xhr);

                                $btn.removeClass('loading');
                            }
                        }
                    })).then(function() {
                        $btn.removeClass('loading');
                    });
                }
            });

            PopupFactory('forgot-password', {
                trigger: $forgotPwdBtn
            });

            if ($signUpBtn.length) {
                PopupFactory('register', {
                    trigger: $signUpBtn
                });
            }
        }
    };

    ModalHelper.VerificationPopup = function(params) {
        return this.init(params);
    }
    ;

    ModalHelper.VerificationPopup.prototype = {
        $popup: null,
        init: function(params) {
            var _self = this;
            var data = params.requestData;
            var $modalToClose = params.$modalToClose;

            this._sendRequest(data).then(this._buildPopup.bind(this)).then(function() {
                return _self._closeForgroundPopup($modalToClose);
            }).then(function() {
                return _self._openBackgrounPopup(_self.$popup);
            });
        },

        _closeForgroundPopup: function($modal) {
            $modal.modal('hide');
        },

        _openBackgrounPopup: function($modal) {
            $modal.modal({
                backdrop: 'static',
                keyboard: false
            }).modal('show');
        },

        _buildPopup: function(resp, _, xhr) {
            var _self = this;

            return $.when().then(function() {
                if (xhr.getResponseHeader('Content-Type').indexOf('text/html') > -1) {
                    _self.$popup = $('<div>', {
                        class: 'modal fade',
                        id: 'verificationPopup',
                        tabindex: '-1',
                        role: 'dialog'
                    });

                    _self.$popup.html(resp);
                    $(document.body).append(_self.$popup);
                } else {
                    window.location.href = resp;
                }
            });
        },

        _sendRequest: function(data) {
            return $.when($.ajax({
                url: '/login/login',
                method: 'POST',
                data: data
            }));
        }
    };

    ModalHelper.LoginPopup = function(params) {
        this.params = params || {};
        return this.init(params);
    }
    ;

    ModalHelper.LoginPopup.prototype = {
        init: function(params) {
            if (params.type === 'live') {
                this.trigger = '.' + params.trigger;
                this.$container = $('.' + params.container);
            } else {
                this.$trigger = $('.' + params.trigger);
            }

            this.bindEvents();
        },

        _buildPopup: function(html) {
            this.$popup = $('#loginPopup');
            if (!this.$popup.length) {
                this.$popup = $('<div/>', {
                    class: 'modal fade',
                    id: 'loginPopup',
                    tabindex: '-1',
                    role: 'dialog'
                });
            }

            this.$popup.html(html);
            this._bindActions();

            $(document.body).append(this.$popup);

            this.$popup.unbind('hidden.bs.modal')
            if (this.params.onClose && typeof this.params.onClose === 'function') {
                this.$popup.on('hidden.bs.modal', this.params.onClose)
            }
            if (this.params.afterShow && typeof this.params.afterShow === 'function') {
                this.params.afterShow();
            }

            // window.location.hash = '#p=login';
        },

        _bindActions: function() {
            var _self = this
              , $form = this.$popup.find('form')
              , $btn = this.$popup.find('#popupLoginBtn')
              , $forgotPwdBtn = this.$popup.find('.forgot-password-url')
              , $signUpBtn = this.$popup.find('.btn-sign-up');

            $form.on('submit', function(e) {
                e.preventDefault();
                $.validator.unobtrusive.parse($form);
                $form.validate();
                var requestData = $form.serialize() + '&ReturnUrl=' + window.location.pathname;

                if ($form.valid()) {
                    $btn.addClass('loading');
                    $.ajax({
                        url: '/login/login',
                        method: 'POST',
                        data: requestData,
                        datatype: 'json',
                        success: function(resp, status, xhr) {
                            if (~xhr.getResponseHeader('Content-Type').indexOf('text/html')) {
                                _self._buildPopup(resp);
                            } else {
                                _self._buildPopup('');

                                if (!_self.$popup.find('.login-error').length) {
                                    window.location.href = resp;
                                }

                                $btn.removeClass('loading');
                            }
                        }
                    });
                }
            });

            PopupFactory('forgot-password', {
                trigger: $forgotPwdBtn
            });

            if ($signUpBtn.length) {
                PopupFactory('register', {
                    trigger: $signUpBtn
                });
            }
        },

        bindEvents: function() {
            var _self = this;

            const isLoggedIn = $('body').hasClass('LoggedIn');
            const loginPopupIsOpen = $('.modal#loginPopup').is(':visible');

            if (isLoggedIn || loginPopupIsOpen) {
                return;
            }

            if (this.$container && this.$container.length) {
                this.$container.off('click').on('click', this.trigger, getLoginHtml);
            } else {
                this.$trigger.off('click').on('click', getLoginHtml);
            }

            function getLoginHtml() {
                var _trigger = $(this);
                _trigger.addClass('loading');
                var $secondaryHeader = $('.Header--secondary');
                var $leftPanel = $secondaryHeader.find('.Container__Item');
                if ($leftPanel.hasClass('left-panel-open')) {
                    // $leftPanel
                    //   .animate({ left: '-100%' })
                    //   .removeClass('left-panel-open');
                    $('.sections-trigger').click();
                }

                var $backdropLeft = $secondaryHeader.find('.Backdrop');
                $backdropLeft.queue(function() {
                    $(this).css('display', 'none');
                    $(this).dequeue();
                });

                $.ajax({
                    url: '/login/login',
                    success: function(resp) {
                        if ($('.modal#LoginPopup').is(':visible')) {
                            setTimeout( () => {
                                _trigger.removeClass('loading');
                            }
                            , 500);
                        }

                        var obj = $(resp).find('#hasrestrictedservices');
                        if (obj.length) {
                            var val = obj[0].value;
                            var languageCode = obj.attr('data-language-code');
                            var href = '//' + window.location.host + '/' + languageCode + '/error/' + val;
                            setTimeout(function() {
                                window.location.href = window.location.href = href;
                            }, 0);

                            return true;
                        }

                        if (resp.length === 3) {
                            window.location.href = resp;
                        }
                        _self._buildPopup(resp);
                        _self.$popup.modal({
                            backdrop: 'static',
                            keyboard: false
                        }).modal('show');

                        setTimeout( () => {
                            _trigger.removeClass('loading');
                        }
                        , 500);
                    }
                });
            }

            return this;
        }
    };

    ModalHelper.InstantRegisterPopup = function(params) {
        var paramsToPass = {
            trigger: {
                off: function() {
                    return this;
                },
                on: function(_, fn) {
                    fn();
                }
            }
        };

        if (typeof params === 'object') {
            for (const p in params) {
                if (params.hasOwnProperty(p)) {
                    paramsToPass[p] = params[p];
                }
            }
        }

        new ModalHelper.RegisterPopup(paramsToPass);
    }
    ;

    ModalHelper.RegisterPopup = function(params) {
        this.params = params;
        return this.init(params);
    }
    ;

    ModalHelper.RegisterPopup.prototype = {
        init: function(params) {
            if (typeof params.trigger === 'object') {
                this.$trigger = params.trigger;
            } else {
                this.$trigger = $('.' + params.trigger);
            }

            this.loadCallback = params.loadCallback;

            this.bindEvents();
        },

        _buildPopup: function(html) {
            if (!this.$popup) {
                this.$popup = $('<div/>', {
                    class: 'modal fade',
                    id: 'registrationPopup',
                    tabindex: '-1',
                    role: 'dialog'
                });
            }

            this.$popup.html(html);
            $(document.body).append(this.$popup);

            this.$popup.unbind('hidden.bs.modal')
            if (this.params.onClose && typeof this.params.onClose === 'function')
                this.$popup.on('hidden.bs.modal', this.params.onClose)
            if (this.params.afterShow && typeof this.params.afterShow === 'function')
                this.params.afterShow();
        },

        bindEvents: function() {
            var _self = this;

            const isLoggedIn = $('body').hasClass('LoggedIn');
            const registrationPopupIsOpen = $('.modal#registrationPopup').is(':visible');

            if (isLoggedIn || registrationPopupIsOpen) {
                return;
            }

            this.$trigger.off('click').on('click', function() {
                var _trigger = $(this);
                var isButton = _trigger.hasClass('btn') || _trigger.hasClass('Button--outlined') || _trigger.hasClass('Button--outlined--transparent');

                if (isButton) {
                    _trigger.addClass('loading');
                }

                $.blockUI(_blockingUIOverlayOptions);

                var $secondaryHeader = $('.Header--secondary');
                var $leftPanel = $secondaryHeader.find('.Container__Item');

                if ($leftPanel.hasClass('left-panel-open')) {
                    $('.sections-trigger').click();

                    // $leftPanel.animate({ left: '-100%' });
                    var $backdropLeft = $secondaryHeader.find('.Backdrop');
                    $backdropLeft.queue(function() {
                        $(this).css('display', 'none');
                        $(this).dequeue();
                    });
                }

                $.ajax({
                    url: '/registration/register',
                    success: function(resp, status, xhr) {
                        if ($('.modal#registrationPopup').is(':visible')) {
                            if (isButton) {
                                setTimeout( () => {
                                    _trigger.removeClass('loading');
                                }
                                , 500);
                            }
                        }

                        var obj = $(resp).find('#hasrestrictedservices');
                        if (obj.length) {
                            var val = obj[0].value;
                            var languageCode = obj.attr('data-language-code');
                            var href = '//' + window.location.host + '/' + languageCode + '/error/' + val
                            setTimeout(function() {
                                window.location.href = window.location.href = href;
                            }, 0);

                            return true;
                        }
                        $.unblockUI();

                        if ($('#loginPopup').length) {
                            $('#loginPopup').modal('hide').on('hidden.bs.modal', function() {
                                $(this).data('bs.modal', null).remove();
                            });
                        }

                        while ($('#registrationPopup').not('.show').length) {
                            $('.datepicker.dropdown-menu').remove();
                            $('#registrationPopup').not('.show').data('bs.modal', null).remove();
                        }

                        setTimeout(function() {
                            _self._buildPopup(resp);
                            _self.$popup.modal({
                                backdrop: 'static',
                                keyboard: false
                            }).modal('show');

                            if (isButton) {
                                setTimeout( () => {
                                    _trigger.removeClass('loading');
                                }
                                , 500);
                            }

                            if (_self.loadCallback && typeof _self.loadCallback === 'function') {
                                _self.loadCallback();
                            }
                        }, 500);
                    }
                });
            });

            return this;
        }
    };

    ModalHelper.ChangePasswordPopup = function(params) {
        return this.init(params);
    }
    ;

    ModalHelper.ChangePasswordPopup.prototype = {
        init: function(params) {
            this.params = params;
            this.$trigger = $('.' + params.trigger);
            params.trigger ? this.bindEvents() : this.getHTML();
        },

        _buildPopup: function(html) {
            if (!this.$popup || !$('#profilePopup').length === 0) {
                this.$popup = $('<div/>', {
                    class: 'modal fade',
                    id: 'changePasswordPopup',
                    tabindex: '-1',
                    role: 'dialog'
                });
            }

            this.$popup.html(html);
            this._bindActions();
            $(document.body).append(this.$popup);

            this.$popup.unbind('hidden.bs.modal')
            if (this.params.onClose && typeof this.params.onClose === 'function')
                this.$popup.on('hidden.bs.modal', this.params.onClose)
            if (this.params.afterShow && typeof this.params.afterShow === 'function')
                this.params.afterShow();
        },

        _bindActions: function() {
            var _self = this
              , $form = this.$popup.find('form')
              , $btn = this.$popup.find('#popupSavePassBtn');

            $btn.on('click', function() {
                $.validator.unobtrusive.parse($form);
                $form.validate();

                if ($form.valid()) {
                    $btn.addClass('loading');

                    $.ajax({
                        url: '/account/changepassword',
                        method: 'POST',
                        data: $form.serialize(),
                        datatype: 'json',

                        success: function(resp) {
                            $btn.removeClass('loading');
                            _self._buildPopup(resp);
                        }
                    });
                }
            });
        },
        getHTML: function() {
            var _self = this;
            $.blockUI(_blockingUIOverlayOptions);
            $.ajax({
                url: '/account/changepassword',

                success: function(resp) {
                    $.unblockUI();
                    _self._buildPopup(resp);
                    _self.$popup.modal({
                        backdrop: 'static',
                        keyboard: false
                    }).modal('show');
                }
            });
        },
        bindEvents: function() {
            var _self = this;

            this.$trigger.off('click').on('click', function() {
                _self.getHTML();
            });

            return this;
        }
    };

    ModalHelper.ForgotPasswordPopup = function(params) {
        return this.init(params);
    }
    ;

    ModalHelper.ForgotPasswordPopup.prototype = {
        init: function(params) {
            this.$trigger = params.trigger;
            this.bindEvents();
        },

        _buildPopup: function(html) {
            if (!this.$popup && !$('#forgotPasswordPopup').length) {
                this.$popup = $('<div/>', {
                    class: 'modal fade',
                    id: 'forgotPasswordPopup',
                    tabindex: '-1',
                    role: 'dialog'
                });
            } else {
                this.$popup = $('#forgotPasswordPopup');
            }

            this.$popup.html(html);
            this._bindActions();

            $(document.body).append(this.$popup);
        },

        _bindActions: function() {
            var _self = this
              , $form = this.$popup.find('form')
              , $btn = this.$popup.find('#popupLoginBtn');

            $($form).on('keydown', function(e) {

                if (e.which == 13) {
                    $.validator.unobtrusive.parse($form);
                    $form.validate();

                    if ($form.valid()) {
                        $btn.addClass('loading');

                        $.ajax({
                            url: '/home/forgotpass',
                            method: 'POST',
                            data: $form.serialize(),
                            datatype: 'json',

                            // success: function (resp) {
                            //     $btn.removeClass('loading');
                            //     _self._buildPopup(resp);

                            //     if (!_self.$popup.find('.login-error').length) {
                            //         var tmpid = document.getElementById('TmpId').value;
                            //         if($("#NewPassword_id").html()?.length == 0 && $("#RecoveryToken_id").html()?.length == 0) {
                            //             if (tmpid == 1) {
                            //                 setTimeout(function () {
                            //                     window.location.reload();
                            //                 }, 3000);
                            //             }
                            //         }

                            //     }
                            // }
                            success: function(resp) {
                                $btn.removeClass('loading');
                                _self._buildPopup(resp);
                                if ($("#NewPassword_id").html()?.length == undefined) {
                                    if ($('#forgotPasswordPopup').hasClass('tLg2')) {
                                        setTimeout(function() {
                                            $('.modal-header button').click();
                                            window.location.href = "Home/Index";
                                            window.location.reload();
                                        }, 3000);
                                    }
                                }

                                if ($("#NewPassword_id").html()?.length == 0 && $("#RecoveryToken_id").html()?.length == 0) {
                                    if ($('#popupLoginBtn').hasClass('sP')) {
                                        setTimeout(function() {
                                            $('.modal-header button').click();
                                            window.location.href = "Home/Index";
                                            window.location.reload();
                                        }, 3000);
                                    }

                                    if ($('#forgotPasswordPopup').hasClass('tLg')) {
                                        $('#forgotPasswordPopup').removeClass('tLg')
                                        $('#forgotPasswordPopup').addClass('tLg2')
                                    }
                                }

                            }
                        });
                    }
                }

            });

            $btn.on('click', function() {
                $.validator.unobtrusive.parse($form);
                $form.validate();

                if ($form.valid()) {
                    $btn.addClass('loading');

                    $.ajax({
                        url: '/home/forgotpass',
                        method: 'POST',
                        data: $form.serialize(),
                        datatype: 'json',

                        success: function(resp) {
                            $btn.removeClass('loading');
                            _self._buildPopup(resp);
                            if ($("#NewPassword_id").html()?.length == undefined) {
                                if ($('#forgotPasswordPopup').hasClass('tLg2')) {
                                    setTimeout(function() {
                                        $('.modal-header button').click();
                                        window.location.href = "Home/Index";
                                        window.location.reload();
                                    }, 3000);
                                }
                            }

                            if ($("#NewPassword_id").html()?.length == 0 && $("#RecoveryToken_id").html()?.length == 0) {
                                if ($('#popupLoginBtn').hasClass('sP')) {
                                    setTimeout(function() {
                                        $('.modal-header button').click();
                                        window.location.href = "Home/Index";
                                        window.location.reload();
                                    }, 3000);
                                }

                                if ($('#forgotPasswordPopup').hasClass('tLg')) {
                                    $('#forgotPasswordPopup').removeClass('tLg')
                                    $('#forgotPasswordPopup').addClass('tLg2')
                                }
                            }

                        }
                    });
                }
            });

            _self.$popup.on('hidden.bs.modal', function() {
                $(this).data('bs.modal', null);

                _self.$popup.remove();
            });
        },

        bindEvents: function() {
            var _self = this;

            this.$trigger.off('click').on('click', function() {
                $.blockUI(_blockingUIOverlayOptions);

                if ($('#loginPopup.detached').length) {
                    $.ajax({
                        url: '/home/forgotpass',

                        success: function(resp) {
                            $.unblockUI();
                            _self._buildPopup(resp);
                            _self.$popup.modal({
                                backdrop: 'static',
                                keyboard: false
                            }).modal('show');
                        }
                    });
                } else {
                    $('#loginPopup.show').modal('hide').on('hidden.bs.modal', function() {
                        $.ajax({
                            url: '/home/forgotpass',

                            success: function(resp) {
                                $.unblockUI();
                                _self._buildPopup(resp);
                                _self.$popup.modal({
                                    backdrop: 'static',
                                    keyboard: false
                                }).modal('show');

                                while ($('#loginPopup').length) {
                                    $('#loginPopup').data('bs.modal', null).remove();
                                }
                            }
                        });
                    });
                }
            });

            return this;
        }
    };

    ModalHelper.GameLoginPopup = function(params) {
        Popup('login', {
            type: 'live',
            trigger: params.trigger,
            container: params.container
        });
    }
    ;

    ModalHelper.ProfilePopup = function(params) {
        return this.init(params);
    }
    ;

    ModalHelper.ProfilePopup.prototype = {
        init: function(params) {
            this.triggers = params.selector ? $(params.selector) : [];
            this.loadCallback = params.loadCallback;
            this.route = params.route;
            this.params = params;

            this.bindEvents();
            // this.overlay = new Overlay($(document.body), 'global');
        },

        _fillPopup: function(html) {
            var _self = this;

            return $.when().then(function() {
                var $modalContent = $({});
                var wrapHtml = $('<div>').html(html).get(0);

                _self.$scripts = $(wrapHtml).find('script:not("#__browserLink_initializationData")');

                html = $(html).find('.modal-body').addClass('modal-body-hidden').closest('.modal-dialog').get(0);

                if (_self.isShown) {
                    $modalContent = $(html).find('.modal-body');
                    _self.$popup.find('.modal-body').html($modalContent.get(0));
                } else {
                    $modalContent = $(html);
                    _self.$popup.html($modalContent.get(0));
                }
            });
        },

        _bindActions: function() {
            var _self = this;

            this.$popup.find('*').off('click').off('submit');

            $.globalEval(_self.$scripts.text());

            _self.$popup.find('[data-popup="profile"], .js-data-popup-profile').on('click', function(e) {
                e.preventDefault();
                // _self.overlay = new Overlay(_self.$popup.find('.modal-content'), 'global');
                $.blockUI(_blockingUIOverlayOptions);
                // _self.overlay.fadeIn();
                var $el = $(this)
                  , route = $el.data('route');

                var Router = new ModalHelper.ProfileRoute(route)
                  , url = Router.getRouteUrl();

                return _self._sendRequest(url).then(function(resp) {
                    return _self._fillPopup(resp);
                }).then(function() {
                    _self._bindActions();
                    $.unblockUI();
                    // _self.overlay.fadeOut();
                    _self.$popup.modal({
                        backdrop: 'static',
                        keyboard: false
                    }).modal('show');
                }).then(function() {
                    setTimeout(function() {
                        var $scrollableElem = $('.js-custom-scrollbar-wrapper');
                        var $siblings = $scrollableElem.siblings();

                        var height = $scrollableElem.closest('.modal-sub-body').innerHeight();

                        var siblingsHeight = 0;

                        $.each($siblings, function() {
                            siblingsHeight += $(this).height();
                        });

                        $scrollableElem.height(height - siblingsHeight - 10);
                        $('.js-custom-scrollbar-wrapper').overlayScrollbars({
                            autoUpdate: true,
                            resize: 'n',
                            overflowBehavior: {
                                x: 'hidden'
                            }
                        });

                        _self.$popup.find('.modal-body').removeClass('modal-body-hidden').addClass('modal-body-visible');
                    }, 200);
                });
            });

            _self.$popup.find('.datepicker').daterangepicker({
                showWeekNumbers: true,
                autoApply: true,
                startDate: moment().add(-1, 'year'),
                ranges: {
                    Today: [moment(), moment()],
                    Yesterday: [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                },
                autoUpdateInput: true,
                alwaysShowCalendars: true
            });
            PopupFactory('transaction-detail', {
                trigger: 'transaction-detail-btn'
            });
        },

        _detectPopup: function() {
            var popupIsShown = ($('#profilePopup').data('bs.modal') || {}).isShown
              , popupIsBuilt = !!$('#profilePopup').length;

            if (!popupIsBuilt) {
                this.$popup = $('<div/>', {
                    class: 'modal fade',
                    id: 'profilePopup',
                    tabindex: '-1',
                    role: 'dialog'
                });

                $(document.body).append(this.$popup);

                this.isShown = false;
            } else if (popupIsBuilt && !popupIsShown) {
                this.$popup = $('#profilePopup');
                this.isShown = false;
            } else if (popupIsBuilt && popupIsShown) {
                this.$popup = $('#profilePopup');
                this.isShown = true;
            }
        },

        _buildPopup: function(route, $el) {
            var _self = this;
            var Router = new ModalHelper.ProfileRoute(route);
            var url = Router.getRouteUrl();

            return _self._sendRequest(url).then(function(resp) {
                return _self._fillPopup(resp);
            }).then(function() {
                _self._bindActions();
                $.unblockUI();
                _self.$popup.modal({
                    backdrop: 'static',
                    keyboard: false
                }).modal('show');

                if ($el) {
                    $el.removeClass('loading');
                }
            }).then(function() {
                setTimeout(function() {
                    var $scrollableElem = $('.js-custom-scrollbar-wrapper');
                    var $siblings = $scrollableElem.siblings();

                    var height = $scrollableElem.closest('.modal-sub-body').innerHeight();
                    var siblingsHeight = 0;

                    $.each($siblings, function() {
                        siblingsHeight += $(this).height();
                    });

                    $scrollableElem.height(height - siblingsHeight - 10);

                    $('.js-custom-scrollbar-wrapper').overlayScrollbars({
                        autoUpdate: true,
                        resize: 'n',
                        overflowBehavior: {
                            x: 'hidden'
                        }
                    });

                    _self.$popup.find('.modal-body').addClass('modal-body-visible');
                    _self.$popup.unbind('hidden.bs.modal')
                    if (_self.params.onClose && typeof _self.params.onClose === 'function')
                        _self.$popup.on('hidden.bs.modal', _self.params.onClose)
                    if (_self.params.afterShow && typeof _self.params.afterShow === 'function')
                        _self.params.afterShow();
                }, 200);
            });
        },

        bindEvents: function() {
            var _self = this;

            if (this.triggers && this.triggers.length) {
                $.each(this.triggers, function() {
                    var $el = $(this)
                      , route = $el.data('route');

                    $el.off('click').on('click', function(e) {
                        // $el.addClass('loading');
                        e.preventDefault();

                        $('.user-details-btn').trigger('mouseout');
                        // _self.overlay.fadeIn();
                        var _blockingOverlayOptionsClone = JSON.parse(JSON.stringify(_blockingOverlayOptions));
                        _blockingOverlayOptionsClone.css['z-index'] = 99999
                        _blockingOverlayOptionsClone.overlayCSS['z-index'] = 99999
                        $.blockUI(_blockingOverlayOptionsClone);

                        _self._detectPopup();

                        _self._buildPopup(route, $el);
                    });
                });
            } else if (this.route) {
                $.blockUI(_blockingOverlayOptions);
                _self._detectPopup();
                _self._buildPopup(this.route);
            }

            return this;
        },

        _sendRequest: function(url) {
            return $.when($.ajax({
                url: url,
                data: {
                    Timezone: -new Date().getTimezoneOffset() / 60,
                    productId: $('#ProductId').val() || 1
                }
            }));
        }
    };

    ModalHelper.InstantDepositPopup = function(params) {
        var paramsToPass = {
            route: 'deposit'
        };

        if (typeof params === 'object') {
            for (const p in params) {
                if (params.hasOwnProperty(p)) {
                    paramsToPass[p] = params[p];
                }
            }
        }

        new ModalHelper.ProfilePopup(paramsToPass);
    }
    ;

    ModalHelper.ProfileRoute = function(route) {
        this.route = route;
    }
    ;

    ModalHelper.ProfileRoute.prototype.getRouteUrl = function() {
        switch (this.route) {
        case 'profile':
            return '/account/profile';
        case 'wallet':
            return '/account/wallet';
        case 'deposit':
            return '/account/deposit';
        case 'messages':
            return '/account/inbox';
        case 'history':
            return '/account/transactionshistory';
        case 'promotions':
            return '/account/bonuses';
        case 'freespins':
            return '/account/freespins';
        case 'responsible':
            return '/account/responsible';
        case 'responsible_Transaction':
            return '/account/responsible_Transaction';
        case 'responsible_Exclusion':
            return '/account/responsible_Exclusion';
        case 'bonuses':
            return '/account/bonuses';
        case 'withdrawal':
            return '/account/withdrawal';
        case 'communication':
            return '/account/notificationsettings';
        case 'identification':
            return '/account/identifications';
        case 'gameshistory':
            return '/account/gamehistory';
        case 'balancehistory':
            return '/account/playerbalancehistory';
        case 'sportsexchange':
            return '/account/sportsexchange';
        case 'bonushistory':
            return '/account/PlayerBonusHistory';
        default:
            return '/';
        }
    }
    ;

    ModalHelper.InstantSearchPopup = function(params) {
        this.params = params || {};
        return this.init();
    }
    ;

    ModalHelper.InstantSearchPopup.prototype = {
        init: function() {
            $.when($.ajax({
                url: '/widget/search'
            })).then(this._buildPopup.bind(this));
        },

        slimSelectInstance: null,

        popupSettings: {
            lazyLoad: 0,
            hasFilters: 0,
            playSection: 0,
            lazyLoadProcess: false,
        },

        allGamesCount: 0,

        demoAction: 2,

        loadMoreClick: true,

        first: true,

        $search: null,

        $searchForm: null,

        $loadMoreContainer: $(`#load-more-container`),

        _buildPopup: function(resp, status, xhr) {
            var _self = this;

            _self.popupSettings.lazyLoad = _self.params.parent.find('#playsearchsettings').length > 0 ? $('#playsearchsettings').attr('lazy-load') === '1' : $('#searchSettings').attr('lazy-load') === '1';
            _self.popupSettings.hasFilters = _self.params.parent.find('#playsearchsettings').length > 0 ? $('#playsearchsettings').attr('has-filters') === '1' : $('#searchSettings').attr('has-filters') === '1';
            _self.popupSettings.playSection = _self.params.parent.find('#playsearchsettings').length > 0 ? true : false;

            const searchPopupIsOpen = $('.modal#SearchPopup').is(':visible');

            if (searchPopupIsOpen) {
                return;
            }
            _self.$popup = $('#searchPopup');

            if (!_self.$popup.length) {
                _self.$popup = $('<div>', {
                    class: 'modal fade',
                    id: 'searchPopup',
                    tabindex: '-1',
                    role: 'dialog'
                });
            }

            if (~xhr.getResponseHeader('Content-Type').indexOf('text/html')) {

                _self.$popup.html(resp);

                this._bindActions(_self.$popup);

                $(document.body).append(_self.$popup);

                _self.$popup.modal({
                    backdrop: 'static',
                    keyboard: false
                }).modal('show');

                _self.$popup.unbind('hidden.bs.modal')
                if (_self.params.onClose && typeof _self.params.onClose === 'function')
                    _self.$popup.on('hidden.bs.modal', _self.params.onClose)
                if (_self.params.afterShow && typeof _self.params.afterShow === 'function')
                    _self.params.afterShow();
            } else {
                _self.$popup.modal('hide');

                setTimeout(function() {
                    if (_self.params.callback && typeof _self.params.callback === 'function') {
                        _self.params.callback();
                    } else {
                        window.location.reload();
                    }

                    _self.$popup.remove();
                }, 250);
            }
        },

        _bindActions: function($popup) {
            var _self = this;
            _self.$search = $popup.find('#searchTb');
            _self.$searchForm = _self.$search.parent();

            _self.requestData = {
                skipCount: 0,
                vendorList: [],
                openedGameList: [],
                searchtext: '',
                count: 15
            };

            if (_self.popupSettings.playSection) {
                $('.game-container').map( (_, el) => {
                    let oGameId = $(el).find(".btn-real-game").length > 0 ? $(el).find(".btn-real-game").find("input").attr('prodid') : $(el).attr('productid');
                    if (!_self.requestData.openedGameList.includes(oGameId)) {
                        _self.requestData.openedGameList.push(oGameId);
                    }
                }
                );
            }

            _self.$search.on('keyup', function(e) {
                e.preventDefault();
                _self._searchGames(e);
            });

            _self._sendRequest();

        },

        _createSlimSelect: function(action, {page, filterAllGames, filterMultipleSelected, filterSingleSelected, options, allCount}) {
            var _self = this;
            const getLogoUrl = id => `${page.Cdn}/content/img/utils/badge/${id}.webp?v=${page.Version}`;
            const getImgHtmlElement = id => `<img src="${getLogoUrl(id)}" alt="${id}" />`;

            const getOptions = selectedValues => {
                return [{
                    value: 'allGames',
                    text: `${filterAllGames} | ${allCount}`,
                    innerHTML: `<b>${filterAllGames} | ${allCount}</b>`,
                    selected: selectedValues || selectedValues.includes('allGames')
                }, ...options.map(o => ({
                    value: o.Id,
                    text: `${o.Name} | ${o.Count}`,
                    innerHTML: `<div class="game-category-list"><span>${o.Name} | ${o.Count}</span> ${getImgHtmlElement(o.Id)} </div>`,
                    selected: selectedValues && selectedValues.includes(`${o.Id}`)
                }))];
            }
            ;

            const ActionEnum = Object.freeze({
                SEARCH_GAMES: 'searchGames'
            });

            if (_self.slimSelectInstance) {
                if (action === ActionEnum.SEARCH_GAMES) {
                    const $gameCategorySelectorContainer = $(`#game-category-selector-container`);
                    const $gameCategorySelectorContainerReplacer = $(`#game-category-replacer`);
                    if (!_self.popupSettings.hasFilters) {
                        $gameCategorySelectorContainer.hide();
                        $gameCategorySelectorContainerReplacer.hide();
                    }
                    let selectedValues = (action === ActionEnum.SEARCH_GAMES) ? _self.slimSelectInstance.selected().filter(item => item != 'allGames') : [];
                    if (action === ActionEnum.SEARCH_GAMES) {
                        const selectedOptions = getOptions(options);
                        _self.slimSelectInstance.setData(selectedOptions);
                        if (_self.requestData.vendorList.length) {
                            const requestVendors = _self.requestData.vendorList.map(num => {
                                return String(num);
                            }
                            );
                            selectedValues = requestVendors;
                        }
                        _self.slimSelectInstance.set(selectedValues, 'value', false);
                    } else {
                        const selectedOptions = getOptions(selectedValues);
                        _self.slimSelectInstance.setData(selectedOptions);
                        $gameCategorySelectorContainer.find('.ss-values').show();
                        $gameCategorySelectorContainer.find('.selectedInfoCount').hide();
                    }
                }
                return true;
            } else {
                const $gameCategorySelectorContainer = $('<div>', {
                    class: `game-category-selector-container`,
                    id: `game-category-selector-container`
                });

                const $gameCategorySelectorContainerReplacer = $(`#game-category-replacer`);
                $gameCategorySelectorContainerReplacer.before($gameCategorySelectorContainer);

                const gameCategorySelectorContainerId = `game-category-selector`;

                $gameCategorySelectorContainer.append($('<select>', {
                    multiple: true,
                    id: gameCategorySelectorContainerId
                }));

                if (!_self.popupSettings.hasFilters) {
                    $gameCategorySelectorContainer.hide();
                    $gameCategorySelectorContainerReplacer.hide();
                }

                let defaultValue = ['allGames'];
                const options = getOptions(defaultValue);
                setTimeout( () => {
                    _self.slimSelectInstance = new SlimSelect({
                        select: `#${gameCategorySelectorContainerId}`,
                        showSearch: false,
                        closeOnSelect: false,
                        allowDeselectOption: true,
                        deselectLabel: '<i class="fas fa-times"></i>',
                        beforeOpen: () => {
                            _self.$popup.find('.modal-dialog').addClass('vendorListOpen');
                        }
                        ,
                        beforeClose: () => {
                            _self.$popup.find('.modal-dialog').removeClass('vendorListOpen');
                        }
                        ,
                        beforeOnChange: (options) => {
                            if (!_self.popupSettings.hasFilters) {
                                return false;
                            }

                            _self.requestData = {
                                ..._self.requestData,
                                vendorList: [],
                                skipCount: 0
                            };

                            const $gameCategorySelectorContainer = $(`#game-category-selector-container`);

                            defaultValue = options.map(item => item.value);
                            if (!options.length || options.length > 1 && options[options.length - 1].value === 'allGames') {
                                defaultValue = ['allGames'];
                                _self.slimSelectInstance.set(defaultValue);
                                const slimSelectInstance1 = $(`#${gameCategorySelectorContainerId}`).get(0);
                                $gameCategorySelectorContainer.find('.ss-values').show();
                                $gameCategorySelectorContainer.find('.ss-values').removeClass('ss-values_disable');
                                $gameCategorySelectorContainer.find('.selectedInfoCount').hide();
                                slimSelectInstance1.slim.close();
                                return _self._sendRequest();
                            } else if (defaultValue.includes('allGames')) {
                                defaultValue = defaultValue.filter(item => item !== 'allGames');
                                _self.slimSelectInstance.set(defaultValue, 'value', false);

                                $gameCategorySelectorContainer.find('.ss-values').hide();
                                $gameCategorySelectorContainer.find('.ss-values').addClass('ss-values_disable');
                                $gameCategorySelectorContainer.find('.selectedInfoCount').show();
                            }

                            _self.requestData.vendorList = defaultValue.map(item => parseInt(item, 10));
                            _self._sendRequest();
                            $gameCategorySelectorContainer.find('.selectedInfoCount p').html(`${defaultValue.length} ${(defaultValue.length > 1 ? filterMultipleSelected : filterSingleSelected)}`);
                        }
                        ,
                        onChange: (options) => {
                            if (!options.length) {
                                defaultValue = ['allGames'];
                                _self.slimSelectInstance.set(defaultValue);
                            }
                        }
                        ,
                    });

                    const $gameCategorySelectorContainer = $(`#game-category-selector-container`);
                    $gameCategorySelectorContainer.find('.ss-values').after($('<div>', {
                        class: 'selectedInfoCount'
                    }).append('<p></p>'));

                    _self.slimSelectInstance.setData(options);
                }
                , 100);
            }
        },

        loadMoreControl: function(closeLoading=false) {
            var _self = this;
            const $lazyLoadMore = $(`#lazyLoadMore`);
            if (closeLoading) {
                $('#loadMoreBtn').hide();
                $lazyLoadMore.remove();

                return false;
            }

            const productCardLength = $(`#popupSearchItems .Item`).length;
            $('#loadMoreBtn')[_self.allGamesCount === productCardLength || _self.popupSettings.lazyLoad ? 'hide' : 'show']();
            _self.allGamesCount === productCardLength || !_self.popupSettings.lazyLoad ? $lazyLoadMore.remove() : !$lazyLoadMore.length ? _self.$loadMoreContainer.append($('<span>', {
                id: `lazyLoadMore`,
                class: 'loading'
            })) : null;
        },

        _getGamesByLazyLoading: function(e) {
            const $lazyMoreContainer = $(`#load-more-container`);
            const $lazyLoadMore = $lazyMoreContainer.find(`#lazyLoadMore`);

            if (!_self.popupSettings.lazyLoad || !$lazyLoadMore.length || _self.popupSettings.lazyLoadProcess) {
                return false;
            }

            const top = $lazyMoreContainer.offset().top;
            const bottom = top + $lazyMoreContainer.outerHeight();

            const viewportTop = $(window).scrollTop();
            const viewPortBottom = viewportTop + $(window).height();
            if (bottom < viewportTop || top > viewPortBottom) {
                return false;
            }

            _self.popupSettings.lazyLoadProcess = true;
            _self.requestData.skipCount += 15;

            _self._sendRequest();
        },

        _searchGames: function(e, action) {
            var _self = this;
            const $gameCategorySelectorContainer = $(`#game-category-selector-container`);
            const $gameCategorySelectorContainerReplacer = $(`#game-category-replacer`);
            searchTerm = _self.$search.val().trim();
            $searchIcon = _self.$searchForm.find('.glyphicon.glyphicon-search.form-control-feedback');

            if (searchTerm) {
                $searchIcon.addClass('clearForm').html('<i class="las la-times">').on('click', e => {
                    _self.$search.val('');
                    _self._searchGames(e);
                }
                );

                if (!_self.popupSettings.lazyLoadProcess) {
                    _self.requestData = {
                        ..._self.requestData,
                        skipCount: 0,
                        searchtext: searchTerm,
                    };
                }
                _self.loadMoreControl(_self.requestData.skipCount + _self.requestData.count >= _self.allGamesCount);
                _self._sendRequest(action == 'loadMore' ? action : 'searchGames');
                if (_self.popupSettings.hasFilters) {
                    $gameCategorySelectorContainer.show();
                    $gameCategorySelectorContainerReplacer.show();
                }
                return false;
            }
            if (_self.requestData.searchtext === '' && e && e.which === 8) {
                e.preventDefault();
                e.stopPropagation();
                return false;
            } else if (action != 'loadMore') {
                _self.requestData = {
                    ..._self.requestData,
                    vendorList: _self.requestData.vendorList.length ? _self.requestData.vendorList : [],
                    skipCount: 0,
                    searchtext: '',
                };
                _self.loadMoreControl(true);
                _self.$loadMoreContainer.find('#loadMoreBtn').hide();
            }

            $searchIcon.removeClass('clearForm').html('').off('click');
            _self._sendRequest(action == 'loadMore' ? action : 'searchGames');
        },

        _sendRequest: function(action) {
            var _self = this;
            _self.$search.addClass('loading');
            $.when($.ajax({
                url: '/common/searchgames',
                method: 'POST',
                data: _self.requestData,
                datatype: 'json',
                success: async resp => {
                    _self._success(action, resp)
                }
            })).then(function() {
                _self.$search.removeClass('loading');
            });
        },

        openGameLaunchModal: function(version, realPlay, funPlay) {

            $('#popupSearchItems .Item').off('click').on('click', function() {
                $('#gameModal').remove();
                var playNow = {
                    href: $(this).find('.play-now').attr('href')
                }
                if (!$('body').hasClass('LoggedIn')) {
                    localStorage.setItem('clickedGameHref', $(this).find('.play-now').data('href'));
                    window.location.href = '#login';

                    Popup('instant-login', {
                        callback: function() {
                            window.location.href = localStorage.getItem('clickedGameHref');
                            localStorage.removeItem('clickedGameHref');
                        },
                        onClose() {
                            history.replaceState({}, null, window.location.href.replace(window.location.hash, ''))
                        }
                    });
                    return false;
                } else {
                    window.location.replace(`${playNow.href}`);
                }
            })
        },

        _success: function(action, resp) {
            _self = this;

            const $gameCategorySelectorContainer = $(`#game-category-selector-container`);
            const _$gameCategorySelectorContainerReplacer = $('<div>', {
                class: "game-category-selector-container-replacer",
                id: `game-category-replacer`,
                text: 'Providers'
            });
            const $gameCategorySelectorContainerReplacer = $(`#game-category-replacer`);

            if (!$gameCategorySelectorContainer.length && !$gameCategorySelectorContainerReplacer.length) {
                _self.$searchForm.after(_$gameCategorySelectorContainerReplacer);
            }
            const isMobile = $('.modal-dialog.search').hasClass('mobile');

            if (!_self.popupSettings.lazyLoad) {
                _self.$loadMoreContainer.find('#loadMoreBtn').addClass('loading');
            }
            var $productWrapper = $('#popupSearchItems');

            if (_self.first) {
                _self.$loadMoreContainer = $productWrapper.find('#load-more-container');
                _self.first = false;
            }

            const vendors = resp.Vendors;

            !_self.slimSelectInstance ? _self.slimSelectInstance = _self._createSlimSelect(action, {
                page: resp.Page,
                filterAllGames: resp.Translations.FilterAllGames,
                filterMultipleSelected: resp.Translations.FilterMultipleSelected,
                filterSingleSelected: resp.Translations.FilterSingleSelected,
                options: vendors,
                allCount: resp.AllCount
            }) : _self._createSlimSelect(action, {
                page: resp.Page,
                filterAllGames: resp.Translations.FilterAllGames,
                filterMultipleSelected: resp.Translations.FilterMultipleSelected,
                filterSingleSelected: resp.Translations.FilterSingleSelected,
                options: vendors,
                allCount: resp.AllCount
            });
            if (!_self.popupSettings.lazyLoadProcess) {
                $productWrapper.html('');
                _self.loadMoreClick = true;
            }
            _self.popupSettings.lazyLoadProcess = false;
            if (!resp || !resp.Games || !Object.keys(resp.Games).length) {
                if (this.requestData.skipCount === 0) {
                    if (_self.slimSelectInstance && _self.slimSelectInstance.config.isEnabled) {
                        _self.slimSelectInstance.config.isEnabled = false;
                        if (_self.slimSelectInstance.config.isMultiple && _self.slimSelectInstance.slim.multiSelected) {
                            _self.slimSelectInstance.slim.multiSelected.container.classList.add(_self.slimSelectInstance.config.disabled);
                        } else if (_self.slimSelectInstance.slim.singleSelected) {
                            _self.slimSelectInstance.slim.singleSelected.container.classList.add(_self.slimSelectInstance.config.disabled);
                        }
                        _self.slimSelectInstance.select.triggerMutationObserver = false;
                        _self.slimSelectInstance.select.element.disabled = true;
                        _self.slimSelectInstance.slim.search.input.disabled = true;
                        _self.slimSelectInstance.select.triggerMutationObserver = true;
                        $(document).ready(function() {
                            $(_self.slimSelectInstance.slim.multiSelected.values).html('<span class="ss-disabled"></span>');
                            $(_self.slimSelectInstance.slim.multiSelected.values).show();
                            $(_self.slimSelectInstance.slim.multiSelected.container).find('.selectedInfoCount').hide();
                        });
                    }
                    $productWrapper.addClass('no-games-found-container').html(`<div class="no-games-found">${resp.Translations.Nothing}</div>`);
                }
                _self.loadMoreControl(true);

                return false;
            }
            $productWrapper.removeAttr('class');

            if (_self.slimSelectInstance && !_self.slimSelectInstance.config.isEnabled) {
                _self.slimSelectInstance.enable();
                _self.slimSelectInstance.config.isEnabled = true;
                $(document).ready(function() {

                    if (_self.slimSelectInstance.selected().includes('allGames')) {
                        $(_self.slimSelectInstance.slim.multiSelected.values).show();
                    } else {
                        $(_self.slimSelectInstance.slim.multiSelected.values).hide();
                        $(_self.slimSelectInstance.slim.multiSelected.container).find('.selectedInfoCount').show();
                    }

                });
            }

            _self.allGamesCount = resp.SubCount || 0;
            _self.demoAction = resp.DemoAction;

            resp.Games.forEach( (product) => {

                const $item = $('<div>', {
                    class: 'Item loading'
                });

                const $prodImage = $('<div>', {
                    class: 'product-image'
                }).append($('<img>', {
                    src: `${product.Img}?v=${resp.Page.Version}`,
                    alt: product.Name,
                    onerror: `this.onerror=null;this.src='${resp.Page.Cdn}/content/img/game-img-not-found.webp'`
                }));

                let $prodDesc = $('<div>', {
                    class: 'product-description'
                }).append($('<div>', {
                    class: 'product-name',
                    text: product.Name
                }));
                $prodDesc.append($('<div>', {
                    class: 'product-vendore-img',
                    css: {
                        backgroundImage: `url('${resp.Page.Cdn}/content/img/utils/badge/${product.VendorId}.webp?v=${resp.Page.Version}')`
                    }
                }));

                const lunchIsNotFirst = this.popupSettings.playSection ? 1 : 0;

                const gameUrl = `/real/${product.LaunchFrameType}/${product.GameID}/${product.NameInURL}/${lunchIsNotFirst}`;
                const demoUrl = `/demo/${product.LaunchFrameType}/${product.GameID}/${product.NameInURL}/${lunchIsNotFirst}`;

                var $playBtn = $('<div>', {
                    class: 'play-now-btn'
                });

                let externalReal = product.LaunchFrameType == 'fullRedirectExternal' && resp.PlayerId ? 'target="_blank"' : '';

                let newtab = product.LaunchFrameType == 'fullRedirectExternal' ? 'newtab=true' : 'newtab=false';

                if (_self.popupSettings.playSection) {
                    $playBtn.append($('<a>', {
                        class: 'play-now',
                        text: resp.Translations.PlayNow,
                    }));
                } else {
                    $playBtn.append(`<a href="${resp.PlayerId ? gameUrl : '#login'}" ${!resp.PlayerId ? `data-href="${gameUrl}"` : ''} ${externalReal} ${newtab} class="play-now">${resp.Translations.PlayNow}</a>`);
                }

                if (product.DemoAllowed && _self.demoAction == 1) {
                    if (!_self.popupSettings.playSection) {
                        $playBtn.append($('<a>', {
                            href: demoUrl,
                            class: 'demo',
                            text: resp.Translations.DemoNow,
                            newtab: product.LaunchFrameType == 'fullRedirectExternal' ? "true" : "false",
                            target: product.LaunchFrameType == 'fullRedirectExternal' ? '_blank' : null
                        }));
                    } else {
                        $playBtn.append($('<a>', {
                            class: 'demo',
                            text: resp.Translations.DemoNow
                        }));
                    }
                }

                $item.append($prodImage, $prodDesc, $playBtn);

                if ((product.SameProviderGameId > 0 || product.LaunchFrameType == 'full') && lunchIsNotFirst == 1) {
                    $playBtn.hide();
                    var tr = resp.Translations.SameProviderInfo.replace('{0}', `${product.SameProviderGameName}`);

                    var $providerDesc = $('<div>', {
                        class: 'info-container'
                    }).append($('<span>', {
                        class: 'game-info-icon'
                    }).append($('<i>', {
                        class: 'la la-warning'
                    }).attr('aria-hidden', 'true')), $('<div>', {
                        class: 'info-text'
                    }).append($('<p>', {
                        class: 'text',
                        text: `${tr}`
                    })));

                    var $info = $providerDesc.find('.info-text');
                    $info.hide();

                    $providerDesc.find('span').on('click', function(e) {
                        e.preventDefault();
                        var $span = $(this);
                        var $icon = $span.find('i');
                        if ($icon.hasClass('la-warning')) {
                            $span.find('i').removeClass('la-warning');
                            $span.find('i').addClass('la-times');
                            $prodDesc.hide();
                            $playBtn.show();
                            $info.show();
                            $span.parent().addClass('open')
                        } else {
                            $span.find('i').removeClass('la-times');
                            $span.find('i').addClass('la-warning');
                            $prodDesc.show();
                            $playBtn.hide();
                            $info.hide();
                            $span.parent().removeClass('open')
                        }
                    });

                    $item.append($providerDesc);

                    if (product.LaunchFrameType == 'full') {
                        const fullGameUrl = `/real/${product.LaunchFrameType}/${product.GameID}/${product.NameInURL}`;
                        $playBtn.find('.play-now').html(`${resp.Translations.FrameBtn}`)
                        $playBtn.find('.demo').remove()
                        $playBtn.append(`<a class="play-full" href="${fullGameUrl}" data-href="${fullGameUrl}">${resp.Translations.FullBtn}</a>`)
                        $info.html(`${resp.Translations.FullLunchInfo}`)
                    }
                }
                ;
                $productWrapper.append($item);

                $('.product-image img').on('load', function() {
                    $item.removeClass('loading')
                });

                $('.product-image img').on('error', function() {
                    $item.removeClass('loading')
                });

                if (_self.popupSettings.playSection) {

                    const real = $playBtn.find('.play-now');
                    const demo = $playBtn.find('.demo');

                    real.on('click', () => {
                        Play('real');
                    }
                    );
                    demo.on('click', () => {
                        Play('demo');
                    }
                    );

                    var Play = (type) => {
                        _self.$popup.modal('hide')
                        $.ajax({
                            url: `/${type}/frame/${product.GameID}/${product.NameInURL}/${lunchIsNotFirst}`,
                            success: function(val) {
                                var response = JSON.parse(val);
                                if (response.IsLoggedIn || type != 'real') {
                                    $('.game-page').removeClass('single');
                                    $('#playsearchsettings').removeClass('oneFrame');
                                    if ($('.game-container').length == 1 && !$('.game-container').hasClass('first')) {
                                        $('.game-container').find('.btn-close').on('click', function(e) {
                                            e.preventDefault();
                                            $gameCont.remove();
                                        });
                                    }
                                    if ($('.game-container').length == 1) {
                                        $('.play-section .Container--GamePage').addClass('twoFrame')
                                    } else if ($('.game-container').length == 2) {
                                        $('.play-section .Container--GamePage').removeClass('twoFrame')
                                        $('.play-section .Container--GamePage').addClass('threeFrame')
                                    } else if ($('.game-container').length == 3) {
                                        $('.play-section .Container--GamePage').removeClass('threeFrame')
                                        $('.play-section .Container--GamePage').addClass('fourFrame')
                                    }

                                    if ($('.game-container').length < 4) {

                                        var $container = $('.game-container').parent();
                                        var $gameCont = $('<div>', {
                                            id: `frameprod-${product.GameID}`,
                                            class: 'game-container',
                                            productid: `${product.GameID}`
                                        });

                                        var $gameControl = $('<div>', {
                                            class: 'game-controls',
                                        }).append($('<div>', {
                                            class: 'game-controls-btn',
                                        }).append('<div class="btn-close"><i class= "las la-times"></i></div><div class="btn-full-screen"><i class="las la-expand-arrows-alt"></i></div><div class="btn-refresh"><i class="las la-redo-alt"></i></div>'));

                                        if (response.IsLoggedIn) {

                                            //Controls region 
                                            if (type == "real") {
                                                var controls = response.Controls;
                                                $gameCont.attr('extbonusId', controls.ExtBonusId)
                                                if (Object.keys(controls).length > 0) {
                                                    var $pbt = $('<div>', {
                                                        class: 'player-bonus-table',
                                                    });
                                                    var $bTnb = $('<div>', {
                                                        class: 'btn-bonus',
                                                    }).append($('<i>', {
                                                        class: 'tp-ic-gifts',
                                                    }));

                                                    var $bbw = $('<div>', {
                                                        class: 'bonus-body-wrapper',
                                                    }).append($('<div>', {
                                                        class: 'bonus-body-row-title',
                                                    }).append($('<div>', {
                                                        class: 'bonus-title-row',
                                                    }).append($('<div>', {
                                                        class: 'bonus-id',
                                                        text: `${resp.Translations.IdTrans}`
                                                    }), $('<div>', {
                                                        class: 'bonus-current-name',
                                                        text: `${resp.Translations.NameTrans}`
                                                    }), $('<div>', {
                                                        class: 'bonus-current-amount',
                                                        text: `${resp.Translations.AmountTrans}`
                                                    }))));
                                                    var $srtList = $('<ul>', {
                                                        id: 'sortableList',
                                                        class: 'bonus-table-body grid js-sortable',
                                                    });
                                                    controls.ProductBonusList.forEach( (item) => {
                                                        var dis = item.State == 2 ? '' : ' disabled';
                                                        var dishid = item.State == 2 ? '' : ' hidden';
                                                        var enhid = item.State == 5 ? '' : ' hidden';
                                                        var $li = $('<li>', {
                                                            class: `bonus-body-row item b-${item.Id}${dis}`,
                                                            bonusOrder: `${item.Order}`,
                                                            bonusid: `${item.Id}`,
                                                            bonustype: `${item.Type}`,
                                                            bonusstate: `${item.State}`,
                                                            extbonusId: `${item.ExtBonusId}`,
                                                        }).append($('<div>', {
                                                            class: 'bonus-body-row-title'
                                                        }).append($('<div>', {
                                                            class: 'bonus-id',
                                                            text: `${item.Id}`
                                                        }), $('<div>', {
                                                            class: 'bonus-current-name',
                                                            text: `${item.Name}`
                                                        }), $('<div>', {
                                                            class: 'bonus-current-amount',
                                                            text: `${roundToTwoDecimals(item.CurrentAmount, true)}`
                                                        }), $('<div>', {
                                                            class: `bonus-current-amount-full hidden ${parseFloat(item.CurrentAmount).toString() > roundToTwoDecimals(parseFloat(item.CurrentAmount)) ? 'tooltipShow' : ''}`,
                                                            text: `${item.CurrentAmount}`
                                                        })));

                                                        $li.append($('<div>', {
                                                            class: 'row'
                                                        }).append($('<button>', {
                                                            class: 'submit-state forfeit-btn',
                                                            text: `Forfeit`,
                                                            value: '7',
                                                            style: ''
                                                        }), item.Type !== 4 ? $('<button>', {
                                                            class: `submit-state disable-btn${dishid}`,
                                                            text: `Disable`,
                                                            value: '5',
                                                            style: ''
                                                        }) : null, item.Type !== 4 ? $('<button>', {
                                                            class: `submit-state enable-btn${enhid}`,
                                                            text: `Activate`,
                                                            value: '2',
                                                            style: ''
                                                        }) : null));
                                                        $srtList.append($li);
                                                    }
                                                    )

                                                    $bbw.append($srtList);
                                                    $bTnb.append($bbw);
                                                    $pbt.append($bTnb, $bbw);
                                                    $gameControl.append($pbt);
                                                    $bTnb.on('click', function(e) {
                                                        $bTnb.toggleClass('open')
                                                    });

                                                    var $bonusInfo = $pbt.find('.bonus-body-row.item .bonus-body-row-title');
                                                    $pbt.find('.row').slideUp()

                                                    $bonusInfo.on('click', function(event) {
                                                        let target = event.target
                                                        $bonusInfo = $(target).parent()
                                                        $bonusInfo.toggleClass('open')
                                                        $bonusInfo.siblings(".row").slideUp()
                                                        if ($bonusInfo.hasClass('open')) {
                                                            $bonusInfo.siblings(".row").slideDown()
                                                        }
                                                    });

                                                }

                                                function getValueOrDefault(obj, str, deflt) {
                                                    var a = str.split(".");
                                                    o = obj;
                                                    for (var i = 0; i < a.length; i++) {
                                                        o = obj[a[i]];
                                                        if (!o) {
                                                            return deflt;
                                                        }
                                                    }
                                                    return o;
                                                }

                                                function toCurrencySymbolArray(currencySymbol, number, showDecimal) {
                                                    var str = number < 0 ? "- " : " ";

                                                    var num = showDecimal ? roundToTwoDecimals(number).toLocaleString('en-US', {
                                                        minimumFractionDigits: 2,
                                                        maximumFractionDigits: 2
                                                    }) : roundToWithoutDecimals(number).toLocaleString('en-US', {
                                                        minimumFractionDigits: 2,
                                                        maximumFractionDigits: 2
                                                    });

                                                    return [str, currencySymbol + " ", ` ${num} `, ];
                                                }

                                                function roundToTwoDecimals(number, toFormat) {
                                                    let rounded = Math.floor((+number) * 100) / 100;
                                                    if (toFormat === true) {
                                                        return rounded.toLocaleString('en-US', {
                                                            minimumFractionDigits: 2,
                                                            maximumFractionDigits: 2
                                                        })
                                                    }
                                                    return rounded.toFixed(2);
                                                }

                                                function roundToWithoutDecimals(number) {

                                                    var multiplier = Math.pow(10, 0);
                                                    var adjusted = number * multiplier;
                                                    var truncated = adjusted - (adjusted % 1);

                                                    var rounded = truncated / multiplier;
                                                    return rounded;
                                                }

                                                function isEmpty(value) {
                                                    return (value == null || (typeof value === "string" && value.trim().length === 0));
                                                }

                                                const WalletTypes = Object.freeze({
                                                    NOT_PLAYED_BALANCE: 1,
                                                    PLAYED_BALANCE: 2,
                                                });

                                                const ObjectTypes = Object.freeze({
                                                    PLAY_BALANCE: 332,
                                                    PRODUCT_CASH_BALANCE: 329,
                                                    PRODUCT_BONUS_BALANCE: 330,
                                                    BONUS_AWARD_BALANCE: 331
                                                });

                                                var currencySymbol = response.Controls.CurrencySymbol;
                                                var list = response.Controls.WalletBalanceList;
                                                var notPlayedBalance = list && list != null ? list.find( (item) => item.TypeId == WalletTypes.NOT_PLAYED_BALANCE) ? getValueOrDefault(list.find( (item) => item.TypeId == WalletTypes.NOT_PLAYED_BALANCE), 'Balance', 0) : 0 : 0;
                                                var playedBalance = list && list != null ? list.find( (item) => item.TypeId == WalletTypes.PLAYED_BALANCE) ? getValueOrDefault(list.find( (item) => item.TypeId == WalletTypes.PLAYED_BALANCE), 'Balance', 0) : 0 : 0;
                                                var hasNegative = (notPlayedBalance >= 0 && playedBalance >= 0) ? false : true;
                                                var $bI = $('<div>', {
                                                    id: `Balance--items_${response.Controls.ProductId}`,
                                                    class: 'Balance--items',
                                                });

                                                var $ul = $('<ul>');
                                                if (response.SectionWrapperWidgetObjectList) {

                                                    response.SectionWrapperWidgetObjectList.forEach( (obj) => {

                                                        var plContent = response.WidgetObjectContentList;

                                                        plContent = plContent && plContent != null ? plContent.find( (item) => item.WidgetObjectId == obj.WidgetObjectId && item.ContentLanguageId == response.LanguageCode) ? plContent.find( (item) => item.WidgetObjectId == obj.WidgetObjectId && item.ContentLanguageId == response.LanguageCode) : {
                                                            ContentName: obj.Name,
                                                            ContentText: obj.Text
                                                        } : {
                                                            ContentName: obj.Name,
                                                            ContentText: obj.Text
                                                        };

                                                        var data = [];
                                                        switch (obj.ObjectTypeId) {
                                                        case ObjectTypes.PLAY_BALANCE:

                                                            data = toCurrencySymbolArray(currencySymbol, roundToTwoDecimals(response.Controls.CashBalance + getValueOrDefault(response.Controls, 'BonusBetBalance', 0)), true);

                                                            var prodPB = $('<li>', {
                                                                class: `prod_${obj.Name}`,
                                                            }).append($('<div>', {
                                                                class: `${obj.ObjectStyle}`,
                                                            }).append($('<span>', {
                                                                class: `product-Play_Balance-Name`,
                                                                text: `${!isEmpty(plContent.ContentText) ? plContent.ContentText : plContent.ContentName}`
                                                            }), $('<span>', {
                                                                id: 'product-play_balance',
                                                                class: 'product-Play_Balance'
                                                            }).append($('<span>', {
                                                                id: 'product-play_balance-sign',
                                                                class: 'product-Play_Balance-sign',
                                                                text: `${data[0]}`
                                                            }), $('<span>', {
                                                                text: `${data[1]}`
                                                            }), $('<span>', {
                                                                class: 'menu-play-balance-amnt',
                                                                text: `${roundToTwoDecimals(data[2], true)}`
                                                            }), $('<span>', {
                                                                class: `menu-play-balance-amnt-full hidden ${parseFloat(response.Controls.CashBalance) == roundToTwoDecimals(parseFloat(response.Controls.CashBalance)) ? "" : "tooltipShow"}`,
                                                                text: `${data[1]} ${response.Controls.CashBalance}`
                                                            }))));

                                                            $ul.append(prodPB);
                                                            break;
                                                        case ObjectTypes.PRODUCT_CASH_BALANCE:

                                                            let sumBalance = notPlayedBalance + playedBalance;
                                                            data = toCurrencySymbolArray(currencySymbol, roundToTwoDecimals(sumBalance), true);

                                                            var prodPB = $('<li>', {
                                                                id: 'product-total-balance',
                                                                class: `prod_${obj.Name}`,
                                                            }).append($('<div>', {
                                                                class: `${obj.ObjectStyle}`,
                                                            }).append($('<span>', {
                                                                class: `product-Cash_Balance-Name`,
                                                                text: `${!isEmpty(plContent.ContentText) ? plContent.ContentText : plContent.ContentName}`
                                                            }), $('<span>', {
                                                                id: 'product-cash_balance',
                                                                class: 'product-Cash_Balance'
                                                            }).append($('<span>', {
                                                                id: 'product-cash_balance-sign',
                                                                class: 'product-Cash_Balance-sign',
                                                                text: `${data[0]}`
                                                            }), $('<span>', {
                                                                text: `${data[1]}`
                                                            }), $('<span>', {
                                                                class: 'product-Cash_Balance-amnt',
                                                                text: `${roundToTwoDecimals(data[2], true)}`
                                                            }), $('<span>', {
                                                                class: `product-Cash_Balance-amnt-full hidden ${parseFloat(sumBalance) == roundToTwoDecimals(parseFloat(sumBalance)) ? "" : "tooltipShow"}`,
                                                                text: `${data[1]} ${sumBalance}`
                                                            }))));

                                                            $ul.append(prodPB);
                                                            break;
                                                        case ObjectTypes.PRODUCT_BONUS_BALANCE:

                                                            data = toCurrencySymbolArray(currencySymbol, !hasNegative ? roundToTwoDecimals(getValueOrDefault(response.Controls, 'BonusBetBalance', 0)) : 0, true);

                                                            var prodPBClass = response.Controls.BonusBetBalance != null ? `prod_${obj.Name}` : `hidden prod_${obj.Name}`;

                                                            var prodPB = $('<li>', {
                                                                id: 'product-bonus-bet',
                                                                betwlt: `${response.Controls.BetWalletId}`,
                                                                betbonusid: `${response.Controls.BetBonusId}`,
                                                                class: `${prodPBClass}`,
                                                            }).append($('<div>', {
                                                                class: `${obj.ObjectStyle}`,
                                                            }).append($('<span>', {
                                                                class: `product-Bonus_Balance-Name`,
                                                                text: `${!isEmpty(plContent.ContentText) ? plContent.ContentText : plContent.ContentName}`
                                                            }), $('<span>', {
                                                                id: 'product-bonus_balance',
                                                                class: 'product-Bonus_Balance'
                                                            }).append($('<span>', {
                                                                text: `${data[1]}`
                                                            }), $('<span>', {
                                                                class: 'product-Bonus_Balance-amnt',
                                                                text: `${roundToTwoDecimals(data[2], true)}`
                                                            }), $('<span>', {
                                                                class: `product-Bonus_Balance-amnt-full hidden ${parseFloat(response.Controls.BonusBetBalance) == roundToTwoDecimals(parseFloat(response.Controls.BonusBetBalance)) ? "" : "tooltipShow"}`,
                                                                text: `${data[1]} ${response.Controls.BonusBetBalance}`
                                                            }), $('<input>', {
                                                                type: 'hidden',
                                                                bonusTitle: `${response.Controls.BonusTitle}`
                                                            }))));

                                                            $ul.append(prodPB);
                                                            break;
                                                        case ObjectTypes.BONUS_AWARD_BALANCE:
                                                            data = toCurrencySymbolArray(currencySymbol, roundToTwoDecimals(getValueOrDefault(response.Controls, 'BonusAwardBalance', 0)), true);

                                                            var prodPBClass = response.Controls.BonusAwardBalance != null ? `prod_${obj.Name}` : `hidden prod_${obj.Name}`;

                                                            var prodPB = $('<li>', {
                                                                id: 'product-bonus-award',
                                                                awardwlt: `${response.Controls.AwardWalletId}`,
                                                                awardbonusid: `${response.Controls.AwBonusId}`,
                                                                class: `${prodPBClass}`,
                                                            }).append($('<div>', {
                                                                class: `${obj.ObjectStyle}`,
                                                            }).append($('<span>', {
                                                                class: `product-Bonus_Award_Balance-Name`,
                                                                text: `${!isEmpty(plContent.ContentText) ? plContent.ContentText : plContent.ContentName}`
                                                            }), $('<span>', {
                                                                id: 'product-bonus_award_balance',
                                                                class: 'product-Bonus_Award_Balance'
                                                            }).append($('<span>', {
                                                                id: 'product-bonus_award_balance-sign',
                                                                class: 'product-Bonus_Award_Balance-sign',
                                                                text: `${data[0]}`
                                                            }), $('<span>', {
                                                                text: `${data[1]}`
                                                            }), $('<span>', {
                                                                class: 'product-Bonus_Award_Balance-amnt',
                                                                text: `${roundToTwoDecimals(data[2], true)}`
                                                            }), $('<span>', {
                                                                class: `product-Bonus_Award_Balance-amnt-full hidden ${parseFloat(response.Controls.BonusAwardBalance) == roundToTwoDecimals(parseFloat(response.Controls.BonusAwardBalance)) ? "" : "tooltipShow"}`,
                                                                text: `${data[1]} ${response.Controls.BonusAwardBalance}`
                                                            }), $('<input>', {
                                                                type: 'hidden',
                                                                awardTitle: `${response.Controls.AwBonusTitle}`
                                                            }))));

                                                            $ul.append(prodPB);
                                                            break;
                                                        }

                                                    }
                                                    )
                                                }

                                                $bI.append($ul);
                                                $gameCont.append($bI)
                                            }
                                            //Controls endregion

                                            $gameCont.append($gameControl).append($('<div>', {
                                                class: 'game-holder',
                                            }));
                                        } else {
                                            $gameCont.append($gameControl).append($('<div>', {
                                                class: 'game-holder',
                                            }));
                                        }

                                        var $closeBtn = $gameCont.find('.btn-close');
                                        var $fullScreenBtn = $gameCont.find('.btn-full-screen');
                                        var $reloadBtn = $gameCont.find('.btn-refresh');
                                        var $bonusTable = $gameCont.find('.player-bonus-table');

                                        $closeBtn.on('click', function(e) {
                                            closeBtn(e, $gameCont);
                                        });

                                        if ($('.game-container').length == 1) {
                                            var $conteiner = $('.game-container');
                                            var $el = $conteiner.find('.btn-close');
                                            $el.unbind("click");
                                            $el.on('click', function(e) {
                                                e.preventDefault();
                                                closeBtn(e, $conteiner);
                                            });
                                        }

                                        $fullScreenBtn.on('click', function(e) {
                                            e.preventDefault();
                                            var htmlEl = $(this).closest('.game-container').get(0);

                                            if (screenfull.enabled) {
                                                screenfull.toggle(htmlEl);
                                            }
                                        });

                                        $reloadBtn.on('click', function(e) {
                                            e.preventDefault();
                                            $(this).addClass('loading');
                                            var $gameContainer = $(this).closest('.game-container');
                                            reloadPlay($gameContainer, type, 'frame', product.GameID, product.NameInURL, lunchIsNotFirst);
                                            $(this).removeClass('loading');
                                        });

                                        if ($bonusTable != null) {
                                            setTimeout( () => {
                                                var $selectedItem = $('.submit-state');
                                                $selectedItem.on('click', function(e) {
                                                    e.preventDefault();
                                                    e.stopPropagation();
                                                    let targetVal = e.target.value;

                                                    $selectedItem = $(this);
                                                    $selectedItem.addClass('loading')
                                                    var playerBonusId = parseInt($selectedItem.parent().parent().attr('bonusid'));
                                                    var num = parseInt($selectedItem.attr('value'))

                                                    const _disable = 5;
                                                    const _enable = 2;
                                                    const _forfeit = 7;

                                                    var playerBonusState = parseInt($selectedItem.parent().parent().attr('bonusstate'));
                                                    var params = {
                                                        playerBonusId: playerBonusId,
                                                        playerBonusState: num != _forfeit ? (playerBonusState == _disable ? _enable : _disable) : _forfeit
                                                    };

                                                    $.ajax({
                                                        url: '/account/updatebonusstate',
                                                        type: 'POST',
                                                        data: params,
                                                        success: function(result) {
                                                            if (result.Success) {
                                                                $selectedItem.removeClass('loading')
                                                            }
                                                        },
                                                        error: function(result) {
                                                            $selectedItem.parent().append("<div class='state__msg--error'>process error</div>")
                                                        }
                                                    })
                                                });
                                            }
                                            , "0");

                                        }
                                        ;
                                        screenfull.on('change', function() {
                                            launchFullscreen($(this).closest('.game-container'));
                                        });

                                        var launchFullscreen = function($el) {
                                            if (screenfull.isFullscreen) {
                                                $(document.body).addClass('fullscreen');
                                            } else {
                                                $(document.body).removeClass('fullscreen');
                                            }
                                        };

                                        $.ajax({
                                            url: `/Play/Launch/${type}/frame/${product.GameID}/play`,
                                            success: function(val) {
                                                if (val != "login") {
                                                    $gameCont.find(".game-holder").removeClass('loading').append(val);
                                                } else {
                                                    $(".game-holder").removeClass('loading');
                                                    Popup('instant-login');
                                                }
                                            }
                                        })

                                        if (type != "real") {
                                            $gameCont.find('.game-holder').before($('<a>', {
                                                class: 'btn-real-game',
                                            }).append($('<i>', {
                                                html: `${resp.Translations.PlayReal}`,
                                                class: 'fa fa-caret-right',
                                            }), $('<input>', {
                                                type: 'hidden',
                                                frameType: `${product.LaunchFrameType}`,
                                                prodId: `${product.GameID}`,
                                                prodName: `${product.NameInURL}`,
                                            })));
                                            $gameCont.find(".btn-real-game").on('click', function(e) {
                                                e.preventDefault();
                                                reloadPlay($(this).parent(), 'real', 'frame', product.GameID, product.NameInURL, lunchIsNotFirst);
                                            });
                                        }

                                        if (product.LaunchFrameType == "full") {
                                            const fullGameUrl = `/real/${product.LaunchFrameType}/${product.GameID}/${product.NameInURL}`;

                                            $gameCont.find('.game-holder').before($('<a>', {
                                                class: 'btn-real-game play-full',
                                                text: 'play full',
                                                href: `${fullGameUrl}`,
                                            }));
                                        }

                                        $container.append($gameCont);

                                        var hasHref = $('.game-container.first').find(".btn-real-game").attr('href');

                                        if ($('.game-container').length > 1 && typeof hasHref !== 'undefined' && hasHref !== false) {
                                            $('.game-container.first').find(".btn-real-game").removeAttr("href");
                                            $('.game-container.first').find(".btn-real-game").on('click', function(e) {
                                                e.preventDefault();
                                                var input1 = $('.game-container.first').find("input");
                                                var gameId1 = input1.attr('prodId');
                                                var name1 = input1.attr('prodName');
                                                //var frameType = input.attr('frameType');

                                                reloadPlay($(this).parent(), 'real', 'frame', gameId1, name1, 1);
                                            });
                                        }

                                        if ($('.game-container').length == 1 && !(typeof hasHref !== 'undefined' && hasHref !== false)) {
                                            var input2 = $('.game-container').find("input");

                                            //var frameType = input.attr('frameType');
                                            var gameId2 = input2.attr('prodId');
                                            var name2 = input2.attr('prodName');

                                            var hrefUrl = `/real/frame/${gameId2}/${name2}/0`;

                                            $('.game-container').find(".btn-real-game").attr("href", `${hrefUrl}`);
                                        }
                                        if ($('.game-container').length == 4) {
                                            $('#playsearchsettings').parent().hide();
                                        }

                                    }
                                    if (product.SameProviderGameId > 0) {
                                        var $gaCont = $(`.game-container[productid=${product.SameProviderGameId}]`);
                                        $gaCont.find('.btn-close').trigger("click");
                                    }
                                } else {
                                    $(".game-holder").removeClass('loading');
                                    Popup('instant-login');
                                }

                            }
                        })
                    }
                    ;

                    var reloadPlay = ($cont, type, frametype, gameId, name, lunchIsNotFirst) => {
                        var played;
                        if ($cont.find('#playedGames')) {
                            played = $($cont.find('#playedGames')).detach();
                        }
                        $cont.empty();
                        $cont.addClass('loading');
                        $.ajax({
                            url: `/${type}/${frametype}/${gameId}/${name}/${lunchIsNotFirst}`,
                            success: function(val) {
                                var response = JSON.parse(val);
                                if (response.IsLoggedIn || type != 'real') {
                                    var $gameControl = $('<div>', {
                                        class: 'game-controls',
                                    }).append($('<div>', {
                                        class: 'game-controls-btn',
                                    }).append('<div class="btn-close"><i class= "las la-times"></i></div><div class="btn-full-screen"><i class="las la-expand-arrows-alt"></i></div><div class="btn-refresh"><i class="las la-redo-alt"></i></div>'));

                                    if (response.IsLoggedIn) {

                                        //Controls region 
                                        if (type == "real") {
                                            var controls = response.Controls;
                                            $cont.attr('extbonusId', controls.ExtBonusId);
                                            if (Object.keys(controls).length > 0) {
                                                var $pbt = $('<div>', {
                                                    class: 'player-bonus-table',
                                                });
                                                var $bTnb = $('<div>', {
                                                    class: 'btn-bonus',
                                                }).append($('<i>', {
                                                    class: 'tp-ic-gifts',
                                                }));

                                                var $bbw = $('<div>', {
                                                    class: 'bonus-body-wrapper',
                                                }).append($('<div>', {
                                                    class: 'bonus-body-row-title',
                                                }).append($('<div>', {
                                                    class: 'bonus-title-row',
                                                }).append($('<div>', {
                                                    class: 'bonus-id',
                                                    text: `${resp.Translations.IdTrans}`
                                                }), $('<div>', {
                                                    class: 'bonus-current-name',
                                                    text: `${resp.Translations.NameTrans}`
                                                }), $('<div>', {
                                                    class: 'bonus-current-amount',
                                                    text: `${resp.Translations.AmountTrans}`
                                                }))));
                                                var $srtList = $('<ul>', {
                                                    id: 'sortableList',
                                                    class: 'bonus-table-body grid js-sortable',
                                                });
                                                controls.ProductBonusList.forEach( (item) => {
                                                    var dis = item.State == 2 ? '' : ' disabled';
                                                    var dishid = item.State == 2 ? '' : ' hidden';
                                                    var enhid = item.State == 5 ? '' : ' hidden';
                                                    var $li = $('<li>', {
                                                        class: `bonus-body-row item b-${item.Id}${dis}`,
                                                        bonsuOrder: `${item.Order}`,
                                                        bonusid: `${item.Id}`,
                                                        bonustype: `${item.Type}`,
                                                        bonusstate: `${item.State}`,
                                                        extbonusId: `${item.ExtBonusId}`,
                                                    }).append($('<div>', {
                                                        class: 'bonus-body-row-title'
                                                    }).append($('<div>', {
                                                        class: 'bonus-id',
                                                        text: `${item.Id}`
                                                    }), $('<div>', {
                                                        class: 'bonus-current-name',
                                                        text: `${item.Name}`
                                                    }), $('<div>', {
                                                        class: 'bonus-current-amount',
                                                        text: `${roundToTwoDecimals(item.CurrentAmount, true)}`
                                                    }), $('<div>', {
                                                        class: `bonus-current-amount-full hidden ${parseFloat(item.CurrentAmount).toString() > roundToTwoDecimals(parseFloat(item.CurrentAmount)) ? 'tooltipShow' : ''}`,
                                                        text: `${item.CurrentAmount}`
                                                    })));

                                                    $li.append($('<div>', {
                                                        class: 'row'
                                                    }).append($('<button>', {
                                                        class: 'submit-state forfeit-btn',
                                                        text: `Forfeit`,
                                                        value: '7',
                                                        style: ''
                                                    }), item.Type !== 4 ? $('<button>', {
                                                        class: `submit-state disable-btn${dishid}`,
                                                        text: `Disable`,
                                                        value: '5',
                                                        style: ''
                                                    }) : null, item.Type !== 4 ? $('<button>', {
                                                        class: `submit-state enable-btn${enhid}`,
                                                        text: `Activate`,
                                                        value: '2',
                                                        style: ''
                                                    }) : null));
                                                    $srtList.append($li);
                                                }
                                                )

                                                $bbw.append($srtList);
                                                $bTnb.append($bbw);
                                                $pbt.append($bTnb, $bbw);
                                                $gameControl.append($pbt);
                                                $bTnb.on('click', function(e) {
                                                    $bTnb.toggleClass('open')
                                                });

                                                var $bonusInfo = $pbt.find('.bonus-body-row.item .bonus-body-row-title');
                                                $pbt.find('.row').slideUp()

                                                $bonusInfo.on('click', function(event) {
                                                    let target = event.target
                                                    $bonusInfo = $(target).parent()
                                                    $bonusInfo.toggleClass('open')
                                                    $bonusInfo.siblings(".row").slideUp()
                                                    if ($bonusInfo.hasClass('open')) {
                                                        $bonusInfo.siblings(".row").slideDown()
                                                    }
                                                });
                                            }

                                            function getValueOrDefault(obj, str, deflt) {
                                                var a = str.split(".");
                                                o = obj;
                                                for (var i = 0; i < a.length; i++) {
                                                    o = obj[a[i]];
                                                    if (!o) {
                                                        return deflt;
                                                    }
                                                }
                                                return o;
                                            }

                                            function toCurrencySymbolArray(currencySymbol, number, showDecimal) {
                                                var str = number < 0 ? "- " : " ";

                                                var num = showDecimal ? roundToTwoDecimals(number).toLocaleString('en-US', {
                                                    minimumFractionDigits: 2,
                                                    maximumFractionDigits: 2
                                                }) : roundToWithoutDecimals(number).toLocaleString('en-US', {
                                                    minimumFractionDigits: 2,
                                                    maximumFractionDigits: 2
                                                });

                                                return [str, currencySymbol + " ", ` ${num} `, ];
                                            }

                                            function roundToTwoDecimals(number, toFormat) {
                                                let rounded = Math.floor(number * 100) / 100;
                                                if (toFormat === true) {
                                                    return rounded.toLocaleString('en-US', {
                                                        minimumFractionDigits: 2,
                                                        maximumFractionDigits: 2
                                                    })
                                                }
                                                return rounded.toFixed(2);
                                            }

                                            function roundToWithoutDecimals(number) {

                                                var multiplier = Math.pow(10, 0);
                                                var adjusted = number * multiplier;
                                                var truncated = adjusted - (adjusted % 1);

                                                var rounded = truncated / multiplier;
                                                return rounded;
                                            }

                                            function isEmpty(value) {
                                                return (value == null || (typeof value === "string" && value.trim().length === 0));
                                            }

                                            const WalletTypes = Object.freeze({
                                                NOT_PLAYED_BALANCE: 1,
                                                PLAYED_BALANCE: 2,
                                            });

                                            const ObjectTypes = Object.freeze({
                                                PLAY_BALANCE: 332,
                                                PRODUCT_CASH_BALANCE: 329,
                                                PRODUCT_BONUS_BALANCE: 330,
                                                BONUS_AWARD_BALANCE: 331
                                            });

                                            var currencySymbol = response.Controls.CurrencySymbol;
                                            var list = response.Controls.WalletBalanceList;
                                            var notPlayedBalance = list && list != null ? list.find( (item) => item.TypeId == WalletTypes.NOT_PLAYED_BALANCE) ? getValueOrDefault(list.find( (item) => item.TypeId == WalletTypes.NOT_PLAYED_BALANCE), 'Balance', 0) : 0 : 0;
                                            var playedBalance = list && list != null ? list.find( (item) => item.TypeId == WalletTypes.PLAYED_BALANCE) ? getValueOrDefault(list.find( (item) => item.TypeId == WalletTypes.PLAYED_BALANCE), 'Balance', 0) : 0 : 0;
                                            var hasNegative = (notPlayedBalance >= 0 && playedBalance >= 0) ? false : true;
                                            var $bI = $('<div>', {
                                                id: `Balance--items_${response.Controls.ProductId}`,
                                                class: 'Balance--items',
                                            });

                                            var $ul = $('<ul>');
                                            if (response.SectionWrapperWidgetObjectList) {

                                                response.SectionWrapperWidgetObjectList.forEach( (obj) => {

                                                    var plContent = response.WidgetObjectContentList;

                                                    plContent = plContent && plContent != null ? plContent.find( (item) => item.WidgetObjectId == obj.WidgetObjectId && item.ContentLanguageId == response.LanguageCode) ? plContent.find( (item) => item.WidgetObjectId == obj.WidgetObjectId && item.ContentLanguageId == response.LanguageCode) : {
                                                        ContentName: obj.Name,
                                                        ContentText: obj.Text
                                                    } : {
                                                        ContentName: obj.Name,
                                                        ContentText: obj.Text
                                                    };

                                                    var data = [];
                                                    switch (obj.ObjectTypeId) {
                                                    case ObjectTypes.PLAY_BALANCE:

                                                        data = toCurrencySymbolArray(currencySymbol, roundToTwoDecimals(response.Controls.CashBalance + getValueOrDefault(response.Controls, 'BonusBetBalance', 0)), true);

                                                        var prodPB = $('<li>', {
                                                            class: `prod_${obj.Name}`,
                                                        }).append($('<div>', {
                                                            class: `${obj.ObjectStyle}`,
                                                        }).append($('<span>', {
                                                            class: `product-Play_Balance-Name`,
                                                            text: `${!isEmpty(plContent.ContentText) ? plContent.ContentText : plContent.ContentName}`
                                                        }), $('<span>', {
                                                            id: 'product-play_balance',
                                                            class: 'product-Play_Balance'
                                                        }).append($('<span>', {
                                                            id: 'product-play_balance-sign',
                                                            class: 'product-Play_Balance-sign',
                                                            text: `${data[0]}`
                                                        }), $('<span>', {
                                                            text: `${data[1]}`
                                                        }), $('<span>', {
                                                            class: 'menu-play-balance-amnt',
                                                            text: `${roundToTwoDecimals(data[2], true)}`
                                                        }), $('<span>', {
                                                            class: `menu-play-balance-amnt-full hidden ${parseFloat(response.Controls.CashBalance) == roundToTwoDecimals(parseFloat(response.Controls.CashBalance)) ? "" : "tooltipShow"}`,
                                                            text: `${data[1]} ${response.Controls.CashBalance + (response.Controls.BonusBetBalance ? response.Controls.BonusBetBalance : 0)}`
                                                        }))));

                                                        $ul.append(prodPB);
                                                        break;
                                                    case ObjectTypes.PRODUCT_CASH_BALANCE:

                                                        let sumBalance = notPlayedBalance + playedBalance;
                                                        data = toCurrencySymbolArray(currencySymbol, roundToTwoDecimals(sumBalance), true);

                                                        var prodPB = $('<li>', {
                                                            id: 'product-total-balance',
                                                            class: `prod_${obj.Name}`,
                                                        }).append($('<div>', {
                                                            class: `${obj.ObjectStyle}`,
                                                        }).append($('<span>', {
                                                            class: `product-Cash_Balance-Name`,
                                                            text: `${!isEmpty(plContent.ContentText) ? plContent.ContentText : plContent.ContentName}`
                                                        }), $('<span>', {
                                                            id: 'product-cash_balance',
                                                            class: 'product-Cash_Balance'
                                                        }).append($('<span>', {
                                                            id: 'product-cash_balance-sign',
                                                            class: 'product-Cash_Balance-sign',
                                                            text: `${data[0]}`
                                                        }), $('<span>', {
                                                            text: `${data[1]}`
                                                        }), $('<span>', {
                                                            class: 'product-Cash_Balance-amnt',
                                                            text: `${roundToTwoDecimals(data[2], true)}`
                                                        }), $('<span>', {
                                                            class: `product-Cash_Balance-amnt-full hidden ${parseFloat(sumBalance) == roundToTwoDecimals(parseFloat(sumBalance)) ? "" : "tooltipShow"}`,
                                                            text: `${data[1]} ${sumBalance}`
                                                        }))));

                                                        $ul.append(prodPB);
                                                        break;
                                                    case ObjectTypes.PRODUCT_BONUS_BALANCE:

                                                        data = toCurrencySymbolArray(currencySymbol, !hasNegative ? roundToTwoDecimals(getValueOrDefault(response.Controls, 'BonusBetBalance', 0)) : 0, true);

                                                        var prodPBClass = response.Controls.BonusBetBalance != null ? `prod_${obj.Name}` : `hidden prod_${obj.Name}`;

                                                        var prodPB = $('<li>', {
                                                            id: 'product-bonus-bet',
                                                            betwlt: `${response.Controls.BetWalletId}`,
                                                            betbonusid: `${response.Controls.BetBonusId}`,
                                                            class: `${prodPBClass}`,
                                                        }).append($('<div>', {
                                                            class: `${obj.ObjectStyle}`,
                                                        }).append($('<span>', {
                                                            class: `product-Bonus_Balance-Name`,
                                                            text: `${!isEmpty(plContent.ContentText) ? plContent.ContentText : plContent.ContentName}`
                                                        }), $('<span>', {
                                                            id: 'product-bonus_balance',
                                                            class: 'product-Bonus_Balance'
                                                        }).append($('<span>', {
                                                            text: `${data[1]}`
                                                        }), $('<span>', {
                                                            class: 'product-Bonus_Balance-amnt',
                                                            text: `${roundToTwoDecimals(data[2], true)}`
                                                        }), $('<span>', {
                                                            class: `product-Bonus_Balance-amnt-full hidden ${parseFloat(response.Controls.BonusBetBalance) == roundToTwoDecimals(parseFloat(response.Controls.BonusBetBalance)) ? "" : "tooltipShow"}`,
                                                            text: `${data[1]} ${response.Controls.BonusBetBalance}`
                                                        }), $('<input>', {
                                                            type: 'hidden',
                                                            bonusTitle: `${response.Controls.BonusTitle}`
                                                        }))));

                                                        $ul.append(prodPB);
                                                        break;
                                                    case ObjectTypes.BONUS_AWARD_BALANCE:
                                                        data = toCurrencySymbolArray(currencySymbol, roundToTwoDecimals(getValueOrDefault(response.Controls, 'BonusAwardBalance', 0)), true);

                                                        var prodPBClass = response.Controls.BonusAwardBalance != null ? `prod_${obj.Name}` : `hidden prod_${obj.Name}`;

                                                        var prodPB = $('<li>', {
                                                            id: 'product-bonus-award',
                                                            awardwlt: `${response.Controls.AwardWalletId}`,
                                                            awardbonusid: `${response.Controls.AwBonusId}`,
                                                            class: `${prodPBClass}`,
                                                        }).append($('<div>', {
                                                            class: `${obj.ObjectStyle}`,
                                                        }).append($('<span>', {
                                                            class: `product-Bonus_Award_Balance-Name`,
                                                            text: `${!isEmpty(plContent.ContentText) ? plContent.ContentText : plContent.ContentName}`
                                                        }), $('<span>', {
                                                            id: 'product-bonus_award_balance',
                                                            class: 'product-Bonus_Award_Balance'
                                                        }).append($('<span>', {
                                                            id: 'product-bonus_award_balance-sign',
                                                            class: 'product-Bonus_Award_Balance-sign',
                                                            text: `${data[0]}`
                                                        }), $('<span>', {
                                                            text: `${data[1]}`
                                                        }), $('<span>', {
                                                            class: 'product-Bonus_Award_Balance-amnt',
                                                            text: `${roundToTwoDecimals(data[2], true)}`
                                                        }), $('<span>', {
                                                            class: `product-Bonus_Award_Balance-amnt-full hidden ${parseFloat(response.Controls.BonusAwardBalance) == roundToTwoDecimals(parseFloat(response.Controls.BonusAwardBalance)) ? "" : "tooltipShow"}`,
                                                            text: `${data[1]} ${response.Controls.BonusAwardBalance}`
                                                        }), $('<input>', {
                                                            type: 'hidden',
                                                            awardTitle: `${response.Controls.AwBonusTitle}`
                                                        }))));

                                                        $ul.append(prodPB);
                                                        break;
                                                    }

                                                }
                                                )
                                            }

                                            $bI.append($ul);
                                            $cont.append($bI)
                                        }
                                        //Controls endregion

                                        $cont.append($gameControl).append($('<div>', {
                                            class: 'game-holder',
                                        }));

                                        var $selectedItem = $('.submit-state');
                                        $selectedItem.on('click', function(e) {
                                            e.preventDefault();
                                            e.stopPropagation();
                                            let targetVal = e.target.value;

                                            $selectedItem = $(this);
                                            $selectedItem.addClass('loading')
                                            var playerBonusId = parseInt($selectedItem.parent().parent().attr('bonusid'));
                                            var num = parseInt($selectedItem.attr('value'))

                                            const _disable = 5;
                                            const _enable = 2;
                                            const _forfeit = 7;

                                            var playerBonusState = parseInt($selectedItem.parent().parent().attr('bonusstate'));
                                            var params = {
                                                playerBonusId: playerBonusId,
                                                playerBonusState: num != _forfeit ? (playerBonusState == _disable ? _enable : _disable) : _forfeit
                                            };

                                            $.ajax({
                                                url: '/account/updatebonusstate',
                                                type: 'POST',
                                                data: params,
                                                success: function(result) {
                                                    if (result.Success) {
                                                        $selectedItem.removeClass('loading')
                                                    }
                                                },
                                                error: function(result) {
                                                    $selectedItem.parent().append("<div class='state__msg--error'>process error</div>")
                                                }
                                            })
                                        });

                                    } else {
                                        $cont.append($gameControl).append($('<div>', {
                                            class: 'game-holder',
                                        }));
                                    }

                                    var $selectedItem = $('.submit-state');
                                    $selectedItem.on('click', function(e) {
                                        e.preventDefault();
                                        e.stopPropagation();
                                        let targetVal = e.target.value;

                                        $selectedItem = $(this);
                                        $selectedItem.addClass('loading')
                                        var playerBonusId = parseInt($selectedItem.parent().parent().attr('bonusid'));
                                        var num = parseInt($selectedItem.attr('value'))

                                        const _disable = 5;
                                        const _enable = 2;
                                        const _forfeit = 7;

                                        var playerBonusState = parseInt($selectedItem.parent().parent().attr('bonusstate'));
                                        var params = {
                                            playerBonusId: playerBonusId,
                                            playerBonusState: num != _forfeit ? (playerBonusState == _disable ? _enable : _disable) : _forfeit
                                        };

                                        $.ajax({
                                            url: '/account/updatebonusstate',
                                            type: 'POST',
                                            data: params,
                                            success: function(result) {
                                                if (result.Success) {
                                                    $selectedItem.removeClass('loading')
                                                }
                                            },
                                            error: function(result) {
                                                $selectedItem.parent().append("<div class='state__msg--error'>process error</div>")
                                            }
                                        })
                                    });

                                    var $closeBtn = $cont.find('.btn-close');
                                    var $fullScreenBtn = $cont.find('.btn-full-screen');
                                    var $reloadBtn = $cont.find('.btn-refresh');

                                    $closeBtn.on('click', function(e) {
                                        closeBtn(e, $cont);
                                    });

                                    $fullScreenBtn.on('click', function(e) {
                                        e.preventDefault();
                                        var htmlEl = $(this).closest('.game-container').get(0);

                                        if (screenfull.enabled) {
                                            screenfull.toggle(htmlEl);
                                        }
                                    });

                                    $reloadBtn.on('click', function(e) {
                                        e.preventDefault();
                                        $(this).addClass('loading');
                                        var $gameContainer = $(this).closest('.game-container');
                                        reloadPlay($cont, type, frametype, gameId, name, lunchIsNotFirst);
                                        $(this).removeClass('loading');
                                    });

                                    screenfull.on('change', function() {
                                        launchFullscreen($(this).closest('.game-container'));
                                    });

                                    var launchFullscreen = function($el) {
                                        if (screenfull.isFullscreen) {
                                            $(document.body).addClass('fullscreen');
                                        } else {
                                            $(document.body).removeClass('fullscreen');
                                        }
                                    };

                                    $.ajax({
                                        url: `/Play/Launch/${type}/frame/${gameId}/play`,
                                        success: function(val) {
                                            if (val != "login") {
                                                $cont.find(".game-holder").removeClass('loading').append(val);
                                            } else {
                                                $(".game-holder").removeClass('loading');
                                                Popup('instant-login');
                                            }
                                        }
                                    })

                                    if (type != "real") {
                                        $cont.prepend($('<a>', {
                                            class: 'btn-real-game',
                                        }).append($('<i>', {
                                            html: `${resp.Translations.PlayReal}`,
                                            class: 'fa fa-caret-right',
                                        }), $('<input>', {
                                            type: 'hidden',
                                            frameType: `${product.LaunchFrameType}`,
                                            prodId: `${product.GameID}`,
                                            prodName: `${product.NameInURL}`,
                                        })));
                                        $cont.find(".btn-real-game").on('click', function(e) {
                                            e.preventDefault();
                                            reloadPlay($(this).parent(), 'real', 'frame', product.GameID, product.NameInURL, lunchIsNotFirst);
                                        });
                                    }

                                    var hasHref = $('.game-container.first').find(".btn-real-game").attr('href');

                                    if ($('.game-container').length > 1 && typeof hasHref !== 'undefined' && hasHref !== false) {
                                        $('.game-container.first').find(".btn-real-game").removeAttr("href");
                                        $('.game-container.first').find(".btn-real-game").on('click', function(e) {
                                            e.preventDefault();
                                            var input3 = $('.game-container.first').find("input");
                                            var gameId3 = input3.attr('prodId');
                                            var name3 = input.attr('prodName');
                                            // var frameType = input.attr('frameType');

                                            reloadPlay($(this).parent(), 'real', 'frame', gameId3, name3, 1);
                                        });
                                    }

                                    if ($('.game-container').length == 1 && !(typeof hasHref !== 'undefined' && hasHref !== false)) {
                                        var input4 = $('.game-container').find("input");

                                        // var frameType = input.attr('frameType');
                                        var gameId4 = input4.attr('prodId');
                                        var name4 = input4.attr('prodName');

                                        var hrefUrl = `/real/frame/${gameId4}/${name4}/0`;

                                        $('.game-container').find(".btn-real-game").attr("href", `${hrefUrl}`);
                                    }

                                    if ($('.game-container').length == 4) {
                                        $('#playsearchsettings').parent().hide();
                                    }
                                    $cont.removeClass('loading');

                                    $cont.append(played);
                                } else {
                                    $(".game-holder").removeClass('loading');
                                    Popup('instant-login');
                                }
                            }
                        })
                    }
                    ;

                    var closeBtn = ($e, $gCont) => {
                        $e.preventDefault();
                        if ($('#playsearchsettings').hasClass('oneFrame')) {
                            $(this).addClass('loading');
                            var backUrl = localStorage.getItem('back_url') || '/';
                            window.location.href = backUrl;
                        } else {
                            if ($gCont.find('#playedGames').length != 0) {
                                var playedG = $($gCont.find('#playedGames')).detach();
                                $('.game-container')[1].append(playedG[0]);
                            }
                            $gCont.remove();
                            if ($('.game-container').length == 1) {
                                $('.game-page').addClass('single');
                                $('#playsearchsettings').addClass('oneFrame');
                                $('.Container--GamePage').removeClass('twoFrame')
                                if (!$('.game-container').hasClass('first')) {
                                    $('.game-container').addClass('first');
                                    var $el = $('.game-container').find('.btn-close');
                                    $el.unbind("click");
                                    $el.on('click', function(e) {
                                        e.preventDefault();
                                        $(this).addClass('loading');
                                        var backUrl = localStorage.getItem('back_url') || '/';
                                        window.location.href = backUrl;
                                    });
                                } else {
                                    var $el = $('.game-container').find('.btn-close');
                                    $el.unbind("click");
                                    $el.on('click', function(e) {
                                        e.preventDefault();
                                        closeBtn(e, $('.game-container'));
                                    });
                                }
                            } else if ($('.game-container').length == 3) {
                                if ($('#playsearchsettings').parent().is(":hidden")) {
                                    $('#playsearchsettings').parent().show();
                                    $('.Container--GamePage').removeClass('fourFrame')
                                    $('.Container--GamePage').addClass('threeFrame')
                                }
                            } else if ($('.game-container').length == 2) {
                                $('.Container--GamePage').addClass('twoFrame')
                                $('.Container--GamePage').removeClass('threeFrame')
                            }
                        }
                    }
                    ;
                }

            }
            );
            if (action == 'loadMore') {
                $productWrapper.find('.Item')[$productWrapper.find('.Item').length - 1].scrollIntoView({
                    behavior: "smooth",
                    block: "end",
                    inline: "nearest"
                });
            }

            if (isMobile) {
                _self.openGameLaunchModal(resp.Page.Version, resp.Translations.PlayNow, resp.Translations.DemoNow);
            }

            $productWrapper.append(_self.$loadMoreContainer);

            if (_self.requestData.searchtext !== '' || _self.requestData.vendorList) {
                _self.loadMoreControl(_self.requestData.skipCount + _self.requestData.count >= resp.SubCount);
            }

            if (!_self.popupSettings.lazyLoad && _self.loadMoreClick) {

                $('#loadMoreBtn').on('click', e => {
                    e.preventDefault();
                    e.stopPropagation();

                    if (_self.popupSettings.lazyLoad) {
                        return false;
                    }

                    const slimSelectInstance = $(`#game-category-selector`).get(0);
                    if (slimSelectInstance && slimSelectInstance.slim && slimSelectInstance.slim.close && typeof slimSelectInstance.slim.close === 'function') {
                        slimSelectInstance.slim.close();
                        _self.$popup.find('.modal-dialog').removeClass('vendorListOpen');
                    }

                    _self.requestData = {
                        ..._self.requestData,
                        skipCount: _self.requestData.skipCount + 15
                    };
                    _self.popupSettings.lazyLoadProcess = true,
                    _self._searchGames(null, 'loadMore');
                    _self.loadMoreClick = false;
                }
                );
            } else {
                $('#popupSearchItems').off('scroll').on('scroll', () => _self._getGamesByLazyLoading());
            }

            if (!_self.popupSettings.lazyLoad) {
                _self.$loadMoreContainer.find('#loadMoreBtn').removeClass('loading');
            }
            _self.$search.removeClass('loading');
        }
    };
    ModalHelper.TransactionDetailPopup = function(params) {
        return this.init(params);
    }
    ;

    ModalHelper.TransactionDetailPopup.prototype = {
        init: function(params) {
            this.params = params;
            this.$trigger = $('.' + params.trigger);
            params.trigger ? this.bindEvents() : this.getHTML();
        },

        _buildPopup: function(html) {
            if (!this.$popup || !$('#transactionDetailPopup').length === 0) {
                this.$popup = $('<div/>', {
                    class: 'modal fade',
                    id: 'transactionDetailPopup',
                    tabindex: '-1',
                    role: 'dialog'
                });
            }

            this.$popup.html(html);
            this._bindActions();
            $(document.body).append(this.$popup);

            this.$popup.unbind('hidden.bs.modal');
            if (this.params.onClose && typeof this.params.onClose === 'function') {
                this.$popup.on('hidden.bs.modal', () => {
                    this._onCloseHandler();
                }
                );
            }
            if (this.params.afterShow && typeof this.params.afterShow === 'function') {
                this.params.afterShow();
            }
        },

        _onCloseHandler: function() {
            if (this.params.onClose && typeof this.params.onClose === 'function') {
                this.params.onClose();
            }
            this.reactivateParentPopup();
            this.destroyPopup();
        },

        _bindActions: function() {
            var _self = this
              , $form = this.$popup.find('form')
              , $btn = this.$popup.find('#popupSaveTransactionBtn');

            $btn.on('click', function() {
                $.validator.unobtrusive.parse($form);
                $form.validate();

                if ($form.valid()) {
                    $btn.addClass('loading');

                    $.ajax({
                        url: '/transaction/save',
                        method: 'POST',
                        data: $form.serialize(),
                        datatype: 'json',

                        success: function(resp) {
                            $btn.removeClass('loading');
                            _self._buildPopup(resp);
                        }
                    });
                }
            });
        },

        getHTML: function(params) {
            var _self = this;
            $.blockUI(_blockingUIOverlayOptions);

            var url = `/account/TransactionDetails?OperationId=${params.transactionId}&isbet=${params.isbet}`;
            $.ajax({
                url: url,
                method: 'GET',

                success: function(resp) {
                    $.unblockUI();
                    _self._buildPopup(resp);
                    _self.$popup.modal({
                        backdrop: 'static',
                        keyboard: false
                    }).modal('show');
                }
            });
        },

        bindEvents: function() {
            var _self = this;
            this.$trigger.off('click').on('click', function() {
                var dynamicParams = {
                    transactionId: $(this).data('transaction-id'),
                    isbet: $(this).data('isbet')
                };
                _self.getHTML(dynamicParams);
            });

            return this;
        },
        destroyPopup: function() {
            if (this.$popup) {
                this.$popup.modal('dispose');
                this.$popup.remove();
                this.$popup = null;
            }
        },
        reactivateParentPopup: function() {
            $('#profilePopup').modal('handleUpdate');
        }
    };

    function Overlay($domEl, env, opacity) {
        return this.init($domEl, env, opacity);
    }

    Overlay.prototype = {
        init: function($domEl, env, opacity) {
            this.$domEl = $domEl;
            this.env = env || 'popup';
            this.opacity = typeof opacity !== 'undefined' || '0.5';
            this.build().bindEvents();
            return this.$el;
        },

        build: function() {
            $('.overlay24').length && $('.overlay24').remove();
            var zIndex = this.$domEl.css('z-index')
              , width = this.$domEl.css('width')
              , height = this.$domEl.css('height')
              , top = this.$domEl.position().top
              , left = this.$domEl.position().left;

            this.$el = $('<div>', {
                class: 'overlay24 loading',
                css: {
                    display: 'none',
                    top: this.env == 'global' ? top + 'px' : top + 0 + 'px',
                    left: this.env == 'global' ? left + 'px' : left + 0 + 'px',
                    width: '100%',
                    height: '100%',
                    position: 'fixed',
                    backgroundColor: 'rgba(255, 255, 255,' + 0 /*this.opacity*/
                    + ')',
                    zIndex: 999,
                    overflow: 'hidden'
                }
            });

            if (this.env === 'popup') {
                this.$domEl.css('position', 'relative');
                this.$el.css({
                    top: 0,
                    left: 0,
                    position: 'absolute',
                    zIndex: zIndex === 'auto' ? 99999999 : ++zIndex,
                    backgroundColor: 'rgba(255, 255, 255,0.5)',
                    pointerEvents: 'none'
                }).addClass('small');
                this.$domEl.append(this.$el);

                return this;
            }

            $(document.body).append(this.$el);

            return this;
        },
        bindEvents: function() {
            this.$el.off('click').on('click', function(e) {
                e.preventDefault();
                e.stopPropagation();

                return false;
            });
        }
    };

    window.Popup = PopupFactory;
    window.Overlay = Overlay;
    window._blockingOverlayOptions = _blockingOverlayOptions;
    window._blockingUIOverlayOptions = _blockingUIOverlayOptions;
});
/*
* jQuery BlockUI; v20141123
* http://jquery.malsup.com/block/
* Copyright (c) 2014 M. Alsup; Dual licensed: MIT/GPL
*/
(function() {
    "use strict";
    function e(e) {
        function o(o, i) {
            var s, h, k = o == window, v = i && void 0 !== i.message ? i.message : void 0;
            if (i = e.extend({}, e.blockUI.defaults, i || {}),
            !i.ignoreIfBlocked || !e(o).data("blockUI.isBlocked")) {
                if (i.overlayCSS = e.extend({}, e.blockUI.defaults.overlayCSS, i.overlayCSS || {}),
                s = e.extend({}, e.blockUI.defaults.css, i.css || {}),
                i.onOverlayClick && (i.overlayCSS.cursor = "pointer"),
                h = e.extend({}, e.blockUI.defaults.themedCSS, i.themedCSS || {}),
                v = void 0 === v ? i.message : v,
                k && b && t(window, {
                    fadeOut: 0
                }),
                v && "string" != typeof v && (v.parentNode || v.jquery)) {
                    var y = v.jquery ? v[0] : v
                      , m = {};
                    e(o).data("blockUI.history", m),
                    m.el = y,
                    m.parent = y.parentNode,
                    m.display = y.style.display,
                    m.position = y.style.position,
                    m.parent && m.parent.removeChild(y)
                }
                e(o).data("blockUI.onUnblock", i.onUnblock);
                var g, I, w, U, x = i.baseZ;
                g = r || i.forceIframe ? e('<iframe class="blockUI" style="z-index:' + x++ + ';display:none;border:none;margin:0;padding:0;position:absolute;width:100%;height:100%;top:0;left:0" src="' + i.iframeSrc + '"></iframe>') : e('<div class="blockUI" style="display:none"></div>'),
                I = i.theme ? e('<div class="blockUI blockOverlay ui-widget-overlay" style="z-index:' + x++ + ';display:none"></div>') : e('<div class="blockUI blockOverlay" style="z-index:' + x++ + ';display:none;border:none;margin:0;padding:0;width:100%;height:100%;top:0;left:0"></div>'),
                i.theme && k ? (U = '<div class="blockUI ' + i.blockMsgClass + ' blockPage ui-dialog ui-widget ui-corner-all" style="z-index:' + (x + 10) + ';display:none;position:fixed">',
                i.title && (U += '<div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">' + (i.title || "&nbsp;") + "</div>"),
                U += '<div class="ui-widget-content ui-dialog-content"></div>',
                U += "</div>") : i.theme ? (U = '<div class="blockUI ' + i.blockMsgClass + ' blockElement ui-dialog ui-widget ui-corner-all" style="z-index:' + (x + 10) + ';display:none;position:absolute">',
                i.title && (U += '<div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">' + (i.title || "&nbsp;") + "</div>"),
                U += '<div class="ui-widget-content ui-dialog-content"></div>',
                U += "</div>") : U = k ? '<div class="blockUI ' + i.blockMsgClass + ' blockPage" style="z-index:' + (x + 10) + ';display:none;position:fixed"></div>' : '<div class="blockUI ' + i.blockMsgClass + ' blockElement" style="z-index:' + (x + 10) + ';display:none;position:absolute"></div>',
                w = e(U),
                v && (i.theme ? (w.css(h),
                w.addClass("ui-widget-content")) : w.css(s)),
                i.theme || I.css(i.overlayCSS),
                I.css("position", k ? "fixed" : "absolute"),
                (r || i.forceIframe) && g.css("opacity", 0);
                var C = [g, I, w]
                  , S = k ? e("body") : e(o);
                e.each(C, function() {
                    this.appendTo(S)
                }),
                i.theme && i.draggable && e.fn.draggable && w.draggable({
                    handle: ".ui-dialog-titlebar",
                    cancel: "li"
                });
                var O = f && (!e.support.boxModel || e("object,embed", k ? null : o).length > 0);
                if (u || O) {
                    if (k && i.allowBodyStretch && e.support.boxModel && e("html,body").css("height", "100%"),
                    (u || !e.support.boxModel) && !k)
                        var E = d(o, "borderTopWidth")
                          , T = d(o, "borderLeftWidth")
                          , M = E ? "(0 - " + E + ")" : 0
                          , B = T ? "(0 - " + T + ")" : 0;
                    e.each(C, function(e, o) {
                        var t = o[0].style;
                        if (t.position = "absolute",
                        2 > e)
                            k ? t.setExpression("height", "Math.max(document.body.scrollHeight, document.body.offsetHeight) - (jQuery.support.boxModel?0:" + i.quirksmodeOffsetHack + ') + "px"') : t.setExpression("height", 'this.parentNode.offsetHeight + "px"'),
                            k ? t.setExpression("width", 'jQuery.support.boxModel && document.documentElement.clientWidth || document.body.clientWidth + "px"') : t.setExpression("width", 'this.parentNode.offsetWidth + "px"'),
                            B && t.setExpression("left", B),
                            M && t.setExpression("top", M);
                        else if (i.centerY)
                            k && t.setExpression("top", '(document.documentElement.clientHeight || document.body.clientHeight) / 2 - (this.offsetHeight / 2) + (blah = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"'),
                            t.marginTop = 0;
                        else if (!i.centerY && k) {
                            var n = i.css && i.css.top ? parseInt(i.css.top, 10) : 0
                              , s = "((document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + " + n + ') + "px"';
                            t.setExpression("top", s)
                        }
                    })
                }
                if (v && (i.theme ? w.find(".ui-widget-content").append(v) : w.append(v),
                (v.jquery || v.nodeType) && e(v).show()),
                (r || i.forceIframe) && i.showOverlay && g.show(),
                i.fadeIn) {
                    var j = i.onBlock ? i.onBlock : c
                      , H = i.showOverlay && !v ? j : c
                      , z = v ? j : c;
                    i.showOverlay && I._fadeIn(i.fadeIn, H),
                    v && w._fadeIn(i.fadeIn, z)
                } else
                    i.showOverlay && I.show(),
                    v && w.show(),
                    i.onBlock && i.onBlock.bind(w)();
                if (n(1, o, i),
                k ? (b = w[0],
                p = e(i.focusableElements, b),
                i.focusInput && setTimeout(l, 20)) : a(w[0], i.centerX, i.centerY),
                i.timeout) {
                    var W = setTimeout(function() {
                        k ? e.unblockUI(i) : e(o).unblock(i)
                    }, i.timeout);
                    e(o).data("blockUI.timeout", W)
                }
            }
        }
        function t(o, t) {
            var s, l = o == window, a = e(o), d = a.data("blockUI.history"), c = a.data("blockUI.timeout");
            c && (clearTimeout(c),
            a.removeData("blockUI.timeout")),
            t = e.extend({}, e.blockUI.defaults, t || {}),
            n(0, o, t),
            null === t.onUnblock && (t.onUnblock = a.data("blockUI.onUnblock"),
            a.removeData("blockUI.onUnblock"));
            var r;
            r = l ? e("body").children().filter(".blockUI").add("body > .blockUI") : a.find(">.blockUI"),
            t.cursorReset && (r.length > 1 && (r[1].style.cursor = t.cursorReset),
            r.length > 2 && (r[2].style.cursor = t.cursorReset)),
            l && (b = p = null),
            t.fadeOut ? (s = r.length,
            r.stop().fadeOut(t.fadeOut, function() {
                0 === --s && i(r, d, t, o)
            })) : i(r, d, t, o)
        }
        function i(o, t, i, n) {
            var s = e(n);
            if (!s.data("blockUI.isBlocked")) {
                o.each(function() {
                    this.parentNode && this.parentNode.removeChild(this)
                }),
                t && t.el && (t.el.style.display = t.display,
                t.el.style.position = t.position,
                t.el.style.cursor = "default",
                t.parent && t.parent.appendChild(t.el),
                s.removeData("blockUI.history")),
                s.data("blockUI.static") && s.css("position", "static"),
                "function" == typeof i.onUnblock && i.onUnblock(n, i);
                var l = e(document.body)
                  , a = l.width()
                  , d = l[0].style.width;
                l.width(a - 1).width(a),
                l[0].style.width = d
            }
        }
        function n(o, t, i) {
            var n = t == window
              , l = e(t);
            if ((o || (!n || b) && (n || l.data("blockUI.isBlocked"))) && (l.data("blockUI.isBlocked", o),
            n && i.bindEvents && (!o || i.showOverlay))) {
                var a = "mousedown mouseup keydown keypress keyup touchstart touchend touchmove";
                o ? e(document).bind(a, i, s) : e(document).unbind(a, s)
            }
        }
        function s(o) {
            if ("keydown" === o.type && o.keyCode && 9 == o.keyCode && b && o.data.constrainTabKey) {
                var t = p
                  , i = !o.shiftKey && o.target === t[t.length - 1]
                  , n = o.shiftKey && o.target === t[0];
                if (i || n)
                    return setTimeout(function() {
                        l(n)
                    }, 10),
                    !1
            }
            var s = o.data
              , a = e(o.target);
            return a.hasClass("blockOverlay") && s.onOverlayClick && s.onOverlayClick(o),
            a.parents("div." + s.blockMsgClass).length > 0 ? !0 : 0 === a.parents().children().filter("div.blockUI").length
        }
        function l(e) {
            if (p) {
                var o = p[e === !0 ? p.length - 1 : 0];
                o && o.focus()
            }
        }
        function a(e, o, t) {
            var i = e.parentNode
              , n = e.style
              , s = (i.offsetWidth - e.offsetWidth) / 2 - d(i, "borderLeftWidth")
              , l = (i.offsetHeight - e.offsetHeight) / 2 - d(i, "borderTopWidth");
            o && (n.left = s > 0 ? s + "px" : "0"),
            t && (n.top = l > 0 ? l + "px" : "0")
        }
        function d(o, t) {
            return parseInt(e.css(o, t), 10) || 0
        }
        e.fn._fadeIn = e.fn.fadeIn;
        var c = e.noop || function() {}
          , r = /MSIE/.test(navigator.userAgent)
          , u = /MSIE 6.0/.test(navigator.userAgent) && !/MSIE 8.0/.test(navigator.userAgent);
        document.documentMode || 0;
        var f = e.isFunction(document.createElement("div").style.setExpression);
        e.blockUI = function(e) {
            o(window, e)
        }
        ,
        e.unblockUI = function(e) {
            t(window, e)
        }
        ,
        e.growlUI = function(o, t, i, n) {
            var s = e('<div class="growlUI"></div>');
            o && s.append("<h1>" + o + "</h1>"),
            t && s.append("<h2>" + t + "</h2>"),
            void 0 === i && (i = 3e3);
            var l = function(o) {
                o = o || {},
                e.blockUI({
                    message: s,
                    fadeIn: o.fadeIn !== void 0 ? o.fadeIn : 700,
                    fadeOut: o.fadeOut !== void 0 ? o.fadeOut : 1e3,
                    timeout: o.timeout !== void 0 ? o.timeout : i,
                    centerY: !1,
                    showOverlay: !1,
                    onUnblock: n,
                    css: e.blockUI.defaults.growlCSS
                })
            };
            l(),
            s.css("opacity"),
            s.mouseover(function() {
                l({
                    fadeIn: 0,
                    timeout: 3e4
                });
                var o = e(".blockMsg");
                o.stop(),
                o.fadeTo(300, 1)
            }).mouseout(function() {
                e(".blockMsg").fadeOut(1e3)
            })
        }
        ,
        e.fn.block = function(t) {
            if (this[0] === window)
                return e.blockUI(t),
                this;
            var i = e.extend({}, e.blockUI.defaults, t || {});
            return this.each(function() {
                var o = e(this);
                i.ignoreIfBlocked && o.data("blockUI.isBlocked") || o.unblock({
                    fadeOut: 0
                })
            }),
            this.each(function() {
                "static" == e.css(this, "position") && (this.style.position = "relative",
                e(this).data("blockUI.static", !0)),
                this.style.zoom = 1,
                o(this, t)
            })
        }
        ,
        e.fn.unblock = function(o) {
            return this[0] === window ? (e.unblockUI(o),
            this) : this.each(function() {
                t(this, o)
            })
        }
        ,
        e.blockUI.version = 2.7,
        e.blockUI.defaults = {
            message: "<h1>Please wait...</h1>",
            title: null,
            draggable: !0,
            theme: !1,
            css: {
                padding: 0,
                margin: 0,
                width: "30%",
                top: "40%",
                left: "35%",
                textAlign: "center",
                color: "#000",
                border: "3px solid #aaa",
                backgroundColor: "#fff",
                cursor: "wait"
            },
            themedCSS: {
                width: "30%",
                top: "40%",
                left: "35%"
            },
            overlayCSS: {
                backgroundColor: "#000",
                opacity: .6,
                cursor: "wait"
            },
            cursorReset: "default",
            growlCSS: {
                width: "350px",
                top: "10px",
                left: "",
                right: "10px",
                border: "none",
                padding: "5px",
                opacity: .6,
                cursor: "default",
                color: "#fff",
                backgroundColor: "#000",
                "-webkit-border-radius": "10px",
                "-moz-border-radius": "10px",
                "border-radius": "10px"
            },
            iframeSrc: /^https/i.test(window.location.href || "") ? "javascript:false" : "about:blank",
            forceIframe: !1,
            baseZ: 1e3,
            centerX: !0,
            centerY: !0,
            allowBodyStretch: !0,
            bindEvents: !0,
            constrainTabKey: !0,
            fadeIn: 200,
            fadeOut: 400,
            timeout: 0,
            showOverlay: !0,
            focusInput: !0,
            focusableElements: ":input:enabled:visible",
            onBlock: null,
            onUnblock: null,
            onOverlayClick: null,
            quirksmodeOffsetHack: 4,
            blockMsgClass: "blockMsg",
            ignoreIfBlocked: !1
        };
        var b = null
          , p = []
    }
    "function" == typeof define && define.amd && define.amd.jQuery ? define(["jquery"], e) : e(jQuery)
}
)();
function iframeLoaded(iframe) {
    iframe.closest('.Container__Item').querySelector('div').classList.add('loaded');
}

$(document).ready(function() {
    window.deviceDetector = new MobileDetect(window.navigator.userAgent);

    /*
  var rtime;
  var timeout = false;
  var delta = 200;
  var initialWindowWidth = $(window).width();

  $(window).resize(function () {
    rtime = new Date();
    if (timeout === false) {
      timeout = true;
      setTimeout(resizeend, delta);
    }
  });

  function resizeend() {
    if (new Date() - rtime < delta) {
      setTimeout(resizeend, delta);
    } else {
      timeout = false;
      var windowWidth = $(window).width();

      if (windowWidth <= 1024 && windowWidth < initialWindowWidth) {
        window.location.reload();
      }

      if (windowWidth > 1024 && windowWidth > initialWindowWidth) {
        window.location.reload();
      }
    }
  }

  */

    var StickyHeader = (function() {
        function StickyHeader() {}

        StickyHeader.prototype = {
            init: function(elemId) {
                this.$el = $('#' + elemId);
                this.$win = $(window);

                this.build().bindEvents();
            },

            build: function() {
                return this;
            },

            bindEvents: function() {
                var _self = this;

                //this.$win.on('scroll', function () {
                //	if (_self.$win.scrollTop() >= 52) {
                //		$('body').css('margin-top', 52);
                //		_self.$el
                //			.addClass('sticky transparent-wrap')
                //			.removeClass('default-wrap');
                //	} else {
                //		$('body').css('margin-top', 0);
                //		_self.$el
                //			.removeClass('sticky transparent-wrap')
                //			.addClass('default-wrap');
                //	}
                //});

                this.$el.find('.sticky-only').on('click', function(e) {
                    e.preventDefault();
                    var sportIframe = $('#sport_div_iframe');
                    var $mainNavItems = _self.$el.find('.main-nav-items');

                    if ($mainNavItems.hasClass('open')) {
                        $mainNavItems.removeClass('open');
                        if (sportIframe.length)
                            sportIframe.removeClass('shrinked');
                    } else {
                        $mainNavItems.addClass('open');
                        if (sportIframe.length)
                            sportIframe.addClass('shrinked');
                    }
                });

                return this;
            }
        };

        return StickyHeader;
    }
    )();

    var $stickyHeader = new StickyHeader();
    // $stickyHeader.init('js-nav-group');
    $stickyHeader.init('navGroup');

    $.fn.removeStyle = function(style) {
        var search = new RegExp(style + '[^;]+;?','g');

        return this.each(function() {
            $(this).attr('style', function(i, style) {
                return style && style.replace(search, '');
            });
        });
    }
    ;

    var StaticPages = (function() {
        function StaticPages($wrapper, watchResize) {
            this.$wrapper = $wrapper;
            this._bindEvents();

            if (watchResize) {
                this._watchResize();
            }
        }

        StaticPages.prototype = {
            _getWidth: function($els) {
                var width = 0;
                $.each($els, function() {
                    width += $(this).width();
                });

                return width;
            },
            _bindEvents: function() {
                var _self = this;

                if ($(window).width() <= 1200) {
                    this.$wrapper.off('mouseover').on('mouseover', function() {
                        if (_self.isOver)
                            return;

                        _self.isOver = true;

                        var $pages = _self.$wrapper.find('.pages .page-title');
                        var width = _self._getWidth($pages);

                        if ($(window).width() > 1200) {}

                        if ($(window).width() <= 1200 && $(window).width() > 992) {
                            _self.$wrapper.next('.sticky .sticky-only').hide();
                        }

                        if ($(window).width() <= 992) {
                            _self.$wrapper.next('.sticky .sticky-only').hide();
                        }

                        _self.$wrapper.css({
                            position: 'absolute',
                            boxShadow: '2px 0 10px 1px rgba(0, 0, 0, 0.3)'
                        }).animate({
                            width: width + 10 + 'px'
                        }, 100);
                    });

                    this.$wrapper.off('mouseleave').on('mouseleave', function() {
                        _self.isOver = false;

                        _self.$wrapper.animate({
                            width: '10px'
                        }, 100, 'linear', function() {
                            setTimeout(function() {
                                _self.$wrapper.removeStyle('position').removeStyle('box-shadow').removeStyle('width');

                                if ($(window).width() > 992 && $(window).width() <= 1200) {
                                    _self.$wrapper.next('.sticky .sticky-only').show();
                                }
                            }, 200);
                        });
                    });
                } else {
                    _self.$wrapper.off('mouseover mouseleave');
                }
            },

            _watchResize: function() {
                var _self = this;

                $(window).on('resize', function() {
                    _self._bindEvents();
                });
            }
        };

        return StaticPages;
    }
    )();

    new StaticPages($('.static-pages'),true);

    if ($(document).height() > $(window).height()) {
        $(document.body).removeClass('no-overflow');
    } else {
        var excludedUriComponents = ['sport', 'tvgames', 'games'];
        var uriContains = false;

        excludedUriComponents.forEach(function(c) {
            if (window.location.href.indexOf(c) > -1) {
                uriContains = true;

                return false;
            }
        });

        //if (!uriContains) {
        //	$(document.body).css({
        //'padding-right': 15
        //	});
        //}
    }

    $(document.body).removeClass('no-overflow');

    // function spinLoaderOnIframe() {
    //   var $iframes = $('iframe');

    //   $.each($iframes, function () {
    //     var $self = $(this);

    //     $self.on('load', function () {
    //       $self.closest('.Container__Item').children('div').addClass('loaded');
    //     });
    //   });
    // }

    // spinLoaderOnIframe();

    $(document.body).on('click', 'a[href="#login"]:not(.Button--sign-in)', function() {
        let params = {
            callback: () => {
                if ($(this).attr('newtab') == "true") {
                    window.location.reload();
                    window.open($(this).data('href'));
                } else {
                    window.location.href = $(this).data('href') || '';
                }
            }
        }
        loginPopupWithClose(params);
    });

    $(document.body).on('click', 'a[href="#search"]', function(e) {
        let params = {
            callback: () => {
                window.location.href = $(this).data('href') || '';
            }
        }
        searchPopupWithClose(params, $(e.currentTarget).parent());
    });

    $('a[popup-with-href]').mouseup(function(e) {
        e.preventDefault();
        e.stopPropagation();
        history.replaceState({}, null, $(this).data('href'));
    })
    if (window.location.search && window.location.search.includes('?h')) {
        var search = window.location.search.replace('?h', 'h');
        var popupInfo = JSON.parse('{"' + decodeURI(search).replace(/"/g, '\\"').replace(/&/g, '","').replace(/=/g, '":"') + '"}');
        var popupControl = {
            onClose: function() {
                history.replaceState({}, null, window.location.href.replace(window.location.search, ''))
            },
        }
        popupInfo.r ? popupControl.route = popupInfo.r : null;
        Popup(popupInfo.h, popupControl);
    }
});

function registerPopupWithClose(params={}) {
    const isLoggedIn = $('body').hasClass('LoggedIn');
    const registrationPopupIsOpen = $('.modal#registrationPopup').is(':visible');

    if (isLoggedIn && !registrationPopupIsOpen) {
        history.replaceState({}, null, window.location.href.replace(window.location.hash, ''))

        return;
    }

    Popup('instant-register', {
        onClose: function() {
            history.replaceState({}, null, window.location.href.replace(window.location.hash, ''))
        },
        ...params,
    });
}

function loginPopupWithClose(params={}) {
    const isLoggedIn = $('body').hasClass('LoggedIn');
    const loginPopupIsOpen = $('.modal#LoginPopup').is(':visible');

    if (isLoggedIn && !loginPopupIsOpen) {
        history.replaceState({}, null, window.location.href.replace(window.location.hash, ''))
        return;
    }

    Popup('instant-login', {
        onClose: function() {
            history.replaceState({}, null, window.location.href.replace(window.location.hash, ''))
        },
        ...params,
    });
}

function searchPopupWithClose(params={}, parent) {
    const searchPopupIsOpen = $('.modal#SearchPopup').is(':visible');

    if (searchPopupIsOpen) {
        history.replaceState({}, null, window.location.href.replace(window.location.hash, ''))
        return;
    }

    Popup('instant-search', {
        onClose: function() {
            history.replaceState({}, null, window.location.href.replace(window.location.hash, ''))
        },
        ...params,
        parent,
    });
}

window.addEventListener("pageshow", function(event) {
    var historyTraversal = event.persisted || (typeof window.performance != "undefined" && window.performance.navigation.type === 2);
    if (historyTraversal && (['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform) || (navigator.userAgent.includes("Mac") && "ontouchend"in document))) {
        $.unblockUI();
    }

    $('.loading:not(.product-thumb.loading)').removeClass('loading');

});

$(document).ready(function() {
    $(document).on({
        mouseenter: function() {
            $(this).addClass("open")
        },
        mouseleave: function() {
            $(this).removeClass("open")
        }
    }, ".Balance--user");

    if (window.location.hash.includes('#login')) {
        loginPopupWithClose();
    }
    if (window.location.hash.includes('#register')) {
        registerPopupWithClose();
    }
});

$(document).ready(function() {
    $('.Dropdown--language li a').on('click', function() {
        $(this).addClass('loading');
    });
});

!function(i) {
    "use strict";
    "function" == typeof define && define.amd ? define(["jquery"], i) : "undefined" != typeof exports ? module.exports = i(require("jquery")) : i(jQuery)
}(function(i) {
    "use strict";
    var e = window.Slick || {};
    (e = function() {
        var e = 0;
        return function(t, o) {
            var s, n = this;
            n.defaults = {
                accessibility: !0,
                adaptiveHeight: !1,
                appendArrows: i(t),
                appendDots: i(t),
                arrows: !0,
                asNavFor: null,
                prevArrow: '<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',
                nextArrow: '<button class="slick-next" aria-label="Next" type="button">Next</button>',
                autoplay: !1,
                autoplaySpeed: 3e3,
                centerMode: !1,
                centerPadding: "50px",
                cssEase: "ease",
                customPaging: function(e, t) {
                    return i('<button type="button" />').text(t + 1)
                },
                dots: !1,
                dotsClass: "slick-dots",
                draggable: !0,
                easing: "linear",
                edgeFriction: .35,
                fade: !1,
                focusOnSelect: !1,
                focusOnChange: !1,
                infinite: !0,
                initialSlide: 0,
                lazyLoad: "ondemand",
                mobileFirst: !1,
                pauseOnHover: !0,
                pauseOnFocus: !0,
                pauseOnDotsHover: !1,
                respondTo: "window",
                responsive: null,
                rows: 1,
                rtl: !1,
                slide: "",
                slidesPerRow: 1,
                slidesToShow: 1,
                slidesToScroll: 1,
                speed: 500,
                swipe: !0,
                swipeToSlide: !1,
                touchMove: !0,
                touchThreshold: 5,
                useCSS: !0,
                useTransform: !0,
                variableWidth: !1,
                vertical: !1,
                verticalSwiping: !1,
                waitForAnimate: !0,
                zIndex: 1e3
            },
            n.initials = {
                animating: !1,
                dragging: !1,
                autoPlayTimer: null,
                currentDirection: 0,
                currentLeft: null,
                currentSlide: 0,
                direction: 1,
                $dots: null,
                listWidth: null,
                listHeight: null,
                loadIndex: 0,
                $nextArrow: null,
                $prevArrow: null,
                scrolling: !1,
                slideCount: null,
                slideWidth: null,
                $slideTrack: null,
                $slides: null,
                sliding: !1,
                slideOffset: 0,
                swipeLeft: null,
                swiping: !1,
                $list: null,
                touchObject: {},
                transformsEnabled: !1,
                unslicked: !1
            },
            i.extend(n, n.initials),
            n.activeBreakpoint = null,
            n.animType = null,
            n.animProp = null,
            n.breakpoints = [],
            n.breakpointSettings = [],
            n.cssTransitions = !1,
            n.focussed = !1,
            n.interrupted = !1,
            n.hidden = "hidden",
            n.paused = !0,
            n.positionProp = null,
            n.respondTo = null,
            n.rowCount = 1,
            n.shouldClick = !0,
            n.$slider = i(t),
            n.$slidesCache = null,
            n.transformType = null,
            n.transitionType = null,
            n.visibilityChange = "visibilitychange",
            n.windowWidth = 0,
            n.windowTimer = null,
            s = i(t).data("slick") || {},
            n.options = i.extend({}, n.defaults, o, s),
            n.currentSlide = n.options.initialSlide,
            n.originalSettings = n.options,
            void 0 !== document.mozHidden ? (n.hidden = "mozHidden",
            n.visibilityChange = "mozvisibilitychange") : void 0 !== document.webkitHidden && (n.hidden = "webkitHidden",
            n.visibilityChange = "webkitvisibilitychange"),
            n.autoPlay = i.proxy(n.autoPlay, n),
            n.autoPlayClear = i.proxy(n.autoPlayClear, n),
            n.autoPlayIterator = i.proxy(n.autoPlayIterator, n),
            n.changeSlide = i.proxy(n.changeSlide, n),
            n.clickHandler = i.proxy(n.clickHandler, n),
            n.selectHandler = i.proxy(n.selectHandler, n),
            n.setPosition = i.proxy(n.setPosition, n),
            n.swipeHandler = i.proxy(n.swipeHandler, n),
            n.dragHandler = i.proxy(n.dragHandler, n),
            n.keyHandler = i.proxy(n.keyHandler, n),
            n.instanceUid = e++,
            n.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/,
            n.registerBreakpoints(),
            n.init(!0)
        }
    }()).prototype.activateADA = function() {
        this.$slideTrack.find(".slick-active").attr({
            "aria-hidden": "false"
        }).find("a, input, button, select").attr({
            tabindex: "0"
        })
    }
    ,
    e.prototype.addSlide = e.prototype.slickAdd = function(e, t, o) {
        var s = this;
        if ("boolean" == typeof t)
            o = t,
            t = null;
        else if (t < 0 || t >= s.slideCount)
            return !1;
        s.unload(),
        "number" == typeof t ? 0 === t && 0 === s.$slides.length ? i(e).appendTo(s.$slideTrack) : o ? i(e).insertBefore(s.$slides.eq(t)) : i(e).insertAfter(s.$slides.eq(t)) : !0 === o ? i(e).prependTo(s.$slideTrack) : i(e).appendTo(s.$slideTrack),
        s.$slides = s.$slideTrack.children(this.options.slide),
        s.$slideTrack.children(this.options.slide).detach(),
        s.$slideTrack.append(s.$slides),
        s.$slides.each(function(e, t) {
            i(t).attr("data-slick-index", e)
        }),
        s.$slidesCache = s.$slides,
        s.reinit()
    }
    ,
    e.prototype.animateHeight = function() {
        var i = this;
        if (1 === i.options.slidesToShow && !0 === i.options.adaptiveHeight && !1 === i.options.vertical) {
            var e = i.$slides.eq(i.currentSlide).outerHeight(!0);
            i.$list.animate({
                height: e
            }, i.options.speed)
        }
    }
    ,
    e.prototype.animateSlide = function(e, t) {
        var o = {}
          , s = this;
        s.animateHeight(),
        !0 === s.options.rtl && !1 === s.options.vertical && (e = -e),
        !1 === s.transformsEnabled ? !1 === s.options.vertical ? s.$slideTrack.animate({
            left: e
        }, s.options.speed, s.options.easing, t) : s.$slideTrack.animate({
            top: e
        }, s.options.speed, s.options.easing, t) : !1 === s.cssTransitions ? (!0 === s.options.rtl && (s.currentLeft = -s.currentLeft),
        i({
            animStart: s.currentLeft
        }).animate({
            animStart: e
        }, {
            duration: s.options.speed,
            easing: s.options.easing,
            step: function(i) {
                i = Math.ceil(i),
                !1 === s.options.vertical ? (o[s.animType] = "translate(" + i + "px, 0px)",
                s.$slideTrack.css(o)) : (o[s.animType] = "translate(0px," + i + "px)",
                s.$slideTrack.css(o))
            },
            complete: function() {
                t && t.call()
            }
        })) : (s.applyTransition(),
        e = Math.ceil(e),
        !1 === s.options.vertical ? o[s.animType] = "translate3d(" + e + "px, 0px, 0px)" : o[s.animType] = "translate3d(0px," + e + "px, 0px)",
        s.$slideTrack.css(o),
        t && setTimeout(function() {
            s.disableTransition(),
            t.call()
        }, s.options.speed))
    }
    ,
    e.prototype.getNavTarget = function() {
        var e = this
          , t = e.options.asNavFor;
        return t && null !== t && (t = i(t).not(e.$slider)),
        t
    }
    ,
    e.prototype.asNavFor = function(e) {
        var t = this.getNavTarget();
        null !== t && "object" == typeof t && t.each(function() {
            var t = i(this).slick("getSlick");
            t.unslicked || t.slideHandler(e, !0)
        })
    }
    ,
    e.prototype.applyTransition = function(i) {
        var e = this
          , t = {};
        !1 === e.options.fade ? t[e.transitionType] = e.transformType + " " + e.options.speed + "ms " + e.options.cssEase : t[e.transitionType] = "opacity " + e.options.speed + "ms " + e.options.cssEase,
        !1 === e.options.fade ? e.$slideTrack.css(t) : e.$slides.eq(i).css(t)
    }
    ,
    e.prototype.autoPlay = function() {
        var i = this;
        i.autoPlayClear(),
        i.slideCount > i.options.slidesToShow && (i.autoPlayTimer = setInterval(i.autoPlayIterator, i.options.autoplaySpeed))
    }
    ,
    e.prototype.autoPlayClear = function() {
        var i = this;
        i.autoPlayTimer && clearInterval(i.autoPlayTimer)
    }
    ,
    e.prototype.autoPlayIterator = function() {
        var i = this
          , e = i.currentSlide + i.options.slidesToScroll;
        i.paused || i.interrupted || i.focussed || (!1 === i.options.infinite && (1 === i.direction && i.currentSlide + 1 === i.slideCount - 1 ? i.direction = 0 : 0 === i.direction && (e = i.currentSlide - i.options.slidesToScroll,
        i.currentSlide - 1 == 0 && (i.direction = 1))),
        i.slideHandler(e))
    }
    ,
    e.prototype.buildArrows = function() {
        var e = this;
        !0 === e.options.arrows && (e.$prevArrow = i(e.options.prevArrow).addClass("slick-arrow"),
        e.$nextArrow = i(e.options.nextArrow).addClass("slick-arrow"),
        e.slideCount > e.options.slidesToShow ? (e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),
        e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),
        e.htmlExpr.test(e.options.prevArrow) && e.$prevArrow.prependTo(e.options.appendArrows),
        e.htmlExpr.test(e.options.nextArrow) && e.$nextArrow.appendTo(e.options.appendArrows),
        !0 !== e.options.infinite && e.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true")) : e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({
            "aria-disabled": "true",
            tabindex: "-1"
        }))
    }
    ,
    e.prototype.buildDots = function() {
        var e, t, o = this;
        if (!0 === o.options.dots) {
            for (o.$slider.addClass("slick-dotted"),
            t = i("<ul />").addClass(o.options.dotsClass),
            e = 0; e <= o.getDotCount(); e += 1)
                t.append(i("<li />").append(o.options.customPaging.call(this, o, e)));
            o.$dots = t.appendTo(o.options.appendDots),
            o.$dots.find("li").first().addClass("slick-active")
        }
    }
    ,
    e.prototype.buildOut = function() {
        var e = this;
        e.$slides = e.$slider.children(e.options.slide + ":not(.slick-cloned)").addClass("slick-slide"),
        e.slideCount = e.$slides.length,
        e.$slides.each(function(e, t) {
            i(t).attr("data-slick-index", e).data("originalStyling", i(t).attr("style") || "")
        }),
        e.$slider.addClass("slick-slider"),
        e.$slideTrack = 0 === e.slideCount ? i('<div class="slick-track"/>').appendTo(e.$slider) : e.$slides.wrapAll('<div class="slick-track"/>').parent(),
        e.$list = e.$slideTrack.wrap('<div class="slick-list"/>').parent(),
        e.$slideTrack.css("opacity", 0),
        !0 !== e.options.centerMode && !0 !== e.options.swipeToSlide || (e.options.slidesToScroll = 1),
        i("img[data-lazy]", e.$slider).not("[src]").addClass("slick-loading"),
        e.setupInfinite(),
        e.buildArrows(),
        e.buildDots(),
        e.updateDots(),
        e.setSlideClasses("number" == typeof e.currentSlide ? e.currentSlide : 0),
        !0 === e.options.draggable && e.$list.addClass("draggable")
    }
    ,
    e.prototype.buildRows = function() {
        var i, e, t, o, s, n, r, l = this;
        if (o = document.createDocumentFragment(),
        n = l.$slider.children(),
        l.options.rows > 1) {
            for (r = l.options.slidesPerRow * l.options.rows,
            s = Math.ceil(n.length / r),
            i = 0; i < s; i++) {
                var d = document.createElement("div");
                for (e = 0; e < l.options.rows; e++) {
                    var a = document.createElement("div");
                    for (t = 0; t < l.options.slidesPerRow; t++) {
                        var c = i * r + (e * l.options.slidesPerRow + t);
                        n.get(c) && a.appendChild(n.get(c))
                    }
                    d.appendChild(a)
                }
                o.appendChild(d)
            }
            l.$slider.empty().append(o),
            l.$slider.children().children().children().css({
                width: 100 / l.options.slidesPerRow + "%",
                display: "inline-block"
            })
        }
    }
    ,
    e.prototype.checkResponsive = function(e, t) {
        var o, s, n, r = this, l = !1, d = r.$slider.width(), a = window.innerWidth || i(window).width();
        if ("window" === r.respondTo ? n = a : "slider" === r.respondTo ? n = d : "min" === r.respondTo && (n = Math.min(a, d)),
        r.options.responsive && r.options.responsive.length && null !== r.options.responsive) {
            s = null;
            for (o in r.breakpoints)
                r.breakpoints.hasOwnProperty(o) && (!1 === r.originalSettings.mobileFirst ? n < r.breakpoints[o] && (s = r.breakpoints[o]) : n > r.breakpoints[o] && (s = r.breakpoints[o]));
            null !== s ? null !== r.activeBreakpoint ? (s !== r.activeBreakpoint || t) && (r.activeBreakpoint = s,
            "unslick" === r.breakpointSettings[s] ? r.unslick(s) : (r.options = i.extend({}, r.originalSettings, r.breakpointSettings[s]),
            !0 === e && (r.currentSlide = r.options.initialSlide),
            r.refresh(e)),
            l = s) : (r.activeBreakpoint = s,
            "unslick" === r.breakpointSettings[s] ? r.unslick(s) : (r.options = i.extend({}, r.originalSettings, r.breakpointSettings[s]),
            !0 === e && (r.currentSlide = r.options.initialSlide),
            r.refresh(e)),
            l = s) : null !== r.activeBreakpoint && (r.activeBreakpoint = null,
            r.options = r.originalSettings,
            !0 === e && (r.currentSlide = r.options.initialSlide),
            r.refresh(e),
            l = s),
            e || !1 === l || r.$slider.trigger("breakpoint", [r, l])
        }
    }
    ,
    e.prototype.changeSlide = function(e, t) {
        var o, s, n, r = this, l = i(e.currentTarget);
        switch (l.is("a") && e.preventDefault(),
        l.is("li") || (l = l.closest("li")),
        n = r.slideCount % r.options.slidesToScroll != 0,
        o = n ? 0 : (r.slideCount - r.currentSlide) % r.options.slidesToScroll,
        e.data.message) {
        case "previous":
            s = 0 === o ? r.options.slidesToScroll : r.options.slidesToShow - o,
            r.slideCount > r.options.slidesToShow && r.slideHandler(r.currentSlide - s, !1, t);
            break;
        case "next":
            s = 0 === o ? r.options.slidesToScroll : o,
            r.slideCount > r.options.slidesToShow && r.slideHandler(r.currentSlide + s, !1, t);
            break;
        case "index":
            var d = 0 === e.data.index ? 0 : e.data.index || l.index() * r.options.slidesToScroll;
            r.slideHandler(r.checkNavigable(d), !1, t),
            l.children().trigger("focus");
            break;
        default:
            return
        }
    }
    ,
    e.prototype.checkNavigable = function(i) {
        var e, t;
        if (e = this.getNavigableIndexes(),
        t = 0,
        i > e[e.length - 1])
            i = e[e.length - 1];
        else
            for (var o in e) {
                if (i < e[o]) {
                    i = t;
                    break
                }
                t = e[o]
            }
        return i
    }
    ,
    e.prototype.cleanUpEvents = function() {
        var e = this;
        e.options.dots && null !== e.$dots && (i("li", e.$dots).off("click.slick", e.changeSlide).off("mouseenter.slick", i.proxy(e.interrupt, e, !0)).off("mouseleave.slick", i.proxy(e.interrupt, e, !1)),
        !0 === e.options.accessibility && e.$dots.off("keydown.slick", e.keyHandler)),
        e.$slider.off("focus.slick blur.slick"),
        !0 === e.options.arrows && e.slideCount > e.options.slidesToShow && (e.$prevArrow && e.$prevArrow.off("click.slick", e.changeSlide),
        e.$nextArrow && e.$nextArrow.off("click.slick", e.changeSlide),
        !0 === e.options.accessibility && (e.$prevArrow && e.$prevArrow.off("keydown.slick", e.keyHandler),
        e.$nextArrow && e.$nextArrow.off("keydown.slick", e.keyHandler))),
        e.$list.off("touchstart.slick mousedown.slick", e.swipeHandler),
        e.$list.off("touchmove.slick mousemove.slick", e.swipeHandler),
        e.$list.off("touchend.slick mouseup.slick", e.swipeHandler),
        e.$list.off("touchcancel.slick mouseleave.slick", e.swipeHandler),
        e.$list.off("click.slick", e.clickHandler),
        i(document).off(e.visibilityChange, e.visibility),
        e.cleanUpSlideEvents(),
        !0 === e.options.accessibility && e.$list.off("keydown.slick", e.keyHandler),
        !0 === e.options.focusOnSelect && i(e.$slideTrack).children().off("click.slick", e.selectHandler),
        i(window).off("orientationchange.slick.slick-" + e.instanceUid, e.orientationChange),
        i(window).off("resize.slick.slick-" + e.instanceUid, e.resize),
        i("[draggable!=true]", e.$slideTrack).off("dragstart", e.preventDefault),
        i(window).off("load.slick.slick-" + e.instanceUid, e.setPosition)
    }
    ,
    e.prototype.cleanUpSlideEvents = function() {
        var e = this;
        e.$list.off("mouseenter.slick", i.proxy(e.interrupt, e, !0)),
        e.$list.off("mouseleave.slick", i.proxy(e.interrupt, e, !1))
    }
    ,
    e.prototype.cleanUpRows = function() {
        var i, e = this;
        e.options.rows > 1 && ((i = e.$slides.children().children()).removeAttr("style"),
        e.$slider.empty().append(i))
    }
    ,
    e.prototype.clickHandler = function(i) {
        !1 === this.shouldClick && (i.stopImmediatePropagation(),
        i.stopPropagation(),
        i.preventDefault())
    }
    ,
    e.prototype.destroy = function(e) {
        var t = this;
        t.autoPlayClear(),
        t.touchObject = {},
        t.cleanUpEvents(),
        i(".slick-cloned", t.$slider).detach(),
        t.$dots && t.$dots.remove(),
        t.$prevArrow && t.$prevArrow.length && (t.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""),
        t.htmlExpr.test(t.options.prevArrow) && t.$prevArrow.remove()),
        t.$nextArrow && t.$nextArrow.length && (t.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""),
        t.htmlExpr.test(t.options.nextArrow) && t.$nextArrow.remove()),
        t.$slides && (t.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function() {
            i(this).attr("style", i(this).data("originalStyling"))
        }),
        t.$slideTrack.children(this.options.slide).detach(),
        t.$slideTrack.detach(),
        t.$list.detach(),
        t.$slider.append(t.$slides)),
        t.cleanUpRows(),
        t.$slider.removeClass("slick-slider"),
        t.$slider.removeClass("slick-initialized"),
        t.$slider.removeClass("slick-dotted"),
        t.unslicked = !0,
        e || t.$slider.trigger("destroy", [t])
    }
    ,
    e.prototype.disableTransition = function(i) {
        var e = this
          , t = {};
        t[e.transitionType] = "",
        !1 === e.options.fade ? e.$slideTrack.css(t) : e.$slides.eq(i).css(t)
    }
    ,
    e.prototype.fadeSlide = function(i, e) {
        var t = this;
        !1 === t.cssTransitions ? (t.$slides.eq(i).css({
            zIndex: t.options.zIndex
        }),
        t.$slides.eq(i).animate({
            opacity: 1
        }, t.options.speed, t.options.easing, e)) : (t.applyTransition(i),
        t.$slides.eq(i).css({
            opacity: 1,
            zIndex: t.options.zIndex
        }),
        e && setTimeout(function() {
            t.disableTransition(i),
            e.call()
        }, t.options.speed))
    }
    ,
    e.prototype.fadeSlideOut = function(i) {
        var e = this;
        !1 === e.cssTransitions ? e.$slides.eq(i).animate({
            opacity: 0,
            zIndex: e.options.zIndex - 2
        }, e.options.speed, e.options.easing) : (e.applyTransition(i),
        e.$slides.eq(i).css({
            opacity: 0,
            zIndex: e.options.zIndex - 2
        }))
    }
    ,
    e.prototype.filterSlides = e.prototype.slickFilter = function(i) {
        var e = this;
        null !== i && (e.$slidesCache = e.$slides,
        e.unload(),
        e.$slideTrack.children(this.options.slide).detach(),
        e.$slidesCache.filter(i).appendTo(e.$slideTrack),
        e.reinit())
    }
    ,
    e.prototype.focusHandler = function() {
        var e = this;
        e.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick", "*", function(t) {
            t.stopImmediatePropagation();
            var o = i(this);
            setTimeout(function() {
                e.options.pauseOnFocus && (e.focussed = o.is(":focus"),
                e.autoPlay())
            }, 0)
        })
    }
    ,
    e.prototype.getCurrent = e.prototype.slickCurrentSlide = function() {
        return this.currentSlide
    }
    ,
    e.prototype.getDotCount = function() {
        var i = this
          , e = 0
          , t = 0
          , o = 0;
        if (!0 === i.options.infinite)
            if (i.slideCount <= i.options.slidesToShow)
                ++o;
            else
                for (; e < i.slideCount; )
                    ++o,
                    e = t + i.options.slidesToScroll,
                    t += i.options.slidesToScroll <= i.options.slidesToShow ? i.options.slidesToScroll : i.options.slidesToShow;
        else if (!0 === i.options.centerMode)
            o = i.slideCount;
        else if (i.options.asNavFor)
            for (; e < i.slideCount; )
                ++o,
                e = t + i.options.slidesToScroll,
                t += i.options.slidesToScroll <= i.options.slidesToShow ? i.options.slidesToScroll : i.options.slidesToShow;
        else
            o = 1 + Math.ceil((i.slideCount - i.options.slidesToShow) / i.options.slidesToScroll);
        return o - 1
    }
    ,
    e.prototype.getLeft = function(i) {
        var e, t, o, s, n = this, r = 0;
        return n.slideOffset = 0,
        t = n.$slides.first().outerHeight(!0),
        !0 === n.options.infinite ? (n.slideCount > n.options.slidesToShow && (n.slideOffset = n.slideWidth * n.options.slidesToShow * -1,
        s = -1,
        !0 === n.options.vertical && !0 === n.options.centerMode && (2 === n.options.slidesToShow ? s = -1.5 : 1 === n.options.slidesToShow && (s = -2)),
        r = t * n.options.slidesToShow * s),
        n.slideCount % n.options.slidesToScroll != 0 && i + n.options.slidesToScroll > n.slideCount && n.slideCount > n.options.slidesToShow && (i > n.slideCount ? (n.slideOffset = (n.options.slidesToShow - (i - n.slideCount)) * n.slideWidth * -1,
        r = (n.options.slidesToShow - (i - n.slideCount)) * t * -1) : (n.slideOffset = n.slideCount % n.options.slidesToScroll * n.slideWidth * -1,
        r = n.slideCount % n.options.slidesToScroll * t * -1))) : i + n.options.slidesToShow > n.slideCount && (n.slideOffset = (i + n.options.slidesToShow - n.slideCount) * n.slideWidth,
        r = (i + n.options.slidesToShow - n.slideCount) * t),
        n.slideCount <= n.options.slidesToShow && (n.slideOffset = 0,
        r = 0),
        !0 === n.options.centerMode && n.slideCount <= n.options.slidesToShow ? n.slideOffset = n.slideWidth * Math.floor(n.options.slidesToShow) / 2 - n.slideWidth * n.slideCount / 2 : !0 === n.options.centerMode && !0 === n.options.infinite ? n.slideOffset += n.slideWidth * Math.floor(n.options.slidesToShow / 2) - n.slideWidth : !0 === n.options.centerMode && (n.slideOffset = 0,
        n.slideOffset += n.slideWidth * Math.floor(n.options.slidesToShow / 2)),
        e = !1 === n.options.vertical ? i * n.slideWidth * -1 + n.slideOffset : i * t * -1 + r,
        !0 === n.options.variableWidth && (o = n.slideCount <= n.options.slidesToShow || !1 === n.options.infinite ? n.$slideTrack.children(".slick-slide").eq(i) : n.$slideTrack.children(".slick-slide").eq(i + n.options.slidesToShow),
        e = !0 === n.options.rtl ? o[0] ? -1 * (n.$slideTrack.width() - o[0].offsetLeft - o.width()) : 0 : o[0] ? -1 * o[0].offsetLeft : 0,
        !0 === n.options.centerMode && (o = n.slideCount <= n.options.slidesToShow || !1 === n.options.infinite ? n.$slideTrack.children(".slick-slide").eq(i) : n.$slideTrack.children(".slick-slide").eq(i + n.options.slidesToShow + 1),
        e = !0 === n.options.rtl ? o[0] ? -1 * (n.$slideTrack.width() - o[0].offsetLeft - o.width()) : 0 : o[0] ? -1 * o[0].offsetLeft : 0,
        e += (n.$list.width() - o.outerWidth()) / 2)),
        e
    }
    ,
    e.prototype.getOption = e.prototype.slickGetOption = function(i) {
        return this.options[i]
    }
    ,
    e.prototype.getNavigableIndexes = function() {
        var i, e = this, t = 0, o = 0, s = [];
        for (!1 === e.options.infinite ? i = e.slideCount : (t = -1 * e.options.slidesToScroll,
        o = -1 * e.options.slidesToScroll,
        i = 2 * e.slideCount); t < i; )
            s.push(t),
            t = o + e.options.slidesToScroll,
            o += e.options.slidesToScroll <= e.options.slidesToShow ? e.options.slidesToScroll : e.options.slidesToShow;
        return s
    }
    ,
    e.prototype.getSlick = function() {
        return this
    }
    ,
    e.prototype.getSlideCount = function() {
        var e, t, o = this;
        return t = !0 === o.options.centerMode ? o.slideWidth * Math.floor(o.options.slidesToShow / 2) : 0,
        !0 === o.options.swipeToSlide ? (o.$slideTrack.find(".slick-slide").each(function(s, n) {
            if (n.offsetLeft - t + i(n).outerWidth() / 2 > -1 * o.swipeLeft)
                return e = n,
                !1
        }),
        Math.abs(i(e).attr("data-slick-index") - o.currentSlide) || 1) : o.options.slidesToScroll
    }
    ,
    e.prototype.goTo = e.prototype.slickGoTo = function(i, e) {
        this.changeSlide({
            data: {
                message: "index",
                index: parseInt(i)
            }
        }, e)
    }
    ,
    e.prototype.init = function(e) {
        var t = this;
        i(t.$slider).hasClass("slick-initialized") || (i(t.$slider).addClass("slick-initialized"),
        t.buildRows(),
        t.buildOut(),
        t.setProps(),
        t.startLoad(),
        t.loadSlider(),
        t.initializeEvents(),
        t.updateArrows(),
        t.updateDots(),
        t.checkResponsive(!0),
        t.focusHandler()),
        e && t.$slider.trigger("init", [t]),
        !0 === t.options.accessibility && t.initADA(),
        t.options.autoplay && (t.paused = !1,
        t.autoPlay())
    }
    ,
    e.prototype.initADA = function() {
        var e = this
          , t = Math.ceil(e.slideCount / e.options.slidesToShow)
          , o = e.getNavigableIndexes().filter(function(i) {
            return i >= 0 && i < e.slideCount
        });
        e.$slides.add(e.$slideTrack.find(".slick-cloned")).attr({
            "aria-hidden": "true",
            tabindex: "-1"
        }).find("a, input, button, select").attr({
            tabindex: "-1"
        }),
        null !== e.$dots && (e.$slides.not(e.$slideTrack.find(".slick-cloned")).each(function(t) {
            var s = o.indexOf(t);
            i(this).attr({
                role: "tabpanel",
                id: "slick-slide" + e.instanceUid + t,
                tabindex: -1
            }),
            -1 !== s && i(this).attr({
                "aria-describedby": "slick-slide-control" + e.instanceUid + s
            })
        }),
        e.$dots.attr("role", "tablist").find("li").each(function(s) {
            var n = o[s];
            i(this).attr({
                role: "presentation"
            }),
            i(this).find("button").first().attr({
                role: "tab",
                id: "slick-slide-control" + e.instanceUid + s,
                "aria-controls": "slick-slide" + e.instanceUid + n,
                "aria-label": s + 1 + " of " + t,
                "aria-selected": null,
                tabindex: "-1"
            })
        }).eq(e.currentSlide).find("button").attr({
            "aria-selected": "true",
            tabindex: "0"
        }).end());
        for (var s = e.currentSlide, n = s + e.options.slidesToShow; s < n; s++)
            e.$slides.eq(s).attr("tabindex", 0);
        e.activateADA()
    }
    ,
    e.prototype.initArrowEvents = function() {
        var i = this;
        !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && (i.$prevArrow.off("click.slick").on("click.slick", {
            message: "previous"
        }, i.changeSlide),
        i.$nextArrow.off("click.slick").on("click.slick", {
            message: "next"
        }, i.changeSlide),
        !0 === i.options.accessibility && (i.$prevArrow.on("keydown.slick", i.keyHandler),
        i.$nextArrow.on("keydown.slick", i.keyHandler)))
    }
    ,
    e.prototype.initDotEvents = function() {
        var e = this;
        !0 === e.options.dots && (i("li", e.$dots).on("click.slick", {
            message: "index"
        }, e.changeSlide),
        !0 === e.options.accessibility && e.$dots.on("keydown.slick", e.keyHandler)),
        !0 === e.options.dots && !0 === e.options.pauseOnDotsHover && i("li", e.$dots).on("mouseenter.slick", i.proxy(e.interrupt, e, !0)).on("mouseleave.slick", i.proxy(e.interrupt, e, !1))
    }
    ,
    e.prototype.initSlideEvents = function() {
        var e = this;
        e.options.pauseOnHover && (e.$list.on("mouseenter.slick", i.proxy(e.interrupt, e, !0)),
        e.$list.on("mouseleave.slick", i.proxy(e.interrupt, e, !1)))
    }
    ,
    e.prototype.initializeEvents = function() {
        var e = this;
        e.initArrowEvents(),
        e.initDotEvents(),
        e.initSlideEvents(),
        e.$list.on("touchstart.slick mousedown.slick", {
            action: "start"
        }, e.swipeHandler),
        e.$list.on("touchmove.slick mousemove.slick", {
            action: "move"
        }, e.swipeHandler),
        e.$list.on("touchend.slick mouseup.slick", {
            action: "end"
        }, e.swipeHandler),
        e.$list.on("touchcancel.slick mouseleave.slick", {
            action: "end"
        }, e.swipeHandler),
        e.$list.on("click.slick", e.clickHandler),
        i(document).on(e.visibilityChange, i.proxy(e.visibility, e)),
        !0 === e.options.accessibility && e.$list.on("keydown.slick", e.keyHandler),
        !0 === e.options.focusOnSelect && i(e.$slideTrack).children().on("click.slick", e.selectHandler),
        i(window).on("orientationchange.slick.slick-" + e.instanceUid, i.proxy(e.orientationChange, e)),
        i(window).on("resize.slick.slick-" + e.instanceUid, i.proxy(e.resize, e)),
        i("[draggable!=true]", e.$slideTrack).on("dragstart", e.preventDefault),
        i(window).on("load.slick.slick-" + e.instanceUid, e.setPosition),
        i(e.setPosition)
    }
    ,
    e.prototype.initUI = function() {
        var i = this;
        !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && (i.$prevArrow.show(),
        i.$nextArrow.show()),
        !0 === i.options.dots && i.slideCount > i.options.slidesToShow && i.$dots.show()
    }
    ,
    e.prototype.keyHandler = function(i) {
        var e = this;
        i.target.tagName.match("TEXTAREA|INPUT|SELECT") || (37 === i.keyCode && !0 === e.options.accessibility ? e.changeSlide({
            data: {
                message: !0 === e.options.rtl ? "next" : "previous"
            }
        }) : 39 === i.keyCode && !0 === e.options.accessibility && e.changeSlide({
            data: {
                message: !0 === e.options.rtl ? "previous" : "next"
            }
        }))
    }
    ,
    e.prototype.lazyLoad = function() {
        function e(e) {
            i("img[data-lazy]", e).each(function() {
                var e = i(this)
                  , t = i(this).attr("data-lazy")
                  , o = i(this).attr("data-srcset")
                  , s = i(this).attr("data-sizes") || n.$slider.attr("data-sizes")
                  , r = document.createElement("img");
                r.onload = function() {
                    e.animate({
                        opacity: 0
                    }, 100, function() {
                        o && (e.attr("srcset", o),
                        s && e.attr("sizes", s)),
                        e.attr("src", t).animate({
                            opacity: 1
                        }, 200, function() {
                            e.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")
                        }),
                        n.$slider.trigger("lazyLoaded", [n, e, t])
                    })
                }
                ,
                r.onerror = function() {
                    e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),
                    n.$slider.trigger("lazyLoadError", [n, e, t])
                }
                ,
                r.src = t
            })
        }
        var t, o, s, n = this;
        if (!0 === n.options.centerMode ? !0 === n.options.infinite ? s = (o = n.currentSlide + (n.options.slidesToShow / 2 + 1)) + n.options.slidesToShow + 2 : (o = Math.max(0, n.currentSlide - (n.options.slidesToShow / 2 + 1)),
        s = n.options.slidesToShow / 2 + 1 + 2 + n.currentSlide) : (o = n.options.infinite ? n.options.slidesToShow + n.currentSlide : n.currentSlide,
        s = Math.ceil(o + n.options.slidesToShow),
        !0 === n.options.fade && (o > 0 && o--,
        s <= n.slideCount && s++)),
        t = n.$slider.find(".slick-slide").slice(o, s),
        "anticipated" === n.options.lazyLoad)
            for (var r = o - 1, l = s, d = n.$slider.find(".slick-slide"), a = 0; a < n.options.slidesToScroll; a++)
                r < 0 && (r = n.slideCount - 1),
                t = (t = t.add(d.eq(r))).add(d.eq(l)),
                r--,
                l++;
        e(t),
        n.slideCount <= n.options.slidesToShow ? e(n.$slider.find(".slick-slide")) : n.currentSlide >= n.slideCount - n.options.slidesToShow ? e(n.$slider.find(".slick-cloned").slice(0, n.options.slidesToShow)) : 0 === n.currentSlide && e(n.$slider.find(".slick-cloned").slice(-1 * n.options.slidesToShow))
    }
    ,
    e.prototype.loadSlider = function() {
        var i = this;
        i.setPosition(),
        i.$slideTrack.css({
            opacity: 1
        }),
        i.$slider.removeClass("slick-loading"),
        i.initUI(),
        "progressive" === i.options.lazyLoad && i.progressiveLazyLoad()
    }
    ,
    e.prototype.next = e.prototype.slickNext = function() {
        this.changeSlide({
            data: {
                message: "next"
            }
        })
    }
    ,
    e.prototype.orientationChange = function() {
        var i = this;
        i.checkResponsive(),
        i.setPosition()
    }
    ,
    e.prototype.pause = e.prototype.slickPause = function() {
        var i = this;
        i.autoPlayClear(),
        i.paused = !0
    }
    ,
    e.prototype.play = e.prototype.slickPlay = function() {
        var i = this;
        i.autoPlay(),
        i.options.autoplay = !0,
        i.paused = !1,
        i.focussed = !1,
        i.interrupted = !1
    }
    ,
    e.prototype.postSlide = function(e) {
        var t = this;
        t.unslicked || (t.$slider.trigger("afterChange", [t, e]),
        t.animating = !1,
        t.slideCount > t.options.slidesToShow && t.setPosition(),
        t.swipeLeft = null,
        t.options.autoplay && t.autoPlay(),
        !0 === t.options.accessibility && (t.initADA(),
        t.options.focusOnChange && i(t.$slides.get(t.currentSlide)).attr("tabindex", 0).focus()))
    }
    ,
    e.prototype.prev = e.prototype.slickPrev = function() {
        this.changeSlide({
            data: {
                message: "previous"
            }
        })
    }
    ,
    e.prototype.preventDefault = function(i) {
        i.preventDefault()
    }
    ,
    e.prototype.progressiveLazyLoad = function(e) {
        e = e || 1;
        var t, o, s, n, r, l = this, d = i("img[data-lazy]", l.$slider);
        d.length ? (t = d.first(),
        o = t.attr("data-lazy"),
        s = t.attr("data-srcset"),
        n = t.attr("data-sizes") || l.$slider.attr("data-sizes"),
        (r = document.createElement("img")).onload = function() {
            s && (t.attr("srcset", s),
            n && t.attr("sizes", n)),
            t.attr("src", o).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),
            !0 === l.options.adaptiveHeight && l.setPosition(),
            l.$slider.trigger("lazyLoaded", [l, t, o]),
            l.progressiveLazyLoad()
        }
        ,
        r.onerror = function() {
            e < 3 ? setTimeout(function() {
                l.progressiveLazyLoad(e + 1)
            }, 500) : (t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),
            l.$slider.trigger("lazyLoadError", [l, t, o]),
            l.progressiveLazyLoad())
        }
        ,
        r.src = o) : l.$slider.trigger("allImagesLoaded", [l])
    }
    ,
    e.prototype.refresh = function(e) {
        var t, o, s = this;
        o = s.slideCount - s.options.slidesToShow,
        !s.options.infinite && s.currentSlide > o && (s.currentSlide = o),
        s.slideCount <= s.options.slidesToShow && (s.currentSlide = 0),
        t = s.currentSlide,
        s.destroy(!0),
        i.extend(s, s.initials, {
            currentSlide: t
        }),
        s.init(),
        e || s.changeSlide({
            data: {
                message: "index",
                index: t
            }
        }, !1)
    }
    ,
    e.prototype.registerBreakpoints = function() {
        var e, t, o, s = this, n = s.options.responsive || null;
        if ("array" === i.type(n) && n.length) {
            s.respondTo = s.options.respondTo || "window";
            for (e in n)
                if (o = s.breakpoints.length - 1,
                n.hasOwnProperty(e)) {
                    for (t = n[e].breakpoint; o >= 0; )
                        s.breakpoints[o] && s.breakpoints[o] === t && s.breakpoints.splice(o, 1),
                        o--;
                    s.breakpoints.push(t),
                    s.breakpointSettings[t] = n[e].settings
                }
            s.breakpoints.sort(function(i, e) {
                return s.options.mobileFirst ? i - e : e - i
            })
        }
    }
    ,
    e.prototype.reinit = function() {
        var e = this;
        e.$slides = e.$slideTrack.children(e.options.slide).addClass("slick-slide"),
        e.slideCount = e.$slides.length,
        e.currentSlide >= e.slideCount && 0 !== e.currentSlide && (e.currentSlide = e.currentSlide - e.options.slidesToScroll),
        e.slideCount <= e.options.slidesToShow && (e.currentSlide = 0),
        e.registerBreakpoints(),
        e.setProps(),
        e.setupInfinite(),
        e.buildArrows(),
        e.updateArrows(),
        e.initArrowEvents(),
        e.buildDots(),
        e.updateDots(),
        e.initDotEvents(),
        e.cleanUpSlideEvents(),
        e.initSlideEvents(),
        e.checkResponsive(!1, !0),
        !0 === e.options.focusOnSelect && i(e.$slideTrack).children().on("click.slick", e.selectHandler),
        e.setSlideClasses("number" == typeof e.currentSlide ? e.currentSlide : 0),
        e.setPosition(),
        e.focusHandler(),
        e.paused = !e.options.autoplay,
        e.autoPlay(),
        e.$slider.trigger("reInit", [e])
    }
    ,
    e.prototype.resize = function() {
        var e = this;
        i(window).width() !== e.windowWidth && (clearTimeout(e.windowDelay),
        e.windowDelay = window.setTimeout(function() {
            e.windowWidth = i(window).width(),
            e.checkResponsive(),
            e.unslicked || e.setPosition()
        }, 50))
    }
    ,
    e.prototype.removeSlide = e.prototype.slickRemove = function(i, e, t) {
        var o = this;
        if (i = "boolean" == typeof i ? !0 === (e = i) ? 0 : o.slideCount - 1 : !0 === e ? --i : i,
        o.slideCount < 1 || i < 0 || i > o.slideCount - 1)
            return !1;
        o.unload(),
        !0 === t ? o.$slideTrack.children().remove() : o.$slideTrack.children(this.options.slide).eq(i).remove(),
        o.$slides = o.$slideTrack.children(this.options.slide),
        o.$slideTrack.children(this.options.slide).detach(),
        o.$slideTrack.append(o.$slides),
        o.$slidesCache = o.$slides,
        o.reinit()
    }
    ,
    e.prototype.setCSS = function(i) {
        var e, t, o = this, s = {};
        !0 === o.options.rtl && (i = -i),
        e = "left" == o.positionProp ? Math.ceil(i) + "px" : "0px",
        t = "top" == o.positionProp ? Math.ceil(i) + "px" : "0px",
        s[o.positionProp] = i,
        !1 === o.transformsEnabled ? o.$slideTrack.css(s) : (s = {},
        !1 === o.cssTransitions ? (s[o.animType] = "translate(" + e + ", " + t + ")",
        o.$slideTrack.css(s)) : (s[o.animType] = "translate3d(" + e + ", " + t + ", 0px)",
        o.$slideTrack.css(s)))
    }
    ,
    e.prototype.setDimensions = function() {
        var i = this;
        !1 === i.options.vertical ? !0 === i.options.centerMode && i.$list.css({
            padding: "0px " + i.options.centerPadding
        }) : (i.$list.height(i.$slides.first().outerHeight(!0) * i.options.slidesToShow),
        !0 === i.options.centerMode && i.$list.css({
            padding: i.options.centerPadding + " 0px"
        })),
        i.listWidth = i.$list.width(),
        i.listHeight = i.$list.height(),
        !1 === i.options.vertical && !1 === i.options.variableWidth ? (i.slideWidth = Math.ceil(i.listWidth / i.options.slidesToShow),
        i.$slideTrack.width(Math.ceil(i.slideWidth * i.$slideTrack.children(".slick-slide").length))) : !0 === i.options.variableWidth ? i.$slideTrack.width(5e3 * i.slideCount) : (i.slideWidth = Math.ceil(i.listWidth),
        i.$slideTrack.height(Math.ceil(i.$slides.first().outerHeight(!0) * i.$slideTrack.children(".slick-slide").length)));
        var e = i.$slides.first().outerWidth(!0) - i.$slides.first().width();
        !1 === i.options.variableWidth && i.$slideTrack.children(".slick-slide").width(i.slideWidth - e)
    }
    ,
    e.prototype.setFade = function() {
        var e, t = this;
        t.$slides.each(function(o, s) {
            e = t.slideWidth * o * -1,
            !0 === t.options.rtl ? i(s).css({
                position: "relative",
                right: e,
                top: 0,
                zIndex: t.options.zIndex - 2,
                opacity: 0
            }) : i(s).css({
                position: "relative",
                left: e,
                top: 0,
                zIndex: t.options.zIndex - 2,
                opacity: 0
            })
        }),
        t.$slides.eq(t.currentSlide).css({
            zIndex: t.options.zIndex - 1,
            opacity: 1
        })
    }
    ,
    e.prototype.setHeight = function() {
        var i = this;
        if (1 === i.options.slidesToShow && !0 === i.options.adaptiveHeight && !1 === i.options.vertical) {
            var e = i.$slides.eq(i.currentSlide).outerHeight(!0);
            i.$list.css("height", e)
        }
    }
    ,
    e.prototype.setOption = e.prototype.slickSetOption = function() {
        var e, t, o, s, n, r = this, l = !1;
        if ("object" === i.type(arguments[0]) ? (o = arguments[0],
        l = arguments[1],
        n = "multiple") : "string" === i.type(arguments[0]) && (o = arguments[0],
        s = arguments[1],
        l = arguments[2],
        "responsive" === arguments[0] && "array" === i.type(arguments[1]) ? n = "responsive" : void 0 !== arguments[1] && (n = "single")),
        "single" === n)
            r.options[o] = s;
        else if ("multiple" === n)
            i.each(o, function(i, e) {
                r.options[i] = e
            });
        else if ("responsive" === n)
            for (t in s)
                if ("array" !== i.type(r.options.responsive))
                    r.options.responsive = [s[t]];
                else {
                    for (e = r.options.responsive.length - 1; e >= 0; )
                        r.options.responsive[e].breakpoint === s[t].breakpoint && r.options.responsive.splice(e, 1),
                        e--;
                    r.options.responsive.push(s[t])
                }
        l && (r.unload(),
        r.reinit())
    }
    ,
    e.prototype.setPosition = function() {
        var i = this;
        i.setDimensions(),
        i.setHeight(),
        !1 === i.options.fade ? i.setCSS(i.getLeft(i.currentSlide)) : i.setFade(),
        i.$slider.trigger("setPosition", [i])
    }
    ,
    e.prototype.setProps = function() {
        var i = this
          , e = document.body.style;
        i.positionProp = !0 === i.options.vertical ? "top" : "left",
        "top" === i.positionProp ? i.$slider.addClass("slick-vertical") : i.$slider.removeClass("slick-vertical"),
        void 0 === e.WebkitTransition && void 0 === e.MozTransition && void 0 === e.msTransition || !0 === i.options.useCSS && (i.cssTransitions = !0),
        i.options.fade && ("number" == typeof i.options.zIndex ? i.options.zIndex < 3 && (i.options.zIndex = 3) : i.options.zIndex = i.defaults.zIndex),
        void 0 !== e.OTransform && (i.animType = "OTransform",
        i.transformType = "-o-transform",
        i.transitionType = "OTransition",
        void 0 === e.perspectiveProperty && void 0 === e.webkitPerspective && (i.animType = !1)),
        void 0 !== e.MozTransform && (i.animType = "MozTransform",
        i.transformType = "-moz-transform",
        i.transitionType = "MozTransition",
        void 0 === e.perspectiveProperty && void 0 === e.MozPerspective && (i.animType = !1)),
        void 0 !== e.webkitTransform && (i.animType = "webkitTransform",
        i.transformType = "-webkit-transform",
        i.transitionType = "webkitTransition",
        void 0 === e.perspectiveProperty && void 0 === e.webkitPerspective && (i.animType = !1)),
        void 0 !== e.msTransform && (i.animType = "msTransform",
        i.transformType = "-ms-transform",
        i.transitionType = "msTransition",
        void 0 === e.msTransform && (i.animType = !1)),
        void 0 !== e.transform && !1 !== i.animType && (i.animType = "transform",
        i.transformType = "transform",
        i.transitionType = "transition"),
        i.transformsEnabled = i.options.useTransform && null !== i.animType && !1 !== i.animType
    }
    ,
    e.prototype.setSlideClasses = function(i) {
        var e, t, o, s, n = this;
        if (t = n.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden", "true"),
        n.$slides.eq(i).addClass("slick-current"),
        !0 === n.options.centerMode) {
            var r = n.options.slidesToShow % 2 == 0 ? 1 : 0;
            e = Math.floor(n.options.slidesToShow / 2),
            !0 === n.options.infinite && (i >= e && i <= n.slideCount - 1 - e ? n.$slides.slice(i - e + r, i + e + 1).addClass("slick-active").attr("aria-hidden", "false") : (o = n.options.slidesToShow + i,
            t.slice(o - e + 1 + r, o + e + 2).addClass("slick-active").attr("aria-hidden", "false")),
            0 === i ? t.eq(t.length - 1 - n.options.slidesToShow).addClass("slick-center") : i === n.slideCount - 1 && t.eq(n.options.slidesToShow).addClass("slick-center")),
            n.$slides.eq(i).addClass("slick-center")
        } else
            i >= 0 && i <= n.slideCount - n.options.slidesToShow ? n.$slides.slice(i, i + n.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false") : t.length <= n.options.slidesToShow ? t.addClass("slick-active").attr("aria-hidden", "false") : (s = n.slideCount % n.options.slidesToShow,
            o = !0 === n.options.infinite ? n.options.slidesToShow + i : i,
            n.options.slidesToShow == n.options.slidesToScroll && n.slideCount - i < n.options.slidesToShow ? t.slice(o - (n.options.slidesToShow - s), o + s).addClass("slick-active").attr("aria-hidden", "false") : t.slice(o, o + n.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false"));
        "ondemand" !== n.options.lazyLoad && "anticipated" !== n.options.lazyLoad || n.lazyLoad()
    }
    ,
    e.prototype.setupInfinite = function() {
        var e, t, o, s = this;
        if (!0 === s.options.fade && (s.options.centerMode = !1),
        !0 === s.options.infinite && !1 === s.options.fade && (t = null,
        s.slideCount > s.options.slidesToShow)) {
            for (o = !0 === s.options.centerMode ? s.options.slidesToShow + 1 : s.options.slidesToShow,
            e = s.slideCount; e > s.slideCount - o; e -= 1)
                t = e - 1,
                i(s.$slides[t]).clone(!0).attr("id", "").attr("data-slick-index", t - s.slideCount).prependTo(s.$slideTrack).addClass("slick-cloned");
            for (e = 0; e < o + s.slideCount; e += 1)
                t = e,
                i(s.$slides[t]).clone(!0).attr("id", "").attr("data-slick-index", t + s.slideCount).appendTo(s.$slideTrack).addClass("slick-cloned");
            s.$slideTrack.find(".slick-cloned").find("[id]").each(function() {
                i(this).attr("id", "")
            })
        }
    }
    ,
    e.prototype.interrupt = function(i) {
        var e = this;
        i || e.autoPlay(),
        e.interrupted = i
    }
    ,
    e.prototype.selectHandler = function(e) {
        var t = this
          , o = i(e.target).is(".slick-slide") ? i(e.target) : i(e.target).parents(".slick-slide")
          , s = parseInt(o.attr("data-slick-index"));
        s || (s = 0),
        t.slideCount <= t.options.slidesToShow ? t.slideHandler(s, !1, !0) : t.slideHandler(s)
    }
    ,
    e.prototype.slideHandler = function(i, e, t) {
        var o, s, n, r, l, d = null, a = this;
        if (e = e || !1,
        !(!0 === a.animating && !0 === a.options.waitForAnimate || !0 === a.options.fade && a.currentSlide === i))
            if (!1 === e && a.asNavFor(i),
            o = i,
            d = a.getLeft(o),
            r = a.getLeft(a.currentSlide),
            a.currentLeft = null === a.swipeLeft ? r : a.swipeLeft,
            !1 === a.options.infinite && !1 === a.options.centerMode && (i < 0 || i > a.getDotCount() * a.options.slidesToScroll))
                !1 === a.options.fade && (o = a.currentSlide,
                !0 !== t ? a.animateSlide(r, function() {
                    a.postSlide(o)
                }) : a.postSlide(o));
            else if (!1 === a.options.infinite && !0 === a.options.centerMode && (i < 0 || i > a.slideCount - a.options.slidesToScroll))
                !1 === a.options.fade && (o = a.currentSlide,
                !0 !== t ? a.animateSlide(r, function() {
                    a.postSlide(o)
                }) : a.postSlide(o));
            else {
                if (a.options.autoplay && clearInterval(a.autoPlayTimer),
                s = o < 0 ? a.slideCount % a.options.slidesToScroll != 0 ? a.slideCount - a.slideCount % a.options.slidesToScroll : a.slideCount + o : o >= a.slideCount ? a.slideCount % a.options.slidesToScroll != 0 ? 0 : o - a.slideCount : o,
                a.animating = !0,
                a.$slider.trigger("beforeChange", [a, a.currentSlide, s]),
                n = a.currentSlide,
                a.currentSlide = s,
                a.setSlideClasses(a.currentSlide),
                a.options.asNavFor && (l = (l = a.getNavTarget()).slick("getSlick")).slideCount <= l.options.slidesToShow && l.setSlideClasses(a.currentSlide),
                a.updateDots(),
                a.updateArrows(),
                !0 === a.options.fade)
                    return !0 !== t ? (a.fadeSlideOut(n),
                    a.fadeSlide(s, function() {
                        a.postSlide(s)
                    })) : a.postSlide(s),
                    void a.animateHeight();
                !0 !== t ? a.animateSlide(d, function() {
                    a.postSlide(s)
                }) : a.postSlide(s)
            }
    }
    ,
    e.prototype.startLoad = function() {
        var i = this;
        !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && (i.$prevArrow.hide(),
        i.$nextArrow.hide()),
        !0 === i.options.dots && i.slideCount > i.options.slidesToShow && i.$dots.hide(),
        i.$slider.addClass("slick-loading")
    }
    ,
    e.prototype.swipeDirection = function() {
        var i, e, t, o, s = this;
        return i = s.touchObject.startX - s.touchObject.curX,
        e = s.touchObject.startY - s.touchObject.curY,
        t = Math.atan2(e, i),
        (o = Math.round(180 * t / Math.PI)) < 0 && (o = 360 - Math.abs(o)),
        o <= 45 && o >= 0 ? !1 === s.options.rtl ? "left" : "right" : o <= 360 && o >= 315 ? !1 === s.options.rtl ? "left" : "right" : o >= 135 && o <= 225 ? !1 === s.options.rtl ? "right" : "left" : !0 === s.options.verticalSwiping ? o >= 35 && o <= 135 ? "down" : "up" : "vertical"
    }
    ,
    e.prototype.swipeEnd = function(i) {
        var e, t, o = this;
        if (o.dragging = !1,
        o.swiping = !1,
        o.scrolling)
            return o.scrolling = !1,
            !1;
        if (o.interrupted = !1,
        o.shouldClick = !(o.touchObject.swipeLength > 10),
        void 0 === o.touchObject.curX)
            return !1;
        if (!0 === o.touchObject.edgeHit && o.$slider.trigger("edge", [o, o.swipeDirection()]),
        o.touchObject.swipeLength >= o.touchObject.minSwipe) {
            switch (t = o.swipeDirection()) {
            case "left":
            case "down":
                e = o.options.swipeToSlide ? o.checkNavigable(o.currentSlide + o.getSlideCount()) : o.currentSlide + o.getSlideCount(),
                o.currentDirection = 0;
                break;
            case "right":
            case "up":
                e = o.options.swipeToSlide ? o.checkNavigable(o.currentSlide - o.getSlideCount()) : o.currentSlide - o.getSlideCount(),
                o.currentDirection = 1
            }
            "vertical" != t && (o.slideHandler(e),
            o.touchObject = {},
            o.$slider.trigger("swipe", [o, t]))
        } else
            o.touchObject.startX !== o.touchObject.curX && (o.slideHandler(o.currentSlide),
            o.touchObject = {})
    }
    ,
    e.prototype.swipeHandler = function(i) {
        var e = this;
        if (!(!1 === e.options.swipe || "ontouchend"in document && !1 === e.options.swipe || !1 === e.options.draggable && -1 !== i.type.indexOf("mouse")))
            switch (e.touchObject.fingerCount = i.originalEvent && void 0 !== i.originalEvent.touches ? i.originalEvent.touches.length : 1,
            e.touchObject.minSwipe = e.listWidth / e.options.touchThreshold,
            !0 === e.options.verticalSwiping && (e.touchObject.minSwipe = e.listHeight / e.options.touchThreshold),
            i.data.action) {
            case "start":
                e.swipeStart(i);
                break;
            case "move":
                e.swipeMove(i);
                break;
            case "end":
                e.swipeEnd(i)
            }
    }
    ,
    e.prototype.swipeMove = function(i) {
        var e, t, o, s, n, r, l = this;
        return n = void 0 !== i.originalEvent ? i.originalEvent.touches : null,
        !(!l.dragging || l.scrolling || n && 1 !== n.length) && (e = l.getLeft(l.currentSlide),
        l.touchObject.curX = void 0 !== n ? n[0].pageX : i.clientX,
        l.touchObject.curY = void 0 !== n ? n[0].pageY : i.clientY,
        l.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(l.touchObject.curX - l.touchObject.startX, 2))),
        r = Math.round(Math.sqrt(Math.pow(l.touchObject.curY - l.touchObject.startY, 2))),
        !l.options.verticalSwiping && !l.swiping && r > 4 ? (l.scrolling = !0,
        !1) : (!0 === l.options.verticalSwiping && (l.touchObject.swipeLength = r),
        t = l.swipeDirection(),
        void 0 !== i.originalEvent && l.touchObject.swipeLength > 4 && (l.swiping = !0,
        i.preventDefault()),
        s = (!1 === l.options.rtl ? 1 : -1) * (l.touchObject.curX > l.touchObject.startX ? 1 : -1),
        !0 === l.options.verticalSwiping && (s = l.touchObject.curY > l.touchObject.startY ? 1 : -1),
        o = l.touchObject.swipeLength,
        l.touchObject.edgeHit = !1,
        !1 === l.options.infinite && (0 === l.currentSlide && "right" === t || l.currentSlide >= l.getDotCount() && "left" === t) && (o = l.touchObject.swipeLength * l.options.edgeFriction,
        l.touchObject.edgeHit = !0),
        !1 === l.options.vertical ? l.swipeLeft = e + o * s : l.swipeLeft = e + o * (l.$list.height() / l.listWidth) * s,
        !0 === l.options.verticalSwiping && (l.swipeLeft = e + o * s),
        !0 !== l.options.fade && !1 !== l.options.touchMove && (!0 === l.animating ? (l.swipeLeft = null,
        !1) : void l.setCSS(l.swipeLeft))))
    }
    ,
    e.prototype.swipeStart = function(i) {
        var e, t = this;
        if (t.interrupted = !0,
        1 !== t.touchObject.fingerCount || t.slideCount <= t.options.slidesToShow)
            return t.touchObject = {},
            !1;
        void 0 !== i.originalEvent && void 0 !== i.originalEvent.touches && (e = i.originalEvent.touches[0]),
        t.touchObject.startX = t.touchObject.curX = void 0 !== e ? e.pageX : i.clientX,
        t.touchObject.startY = t.touchObject.curY = void 0 !== e ? e.pageY : i.clientY,
        t.dragging = !0
    }
    ,
    e.prototype.unfilterSlides = e.prototype.slickUnfilter = function() {
        var i = this;
        null !== i.$slidesCache && (i.unload(),
        i.$slideTrack.children(this.options.slide).detach(),
        i.$slidesCache.appendTo(i.$slideTrack),
        i.reinit())
    }
    ,
    e.prototype.unload = function() {
        var e = this;
        i(".slick-cloned", e.$slider).remove(),
        e.$dots && e.$dots.remove(),
        e.$prevArrow && e.htmlExpr.test(e.options.prevArrow) && e.$prevArrow.remove(),
        e.$nextArrow && e.htmlExpr.test(e.options.nextArrow) && e.$nextArrow.remove(),
        e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden", "true").css("width", "")
    }
    ,
    e.prototype.unslick = function(i) {
        var e = this;
        e.$slider.trigger("unslick", [e, i]),
        e.destroy()
    }
    ,
    e.prototype.updateArrows = function() {
        var i = this;
        Math.floor(i.options.slidesToShow / 2),
        !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && !i.options.infinite && (i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false"),
        i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false"),
        0 === i.currentSlide ? (i.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true"),
        i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false")) : i.currentSlide >= i.slideCount - i.options.slidesToShow && !1 === i.options.centerMode ? (i.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"),
        i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false")) : i.currentSlide >= i.slideCount - 1 && !0 === i.options.centerMode && (i.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"),
        i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false")))
    }
    ,
    e.prototype.updateDots = function() {
        var i = this;
        null !== i.$dots && (i.$dots.find("li").removeClass("slick-active").end(),
        i.$dots.find("li").eq(Math.floor(i.currentSlide / i.options.slidesToScroll)).addClass("slick-active"))
    }
    ,
    e.prototype.visibility = function() {
        var i = this;
        i.options.autoplay && (document[i.hidden] ? i.interrupted = !0 : i.interrupted = !1)
    }
    ,
    i.fn.slick = function() {
        var i, t, o = this, s = arguments[0], n = Array.prototype.slice.call(arguments, 1), r = o.length;
        for (i = 0; i < r; i++)
            if ("object" == typeof s || void 0 === s ? o[i].slick = new e(o[i],s) : t = o[i].slick[s].apply(o[i].slick, n),
            void 0 !== t)
                return t;
        return o
    }
});

/* banners */

//$(document).ready(function() {

//    $('#largeBanner').slick({
//        autoplay: true
//    });

//    $('#smallBanner').slick();

//});
!function(t, r) {
    "function" == typeof define && define.amd ? define(["jquery"], function(n) {
        return r(t, t.document, undefined, n)
    }) : "object" == typeof module && "object" == typeof module.exports ? module.exports = r(t, t.document, undefined, require("jquery")) : r(t, t.document, undefined, t.jQuery)
}("undefined" != typeof window ? window : this, function(pt, bt, xi, n) {
    "use strict";
    var i, o, mt = "OverlayScrollbars", wt = "object", yt = "function", gt = "array", xt = "string", _t = "boolean", St = "number", d = "null", zt = "class", _i = "style", Tt = "id", Si = "length", zi = "prototype", Ti = "offsetHeight", ki = "clientHeight", Oi = "scrollHeight", Ai = "offsetWidth", Ci = "clientWidth", Ni = "scrollWidth", Hi = {
        o: {},
        u: {},
        s: ["-webkit-", "-moz-", "-o-", "-ms-"],
        v: ["WebKit", "Moz", "O", "MS"],
        p: function(n) {
            var t = this.u;
            if (t[n])
                return t[n];
            for (var r, e, i = this.s, o = this.m(n), a = bt.createElement("div")[_i], u = 0, f = 0; u < i.length; u++)
                for (e = i[u].replace(/-/g, ""),
                r = [n, i[u] + n, e + o, this.m(e) + o],
                f = 0; f < r[Si]; f++)
                    if (a[r[f]] !== xi)
                        return t[n] = r[f],
                        r[f];
            return null
        },
        g: function(n, t, r) {
            var e = this.v
              , i = this.o
              , o = 0
              , a = i[n];
            if (!a) {
                for (a = pt[n]; o < e[Si]; o++)
                    a = a || pt[(t ? e[o] : e[o].toLowerCase()) + this.m(n)];
                i[n] = a
            }
            return a || r
        },
        m: function(n) {
            return n.charAt(0).toUpperCase() + n.slice(1)
        }
    }, Li = {
        wW: function() {
            return pt.innerWidth || bt.documentElement[Ci] || bt.body[Ci]
        },
        wH: function() {
            return pt.innerHeight || bt.documentElement[ki] || bt.body[ki]
        },
        mO: function() {
            return Hi.g("MutationObserver", !0)
        },
        rO: function() {
            return Hi.g("ResizeObserver", !0)
        },
        rAF: function() {
            return Hi.g("requestAnimationFrame", !1, function(n) {
                return pt.setTimeout(n, 1e3 / 60)
            })
        },
        cAF: function() {
            return Hi.g("cancelAnimationFrame", !1, function(n) {
                return pt.clearTimeout(n)
            })
        },
        now: function() {
            return Date.now && Date.now() || (new Date).getTime()
        },
        stpP: function(n) {
            n.stopPropagation ? n.stopPropagation() : n.cancelBubble = !0
        },
        prvD: function(n) {
            n.preventDefault && n.cancelable ? n.preventDefault() : n.returnValue = !1
        },
        page: function(n) {
            var t = "page"
              , r = "client"
              , e = "X"
              , i = ((n = n.originalEvent || n).target || n.srcElement || bt).ownerDocument || bt
              , o = i.documentElement
              , a = i.body;
            if (n.touches === xi)
                return !n[t + e] && n[r + e] && null != n[r + e] ? {
                    x: n[r + e] + (o && o.scrollLeft || a && a.scrollLeft || 0) - (o && o.clientLeft || a && a.clientLeft || 0),
                    y: n[r + "Y"] + (o && o.scrollTop || a && a.scrollTop || 0) - (o && o.clientTop || a && a.clientTop || 0)
                } : {
                    x: n[t + e],
                    y: n.pageY
                };
            var u = n.touches[0];
            return {
                x: u[t + e],
                y: u.pageY
            }
        },
        mBtn: function(n) {
            var t = n.button;
            return n.which || t === xi ? n.which : 1 & t ? 1 : 2 & t ? 3 : 4 & t ? 2 : 0
        },
        inA: function(n, t) {
            for (var r = 0; r < t[Si]; r++)
                try {
                    if (t[r] === n)
                        return r
                } catch (e) {}
            return -1
        },
        isA: function(n) {
            var t = Array.isArray;
            return t ? t(n) : this.type(n) == gt
        },
        type: function(n) {
            return n === xi ? n + "" : null === n ? n + "" : Object[zi].toString.call(n).replace(/^\[object (.+)\]$/, "$1").toLowerCase()
        },
        bind: function(n, t) {
            if (typeof n != yt)
                throw "Can't bind function!";
            var r = zi
              , e = Array[r].slice.call(arguments, 2)
              , i = function() {}
              , o = function() {
                return n.apply(this instanceof i ? this : t, e.concat(Array[r].slice.call(arguments)))
            };
            return n[r] && (i[r] = n[r]),
            o[r] = new i,
            o
        }
    }, Ri = Math, Di = n, Ii = (n.easing,
    n), Mi = (i = [],
    o = "__overlayScrollbars__",
    function(n, t) {
        var r = arguments[Si];
        if (r < 1)
            return i;
        if (t)
            n[o] = t,
            i.push(n);
        else {
            var e = Li.inA(n, i);
            if (-1 < e) {
                if (!(1 < r))
                    return i[e][o];
                delete n[o],
                i.splice(e, 1)
            }
        }
    }
    ), r = function() {
        var u, f, O, n, t, r, e, a, i, c = [], ht = (a = {
            className: ["os-theme-dark", [d, xt]],
            resize: ["none", "n:none b:both h:horizontal v:vertical"],
            sizeAutoCapable: n = [!0, _t],
            clipAlways: n,
            normalizeRTL: n,
            paddingAbsolute: t = [!(O = [_t, St, xt, gt, wt, yt, d]), _t],
            autoUpdate: [null, [d, _t]],
            autoUpdateInterval: [33, St],
            nativeScrollbarsOverlaid: {
                showNativeScrollbars: t,
                initialize: n
            },
            overflowBehavior: {
                x: ["scroll", e = "v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden"],
                y: ["scroll", e]
            },
            scrollbars: {
                visibility: ["auto", "v:visible h:hidden a:auto"],
                autoHide: ["never", "n:never s:scroll l:leave m:move"],
                autoHideDelay: [800, St],
                dragScrolling: n,
                clickScrolling: t,
                touchSupport: n,
                snapHandle: t
            },
            textarea: {
                dynWidth: t,
                dynHeight: t,
                inheritedAttrs: [["style", "class"], [xt, gt, d]]
            },
            callbacks: {
                onInitialized: r = [null, [d, yt]],
                onInitializationWithdrawn: r,
                onDestroyed: r,
                onScrollStart: r,
                onScroll: r,
                onScrollStop: r,
                onOverflowChanged: r,
                onOverflowAmountChanged: r,
                onDirectionChanged: r,
                onContentSizeChanged: r,
                onHostSizeChanged: r,
                onUpdated: r
            }
        },
        {
            _: (i = function(i) {
                var o = function(n) {
                    var t, r, e;
                    for (t in n)
                        n.hasOwnProperty(t) && (r = n[t],
                        (e = Li.type(r)) == gt ? n[t] = r[i ? 1 : 0] : e == wt && (n[t] = o(r)));
                    return n
                };
                return o(Ii.extend(!0, {}, a))
            }
            )(),
            S: i(!0),
            T: function(n, t, z, T, r) {
                var e = {}
                  , i = Ii.extend(!0, {}, n)
                  , k = function(n, t, r, e) {
                    for (var i in t)
                        if (t.hasOwnProperty(i) && n.hasOwnProperty(i)) {
                            var o, a, u, f, c, l, s, v, d = !1, h = t[i], p = Li.type(h), b = p == wt, m = Li.type(h) != gt ? [h] : h, w = n[i], y = Li.type(w), g = e ? e + "." : "", x = 'The option "' + g + i + "\" wasn't set, because", _ = [], S = [];
                            if (b && y == wt)
                                r[i] = {},
                                k(w, h, r[i], g + i),
                                Ii.isEmptyObject(w) && delete n[i];
                            else if (!b) {
                                for (l = 0; l < m.length; l++)
                                    if (c = m[l],
                                    u = (p = Li.type(c)) == xt && -1 === Ii.inArray(c, O))
                                        for (_.push(xt),
                                        o = c.split(" "),
                                        S = S.concat(o),
                                        s = 0; s < o.length; s++) {
                                            for (f = (a = o[s].split(":"))[0],
                                            v = 0; v < a.length; v++)
                                                if (w === a[v]) {
                                                    d = !0;
                                                    break
                                                }
                                            if (d)
                                                break
                                        }
                                    else if (_.push(c),
                                    y === c) {
                                        d = !0;
                                        break
                                    }
                                d ? r[i] = u && T ? f : w : z && console.warn(x + " it doesn't accept the type [ " + y.toUpperCase() + ' ] with the value of "' + w + '".\r\nAccepted types are: [ ' + _.join(", ").toUpperCase() + " ]." + (0 < S.length ? "\r\nValid strings are: [ " + S.join(", ").split(":").join(", ") + " ]." : "")),
                                delete n[i]
                            }
                        }
                };
                return k(i, t, e),
                r ? Ii.extend(!0, e, i) : !Ii.isEmptyObject(i) && z && console.warn("The following options are discarded due to invalidity:\r\n" + pt.JSON.stringify(i, null, 2)),
                e
            }
        });
        function l() {
            u || (u = new o(ht._)),
            f || (f = new s(u))
        }
        function o(n) {
            var _ = this
              , i = "overflow"
              , o = "hidden"
              , S = Ii("body")
              , z = Ii('<div id="os-dummy-scrollbar-size"><div></div></div>')
              , a = z[0]
              , e = Ii(z.children("div").eq(0));
            S.append(z),
            z.hide().show();
            var t, r, u, f, c, l, s, v, d, h = T(a), p = {
                x: 0 === h.x,
                y: 0 === h.y
            };
            function T(n) {
                return {
                    x: n[Ti] - n[ki],
                    y: n[Ai] - n[Ci]
                }
            }
            Ii.extend(_, {
                defaultOptions: n,
                autoUpdateLoop: !1,
                autoUpdateRecommended: !Li.mO(),
                nativeScrollbarSize: h,
                nativeScrollbarIsOverlaid: p,
                nativeScrollbarStyling: (z.addClass("os-viewport-native-scrollbars-invisible"),
                z.css(i, o).hide().css(i, "scroll").show(),
                a[Ti] - a[ki] == 0 && a[Ai] - a[Ci] == 0),
                overlayScrollbarDummySize: {
                    x: 30,
                    y: 30
                },
                msie: (r = pt.navigator.userAgent,
                u = "indexOf",
                f = "substring",
                c = r[u]("MSIE "),
                l = r[u]("Trident/"),
                s = r[u]("Edge/"),
                v = r[u]("rv:"),
                d = parseInt,
                0 < c ? t = d(r[f](c + 5, r[u](".", c)), 10) : 0 < l ? t = d(r[f](v + 3, r[u](".", v)), 10) : 0 < s && (t = d(r[f](s + 5, r[u](".", s)), 10)),
                t),
                cssCalc: function() {
                    for (var n, t = bt.createElement("div")[_i], r = -1; r < Hi.s[Si]; r++)
                        if (n = r < 0 ? "calc" : Hi.s[r] + "calc",
                        t.cssText = "width:" + n + "(1px);",
                        t[Si])
                            return n;
                    return null
                }(),
                restrictedMeasuring: function() {
                    z.css(i, o);
                    var n = a[Ni]
                      , t = a[Oi];
                    z.css(i, "visible");
                    var r = a[Ni]
                      , e = a[Oi];
                    return n - r != 0 || t - e != 0
                }(),
                rtlScrollBehavior: function() {
                    z.css({
                        "overflow-y": o,
                        "overflow-x": "scroll",
                        direction: "rtl"
                    }).scrollLeft(0);
                    var n = z.offset()
                      , t = e.offset();
                    z.scrollLeft(999);
                    var r = e.offset();
                    return {
                        i: n.left === t.left,
                        n: t.left - r.left == 0
                    }
                }(),
                supportTransform: null !== Hi.p("transform"),
                supportTransition: null !== Hi.p("transition"),
                supportPassiveEvents: function() {
                    var n = !1;
                    try {
                        pt.addEventListener("test", null, Object.defineProperty({}, "passive", {
                            get: function() {
                                n = !0
                            }
                        }))
                    } catch (t) {}
                    return n
                }(),
                supportResizeObserver: !!Li.rO(),
                supportMutationObserver: !!Li.mO()
            }),
            z.removeAttr(_i).remove(),
            function() {
                if (!p.x || !p.y) {
                    var m = Ri.abs
                      , w = Li.wW()
                      , y = Li.wH()
                      , g = x();
                    Ii(pt).on("resize", function() {
                        if (0 < Mi().length) {
                            var n = Li.wW()
                              , t = Li.wH()
                              , r = n - w
                              , e = t - y;
                            if (0 === r && 0 === e)
                                return;
                            var i, o = Ri.round(n / (w / 100)), a = Ri.round(t / (y / 100)), u = m(r), f = m(e), c = m(o), l = m(a), s = x(), v = 2 < u && 2 < f, d = !function b(n, t) {
                                var r = m(n)
                                  , e = m(t);
                                return !(r === e || r + 1 === e || r - 1 === e)
                            }(c, l), h = v && d && s !== g && 0 < g, p = _.nativeScrollbarSize;
                            h && (S.append(z),
                            i = _.nativeScrollbarSize = T(z[0]),
                            z.remove(),
                            p.x === i.x && p.y === i.y || Ii.each(Mi(), function() {
                                Mi(this) && Mi(this).update("zoom")
                            })),
                            w = n,
                            y = t,
                            g = s
                        }
                    })
                }
                function x() {
                    var n = pt.screen.deviceXDPI || 0
                      , t = pt.screen.logicalXDPI || 1;
                    return pt.devicePixelRatio || n / t
                }
            }()
        }
        function s(r) {
            var c, l = "autoUpdate", s = Si, v = [], d = [], h = !1, p = 33, b = Li.now(), m = function() {
                if (0 < v[s] && h) {
                    c = Li.rAF()(function() {
                        m()
                    });
                    var n, t, r, e, i, o, a = Li.now(), u = a - b;
                    if (p < u) {
                        b = a - u % p,
                        n = 33;
                        for (var f = 0; f < v[s]; f++)
                            (t = v[f]) !== xi && (e = (r = t.options())[l],
                            i = Ri.max(1, r.autoUpdateInterval),
                            o = Li.now(),
                            (!0 === e || null === e) && o - d[f] > i && (t.update("auto"),
                            d[f] = new Date(o += i)),
                            n = Ri.max(1, Ri.min(n, i)));
                        p = n
                    }
                } else
                    p = 33
            };
            this.add = function(n) {
                -1 === Ii.inArray(n, v) && (v.push(n),
                d.push(Li.now()),
                0 < v[s] && !h && (h = !0,
                r.autoUpdateLoop = h,
                m()))
            }
            ,
            this.remove = function(n) {
                var t = Ii.inArray(n, v);
                -1 < t && (d.splice(t, 1),
                v.splice(t, 1),
                0 === v[s] && h && (h = !1,
                r.autoUpdateLoop = h,
                c !== xi && (Li.cAF()(c),
                c = -1)))
            }
        }
        function v(e, n, t, kt, Ot) {
            if (ut(e)) {
                if (Mi(e)) {
                    var r = Mi(e);
                    return r.options(n),
                    r
                }
                var At, Ct, Nt, Ht, D, Lt, Rt, Dt, I, sn, h, A, l, It, Mt, Wt, jt, Ft, p, u, Et, Ut, Pt, qt, Vt, $t, Bt, Xt, Yt, Kt, i, o, Gt, Jt, Qt, a, M, f, W, Zt, nr, tr, rr, er, ir, or, ar, ur, fr, cr, c, s, v, d, b, m, w, C, lr, sr, vr, N, dr, hr, pr, br, mr, wr, yr, gr, xr, _r, Sr, zr, Tr, kr, Or, Ar, H, Cr, Nr, Hr, Lr, Rr, Dr, Ir, Mr, Wr, jr, y, g, x, _, S, z, T, k, O, Fr, Er, Ur, Pr, qr, Vr, $r, Br, Xr, Yr, Kr, L, Gr, R, j, Jr, F, Qr, E, U, Zr, ne, te, re, ee, P, q, V, ie, oe, ae, ue, fe, ce = new pt[mt], B = Ii[zi], le = {}, vn = {}, dn = {}, se = {}, ve = {}, X = "-hidden", de = "margin-", he = "padding-", pe = "border-", be = "top", me = "right", we = "bottom", ye = "left", ge = "min-", xe = "max-", _e = "width", Se = "height", ze = "float", Te = "", ke = "auto", Oe = "scroll", Ae = "100%", Ce = "x", Ne = "y", Y = ".", He = " ", K = "scrollbar", G = "-horizontal", J = "-vertical", Le = Oe + "Left", Re = Oe + "Top", De = "mousedown touchstart", Q = "mouseup touchend touchcancel", Z = "mousemove touchmove", nn = "mouseenter", tn = "mouseleave", rn = "keydown", en = "keyup", on = "selectstart", an = "transitionend webkitTransitionEnd oTransitionEnd", un = "__overlayScrollbarsRO__", fn = "os-", cn = "os-html", ln = "os-host", hn = ln + "-textarea", pn = ln + "-" + K + G + X, bn = ln + "-" + K + J + X, mn = ln + "-transition", Ie = ln + "-rtl", Me = ln + "-resize-disabled", We = ln + "-scrolling", je = ln + "-overflow", Fe = je + "-x", Ee = je + "-y", wn = "os-textarea", yn = wn + "-cover", gn = "os-padding", xn = "os-viewport", _n = xn + "-native-scrollbars-invisible", Sn = xn + "-native-scrollbars-overlaid", zn = "os-content", Ue = "os-content-arrange", Pe = "os-content-glue", qe = "os-size-auto-observer", Tn = "os-resize-observer", kn = "os-resize-observer-item", On = kn + "-final", An = "os-text-inherit", Cn = fn + K, Nn = Cn + "-track", Hn = Nn + "-off", Ln = Cn + "-handle", Rn = Ln + "-off", Dn = Cn + "-unusable", In = Cn + "-" + ke + X, Mn = Cn + "-corner", Ve = Mn + "-resize", $e = Ve + "-both", Be = Ve + G, Xe = Ve + J, Wn = Cn + G, jn = Cn + J, Fn = "os-dragging", Ye = "os-theme-none", En = [], Un = {}, Ke = {}, Ge = 42, Pn = [];
                if (ce.sleep = function() {
                    Kt = !0
                }
                ,
                ce.update = function(n) {
                    var t, r, e = lt(n) == xt, i = e && "+" == n.slice(-1);
                    e ? 0 === n.indexOf(ke) ? (t = function h() {
                        if (Kt || Jr)
                            return !1;
                        var n = nr.attr(Tt) || Te
                          , t = pi(n, y)
                          , r = nr.attr(zt) || Te
                          , e = pi(r, g)
                          , i = nr.attr(_i) || Te
                          , o = pi(i, x)
                          , a = nr.is(":visible") || Te
                          , u = pi(a, _)
                          , f = jt && Zt.attr("rows") || Te
                          , c = pi(f, S)
                          , l = jt && Zt.attr("cols") || Te
                          , s = pi(l, z)
                          , v = jt && Zt.attr("wrap") || Te
                          , d = pi(v, T);
                        return y = n,
                        e && (e = Zn(g, r)),
                        g = r,
                        x = i,
                        _ = a,
                        S = f,
                        z = l,
                        T = v,
                        t || e || o || u || c || s || d
                    }(),
                    r = function c() {
                        if (Kt)
                            return !1;
                        var n, t, r, e, i = jt && xr && !Wr ? Zt.val().length : 0, o = !Jr && xr && !jt, a = {}, u = {};
                        It && (a = {
                            x: hr[Ni],
                            y: hr[Oi]
                        }),
                        o && (n = or.css(ze),
                        u[ze] = Yt ? me : ye,
                        u[_e] = ke,
                        or.css(u));
                        var f = {
                            w: di()[Ni] + i,
                            h: di()[Oi] + i
                        };
                        return o && (u[ze] = n,
                        u[_e] = Ae,
                        or.css(u)),
                        t = ti(),
                        r = bi(f, k),
                        e = bi(a, L, Ce, Ne),
                        k = f,
                        L = a,
                        r || t || e
                    }(),
                    (t || r || i) && ei(!1, r, !1, i)) : "zoom" === n && ei(!0, !0) : (n = Kt || n,
                    ei(Kt = !1, !1, n, !0)),
                    jt || or.find("img").each(function(n, t) {
                        -1 === Li.inA(t, Pn) && Ii(t).off("load", Qn).on("load", Qn)
                    })
                }
                ,
                ce.options = function(n, t) {
                    if (Ii.isEmptyObject(n) || !Ii.isPlainObject(n)) {
                        if (lt(n) != xt)
                            return o;
                        if (1 < arguments.length) {
                            var r = {};
                            return function f(n, t, r) {
                                for (var e = t.split(Y), i = e.length, o = 0, a = {}, u = a; o < i; o++)
                                    a = a[e[o]] = o + 1 < i ? {} : r;
                                Ii.extend(n, u, !0)
                            }(r, n, t),
                            nt(r),
                            void ei()
                        }
                        return ct(o, n)
                    }
                    nt(n);
                    var e = Kt || !1;
                    Kt = !1,
                    ei(),
                    Kt = e
                }
                ,
                ce.destroy = function() {
                    for (var n in Wt = !0,
                    Ot.remove(ce),
                    Ze(),
                    $n(rr),
                    Ut && $n(tr),
                    Un)
                        ce.removeExt(n);
                    ni(!0),
                    rt(!0),
                    ur && st(ur),
                    ar && st(ar),
                    Ut && st(tr),
                    et(!0),
                    ot(!0),
                    tt(!0);
                    for (var t = 0; t < Pn[Si]; t++)
                        Ii(Pn[t]).off("load", Qn);
                    for (var r in Pn = xi,
                    Mi(e, 0),
                    li("onDestroyed"),
                    ce)
                        delete ce[r];
                    ce = xi
                }
                ,
                ce.scroll = function(n, t, r, e) {
                    if (0 === arguments.length || n === xi) {
                        var i = vn
                          , o = dn
                          , a = Vr && Yt && Nt.i
                          , u = Vr && Yt && Nt.n
                          , f = i.k
                          , c = i.O
                          , l = i.A;
                        return c = a ? 1 - c : c,
                        f = a ? l - f : f,
                        l *= u ? -1 : 1,
                        {
                            position: {
                                x: f *= u ? -1 : 1,
                                y: o.k
                            },
                            ratio: {
                                x: c,
                                y: o.O
                            },
                            max: {
                                x: l,
                                y: o.A
                            },
                            handleOffset: {
                                x: i.C,
                                y: o.C
                            },
                            handleLength: {
                                x: i.N,
                                y: o.N
                            },
                            handleLengthRatio: {
                                x: i.H,
                                y: o.H
                            },
                            trackLength: {
                                x: i.L,
                                y: o.L
                            },
                            snappedHandleOffset: {
                                x: i.R,
                                y: o.R
                            },
                            isRTL: Yt,
                            isRTLNormalized: Vr
                        }
                    }
                    var s, v, d, h, p, w, y, b, m, g = Vr, x = [Ce, ye, "l"], _ = [Ne, be, "t"], S = ["+=", "-=", "*=", "/="], z = lt(t) == wt, T = z ? t.complete : e, k = {}, O = {}, A = "begin", C = "nearest", N = "never", H = "ifneeded", L = Si, R = [Ce, Ne, "xy", "yx"], D = [A, "end", "center", C], I = ["always", N, H], M = n.hasOwnProperty("el"), W = M ? n.el : n, j = !!(W instanceof Ii || Di) && W instanceof Di, F = !j && ut(W), E = lt(T) != yt ? xi : function() {
                        v && ui(!0),
                        d && ui(!1),
                        T()
                    }
                    , U = function(n, t) {
                        for (s = 0; s < t[L]; s++)
                            if (n === t[s])
                                return !0;
                        return !1
                    }, P = function(n, t) {
                        var r = n ? x : _;
                        if (lt(t = lt(t) == xt || lt(t) == St ? [t, t] : t) == gt)
                            return n ? t[0] : t[1];
                        if (lt(t) == wt)
                            for (s = 0; s < r[L]; s++)
                                if (r[s]in t)
                                    return t[r[s]]
                    }, q = function(n, t) {
                        var r, e, i = lt(t) == xt;
                        i && ce.update(ke + "+");
                        var o, a, u = n ? vn : dn, f = u.k, c = u.A, l = Yt && n, s = l && Nt.n && !g, v = "replace", d = eval;
                        if ((e = i ? (2 < t[L] && (a = t.substr(0, 2),
                        -1 < $.inArray(a, S) && (r = a)),
                        t = (t = r ? t.substr(2) : t)[v](/min/g, 0)[v](/</g, 0)[v](/max/g, (s ? "-" : Te) + Ae)[v](/>/g, (s ? "-" : Te) + Ae)[v](/px/g, Te)[v](/%/g, " * " + c * (l && Nt.n ? -1 : 1) / 100)[v](/vw/g, " * " + se.w)[v](/vh/g, " * " + se.h),
                        vi(isNaN(t) ? vi(d(t), !0).toFixed() : t)) : t) !== xi && !isNaN(e) && lt(e) == St) {
                            var h = g && l
                              , p = f * (h && Nt.n ? -1 : 1)
                              , b = h && Nt.i
                              , m = h && Nt.n;
                            switch (p = b ? c - p : p,
                            r) {
                            case "+=":
                                o = p + e;
                                break;
                            case "-=":
                                o = p - e;
                                break;
                            case "*=":
                                o = p * e;
                                break;
                            case "/=":
                                o = p / e;
                                break;
                            default:
                                o = e
                            }
                            o = b ? c - o : o,
                            o *= m ? -1 : 1,
                            o = l && Nt.n ? Ri.min(0, Ri.max(c, o)) : Ri.max(0, Ri.min(c, o))
                        }
                        return o === f ? xi : o
                    }, V = function(n, t, r, e) {
                        var i, o, a = [r, r], u = lt(n);
                        if (u == t)
                            n = [n, n];
                        else if (u == gt) {
                            if (2 < (i = n[L]) || i < 1)
                                n = a;
                            else
                                for (1 === i && (n[1] = r),
                                s = 0; s < i; s++)
                                    if (lt(o = n[s]) != t || !U(o, e)) {
                                        n = a;
                                        break
                                    }
                        } else
                            n = u == wt ? [n[Ce] || r, n[Ne] || r] : a;
                        return {
                            x: n[0],
                            y: n[1]
                        }
                    }, B = function(n) {
                        var t, r, e = [], i = [be, me, we, ye];
                        for (s = 0; s < n[L] && s !== i[L]; s++)
                            (r = lt(t = n[s])) == _t ? e.push(t ? vi(m.css(de + i[s])) : 0) : e.push(r == St ? t : 0);
                        return e
                    };
                    if (j || F) {
                        var X, Y = M ? n.margin : 0, K = M ? n.axis : 0, G = M ? n.scroll : 0, J = M ? n.block : 0, Q = [0, 0, 0, 0], Z = lt(Y);
                        if (0 === (m = j ? W : Ii(W))[L])
                            return;
                        ce.update(ke + "+"),
                        Y = Z == St || Z == _t ? B([Y, Y, Y, Y]) : Z == gt ? 2 === (X = Y[L]) ? B([Y[0], Y[1], Y[0], Y[1]]) : 4 <= X ? B(Y) : Q : Z == wt ? B([Y[be], Y[me], Y[we], Y[ye]]) : Q,
                        p = U(K, R) ? K : "xy",
                        w = V(G, xt, "always", I),
                        y = V(J, xt, A, D),
                        b = Y;
                        var nn = vn.k
                          , tn = dn.k
                          , rn = er.offset()
                          , en = m.offset()
                          , on = {
                            x: w.x == N || p == Ne,
                            y: w.y == N || p == Ce
                        };
                        en[be] -= b[0],
                        en[ye] -= b[3];
                        var an = {
                            x: Ri.round(en[ye] - rn[ye] + nn),
                            y: Ri.round(en[be] - rn[be] + tn)
                        };
                        if (Yt && (Nt.n || Nt.i || (an.x = Ri.round(rn[ye] - en[ye] + nn)),
                        Nt.n && g && (an.x *= -1),
                        Nt.i && g && (an.x = Ri.round(rn[ye] - en[ye] + (vn.A - nn)))),
                        y.x != A || y.y != A || w.x == H || w.y == H || Yt) {
                            var un = m[0]
                              , fn = sn ? un.getBoundingClientRect() : {
                                width: un[Ai],
                                height: un[Ti]
                            }
                              , cn = {
                                w: fn[_e] + b[3] + b[1],
                                h: fn[Se] + b[0] + b[2]
                            }
                              , ln = function(n) {
                                var t = ci(n)
                                  , r = t.D
                                  , e = t.I
                                  , i = t.M
                                  , o = y[i] == (n && Yt ? A : "end")
                                  , a = "center" == y[i]
                                  , u = y[i] == C
                                  , f = w[i] == N
                                  , c = w[i] == H
                                  , l = se[r]
                                  , s = rn[e]
                                  , v = cn[r]
                                  , d = en[e]
                                  , h = a ? 2 : 1
                                  , p = d + v / 2
                                  , b = s + l / 2
                                  , m = v <= l && s <= d && d + v <= s + l;
                                f ? on[i] = !0 : on[i] || ((u || c) && (on[i] = !!c && m,
                                o = v < l ? b < p : p < b),
                                an[i] -= o || a ? (l / h - v / h) * (n && Yt && g ? -1 : 1) : 0)
                            };
                            ln(!0),
                            ln(!1)
                        }
                        on.y && delete an.y,
                        on.x && delete an.x,
                        n = an
                    }
                    k[Le] = q(!0, P(!0, n)),
                    k[Re] = q(!1, P(!1, n)),
                    v = k[Le] !== xi,
                    d = k[Re] !== xi,
                    (v || d) && (0 < t || z) ? z ? (t.complete = E,
                    ir.animate(k, t)) : (h = {
                        duration: t,
                        complete: E
                    },
                    lt(r) == gt || Ii.isPlainObject(r) ? (O[Le] = r[0] || r.x,
                    O[Re] = r[1] || r.y,
                    h.specialEasing = O) : h.easing = r,
                    ir.animate(k, h)) : (v && ir[Le](k[Le]),
                    d && ir[Re](k[Re]))
                }
                ,
                ce.scrollStop = function(n, t, r) {
                    return ir.stop(n, t, r),
                    ce
                }
                ,
                ce.getElements = function(n) {
                    var t = {
                        target: lr,
                        host: sr,
                        padding: dr,
                        viewport: hr,
                        content: pr,
                        scrollbarHorizontal: {
                            scrollbar: c[0],
                            track: s[0],
                            handle: v[0]
                        },
                        scrollbarVertical: {
                            scrollbar: d[0],
                            track: b[0],
                            handle: m[0]
                        },
                        scrollbarCorner: cr[0]
                    };
                    return lt(n) == xt ? ct(t, n) : t
                }
                ,
                ce.getState = function(n) {
                    var t = function(n) {
                        if (!Ii.isPlainObject(n))
                            return n;
                        var r = wi({}, n)
                          , t = function(n, t) {
                            r.hasOwnProperty(n) && (r[t] = r[n],
                            delete r[n])
                        };
                        return t("w", _e),
                        t("h", Se),
                        delete r.c,
                        r
                    }
                      , r = {
                        sleeping: t(Kt) || !1,
                        autoUpdate: t(!Jr),
                        widthAuto: t(xr),
                        heightAuto: t(_r),
                        padding: t(Tr),
                        overflowAmount: t(Rr),
                        hideOverflow: t(gr),
                        hasOverflow: t(yr),
                        contentScrollSize: t(mr),
                        viewportSize: t(se),
                        hostSize: t(br),
                        documentMixed: t(p)
                    };
                    return lt(n) == xt ? ct(r, n) : r
                }
                ,
                ce.ext = function(n) {
                    var t, r = "added removed on contract".split(" "), e = 0;
                    if (lt(n) == xt) {
                        if (Un.hasOwnProperty(n))
                            for (t = wi({}, Un[n]); e < r.length; e++)
                                delete t[r[e]]
                    } else
                        for (e in t = {},
                        Un)
                            t[e] = wi({}, ce.ext(e));
                    return t
                }
                ,
                ce.addExt = function(n, t) {
                    var r, e, i, o, a = pt[mt].extension(n), u = !0;
                    if (a) {
                        if (Un.hasOwnProperty(n))
                            return ce.ext(n);
                        if ((r = a.extensionFactory.call(ce, wi({}, a.defaultOptions), Ii, Li)) && (lt(i = r.contract) == yt && (u = lt(o = i(pt)) == _t ? o : u),
                        u))
                            return lt(e = (Un[n] = r).added) == yt && e(t),
                            ce.ext(n)
                    } else
                        console.warn('A extension with the name "' + n + "\" isn't registered.")
                }
                ,
                ce.removeExt = function(n) {
                    var t, r = Un[n];
                    return !!r && (delete Un[n],
                    lt(t = r.removed) == yt && t(),
                    !0)
                }
                ,
                function dt(n, t, r) {
                    return i = kt.defaultOptions,
                    Lt = kt.nativeScrollbarStyling,
                    Dt = wi({}, kt.nativeScrollbarSize),
                    At = wi({}, kt.nativeScrollbarIsOverlaid),
                    Ct = wi({}, kt.overlayScrollbarDummySize),
                    Nt = wi({}, kt.rtlScrollBehavior),
                    nt(wi({}, i, ht.T(t, ht.S, !0))),
                    At.x && At.x && !Gt.nativeScrollbarsOverlaid.initialize ? (li("onInitializationWithdrawn"),
                    !1) : (Rt = kt.cssCalc,
                    D = kt.msie,
                    Ht = kt.autoUpdateRecommended,
                    I = kt.supportTransition,
                    sn = kt.supportTransform,
                    h = kt.supportPassiveEvents,
                    A = kt.supportResizeObserver,
                    l = kt.supportMutationObserver,
                    It = kt.restrictedMeasuring,
                    M = Ii(n.ownerDocument),
                    C = M[0],
                    a = Ii(C.defaultView || C.parentWindow),
                    w = a[0],
                    f = vt(M, "html"),
                    W = vt(f, "body"),
                    Zt = Ii(n),
                    lr = Zt[0],
                    jt = Zt.is("textarea"),
                    Ft = Zt.is("body"),
                    p = C !== bt,
                    Ft && ((e = {}).l = Ri.max(Zt[Le](), f[Le](), a[Le]()),
                    e.t = Ri.max(Zt[Re](), f[Re](), a[Re]())),
                    tt(),
                    rt(),
                    et(),
                    it(!0),
                    it(!1),
                    ot(),
                    function c() {
                        var t = w.top !== w
                          , e = {}
                          , i = {}
                          , o = {};
                        function r(n) {
                            if (u(n)) {
                                var t = f(n)
                                  , r = {};
                                (ae || oe) && (r[_e] = i.w + (t.x - e.x) * o.x),
                                (ue || oe) && (r[Se] = i.h + (t.y - e.y) * o.y),
                                nr.css(r),
                                Li.stpP(n)
                            } else
                                a(n)
                        }
                        function a(n) {
                            var t = n !== xi;
                            M.off(on, Jn).off(Z, r).off(Q, a),
                            gi(W, Fn),
                            cr.releaseCapture && cr.releaseCapture(),
                            t && (V && Qe(),
                            ce.update(ke)),
                            V = !1
                        }
                        function u(n) {
                            var t = (n.originalEvent || n).touches !== xi;
                            return !Kt && !Wt && (1 === Li.mBtn(n) || t)
                        }
                        function f(n) {
                            return D && t ? {
                                x: n.screenX,
                                y: n.screenY
                            } : Li.page(n)
                        }
                        fe = function(n) {
                            u(n) && (Jr && (V = !0,
                            Ze()),
                            e = f(n),
                            i.w = sr[Ai] - (Et ? 0 : Pt),
                            i.h = sr[Ti] - (Et ? 0 : qt),
                            o = at(),
                            M.on(on, Jn).on(Z, r).on(Q, a),
                            yi(W, Fn),
                            cr.setCapture && cr.setCapture(),
                            Li.prvD(n),
                            Li.stpP(n))
                        }
                    }(),
                    Bn(),
                    Ft && (ir[Le](e.l)[Re](e.t),
                    bt.activeElement == n && hr.focus && (ir.attr("tabindex", "-1"),
                    hr.focus(),
                    ir.one(De, function() {
                        ir.removeAttr("tabindex")
                    }))),
                    Je(rr, Xn),
                    Xn(),
                    ce.update(ke),
                    Mt = !0,
                    li("onInitialized"),
                    Ii.each(En, function(n, t) {
                        li(t.n, t.a)
                    }),
                    En = [],
                    lt(r) == xt && (r = [r]),
                    Li.isA(r) ? Ii.each(r, function(n, t) {
                        ce.addExt(t)
                    }) : Ii.isPlainObject(r) && Ii.each(r, function(n, t) {
                        ce.addExt(n, t)
                    }),
                    setTimeout(function() {
                        I && !Wt && yi(nr, mn)
                    }, 333),
                    Mt);
                    var e
                }(e, n, t))
                    return Mi(e, ce),
                    ce;
                ce = xi
            }
            function qn(n, t, r) {
                for (var e = t.split(He), i = 0; i < e.length; i++)
                    n[0].addEventListener(e[i], r, {
                        passive: !0
                    })
            }
            function Vn(n, t, r) {
                for (var e = t.split(He), i = 0; i < e.length; i++)
                    n[0].removeEventListener(e[i], r, {
                        passive: !0
                    })
            }
            function Je(i, n) {
                var o = 3333333
                  , t = Li.rO()
                  , r = "animationstart mozAnimationStart webkitAnimationStart MSAnimationStart"
                  , e = "childNodes"
                  , a = function() {
                    i[Re](o)[Le](Yt ? Nt.n ? -o : Nt.i ? 0 : o : o),
                    n()
                };
                if (A) {
                    var u = i.append(hi(Tn + " observed")).contents()[0];
                    (u[un] = new t(a)).observe(u)
                } else if (9 < D || !Ht) {
                    i.prepend(hi(Tn, hi({
                        className: kn,
                        dir: "ltr"
                    }, hi(kn, hi(On)) + hi(kn, hi({
                        className: On,
                        style: "width: 200%; height: 200%"
                    })))));
                    var f, c, l, s, v = i[0][e][0][e][0], d = Ii(v[e][1]), h = Ii(v[e][0]), p = Ii(h[0][e][0]), b = v[Ai], m = v[Ti], w = kt.nativeScrollbarSize, y = function() {
                        h[Le](o)[Re](o),
                        d[Le](o)[Re](o)
                    }, g = function() {
                        c = 0,
                        f && (b = l,
                        m = s,
                        a())
                    }, x = function(n) {
                        return l = v[Ai],
                        s = v[Ti],
                        f = l != b || s != m,
                        n && f && !c ? (Li.cAF()(c),
                        c = Li.rAF()(g)) : n || g(),
                        y(),
                        n && (Li.prvD(n),
                        Li.stpP(n)),
                        !1
                    }, _ = {}, S = {};
                    si(S, Te, [-2 * (w.y + 1), -2 * w.x, -2 * w.y, -2 * (w.x + 1)]),
                    Ii(v).css(S),
                    h.on(Oe, x),
                    d.on(Oe, x),
                    i.on(r, function() {
                        x(!1)
                    }),
                    _[_e] = o,
                    _[Se] = o,
                    p.css(_),
                    y()
                } else {
                    var z = C.attachEvent
                      , T = D !== xi;
                    if (z)
                        i.prepend(hi(Tn)),
                        vt(i, Y + Tn)[0].attachEvent("onresize", a);
                    else {
                        var k = C.createElement(wt);
                        k.setAttribute("tabindex", "-1"),
                        k.setAttribute(zt, Tn),
                        k.onload = function() {
                            var n = this.contentDocument.defaultView;
                            n.addEventListener("resize", a),
                            n.document.documentElement.style.display = "none"
                        }
                        ,
                        k.type = "text/html",
                        T && i.prepend(k),
                        k.data = "about:blank",
                        T || i.prepend(k),
                        i.on(r, a)
                    }
                }
                if (i[0] === N) {
                    var O = function() {
                        var n = nr.css("direction")
                          , t = {}
                          , r = 0
                          , e = !1;
                        return n !== H && (r = "ltr" === n ? (t[ye] = 0,
                        t[me] = ke,
                        o) : (t[ye] = ke,
                        t[me] = 0,
                        Nt.n ? -o : Nt.i ? 0 : o),
                        rr.children().eq(0).css(t),
                        i[Le](r)[Re](o),
                        H = n,
                        e = !0),
                        e
                    };
                    O(),
                    i.on(Oe, function(n) {
                        return O() && ei(),
                        Li.prvD(n),
                        Li.stpP(n),
                        !1
                    })
                }
            }
            function $n(n) {
                if (A) {
                    var t = n.contents()[0];
                    t[un].disconnect(),
                    delete t[un]
                } else
                    st(n.children(Y + Tn).eq(0))
            }
            function Bn() {
                if (l) {
                    var e, i, r, o, a, u, n = Li.mO(), f = Li.now();
                    R = new n(function(n) {
                        if (Mt && !Kt) {
                            var t, r = !1;
                            Ii.each(n, function() {
                                if (e = (t = this).target,
                                i = t.attributeName,
                                r = i === zt ? Zn(t.oldValue, e.className) : i !== _i || t.oldValue !== e[_i].cssText)
                                    return !1
                            }),
                            r && ce.update(ke)
                        }
                    }
                    ),
                    j = new n(function(n) {
                        if (Mt && !Kt) {
                            var t = !1;
                            Ii.each(n, function() {
                                return !(t = function o(n) {
                                    var t = n.attributeName
                                      , r = n.target
                                      , e = n.type
                                      , i = "closest";
                                    if (r === pr)
                                        return null === t;
                                    if ("attributes" === e && (t === zt || t === _i) && !jt) {
                                        if (t === zt && Ii(r).hasClass(ln))
                                            return Zn(n.oldValue, r.getAttribute(zt));
                                        if (typeof r[i] != yt)
                                            return !0;
                                        if (null !== r[i](Y + Tn) || null !== r[i](Y + Cn) || null !== r[i](Y + Mn))
                                            return !1
                                    }
                                    return !0
                                }(this))
                            }),
                            t && (o = Li.now(),
                            a = _r || xr,
                            u = function() {
                                Wt || (f = o,
                                jt && ri(),
                                a ? ei() : ce.update(ke))
                            }
                            ,
                            clearTimeout(r),
                            11 < o - f || !a ? u() : r = setTimeout(u, 11))
                        }
                    }
                    )
                }
            }
            function Qe() {
                l && !Jr && (R.observe(sr, {
                    attributes: !0,
                    attributeOldValue: !0,
                    attributeFilter: [Tt, zt, _i]
                }),
                j.observe(jt ? lr : pr, {
                    attributes: !0,
                    attributeOldValue: !0,
                    subtree: !jt,
                    childList: !jt,
                    characterData: !jt,
                    attributeFilter: jt ? ["wrap", "cols", "rows"] : [Tt, zt, _i]
                }),
                Jr = !0)
            }
            function Ze() {
                l && Jr && (R.disconnect(),
                j.disconnect(),
                Jr = !1)
            }
            function Xn() {
                if (!Kt) {
                    var n, t = {
                        w: N[Ni],
                        h: N[Oi]
                    };
                    Mt ? (n = bi(t, O),
                    O = t,
                    n && ei(!0, !1)) : O = t
                }
            }
            function Yn() {
                ee && oi(!0)
            }
            function Kn() {
                ee && !W.hasClass(Fn) && oi(!1)
            }
            function Gn() {
                re && (oi(!0),
                clearTimeout(U),
                U = setTimeout(function() {
                    re && !Wt && oi(!1)
                }, 100))
            }
            function ni(n) {
                var e = n ? Vn : qn
                  , i = n ? "off" : "on"
                  , t = function(n, t, r) {
                    h ? e(n, t, r) : n[i](t, r)
                };
                re && !n ? t(nr, Z, Gn) : (n && t(nr, Z, Gn),
                t(nr, nn, Yn),
                t(nr, tn, Kn)),
                Mt || n || nr.one("mouseover", Yn)
            }
            function Jn(n) {
                return Li.prvD(n),
                !1
            }
            function Qn() {
                ei(!1, !0)
            }
            function ti() {
                var n = {};
                return Ft && ar && (n.w = vi(ar.css(ge + _e)),
                n.h = vi(ar.css(ge + Se)),
                n.c = bi(n, Kr),
                n.f = !0),
                (Kr = n).c || !1
            }
            function Zn(n, t) {
                var r = t !== xi && null !== t ? t.split(He) : Te
                  , e = n !== xi && null !== n ? n.split(He) : Te;
                if (r === Te && e === Te)
                    return !1;
                var i, o, a, u, f, c = function h(n, t) {
                    var r, e, i = [], o = [];
                    for (r = 0; r < n.length; r++)
                        i[n[r]] = !0;
                    for (r = 0; r < t.length; r++)
                        i[t[r]] ? delete i[t[r]] : i[t[r]] = !0;
                    for (e in i)
                        o.push(e);
                    return o
                }(e, r), l = !1, s = Br !== xi && null !== Br ? Br.split(He) : [Te], v = $r !== xi && null !== $r ? $r.split(He) : [Te], d = Ii.inArray(Ye, c);
                for (-1 < d && c.splice(d, 1),
                o = 0; o < c.length; o++)
                    if (0 !== (i = c[o]).indexOf(ln)) {
                        for (f = u = !0,
                        a = 0; a < s.length; a++)
                            if (i === s[a]) {
                                u = !1;
                                break
                            }
                        for (a = 0; a < v.length; a++)
                            if (i === v[a]) {
                                f = !1;
                                break
                            }
                        if (u && f) {
                            l = !0;
                            break
                        }
                    }
                return l
            }
            function ri() {
                if (!Kt) {
                    var n, t, r, e, i = !Wr, o = se.w, a = se.h, u = {}, f = xr || i;
                    return u[ge + _e] = Te,
                    u[ge + Se] = Te,
                    u[_e] = ke,
                    Zt.css(u),
                    n = lr[Ai],
                    t = f ? Ri.max(n, lr[Ni] - 1) : 1,
                    u[_e] = xr ? ke : Ae,
                    u[ge + _e] = Ae,
                    u[Se] = ke,
                    Zt.css(u),
                    r = lr[Ti],
                    e = Ri.max(r, lr[Oi] - 1),
                    u[_e] = t,
                    u[Se] = e,
                    fr.css(u),
                    u[ge + _e] = o,
                    u[ge + Se] = a,
                    Zt.css(u),
                    {
                        W: n,
                        j: r,
                        F: t,
                        U: e
                    }
                }
            }
            function ei(n, t, r, e) {
                var i = Li.now()
                  , o = 0 < Ge && Mt && i - Jt < Ge && !_r && !xr && !e
                  , a = nr.is(":hidden")
                  , u = pi(a, Gr, r);
                if (Gr = a,
                clearTimeout(Qt),
                o && (Ke.h = Ke.h || n,
                Ke.c = Ke.c || t,
                Ke.f = Ke.f || r,
                Qt = setTimeout(ei, Ge)),
                !(Wt || o || Kt || Mt && !r && a || "inline" === nr.css("display"))) {
                    Jt = i,
                    n = n || Ke.h,
                    t = t || Ke.c,
                    r = r || Ke.f,
                    Ke = {},
                    n = n !== xi && n,
                    t = t !== xi && t,
                    r = r !== xi && r,
                    !Lt || At.x && At.y ? Dt = wi({}, kt.nativeScrollbarSize) : (Dt.x = 0,
                    Dt.y = 0),
                    ve = {
                        x: 3 * (Dt.x + (At.x ? 0 : 3)),
                        y: 3 * (Dt.y + (At.y ? 0 : 3))
                    };
                    var f = {
                        x: ir[Le](),
                        y: ir[Re]()
                    }
                      , c = Gt.scrollbars
                      , l = Gt.textarea
                      , s = c.visibility
                      , v = pi(s, Fr, r)
                      , d = c.autoHide
                      , h = pi(d, Er, r)
                      , p = c.clickScrolling
                      , b = pi(p, Ur, r)
                      , m = c.dragScrolling
                      , w = pi(m, Pr, r)
                      , y = Gt.className
                      , g = pi(y, $r, r)
                      , x = Gt.resize
                      , _ = pi(x, qr, r) && !Ft
                      , S = !!jt && "off" !== Zt.attr("wrap")
                      , z = pi(S, Wr, r)
                      , T = Gt.paddingAbsolute
                      , k = pi(T, Cr, r)
                      , O = Gt.clipAlways
                      , A = pi(O, Nr, r)
                      , C = Gt.sizeAutoCapable && !Ft
                      , N = pi(C, Mr, r)
                      , H = Gt.nativeScrollbarsOverlaid.showNativeScrollbars
                      , L = pi(H, Dr)
                      , R = Gt.autoUpdate
                      , D = pi(R, Ir)
                      , I = Gt.overflowBehavior
                      , M = bi(I, Lr, Ce, Ne, r)
                      , W = l.dynWidth
                      , j = pi(Yr, W)
                      , F = l.dynHeight
                      , E = pi(Xr, F);
                    if (ne = "n" === d,
                    te = "s" === d,
                    re = "m" === d,
                    ee = "l" === d,
                    Zr = c.autoHideDelay,
                    Br = $r,
                    ie = "n" === x,
                    oe = "b" === x,
                    ae = "h" === x,
                    ue = "v" === x,
                    Vr = Gt.normalizeRTL,
                    H = H && At.x && At.y,
                    Fr = s,
                    Er = d,
                    Ur = p,
                    Pr = m,
                    $r = y,
                    qr = x,
                    Wr = S,
                    Cr = T,
                    Nr = O,
                    Mr = C,
                    Dr = H,
                    Ir = R,
                    Lr = wi({}, I),
                    Yr = W,
                    Xr = F,
                    yr = yr || {
                        x: !1,
                        y: !1
                    },
                    g && (gi(nr, Br + He + Ye),
                    yi(nr, y !== xi && null !== y && 0 < y.length ? y : Ye)),
                    D && (!0 === R ? (Ze(),
                    Ot.add(ce)) : null === R && Ht ? (Ze(),
                    Ot.add(ce)) : (Ot.remove(ce),
                    Qe())),
                    N)
                        if (C)
                            if (ur ? ur.show() : (ur = Ii(hi(Pe)),
                            er.before(ur)),
                            Ut)
                                tr.show();
                            else {
                                tr = Ii(hi(qe)),
                                vr = tr[0],
                                ur.before(tr);
                                var U = {
                                    w: -1,
                                    h: -1
                                };
                                Je(tr, function() {
                                    var n = {
                                        w: vr[Ai],
                                        h: vr[Ti]
                                    };
                                    bi(n, U) && (Mt && _r && 0 < n.h || xr && 0 < n.w ? ei() : (Mt && !_r && 0 === n.h || !xr && 0 === n.w) && ei()),
                                    U = n
                                }),
                                Ut = !0,
                                null !== Rt && tr.css(Se, Rt + "(100% + 1px)")
                            }
                        else
                            Ut && tr.hide(),
                            ur && ur.hide();
                    r && (rr.find("*").trigger(Oe),
                    Ut && tr.find("*").trigger(Oe));
                    var P, q = nr.css("direction"), V = pi(q, Ar, r), $ = nr.css("box-sizing"), B = pi($, zr, r), X = {
                        c: r,
                        t: vi(nr.css(he + be)),
                        r: vi(nr.css(he + me)),
                        b: vi(nr.css(he + we)),
                        l: vi(nr.css(he + ye))
                    };
                    try {
                        P = Ut ? vr.getBoundingClientRect() : null
                    } catch (zt) {
                        return
                    }
                    Et = "border-box" === $;
                    var Y = (Yt = "rtl" === q) ? ye : me
                      , K = Yt ? me : ye
                      , G = !1
                      , J = !(!Ut || "none" === nr.css(ze)) && (0 === Ri.round(P.right - P.left) && (!!T || 0 < sr[Ci] - Pt));
                    if (C && !J) {
                        var Q = sr[Ai]
                          , Z = ur.css(_e);
                        ur.css(_e, ke);
                        var nn = sr[Ai];
                        ur.css(_e, Z),
                        (G = Q !== nn) || (ur.css(_e, Q + 1),
                        nn = sr[Ai],
                        ur.css(_e, Z),
                        G = Q !== nn)
                    }
                    var tn = (J || G) && C && !a
                      , rn = pi(tn, xr, r)
                      , en = !tn && xr
                      , on = !(!Ut || !C || a) && 0 === Ri.round(P.bottom - P.top)
                      , an = pi(on, _r, r)
                      , un = !on && _r
                      , fn = "-" + _e
                      , cn = tn && Et || !Et
                      , ln = on && Et || !Et
                      , sn = {
                        c: r,
                        t: ln ? vi(nr.css(pe + be + fn), !0) : 0,
                        r: cn ? vi(nr.css(pe + me + fn), !0) : 0,
                        b: ln ? vi(nr.css(pe + we + fn), !0) : 0,
                        l: cn ? vi(nr.css(pe + ye + fn), !0) : 0
                    }
                      , vn = {
                        c: r,
                        t: vi(nr.css(de + be)),
                        r: vi(nr.css(de + me)),
                        b: vi(nr.css(de + we)),
                        l: vi(nr.css(de + ye))
                    }
                      , dn = {
                        h: String(nr.css(xe + Se)),
                        w: String(nr.css(xe + _e))
                    }
                      , hn = {}
                      , pn = {}
                      , bn = function() {
                        return {
                            w: sr[Ci],
                            h: sr[ki]
                        }
                    }
                      , mn = function() {
                        return {
                            w: dr[Ai] + Ri.max(0, pr[Ci] - pr[Ni]),
                            h: dr[Ti] + Ri.max(0, pr[ki] - pr[Oi])
                        }
                    }
                      , wn = Pt = X.l + X.r
                      , yn = qt = X.t + X.b;
                    if (wn *= yn *= T ? 1 : 0,
                    X.c = mi(X, Tr),
                    Vt = sn.l + sn.r,
                    $t = sn.t + sn.b,
                    sn.c = mi(sn, kr),
                    Bt = vn.l + vn.r,
                    Xt = vn.t + vn.b,
                    vn.c = mi(vn, Or),
                    dn.ih = vi(dn.h),
                    dn.iw = vi(dn.w),
                    dn.ch = -1 < dn.h.indexOf("px"),
                    dn.cw = -1 < dn.w.indexOf("px"),
                    dn.c = bi(dn, Sr, r),
                    Ar = q,
                    zr = $,
                    xr = tn,
                    _r = on,
                    Tr = X,
                    kr = sn,
                    Or = vn,
                    Sr = dn,
                    V && Ut && tr.css(ze, K),
                    X.c || V || k || rn || an || B || N) {
                        var gn = {}
                          , xn = {};
                        si(pn, de, [-X.t, -X.r, -X.b, -X.l]),
                        T ? (si(gn, Te, [X.t, X.r, X.b, X.l]),
                        si(jt ? xn : hn, he)) : (si(gn, Te),
                        si(jt ? xn : hn, he, [X.t, X.r, X.b, X.l])),
                        er.css(gn),
                        Zt.css(xn)
                    }
                    se = mn();
                    var _n = !!jt && ri();
                    if (on && (an || k || B || dn.c || X.c || sn.c) ? (hn[xe + Se] = dn.ch ? dn.ih - yn + (Et ? -$t : qt) : Te,
                    hn[Se] = ke) : (an || k) && (hn[xe + Se] = Te,
                    hn[Se] = Ae),
                    tn && (rn || k || B || dn.c || X.c || sn.c || V) ? (hn[xe + _e] = dn.cw ? dn.iw - wn + (Et ? -Vt : Pt) + (At.y ? Ct.y : 0) : Te,
                    hn[_e] = ke,
                    pn[xe + _e] = Ae) : (rn || k) && (hn[xe + _e] = Te,
                    hn[_e] = Ae,
                    hn[ze] = Te,
                    pn[xe + _e] = Te),
                    tn ? (dn.cw || (hn[xe + _e] = Te),
                    pn[_e] = jt && W ? _n.F : ke,
                    hn[_e] = ke,
                    hn[ze] = K) : pn[_e] = Te,
                    pn[Se] = on ? (dn.ch || (hn[xe + Se] = Te),
                    jt ? F ? _n.U : ke : pr[ki]) : Te,
                    C && ur.css(pn),
                    or.css(hn),
                    hn = {},
                    pn = {},
                    n || t || V || B || k || rn || tn || an || on || dn.c || L || M || A || _ || v || h || w || b || j || E || z || r) {
                        var Sn = "overflow"
                          , zn = Sn + "-x"
                          , Tn = Sn + "-y"
                          , kn = It ? At.x || At.y || se.w < ve.y || se.h < ve.x || on || u : on
                          , On = {}
                          , An = yr.y && gr.ys && !H ? At.y ? ir.css(Y) : -Dt.y : 0
                          , Cn = yr.x && gr.xs && !H ? At.x ? ir.css(we) : -Dt.x : 0;
                        si(On, Te),
                        ir.css(On),
                        kn && or.css(Sn, "hidden");
                        var Nn = di()
                          , Hn = It && !kn ? hr : Nn
                          , Ln = {
                            w: jt && _n ? W ? _n.F : _n.W : Nn[Ci],
                            h: jt && _n ? F ? _n.U : _n.j : Nn[ki]
                        }
                          , Rn = Ri.max(Nn[Ni], Hn[Ni])
                          , Dn = Ri.max(Nn[Oi], Hn[Oi]);
                        On[we] = un ? Te : Cn,
                        On[Y] = en ? Te : An,
                        ir.css(On),
                        se = mn();
                        var In = bn()
                          , Mn = {
                            w: Ri.max((tn ? Ln.w : Rn) + wn, In.w),
                            h: Ri.max((on ? Ln.h : Dn) + yn, In.h)
                        };
                        if (Mn.c = bi(Mn, Hr, r),
                        Hr = Mn,
                        C) {
                            (Mn.c || on || tn) && (pn[_e] = Mn.w,
                            pn[Se] = Mn.h,
                            jt || (Ln = {
                                w: Nn[Ci],
                                h: Nn[ki]
                            }));
                            var Wn = {}
                              , jn = function(n) {
                                var t = ci(n)
                                  , r = t.D
                                  , e = t.P
                                  , i = n ? tn : on
                                  , o = n ? Vt : $t
                                  , a = n ? Pt : qt
                                  , u = n ? Bt : Xt
                                  , f = pn[e] + (Et ? o : -a);
                                (!i || !i && sn.c) && (pn[e] = In[r] - (Et ? 0 : a + o) - 1 - u),
                                i && dn["c" + r] && dn["i" + r] === f && (pn[e] = f + (Et ? 0 : a) + 1),
                                i && Ln[r] < se[r] && (!n || jt && !S) && (jt && (Wn[e] = vi(fr.css(e)) - 1),
                                pn[e] -= 1),
                                0 < Ln[r] && (pn[e] = Ri.max(1, pn[e]))
                            };
                            jn(!0),
                            jn(!1),
                            jt && fr.css(Wn),
                            ur.css(pn)
                        }
                        tn && (hn[_e] = Ae),
                        !tn || Et || Jr || (hn[ze] = "none"),
                        or.css(hn),
                        hn = {};
                        var Fn = {
                            w: Ri.max(Nn[Ni], Hn[Ni]),
                            h: Ri.max(Nn[Oi], Hn[Oi])
                        };
                        Fn.c = t = bi(Fn, mr, r),
                        mr = Fn,
                        kn && or.css(Sn, Te),
                        se = mn(),
                        n = bi(In = bn(), br),
                        br = In;
                        var En = jt && (0 === se.w || 0 === se.h)
                          , Un = Rr
                          , Pn = {}
                          , qn = {}
                          , Vn = {}
                          , $n = {}
                          , Bn = {}
                          , Xn = {}
                          , Yn = {}
                          , Kn = dr.getBoundingClientRect()
                          , Gn = function(n) {
                            var t = ci(n)
                              , r = ci(!n).M
                              , e = t.M
                              , i = t.D
                              , o = t.P
                              , a = Oe + t.q + "Max"
                              , u = Kn[o] ? Ri.abs(Kn[o] - se[i]) : 0;
                            Pn[e] = "v-s" === I[e],
                            qn[e] = "v-h" === I[e],
                            Vn[e] = "s" === I[e],
                            $n[e] = Ri.max(0, Ri.round(100 * (Fn[i] - se[i])) / 100),
                            $n[e] *= En || 0 === hr[a] && 0 < u && u < 1 ? 0 : 1,
                            Bn[e] = 0 < $n[e],
                            Xn[e] = Pn[e] || qn[e] ? Bn[r] && !Pn[r] && !qn[r] : Bn[e],
                            Xn[e + "s"] = !!Xn[e] && (Vn[e] || Pn[e]),
                            Yn[e] = Bn[e] && Xn[e + "s"]
                        };
                        if (Gn(!0),
                        Gn(!1),
                        $n.c = bi($n, Rr, Ce, Ne, r),
                        Rr = $n,
                        Bn.c = bi(Bn, yr, Ce, Ne, r),
                        yr = Bn,
                        Xn.c = bi(Xn, gr, Ce, Ne, r),
                        gr = Xn,
                        At.x || At.y) {
                            var Jn, Qn = {}, Zn = {}, nt = r;
                            (Bn.x || Bn.y) && (Zn.w = At.y && Bn.y ? Fn.w + Ct.y : Te,
                            Zn.h = At.x && Bn.x ? Fn.h + Ct.x : Te,
                            nt = pi(Zn, wr, r),
                            wr = Zn),
                            (Bn.c || Xn.c || Fn.c || V || rn || an || tn || on || L) && (hn[de + K] = hn[pe + K] = Te,
                            (Jn = function(n) {
                                var t = ci(n)
                                  , r = ci(!n)
                                  , e = t.M
                                  , i = n ? we : Y
                                  , o = n ? on : tn;
                                At[e] && Bn[e] && Xn[e + "s"] ? (hn[de + i] = o ? H ? Te : Ct[e] : Te,
                                hn[pe + i] = n && o || H ? Te : Ct[e] + "px solid transparent") : (Zn[r.D] = hn[de + i] = hn[pe + i] = Te,
                                nt = !0)
                            }
                            )(!0),
                            Jn(!1)),
                            H && (Zn.w = Zn.h = Te,
                            nt = !0),
                            nt && (Qn[_e] = Xn.y ? Zn.w : Te,
                            Qn[Se] = Xn.x ? Zn.h : Te,
                            ar || (ar = Ii(hi(Ue)),
                            ir.prepend(ar)),
                            ar.css(Qn)),
                            or.css(hn)
                        }
                        var tt, rt = {};
                        gn = {};
                        if ((n || Bn.c || Xn.c || Fn.c || M || B || L || V || A || an) && (rt[K] = Te,
                        (tt = function(n) {
                            var t = ci(n)
                              , r = ci(!n)
                              , e = t.M
                              , i = t.V
                              , o = n ? we : Y
                              , a = function() {
                                rt[o] = Te,
                                le[r.D] = 0
                            };
                            Bn[e] && Xn[e + "s"] ? (rt[Sn + i] = Oe,
                            H ? a() : (rt[o] = -(At[e] ? Ct[e] : Dt[e]),
                            le[r.D] = At[e] ? Ct[r.M] : 0)) : (rt[Sn + i] = Te,
                            a())
                        }
                        )(!0),
                        tt(!1),
                        (se.h < ve.x || se.w < ve.y) && (Bn.x && Xn.x && !At.x || Bn.y && Xn.y && !At.y) ? (rt[he + be] = ve.x,
                        rt[de + be] = -ve.x,
                        rt[he + K] = ve.y,
                        rt[de + K] = -ve.y) : rt[he + be] = rt[de + be] = rt[he + K] = rt[de + K] = Te,
                        rt[he + Y] = rt[de + Y] = Te,
                        Bn.x && Xn.x || Bn.y && Xn.y || En ? jt && En && (gn[zn] = gn[Tn] = "hidden") : (!O || qn.x || Pn.x || qn.y || Pn.y) && (jt && (gn[zn] = gn[Tn] = Te),
                        rt[zn] = rt[Tn] = "visible"),
                        er.css(gn),
                        ir.css(rt),
                        rt = {},
                        (Bn.c || B || rn || an) && (!At.x || !At.y))) {
                            var et = pr[_i];
                            et.webkitTransform = "scale(1)",
                            et.display = "run-in",
                            pr[Ti],
                            et.display = Te,
                            et.webkitTransform = Te
                        }
                        if (hn = {},
                        V || rn || an)
                            if (Yt && tn) {
                                var it = or.css(ze)
                                  , ot = Ri.round(or.css(ze, Te).css(ye, Te).position().left);
                                or.css(ze, it),
                                ot !== Ri.round(or.position().left) && (hn[ye] = ot)
                            } else
                                hn[ye] = Te;
                        if (or.css(hn),
                        jt && t) {
                            var at = function Tt() {
                                var n = lr.selectionStart;
                                if (n === xi)
                                    return;
                                var t, r, e = "length", i = Zt.val(), o = i[e], a = i.split("\n"), u = a[e], f = i.substr(0, n).split("\n"), c = 0, l = 0, s = f[e], v = f[f[e] - 1][e];
                                for (r = 0; r < a[e]; r++)
                                    t = a[r][e],
                                    l < t && (c = r + 1,
                                    l = t);
                                return {
                                    $: s,
                                    B: v,
                                    X: u,
                                    Y: l,
                                    K: c,
                                    G: n,
                                    J: o
                                }
                            }();
                            if (at) {
                                var ut = jr === xi || at.X !== jr.X
                                  , ft = at.$
                                  , ct = at.B
                                  , lt = at.K
                                  , st = at.X
                                  , vt = at.Y
                                  , dt = at.G
                                  , ht = at.J <= dt && Qr
                                  , pt = {
                                    x: S || ct !== vt || ft !== lt ? -1 : Rr.x,
                                    y: (S ? ht || ut && Un !== xi && f.y === Un.y : (ht || ut) && ft === st) ? Rr.y : -1
                                };
                                f.x = -1 < pt.x ? Yt && Vr && Nt.i ? 0 : pt.x : f.x,
                                f.y = -1 < pt.y ? pt.y : f.y
                            }
                            jr = at
                        }
                        Yt && Nt.i && At.y && Bn.x && Vr && (f.x += le.w || 0),
                        tn && nr[Le](0),
                        on && nr[Re](0),
                        ir[Le](f.x)[Re](f.y);
                        var bt = "v" === s
                          , mt = "h" === s
                          , wt = "a" === s
                          , yt = Li.bind(ii, 0, !0, !0, Yn.x)
                          , gt = Li.bind(ii, 0, !1, !0, Yn.y)
                          , xt = Li.bind(ii, 0, !0, !1, Yn.x)
                          , _t = Li.bind(ii, 0, !1, !1, Yn.y);
                        if (Xn.x || Xn.y ? yi(nr, je) : gi(nr, je),
                        Xn.x ? yi(nr, Fe) : gi(nr, Fe),
                        Xn.y ? yi(nr, Ee) : gi(nr, Ee),
                        V && (Yt ? yi(nr, Ie) : gi(nr, Ie)),
                        Ft && yi(nr, Me),
                        _) {
                            var St = function() {
                                cr.off(De, fe)
                            };
                            gi(cr, [Me, Ve, $e, Be, Xe].join(He)),
                            ie ? (yi(nr, Me),
                            St()) : (yi(cr, Ve),
                            oe ? yi(cr, $e) : ae ? yi(cr, Be) : ue && yi(cr, Xe),
                            St(),
                            cr.on(De, fe))
                        }
                        (v || M || Xn.c || Bn.c || L) && (H ? L && (gi(nr, We),
                        H && (xt(),
                        _t())) : wt ? (Yn.x ? yt() : xt(),
                        Yn.y ? gt() : _t()) : bt ? (yt(),
                        gt()) : mt && (xt(),
                        _t())),
                        (h || L) && (ee || re ? (ni(!0),
                        ni()) : ni(!0),
                        ne ? oi(!0) : oi(!1, !0)),
                        (n || $n.c || an || rn || _ || B || k || L || V) && (ai(!0),
                        ui(!0),
                        ai(!1),
                        ui(!1)),
                        b && fi(!0, p),
                        w && fi(!1, m),
                        V && li("onDirectionChanged", {
                            isRTL: Yt,
                            dir: q
                        }),
                        n && li("onHostSizeChanged", {
                            width: br.w,
                            height: br.h
                        }),
                        t && li("onContentSizeChanged", {
                            width: mr.w,
                            height: mr.h
                        }),
                        (Bn.c || Xn.c) && li("onOverflowChanged", {
                            x: Bn.x,
                            y: Bn.y,
                            xScrollable: Xn.xs,
                            yScrollable: Xn.ys,
                            clipped: Xn.x || Xn.y
                        }),
                        $n.c && li("onOverflowAmountChanged", {
                            x: $n.x,
                            y: $n.y
                        })
                    }
                    Ft && (yr.c || Kr.c) && (Kr.f || ti(),
                    At.y && yr.x && or.css(ge + _e, Kr.w + Ct.y),
                    At.x && yr.y && or.css(ge + Se, Kr.h + Ct.x),
                    Kr.c = !1),
                    li("onUpdated", {
                        forced: r
                    })
                }
            }
            function nt(n) {
                o = wi({}, o, ht.T(n, ht.S, !0)),
                Gt = wi({}, Gt, ht.T(n, ht.S, !1, !0))
            }
            function tt(e) {
                var n = Gt.textarea.inheritedAttrs
                  , i = {}
                  , t = function() {
                    var r = e ? Zt : nr;
                    Ii.each(i, function(n, t) {
                        lt(t) == xt && (n == zt ? r.addClass(t) : r.attr(n, t))
                    })
                }
                  , r = [ln, hn, Me, Ie, pn, bn, mn, We, je, Fe, Ee, Ye, wn, An, $r].join(He);
                if (lt(n = lt(n) == xt ? n.split(" ") : n) == gt && Ii.each(n, function(n, t) {
                    lt(t) == xt && (i[t] = e ? nr.attr(t) : Zt.attr(t))
                }),
                e)
                    or.contents().unwrap().unwrap().unwrap(),
                    gi(nr, r),
                    jt ? (Zt.removeAttr(_i),
                    u && t(),
                    gi(Zt, r),
                    st(fr),
                    u ? (Zt.unwrap(),
                    st(nr)) : yi(nr, hn)) : gi(Zt, ln),
                    Ft && gi(f, cn),
                    st(rr);
                else {
                    if (jt) {
                        var o = {}
                          , a = Zt.parent();
                        u = !(a.hasClass(hn) && 1 === a.children()[Si]),
                        Gt.sizeAutoCapable || (o[_e] = Zt.css(_e),
                        o[Se] = Zt.css(Se)),
                        u && Zt.wrap(hi(hn)),
                        (nr = Zt.parent()).css(o).wrapInner(hi(zn + He + An)).wrapInner(hi(xn + He + An)).wrapInner(hi(gn + He + An)),
                        or = vt(nr, Y + zn),
                        ir = vt(nr, Y + xn),
                        er = vt(nr, Y + gn),
                        fr = Ii(hi(yn)),
                        or.prepend(fr),
                        yi(Zt, wn + He + An),
                        u && t()
                    } else
                        (nr = Zt).wrapInner(hi(zn)).wrapInner(hi(xn)).wrapInner(hi(gn)),
                        or = vt(nr, Y + zn),
                        ir = vt(nr, Y + xn),
                        er = vt(nr, Y + gn),
                        yi(Zt, ln);
                    Lt && yi(ir, At.x && At.y ? Sn : _n),
                    Ft && yi(f, cn),
                    rr = Ii(hi("os-resize-observer-host")),
                    nr.prepend(rr),
                    N = rr[0],
                    sr = nr[0],
                    dr = er[0],
                    hr = ir[0],
                    pr = or[0]
                }
            }
            function rt(n) {
                var r, t, e, i, o = [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 33, 34, 37, 38, 39, 40, 16, 17, 18, 19, 20, 144], a = [], u = n ? "off" : "on";
                !n && jt && (e = function(n) {
                    ri(),
                    ce.update(ke),
                    n && clearInterval(r)
                }
                ,
                (F = {})[Oe] = function(n) {
                    return Zt[Le](Nt.i && Vr ? 9999999 : 0),
                    Zt[Re](0),
                    Li.prvD(n),
                    Li.stpP(n),
                    !1
                }
                ,
                F.drop = function() {
                    setTimeout(function() {
                        Wt || e()
                    }, 50)
                }
                ,
                F.focus = function() {
                    Qr = !0
                }
                ,
                F.focusout = function() {
                    e(!(Qr = !(a = [])))
                }
                ,
                9 < D || !Ht ? F.input = function() {
                    e()
                }
                : (F[rn] = function(n) {
                    var t = n.keyCode;
                    -1 < Ii.inArray(t, o) || (a.length || (e(),
                    r = setInterval(e, 1e3 / 60)),
                    -1 === Ii.inArray(t, a) && a.push(t))
                }
                ,
                F[en] = function(n) {
                    var t = n.keyCode
                      , r = Ii.inArray(t, a);
                    -1 < Ii.inArray(t, o) || (-1 < r && a.splice(r, 1),
                    a.length || e(!0))
                }
                )),
                jt ? Ii.each(F, function(n, t) {
                    Zt[u](n, t)
                }) : or[u](an, function(n) {
                    !0 !== Ir && function s(n) {
                        if (!Mt)
                            return !0;
                        var t = "flex-grow"
                          , r = "flex-shrink"
                          , e = "flex-basis"
                          , i = [_e, ge + _e, xe + _e, de + ye, de + me, ye, me, "font-weight", "word-spacing", t, r, e]
                          , o = [he + ye, he + me, pe + ye + _e, pe + me + _e]
                          , a = [Se, ge + Se, xe + Se, de + be, de + we, be, we, "line-height", t, r, e]
                          , u = [he + be, he + we, pe + be + _e, pe + we + _e]
                          , f = "s" === Lr.x || "v-s" === Lr.x
                          , c = !1
                          , l = function(n, t) {
                            for (var r = 0; r < n[Si]; r++)
                                if (n[r] === t)
                                    return !0;
                            return !1
                        };
                        return ("s" === Lr.y || "v-s" === Lr.y) && ((c = l(a, n)) || Et || (c = l(u, n))),
                        f && !c && ((c = l(i, n)) || Et || (c = l(o, n))),
                        c
                    }((n = n.originalEvent || n).propertyName) && ei(ke)
                }),
                n || (i = function(n) {
                    Kt || (t !== xi ? clearTimeout(t) : ((te || re) && oi(!0),
                    ft() || yi(nr, We),
                    li("onScrollStart", n)),
                    q || (ui(!0),
                    ui(!1)),
                    li("onScroll", n),
                    t = setTimeout(function() {
                        Wt || (clearTimeout(t),
                        t = xi,
                        (te || re) && oi(!1),
                        ft() || gi(nr, We),
                        li("onScrollStop", n))
                    }, 175))
                }
                ,
                h ? qn(ir, Oe, i) : ir.on(Oe, i))
            }
            function et(n) {
                n ? (st(c),
                st(d)) : (c = Ii(hi(Cn + He + Wn)),
                s = Ii(hi(Nn)),
                v = Ii(hi(Ln)),
                d = Ii(hi(Cn + He + jn)),
                b = Ii(hi(Nn)),
                m = Ii(hi(Ln)),
                c.append(s),
                s.append(v),
                d.append(b),
                b.append(m),
                er.after(d),
                er.after(c))
            }
            function it(_) {
                var S, i, z, T, r = ci(_), k = r.Z, t = w.top !== w, O = r.M, e = r.V, A = Oe + r.q, o = "active", a = "snapHandle", C = 1, u = [16, 17];
                function f(n) {
                    return D && t ? n["screen" + e] : Li.page(n)[O]
                }
                function c(n) {
                    return Gt.scrollbars[n]
                }
                function l() {
                    C = .5
                }
                function s() {
                    C = 1
                }
                function v(n) {
                    -1 < Ii.inArray(n.keyCode, u) && l()
                }
                function N(n) {
                    -1 < Ii.inArray(n.keyCode, u) && s()
                }
                function H(n) {
                    var t = (n.originalEvent || n).touches !== xi;
                    return !(Kt || Wt || ft() || !Pr || t && !c("touchSupport")) && (1 === Li.mBtn(n) || t)
                }
                function d(n) {
                    if (H(n)) {
                        var t = k.L
                          , r = k.N
                          , e = k.A * ((f(n) - z) * T / (t - r));
                        e = isFinite(e) ? e : 0,
                        Yt && _ && !Nt.i && (e *= -1),
                        ir[A](Ri.round(i + e)),
                        q && ui(_, i + e),
                        h || Li.prvD(n)
                    } else
                        L(n)
                }
                function L(n) {
                    if (n = n || n.originalEvent,
                    M.off(Z, d).off(Q, L).off(rn, v).off(en, N).off(on, Jn),
                    q && ui(_, !0),
                    q = !1,
                    gi(W, Fn),
                    gi(r.nn, o),
                    gi(r.tn, o),
                    gi(r.rn, o),
                    z = i = xi,
                    T = 1,
                    s(),
                    S !== xi && (ce.scrollStop(),
                    clearTimeout(S),
                    S = xi),
                    n) {
                        var t = sr.getBoundingClientRect();
                        n.clientX >= t.left && n.clientX <= t.right && n.clientY >= t.top && n.clientY <= t.bottom || Kn(),
                        (te || re) && oi(!1)
                    }
                }
                function R(n) {
                    i = ir[A](),
                    i = isNaN(i) ? 0 : i,
                    (Yt && _ && !Nt.n || !Yt) && (i = i < 0 ? 0 : i),
                    T = at()[O],
                    z = f(n),
                    q = !c(a),
                    yi(W, Fn),
                    yi(r.nn, o),
                    yi(r.rn, o),
                    M.on(Z, d).on(Q, L).on(on, Jn),
                    !D && p || Li.prvD(n),
                    Li.stpP(n)
                }
                r.nn.on(De, function(n) {
                    H(n) && R(n)
                }),
                r.tn.on(De, function(n) {
                    if (H(n)) {
                        var d, h = Ri.round(se[r.D]), p = r.tn.offset()[r.I], t = n.ctrlKey, b = n.shiftKey, m = b && t, w = !0, y = function(n) {
                            q && ui(_, n)
                        }, g = function() {
                            y(),
                            R(n)
                        }, x = function() {
                            if (!Wt) {
                                var n = (z - p) * T
                                  , t = k.C
                                  , r = k.L
                                  , e = k.N
                                  , i = k.A
                                  , o = k.k
                                  , a = 270 * C
                                  , u = w ? Ri.max(400, a) : a
                                  , f = i * ((n - e / 2) / (r - e))
                                  , c = Yt && _ && (!Nt.i && !Nt.n || Vr)
                                  , l = c ? t < n : n < t
                                  , s = {}
                                  , v = {
                                    easing: "linear",
                                    step: function(n) {
                                        q && (ir[A](n),
                                        ui(_, n))
                                    }
                                };
                                f = isFinite(f) ? f : 0,
                                f = Yt && _ && !Nt.i ? i - f : f,
                                b ? (ir[A](f),
                                m ? (f = ir[A](),
                                ir[A](o),
                                f = c && Nt.i ? i - f : f,
                                f = c && Nt.n ? -f : f,
                                s[O] = f,
                                ce.scroll(s, wi(v, {
                                    duration: 130,
                                    complete: g
                                }))) : g()) : (d = w ? l : d,
                                (c ? d ? n <= t + e : t <= n : d ? t <= n : n <= t + e) ? (clearTimeout(S),
                                ce.scrollStop(),
                                S = xi,
                                y(!0)) : (S = setTimeout(x, u),
                                s[O] = (d ? "-=" : "+=") + h,
                                ce.scroll(s, wi(v, {
                                    duration: a
                                }))),
                                w = !1)
                            }
                        };
                        t && l(),
                        T = at()[O],
                        z = Li.page(n)[O],
                        q = !c(a),
                        yi(W, Fn),
                        yi(r.tn, o),
                        yi(r.rn, o),
                        M.on(Q, L).on(rn, v).on(en, N).on(on, Jn),
                        x(),
                        Li.prvD(n),
                        Li.stpP(n)
                    }
                }).on(nn, function() {
                    P = !0,
                    (te || re) && oi(!0)
                }).on(tn, function() {
                    P = !1,
                    (te || re) && oi(!1)
                }),
                r.rn.on(De, function(n) {
                    Li.stpP(n)
                }),
                I && r.rn.on(an, function(n) {
                    n.target === r.rn[0] && (ai(_),
                    ui(_))
                })
            }
            function ii(n, t, r) {
                var e = n ? pn : bn
                  , i = n ? c : d;
                t ? gi(nr, e) : yi(nr, e),
                r ? gi(i, Dn) : yi(i, Dn)
            }
            function oi(n, t) {
                if (clearTimeout(E),
                n)
                    gi(c, In),
                    gi(d, In);
                else {
                    var r, e = function() {
                        P || Wt || (!(r = v.hasClass("active") || m.hasClass("active")) && (te || re || ee) && yi(c, In),
                        !r && (te || re || ee) && yi(d, In))
                    };
                    0 < Zr && !0 !== t ? E = setTimeout(e, Zr) : e()
                }
            }
            function ai(n) {
                var t = {}
                  , r = ci(n)
                  , e = r.Z
                  , i = Ri.min(1, (br[r.D] - (Cr ? n ? Pt : qt : 0)) / mr[r.D]);
                t[r.P] = Ri.floor(100 * i * 1e6) / 1e6 + "%",
                ft() || r.nn.css(t),
                e.N = r.nn[0]["offset" + r.en],
                e.H = i
            }
            function ui(n, t) {
                var r, e, i = lt(t) == _t, o = Yt && n, a = ci(n), u = a.Z, f = "translate(", c = Hi.p("transform"), l = Hi.p("transition"), s = n ? ir[Le]() : ir[Re](), v = t === xi || i ? s : t, d = u.N, h = a.tn[0]["offset" + a.en], p = h - d, b = {}, m = (hr[Oe + a.en] - hr["client" + a.en]) * (Nt.n && o ? -1 : 1), w = function(n) {
                    return isNaN(n / m) ? 0 : Ri.max(0, Ri.min(1, n / m))
                }, y = function(n) {
                    var t = p * n;
                    return t = isNaN(t) ? 0 : t,
                    t = o && !Nt.i ? h - d - t : t,
                    t = Ri.max(0, t)
                }, g = w(s), x = y(w(v)), _ = y(g);
                u.A = m,
                u.k = s,
                u.O = g,
                sn ? (r = o ? -(h - d - x) : x,
                e = n ? f + r + "px, 0)" : f + "0, " + r + "px)",
                b[c] = e,
                I && (b[l] = i && 1 < Ri.abs(x - u.C) ? function S(n) {
                    var t = Hi.p("transition")
                      , r = n.css(t);
                    if (r)
                        return r;
                    for (var e, i, o, a = "\\s*(([^,(]+(\\(.+?\\))?)+)[\\s,]*", u = new RegExp(a), f = new RegExp("^(" + a + ")+$"), c = "property duration timing-function delay".split(" "), l = [], s = 0, v = function(n) {
                        if (e = [],
                        !n.match(f))
                            return n;
                        for (; n.match(u); )
                            e.push(RegExp.$1),
                            n = n.replace(u, Te);
                        return e
                    }; s < c[Si]; s++)
                        for (i = v(n.css(t + "-" + c[s])),
                        o = 0; o < i[Si]; o++)
                            l[o] = (l[o] ? l[o] + He : Te) + i[o];
                    return l.join(", ")
                }(a.nn) + ", " + (c + He + 250) + "ms" : Te)) : b[a.I] = x,
                ft() || (a.nn.css(b),
                sn && I && i && a.nn.one(an, function() {
                    Wt || a.nn.css(l, Te)
                })),
                u.C = x,
                u.R = _,
                u.L = h
            }
            function fi(n, t) {
                var r = t ? "removeClass" : "addClass"
                  , e = n ? b : m
                  , i = n ? Hn : Rn;
                (n ? s : v)[r](i),
                e[r](i)
            }
            function ci(n) {
                return {
                    P: n ? _e : Se,
                    en: n ? "Width" : "Height",
                    I: n ? ye : be,
                    q: n ? "Left" : "Top",
                    M: n ? Ce : Ne,
                    V: n ? "X" : "Y",
                    D: n ? "w" : "h",
                    "in": n ? "l" : "t",
                    tn: n ? s : b,
                    nn: n ? v : m,
                    rn: n ? c : d,
                    Z: n ? vn : dn
                }
            }
            function ot(n) {
                n ? st(cr) : (cr = Ii(hi(Mn)),
                nr.append(cr))
            }
            function li(n, t) {
                if (Mt) {
                    var r, e = Gt.callbacks[n], i = n;
                    "on" === i.substr(0, 2) && (i = i.substr(2, 1).toLowerCase() + i.substr(3)),
                    lt(e) == yt && e.call(ce, t),
                    Ii.each(Un, function() {
                        lt((r = this).on) == yt && r.on(i, t)
                    })
                } else
                    Wt || En.push({
                        n: n,
                        a: t
                    })
            }
            function si(n, t, r) {
                r === xi && (r = [Te, Te, Te, Te]),
                n[t + be] = r[0],
                n[t + me] = r[1],
                n[t + we] = r[2],
                n[t + ye] = r[3]
            }
            function at() {
                var n = dr.getBoundingClientRect();
                return {
                    x: sn ? 1 / (Ri.round(n.width) / dr[Ai]) : 1,
                    y: sn ? 1 / (Ri.round(n.height) / dr[Ti]) : 1
                }
            }
            function ut(n) {
                var t = "ownerDocument"
                  , r = "HTMLElement"
                  , e = n && n[t] && n[t].parentWindow || pt;
                return typeof e[r] == wt ? n instanceof e[r] : n && typeof n == wt && null !== n && 1 === n.nodeType && typeof n.nodeName == xt
            }
            function vi(n, t) {
                var r = t ? parseFloat(n) : parseInt(n, 10);
                return isNaN(r) ? 0 : r
            }
            function ft() {
                return Dr && At.x && At.y
            }
            function di() {
                return jt ? fr[0] : pr
            }
            function hi(r, n) {
                return "<div " + (r ? lt(r) == xt ? 'class="' + r + '"' : function() {
                    var n, t = "";
                    if (Ii.isPlainObject(r))
                        for (n in r)
                            t += ("className" === n ? "class" : n) + '="' + r[n] + '" ';
                    return t
                }() : Te) + ">" + (n || Te) + "</div>"
            }
            function ct(n, t) {
                for (var r, e = t.split(Y), i = 0; i < e.length; i++) {
                    if (!n.hasOwnProperty(e[i]))
                        return;
                    r = n[e[i]],
                    i < e.length && lt(r) == wt && (n = r)
                }
                return r
            }
            function pi(n, t, r) {
                return !0 === r ? r : t === xi || n !== t
            }
            function bi(n, t, r, e, i) {
                if (!0 === i)
                    return i;
                if (e === xi && i === xi) {
                    if (!0 === r)
                        return r;
                    r = xi
                }
                return r = r === xi ? "w" : r,
                e = e === xi ? "h" : e,
                t === xi || (n[r] !== t[r] || n[e] !== t[e])
            }
            function mi(n, t) {
                return t === xi || (n.t !== t.t || n.r !== t.r || n.b !== t.b || n.l !== t.l)
            }
            function lt(n) {
                return Li.type(n)
            }
            function wi() {
                return Ii.extend.apply(this, [!0].concat([].slice.call(arguments)))
            }
            function yi(n, t) {
                return B.addClass.call(n, t)
            }
            function gi(n, t) {
                return B.removeClass.call(n, t)
            }
            function st(n) {
                return B.remove.call(n)
            }
            function vt(n, t) {
                return B.find.call(n, t).eq(0)
            }
        }
        return pt[mt] = function(n, r, e) {
            if (0 === arguments[Si])
                return this;
            var i, t, o = [], a = Ii.isPlainObject(r);
            return n ? (n = n[Si] != xi ? n : [n[0] || n],
            l(),
            0 < n[Si] && (a ? Ii.each(n, function(n, t) {
                (i = t) !== xi && o.push(v(i, r, e, u, f))
            }) : Ii.each(n, function(n, t) {
                i = Mi(t),
                "!" === r && i instanceof pt[mt] || Li.type(r) == yt && r(t, i) ? o.push(i) : r === xi && o.push(i)
            }),
            t = 1 === o[Si] ? o[0] : o),
            t) : a || !r ? t : o
        }
        ,
        pt[mt].globals = function() {
            l();
            var n = Ii.extend(!0, {}, u);
            return delete n.msie,
            n
        }
        ,
        pt[mt].defaultOptions = function(n) {
            l();
            var t = u.defaultOptions;
            if (n === xi)
                return Ii.extend(!0, {}, t);
            u.defaultOptions = Ii.extend(!0, {}, t, ht.T(n, ht.S, !0))
        }
        ,
        pt[mt].extension = function(n, t, r) {
            var e = Li.type(n) == xt
              , i = arguments[Si]
              , o = 0;
            if (i < 1 || !e)
                return Ii.extend(!0, {
                    length: c[Si]
                }, c);
            if (e)
                if (Li.type(t) == yt)
                    c.push({
                        name: n,
                        extensionFactory: t,
                        defaultOptions: r
                    });
                else
                    for (; o < c[Si]; o++)
                        if (c[o].name === n) {
                            if (!(1 < i))
                                return Ii.extend(!0, {}, c[o]);
                            c.splice(o, 1)
                        }
        }
        ,
        pt[mt]
    }();
    return Di && Di.fn && (Di.fn.overlayScrollbars = function(n, t) {
        return Di.isPlainObject(n) ? (Di.each(this, function() {
            r(this, n, t)
        }),
        this) : r(this, n)
    }
    ),
    r
});
!function(t, i) {
    if ("object" == typeof exports && "undefined" != typeof module) {
        var e;
        try {
            e = require("hammerjs")
        } catch (t) {}
        module.exports = i(e)
    } else
        t.Muuri = i(t.Hammer)
}(this, function(t) {
    "use strict";
    var i = "Muuri"
      , e = {}
      , s = "layoutEnd";
    function n() {
        this._events = {},
        this._queue = [],
        this._counter = 0,
        this._isDestroyed = !1
    }
    n.prototype.on = function(t, i) {
        if (this._isDestroyed)
            return this;
        var e = this._events[t];
        return e || (e = this._events[t] = []),
        e.push(i),
        this
    }
    ,
    n.prototype.once = function(t, i) {
        if (this._isDestroyed)
            return this;
        var e = function() {
            this.off(t, e),
            i.apply(null, arguments)
        }
        .bind(this);
        return this.on(t, e)
    }
    ,
    n.prototype.off = function(t, i) {
        if (this._isDestroyed)
            return this;
        var e = this._events[t];
        if (!e || !e.length)
            return this;
        if (!i)
            return e.length = 0,
            this;
        for (var s = e.length; s--; )
            i === e[s] && e.splice(s, 1);
        return this
    }
    ,
    n.prototype.emit = function(t, i, e, s) {
        if (this._isDestroyed)
            return this;
        var n = this._events[t];
        if (!n || !n.length)
            return this;
        var r, o = this._queue, h = o.length, a = arguments.length - 1;
        for (r = 0; r < n.length; r++)
            o.push(n[r]);
        for (++this._counter,
        r = h,
        h = o.length; r < h; r++)
            if (0 === a ? o[r]() : 1 === a ? o[r](i) : 2 === a ? o[r](i, e) : o[r](i, e, s),
            this._isDestroyed)
                return this;
        return --this._counter,
        this._counter || (o.length = 0),
        this
    }
    ,
    n.prototype.destroy = function() {
        if (this._isDestroyed)
            return this;
        var t, i = this._events;
        for (t in this._isDestroyed = !0,
        this._queue.length = this._counter = 0,
        i)
            i[t] && (i[t].length = 0,
            i[t] = void 0);
        return this
    }
    ;
    var r = !1
      , o = "transform"
      , h = "transform";
    ["", "Webkit", "Moz", "O", "ms"].forEach(function(t) {
        if (!r) {
            var i = t ? t + "Transform" : "transform";
            void 0 !== document.documentElement.style[i] && (t = t.toLowerCase(),
            o = t ? "-" + t + "-transform" : "transform",
            h = i,
            r = !0)
        }
    });
    var a = "function" == typeof WeakMap ? new WeakMap : null;
    function _(t, i) {
        var e = a && a.get(t);
        return e || (e = window.getComputedStyle(t, null),
        a && a.set(t, e)),
        e.getPropertyValue("transform" === i ? o : i)
    }
    var l = /([A-Z])/g;
    function d(t) {
        return t.replace(l, "-$1").toLowerCase()
    }
    function f(t, i) {
        for (var e in i)
            t.style["transform" === e ? h : e] = i[e]
    }
    function u(t) {
        this._element = t,
        this._animation = null,
        this._callback = null,
        this._props = [],
        this._values = [],
        this._keyframes = [],
        this._options = {},
        this._isDestroyed = !1,
        this._onFinish = this._onFinish.bind(this)
    }
    u.prototype.start = function(t, i, e) {
        if (!this._isDestroyed) {
            var s = this._animation
              , n = this._props
              , r = this._values
              , o = e || 0
              , h = !1;
            if (s) {
                var a, _ = 0;
                for (var l in i)
                    if (++_,
                    -1 === (a = n.indexOf(l)) || i[l] !== r[a]) {
                        h = !0;
                        break
                    }
                h || _ === n.length || (h = !0)
            }
            if (h && s.cancel(),
            this._callback = "function" == typeof o.onFinish ? o.onFinish : null,
            !s || h) {
                for (l in n.length = r.length = 0,
                i)
                    n.push(l),
                    r.push(i[l]);
                var d = this._keyframes;
                d[0] = t,
                d[1] = i;
                var u = this._options;
                u.duration = o.duration || 300,
                u.easing = o.easing || "ease";
                var c = this._element;
                (s = c.animate(d, u)).onfinish = this._onFinish,
                this._animation = s,
                f(c, i)
            }
        }
    }
    ,
    u.prototype.stop = function(t) {
        if (!this._isDestroyed && this._animation) {
            var i, e, s, n = this._element, r = this._props, o = this._values;
            if (t)
                f(n, t);
            else
                for (s = 0; s < r.length; s++)
                    e = _(n, d(i = r[s])),
                    n.style["transform" === i ? h : i] = e;
            this._animation.cancel(),
            this._animation = this._callback = null,
            r.length = o.length = 0
        }
    }
    ,
    u.prototype.isAnimating = function() {
        return !!this._animation
    }
    ,
    u.prototype.destroy = function() {
        this._isDestroyed || (this.stop(),
        this._element = this._options = this._keyframes = null,
        this._isDestroyed = !0)
    }
    ,
    u.prototype._onFinish = function() {
        var t = this._callback;
        this._animation = this._callback = null,
        this._props.length = this._values.length = 0,
        t && t()
    }
    ;
    var c = (window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || function(t) {
        return window.setTimeout(t, 16)
    }
    ).bind(window);
    function p() {
        this._nextTick = null,
        this._queue = [],
        this._reads = {},
        this._writes = {},
        this._batch = [],
        this._batchReads = {},
        this._batchWrites = {},
        this._flush = this._flush.bind(this)
    }
    p.prototype.add = function(t, i, e, s) {
        var n = this._queue.indexOf(t);
        n > -1 && (this._queue[n] = void 0),
        s ? this._queue.unshift(t) : this._queue.push(t),
        this._reads[t] = i,
        this._writes[t] = e,
        this._nextTick || (this._nextTick = c(this._flush))
    }
    ,
    p.prototype.cancel = function(t) {
        var i = this._queue.indexOf(t);
        i > -1 && (this._queue[i] = void 0,
        this._reads[t] = void 0,
        this._writes[t] = void 0)
    }
    ,
    p.prototype._flush = function() {
        var t, i, e = this._queue, s = this._reads, n = this._writes, r = this._batch, o = this._batchReads, h = this._batchWrites, a = e.length;
        for (this._nextTick = null,
        i = 0; i < a; i++)
            (t = e[i]) && (r.push(t),
            o[t] = s[t],
            s[t] = void 0,
            h[t] = n[t],
            n[t] = void 0);
        for (e.length = 0,
        i = 0; i < a; i++)
            o[t = r[i]] && (o[t](),
            o[t] = void 0);
        for (i = 0; i < a; i++)
            h[t = r[i]] && (h[t](),
            h[t] = void 0);
        r.length = 0,
        !this._nextTick && e.length && (this._nextTick = c(this._flush))
    }
    ;
    var m = new p
      , g = "layout"
      , y = "visibility"
      , v = "move"
      , w = "scroll";
    function D(t) {
        return m.cancel(t + g)
    }
    function b(t) {
        return m.cancel(t + y)
    }
    function S(t) {
        return m.cancel(t + v)
    }
    function A(t) {
        return m.cancel(t + w)
    }
    var x = Element.prototype
      , R = x.matches || x.matchesSelector || x.webkitMatchesSelector || x.mozMatchesSelector || x.msMatchesSelector || x.oMatchesSelector;
    function C(t, i) {
        return R.call(t, i)
    }
    var I = "classList"in Element.prototype ? function(t, i) {
        t.classList.add(i)
    }
    : function(t, i) {
        C(t, "." + i) || (t.className += " " + i)
    }
    ;
    function L(t, i, e) {
        var s = t.length
          , n = Math.max(0, e ? s : s - 1);
        return i > n ? n : i < 0 ? Math.max(n + i + 1, 0) : i
    }
    function E(t, i, e) {
        if (!(t.length < 2)) {
            var s = L(t, i)
              , n = L(t, e);
            s !== n && t.splice(n, 0, t.splice(s, 1)[0])
        }
    }
    function M(t, i, e) {
        if (!(t.length < 2)) {
            var s, n = L(t, i), r = L(t, e);
            n !== r && (s = t[n],
            t[n] = t[r],
            t[r] = s)
        }
    }
    var H = "cancel"
      , G = "finish";
    function P(t, i) {
        var e;
        return i > 0 ? function(s) {
            void 0 !== e && (e = window.clearTimeout(e),
            s === G && t()),
            s !== H && s !== G && (e = window.setTimeout(function() {
                e = void 0,
                t()
            }, i))
        }
        : function(i) {
            i !== H && t()
        }
    }
    function T(t) {
        var i = _(t, "transform");
        if (!i || "none" === i)
            return !1;
        var e = _(t, "display");
        return "inline" !== e && "none" !== e
    }
    function O(t, i) {
        for (var e = (i ? t : t.parentElement) || document; e && e !== document && "static" === _(e, "position") && !T(e); )
            e = e.parentElement || document;
        return e
    }
    function k(t, i) {
        return parseFloat(_(t, i)) || 0
    }
    var X = {}
      , Y = {}
      , q = {};
    function B(t, i) {
        var e, s = i || {};
        return s.left = 0,
        s.top = 0,
        t === document ? s : (s.left = window.pageXOffset || 0,
        s.top = window.pageYOffset || 0,
        t.self === window.self ? s : (e = t.getBoundingClientRect(),
        s.left += e.left,
        s.top += e.top,
        s.left += k(t, "border-left-width"),
        s.top += k(t, "border-top-width"),
        s))
    }
    function N(t, i, e) {
        return q.left = 0,
        q.top = 0,
        t === i ? q : e && (t = O(t, !0)) === (i = O(i, !0)) ? q : (B(t, X),
        B(i, Y),
        q.left = Y.left - X.left,
        q.top = Y.top - X.top,
        q)
    }
    var F = {};
    function z(t) {
        F.x = 0,
        F.y = 0;
        var i = _(t, "transform");
        if (!i)
            return F;
        var e = i.replace("matrix(", "").split(",");
        return F.x = parseFloat(e[4]) || 0,
        F.y = parseFloat(e[5]) || 0,
        F
    }
    function V(t, i) {
        return "translateX(" + t + "px) translateY(" + i + "px)"
    }
    var W = [];
    function j(t, i, e) {
        var s = "number" == typeof e ? e : -1;
        s < 0 && (s = t.length - s + 1),
        t.splice.apply(t, W.concat(s, 0, i)),
        W.length = 0
    }
    var Z = "[object Object]"
      , $ = Object.prototype.toString;
    function J(t) {
        return "object" == typeof t && $.call(t) === Z
    }
    var K = "classList"in Element.prototype ? function(t, i) {
        t.classList.remove(i)
    }
    : function(t, i) {
        C(t, "." + i) && (t.className = (" " + t.className + " ").replace(" " + i + " ", " ").trim())
    }
      , Q = at()
      , U = 0
      , tt = 1
      , it = 2
      , et = 3;
    function st(e) {
        if (!t)
            throw new Error("[" + i + "] required dependency Hammer is not defined.");
        null === Q && (Q = at());
        var s, n, r = this, o = e._element, h = e.getGrid(), a = h._settings, _ = "function" == typeof a.dragStartPredicate ? a.dragStartPredicate : st.defaultStartPredicate, l = U;
        this._item = e,
        this._gridId = h._id,
        this._hammer = s = new t.Manager(o),
        this._isDestroyed = !1,
        this._isMigrating = !1,
        this._reset(),
        this._onScroll = this._onScroll.bind(this),
        this._prepareMove = this._prepareMove.bind(this),
        this._applyMove = this._applyMove.bind(this),
        this._prepareScroll = this._prepareScroll.bind(this),
        this._applyScroll = this._applyScroll.bind(this),
        this._checkOverlap = this._checkOverlap.bind(this),
        this._forceResolveStartPredicate = function(t) {
            this._isDestroyed || l !== tt || (l = it,
            this._onStart(t))
        }
        ,
        this._checkOverlapDebounce = P(this._checkOverlap, a.dragSortInterval),
        s.add(new t.Pan({
            event: "drag",
            pointers: 1,
            threshold: 0,
            direction: t.DIRECTION_ALL
        })),
        s.add(new t.Press({
            event: "draginit",
            pointers: 1,
            threshold: 1e3,
            time: 0
        })),
        J(a.dragHammerSettings) && s.set(a.dragHammerSettings),
        s.on("draginit dragstart dragmove", function(t) {
            l === U && (l = tt),
            l === tt ? !0 === (n = _(r._item, t)) ? (l = it,
            r._onStart(t)) : !1 === n && (l = et) : l === it && r._isActive && r._onMove(t)
        }).on("dragend dragcancel draginitup", function(t) {
            var i = l === it;
            _(r._item, t),
            l = U,
            i && r._isActive && r._onEnd(t)
        }),
        o.addEventListener("dragstart", nt, !1)
    }
    function nt(t) {
        t.preventDefault && t.preventDefault()
    }
    function rt(t, i) {
        return t.left + t.width <= i.left || i.left + i.width <= t.left || t.top + t.height <= i.top || i.top + i.height <= t.top ? 0 : (Math.min(t.left + t.width, i.left + i.width) - Math.max(t.left, i.left)) * (Math.min(t.top + t.height, i.top + i.height) - Math.max(t.top, i.top)) / (Math.min(t.width, i.width) * Math.min(t.height, i.height)) * 100
    }
    function ot(t, i) {
        var e = i || []
          , s = t.parentNode;
        if (Q) {
            if ("fixed" === _(t, "position"))
                return e;
            for (; s && s !== document && s !== document.documentElement; )
                ht(s) && e.push(s),
                s = "fixed" === _(s, "position") ? null : s.parentNode;
            return null !== s && e.push(window),
            e
        }
        for (; s && s !== document; )
            "fixed" !== _(t, "position") || T(s) ? (ht(s) && e.push(s),
            t = s,
            s = s.parentNode) : s = s.parentNode;
        return e[e.length - 1] === document.documentElement ? e[e.length - 1] = window : e.push(window),
        e
    }
    function ht(t) {
        var i = _(t, "overflow");
        return "auto" === i || "scroll" === i || ("auto" === (i = _(t, "overflow-x")) || "scroll" === i || ("auto" === (i = _(t, "overflow-y")) || "scroll" === i))
    }
    function at() {
        if (!r)
            return !0;
        if (!document.body)
            return null;
        var t = [0, 1].map(function(t, i) {
            return (t = document.createElement("div")).style.position = i ? "fixed" : "absolute",
            t.style.display = "block",
            t.style.visibility = "hidden",
            t.style.left = i ? "0px" : "1px",
            t.style[h] = "none",
            t
        })
          , i = document.body.appendChild(t[0])
          , e = i.appendChild(t[1])
          , s = e.getBoundingClientRect().left;
        i.style[h] = "scale(1)";
        var n = s === e.getBoundingClientRect().left;
        return document.body.removeChild(i),
        n
    }
    function _t() {
        this._queue = [],
        this._isDestroyed = !1
    }
    function lt(t) {
        this._item = t,
        this._isActive = !1,
        this._isDestroyed = !1,
        this._isInterrupted = !1,
        this._currentStyles = {},
        this._targetStyles = {},
        this._currentLeft = 0,
        this._currentTop = 0,
        this._offsetLeft = 0,
        this._offsetTop = 0,
        this._skipNextAnimation = !1,
        this._animateOptions = {
            onFinish: this._finish.bind(this)
        },
        this._queue = new _t,
        this._setupAnimation = this._setupAnimation.bind(this),
        this._startAnimation = this._startAnimation.bind(this)
    }
    st.defaultStartPredicate = function(t, i, e) {
        var s = t._drag
          , n = s._startPredicateData || s._setupStartPredicate(e);
        if (!i.isFinal)
            return !(!n.handleElement && (n.handleElement = s._getStartPredicateHandle(i),
            !n.handleElement)) && (n.delay && (n.event = i,
            n.delayTimer || (n.delayTimer = window.setTimeout(function() {
                n.delay = 0,
                s._resolveStartPredicate(n.event) && (s._forceResolveStartPredicate(n.event),
                s._resetStartPredicate())
            }, n.delay))),
            s._resolveStartPredicate(i));
        s._finishStartPredicate(i)
    }
    ,
    st.defaultSortPredicate = function() {
        var t = {}
          , i = {}
          , e = {}
          , s = [];
        return function(n, r) {
            var o = n._drag
              , h = o._getGrid()
              , a = r && "number" == typeof r.threshold ? r.threshold : 50
              , _ = r && "swap" === r.action ? "swap" : "move";
            t.width = n._width,
            t.height = n._height,
            t.left = o._elementClientX,
            t.top = o._elementClientY;
            var l = function(e, n, r) {
                var o, h, a, _, l = null, d = n._settings.dragSort, f = -1;
                if (!0 === d ? (s[0] = n,
                h = s) : h = d.call(n, e),
                !Array.isArray(h))
                    return l;
                for (_ = 0; _ < h.length; _++)
                    (a = h[_])._isDestroyed || (a._updateBoundingRect(),
                    i.width = a._width,
                    i.height = a._height,
                    i.left = a._left,
                    i.top = a._top,
                    (o = rt(t, i)) > r && o > f && (f = o,
                    l = a));
                return s.length = 0,
                l
            }(n, h, a);
            if (!l)
                return !1;
            var d, f, u, c, p, m = 0, g = 0, y = -1;
            for (l === h ? (t.left = o._gridX + n._marginLeft,
            t.top = o._gridY + n._marginTop) : (l._updateBorders(1, 0, 1, 0),
            m = l._left + l._borderLeft,
            g = l._top + l._borderTop),
            p = 0; p < l._items.length; p++)
                (u = l._items[p])._isActive && u !== n && (f = !0,
                i.width = u._width,
                i.height = u._height,
                i.left = u._left + u._marginLeft + m,
                i.top = u._top + u._marginTop + g,
                (c = rt(t, i)) > y && (d = p,
                y = c));
            return y < a && n.getGrid() !== l && (d = f ? -1 : 0,
            y = 1 / 0),
            y >= a && (e.grid = l,
            e.index = d,
            e.action = _,
            e)
        }
    }(),
    st.prototype.stop = function() {
        var t = this._item
          , i = t._element
          , e = this._getGrid();
        return this._isActive ? this._isMigrating ? (this._finishMigration(),
        this) : (S(t._id),
        A(t._id),
        this._unbindScrollListeners(),
        this._checkOverlapDebounce("cancel"),
        i.parentNode !== e._element && (e._element.appendChild(i),
        i.style[h] = V(this._gridX, this._gridY)),
        K(i, e._settings.itemDraggingClass),
        this._reset(),
        this) : this
    }
    ,
    st.prototype.destroy = function() {
        return this._isDestroyed ? this : (this.stop(),
        this._hammer.destroy(),
        this._item._element.removeEventListener("dragstart", nt, !1),
        this._isDestroyed = !0,
        this)
    }
    ,
    st.prototype._getGrid = function() {
        return e[this._gridId] || null
    }
    ,
    st.prototype._reset = function() {
        this._isActive = !1,
        this._container = null,
        this._containingBlock = null,
        this._lastEvent = null,
        this._lastScrollEvent = null,
        this._scrollers = [],
        this._left = 0,
        this._top = 0,
        this._gridX = 0,
        this._gridY = 0,
        this._elementClientX = 0,
        this._elementClientY = 0,
        this._containerDiffX = 0,
        this._containerDiffY = 0
    }
    ,
    st.prototype._bindScrollListeners = function() {
        var t, i, e = this._getGrid()._element, s = this._container, n = this._scrollers;
        if (n.length = 0,
        ot(this._item._element, n),
        s !== e)
            for (ot(e, t = []),
            t.push(e),
            i = 0; i < t.length; i++)
                n.indexOf(t[i]) < 0 && n.push(t[i]);
        for (i = 0; i < n.length; i++)
            n[i].addEventListener("scroll", this._onScroll)
    }
    ,
    st.prototype._unbindScrollListeners = function() {
        var t, i = this._scrollers;
        for (t = 0; t < i.length; t++)
            i[t].removeEventListener("scroll", this._onScroll);
        i.length = 0
    }
    ,
    st.prototype._setupStartPredicate = function(t) {
        var i = t || this._getGrid()._settings.dragStartPredicate || 0;
        return this._startPredicateData = {
            distance: Math.abs(i.distance) || 0,
            delay: Math.max(i.delay, 0) || 0,
            handle: "string" == typeof i.handle && i.handle
        }
    }
    ,
    st.prototype._getStartPredicateHandle = function(t) {
        var i = this._startPredicateData
          , e = this._item._element
          , s = e;
        if (!i.handle)
            return s;
        for (s = (t.changedPointers[0] || 0).target; s && !C(s, i.handle); )
            s = s !== e ? s.parentElement : null;
        return s || null
    }
    ,
    st.prototype._resolveStartPredicate = function(t) {
        var i, e, s, n, r, o = this._startPredicateData, h = t.changedPointers[0], a = h && h.pageX || 0, _ = h && h.pageY || 0;
        if (!(t.distance < o.distance || o.delay))
            return e = (i = o.handleElement.getBoundingClientRect()).left + (window.pageXOffset || 0),
            s = i.top + (window.pageYOffset || 0),
            n = i.width,
            r = i.height,
            this._resetStartPredicate(),
            n && r && a >= e && a < e + n && _ >= s && _ < s + r
    }
    ,
    st.prototype._finishStartPredicate = function(t) {
        var i = this._item._element;
        this._resetStartPredicate(),
        function(t) {
            return Math.abs(t.deltaX) < 2 && Math.abs(t.deltaY) < 2 && t.deltaTime < 200
        }(t) && function(t) {
            if ("a" !== t.tagName.toLowerCase())
                return;
            var i = t.getAttribute("href");
            if (!i)
                return;
            var e = t.getAttribute("target");
            e && "_self" !== e ? window.open(i, e) : window.location.href = i
        }(i)
    }
    ,
    st.prototype._resetStartPredicate = function() {
        var t = this._startPredicateData;
        t && (t.delayTimer && (t.delayTimer = window.clearTimeout(t.delayTimer)),
        this._startPredicateData = null)
    }
    ,
    st.prototype._checkOverlap = function() {
        if (this._isActive) {
            var t, i, e, s, n, r, o, h = this._item, a = this._getGrid()._settings;
            (t = "function" == typeof a.dragSortPredicate ? a.dragSortPredicate(h, this._lastEvent) : st.defaultSortPredicate(h, a.dragSortPredicate)) && "number" == typeof t.index && (o = (i = h.getGrid()) !== (s = t.grid || i),
            e = i._items.indexOf(h),
            n = L(s._items, t.index, o),
            r = "swap" === t.action ? "swap" : "move",
            o ? (i._hasListeners("beforeSend") && i._emit("beforeSend", {
                item: h,
                fromGrid: i,
                fromIndex: e,
                toGrid: s,
                toIndex: n
            }),
            s._hasListeners("beforeReceive") && s._emit("beforeReceive", {
                item: h,
                fromGrid: i,
                fromIndex: e,
                toGrid: s,
                toIndex: n
            }),
            h._gridId = s._id,
            this._isMigrating = h._gridId !== this._gridId,
            i._items.splice(e, 1),
            j(s._items, h, n),
            h._sortData = null,
            i._hasListeners("send") && i._emit("send", {
                item: h,
                fromGrid: i,
                fromIndex: e,
                toGrid: s,
                toIndex: n
            }),
            s._hasListeners("receive") && s._emit("receive", {
                item: h,
                fromGrid: i,
                fromIndex: e,
                toGrid: s,
                toIndex: n
            }),
            i.layout(),
            s.layout()) : e !== n && (("swap" === r ? M : E)(i._items, e, n),
            i._hasListeners("move") && i._emit("move", {
                item: h,
                fromIndex: e,
                toIndex: n,
                action: r
            }),
            i.layout()))
        }
    }
    ,
    st.prototype._finishMigration = function() {
        var t, i, e = this._item, s = e._release, n = e._element, r = e._isActive, o = e.getGrid(), a = o._element, _ = o._settings, l = _.dragContainer || a, d = this._getGrid()._settings, u = n.parentNode;
        this._isMigrating = !1,
        this.destroy(),
        K(n, d.itemClass),
        K(n, d.itemVisibleClass),
        K(n, d.itemHiddenClass),
        I(n, _.itemClass),
        I(n, r ? _.itemVisibleClass : _.itemHiddenClass),
        l !== u && (l.appendChild(n),
        i = N(u, l, !0),
        (t = z(n)).x -= i.left,
        t.y -= i.top),
        e._refreshDimensions(),
        e._refreshSortData(),
        i = N(l, a, !0),
        s._containerDiffX = i.left,
        s._containerDiffY = i.top,
        e._drag = _.dragEnabled ? new st(e) : null,
        l !== u && (n.style[h] = V(t.x, t.y)),
        e._child.removeAttribute("style"),
        f(e._child, r ? _.visibleStyles : _.hiddenStyles),
        s.start()
    }
    ,
    st.prototype._onStart = function(t) {
        var i = this._item;
        if (i._isActive) {
            var e, s = i._element, n = this._getGrid(), r = n._settings, o = i._release, a = i._migrate, _ = n._element, l = r.dragContainer || _, d = O(l, !0), f = z(s), u = f.x, c = f.y, p = s.getBoundingClientRect(), m = l !== _;
            m && (e = N(d, _)),
            i.isPositioning() && i._layout.stop(!0, {
                transform: V(u, c)
            }),
            a._isActive && (u -= a._containerDiffX,
            c -= a._containerDiffY,
            a.stop(!0, {
                transform: V(u, c)
            })),
            i.isReleasing() && o._reset(),
            this._isActive = !0,
            this._lastEvent = t,
            this._container = l,
            this._containingBlock = d,
            this._elementClientX = p.left,
            this._elementClientY = p.top,
            this._left = this._gridX = u,
            this._top = this._gridY = c,
            n._emit("dragInit", i, t),
            m && (this._containerDiffX = e.left,
            this._containerDiffY = e.top,
            s.parentNode === l ? (this._gridX = u - this._containerDiffX,
            this._gridY = c - this._containerDiffY) : (this._left = u + this._containerDiffX,
            this._top = c + this._containerDiffY,
            l.appendChild(s),
            s.style[h] = V(this._left, this._top))),
            I(s, r.itemDraggingClass),
            this._bindScrollListeners(),
            n._emit("dragStart", i, t)
        }
    }
    ,
    st.prototype._onMove = function(t) {
        var i = this._item;
        if (i._isActive) {
            var e, s, n, r = this._getGrid()._settings.dragAxis, o = t.deltaX - this._lastEvent.deltaX, h = t.deltaY - this._lastEvent.deltaY;
            this._lastEvent = t,
            "y" !== r && (this._left += o,
            this._gridX += o,
            this._elementClientX += o),
            "x" !== r && (this._top += h,
            this._gridY += h,
            this._elementClientY += h),
            e = i._id,
            s = this._prepareMove,
            n = this._applyMove,
            m.add(e + v, s, n, !0)
        } else
            this.stop()
    }
    ,
    st.prototype._prepareMove = function() {
        this._item._isActive && this._getGrid()._settings.dragSort && this._checkOverlapDebounce()
    }
    ,
    st.prototype._applyMove = function() {
        var t = this._item;
        t._isActive && (t._element.style[h] = V(this._left, this._top),
        this._getGrid()._emit("dragMove", t, this._lastEvent))
    }
    ,
    st.prototype._onScroll = function(t) {
        var i, e, s, n = this._item;
        n._isActive ? (this._lastScrollEvent = t,
        i = n._id,
        e = this._prepareScroll,
        s = this._applyScroll,
        m.add(i + w, e, s, !0)) : this.stop()
    }
    ,
    st.prototype._prepareScroll = function() {
        var t = this._item;
        if (t._isActive) {
            var i, e = t._element, s = this._getGrid(), n = s._settings, r = n.dragAxis, o = s._element, h = e.getBoundingClientRect(), a = this._elementClientX - h.left, _ = this._elementClientY - h.top;
            this._container !== o && (i = N(this._containingBlock, o),
            this._containerDiffX = i.left,
            this._containerDiffY = i.top),
            "y" !== r && (this._left += a,
            this._gridX = this._left - this._containerDiffX),
            "x" !== r && (this._top += _,
            this._gridY = this._top - this._containerDiffY),
            n.dragSort && this._checkOverlapDebounce()
        }
    }
    ,
    st.prototype._applyScroll = function() {
        var t = this._item;
        t._isActive && (t._element.style[h] = V(this._left, this._top),
        this._getGrid()._emit("dragScroll", t, this._lastScrollEvent))
    }
    ,
    st.prototype._onEnd = function(t) {
        var i = this._item
          , e = i._element
          , s = this._getGrid()
          , n = s._settings
          , r = i._release;
        i._isActive ? (S(i._id),
        A(i._id),
        n.dragSort && this._checkOverlapDebounce("finish"),
        this._unbindScrollListeners(),
        r._containerDiffX = this._containerDiffX,
        r._containerDiffY = this._containerDiffY,
        this._reset(),
        K(e, n.itemDraggingClass),
        s._emit("dragEnd", i, t),
        this._isMigrating ? this._finishMigration() : r.start()) : this.stop()
    }
    ,
    _t.prototype.add = function(t) {
        return this._isDestroyed ? this : (this._queue.push(t),
        this)
    }
    ,
    _t.prototype.flush = function(t, i) {
        if (this._isDestroyed)
            return this;
        var e, s = this._queue, n = s.length;
        if (!n)
            return this;
        var r = 1 === n
          , o = r ? s[0] : s.slice(0);
        if (s.length = 0,
        r)
            return o(t, i),
            this;
        for (e = 0; e < n && (o[e](t, i),
        !this._isDestroyed); e++)
            ;
        return this
    }
    ,
    _t.prototype.destroy = function() {
        return this._isDestroyed ? this : (this._isDestroyed = !0,
        this._queue.length = 0,
        this)
    }
    ,
    lt.prototype.start = function(t, i) {
        if (!this._isDestroyed) {
            var e, s, n, r, o = this._item, h = o._element, a = o._release, _ = o.getGrid()._settings, l = this._isActive, d = a._isActive && !1 === a._isPositioningStarted, u = d ? _.dragReleaseDuration : _.layoutDuration, c = d ? _.dragReleaseEasing : _.layoutEasing, p = !t && !this._skipNextAnimation && u > 0;
            return l && this._queue.flush(!0, o),
            d && (a._isPositioningStarted = !0),
            "function" == typeof i && this._queue.add(i),
            p ? (this._isActive = !0,
            this._animateOptions.easing = c,
            this._animateOptions.duration = u,
            this._isInterrupted = l,
            s = o._id,
            n = this._setupAnimation,
            r = this._startAnimation,
            m.add(s + g, n, r),
            this) : (this._updateOffsets(),
            this._updateTargetStyles(),
            l && D(o._id),
            e = o._animate.isAnimating(),
            this.stop(!1, this._targetStyles),
            !e && f(h, this._targetStyles),
            this._skipNextAnimation = !1,
            this._finish())
        }
    }
    ,
    lt.prototype.stop = function(t, i) {
        if (this._isDestroyed || !this._isActive)
            return this;
        var e = this._item;
        return D(e._id),
        e._animate.stop(i),
        K(e._element, e.getGrid()._settings.itemPositioningClass),
        this._isActive = !1,
        t && this._queue.flush(!0, e),
        this
    }
    ,
    lt.prototype.destroy = function() {
        return this._isDestroyed ? this : (this.stop(!0, {}),
        this._queue.destroy(),
        this._item = this._currentStyles = this._targetStyles = this._animateOptions = null,
        this._isDestroyed = !0,
        this)
    }
    ,
    lt.prototype._updateOffsets = function() {
        if (!this._isDestroyed) {
            var t = this._item
              , i = t._migrate
              , e = t._release;
            this._offsetLeft = e._isActive ? e._containerDiffX : i._isActive ? i._containerDiffX : 0,
            this._offsetTop = e._isActive ? e._containerDiffY : i._isActive ? i._containerDiffY : 0
        }
    }
    ,
    lt.prototype._updateTargetStyles = function() {
        if (!this._isDestroyed) {
            var t = this._item;
            this._targetStyles.transform = V(t._left + this._offsetLeft, t._top + this._offsetTop)
        }
    }
    ,
    lt.prototype._finish = function() {
        if (!this._isDestroyed) {
            var t = this._item
              , i = t._migrate
              , e = t._release;
            this._isActive && (this._isActive = !1,
            K(t._element, t.getGrid()._settings.itemPositioningClass)),
            e._isActive && e.stop(),
            i._isActive && i.stop(),
            this._queue.flush(!1, t)
        }
    }
    ,
    lt.prototype._setupAnimation = function() {
        var t = z(this._item._element);
        this._currentLeft = t.x,
        this._currentTop = t.y
    }
    ,
    lt.prototype._startAnimation = function() {
        var t = this._item
          , i = t._element
          , e = t.getGrid()._settings;
        if (this._updateOffsets(),
        this._updateTargetStyles(),
        t._left === this._currentLeft - this._offsetLeft && t._top === this._currentTop - this._offsetTop)
            return this._isInterrupted && this.stop(!1, this._targetStyles),
            this._isActive = !1,
            void this._finish();
        !this._isInterrupted && I(i, e.itemPositioningClass),
        this._currentStyles.transform = V(this._currentLeft, this._currentTop),
        t._animate.start(this._currentStyles, this._targetStyles, this._animateOptions)
    }
    ;
    var dt = {};
    function ft(t) {
        this._item = t,
        this._isActive = !1,
        this._isDestroyed = !1,
        this._container = !1,
        this._containerDiffX = 0,
        this._containerDiffY = 0
    }
    ft.prototype.start = function(t, i, e) {
        if (this._isDestroyed)
            return this;
        var s, n, r, o, a, _, l, d, u = this._item, c = u._element, p = u.isVisible(), m = u.getGrid(), g = m._settings, y = t._settings, v = t._element, w = t._items, D = m._items.indexOf(u), b = e || document.body;
        if ("number" == typeof i)
            s = L(w, i, !0);
        else {
            if (!(n = t._getItem(i)))
                return this;
            s = w.indexOf(n)
        }
        return (u.isPositioning() || this._isActive || u.isReleasing()) && (l = (_ = z(c)).x,
        d = _.y),
        u.isPositioning() && u._layout.stop(!0, {
            transform: V(l, d)
        }),
        this._isActive && (l -= this._containerDiffX,
        d -= this._containerDiffY,
        this.stop(!0, {
            transform: V(l, d)
        })),
        u.isReleasing() && (l -= u._release._containerDiffX,
        d -= u._release._containerDiffY,
        u._release.stop(!0, {
            transform: V(l, d)
        })),
        u._visibility._stopAnimation(),
        u._drag && u._drag.destroy(),
        u._visibility._queue.flush(!0, u),
        m._hasListeners("beforeSend") && m._emit("beforeSend", {
            item: u,
            fromGrid: m,
            fromIndex: D,
            toGrid: t,
            toIndex: s
        }),
        t._hasListeners("beforeReceive") && t._emit("beforeReceive", {
            item: u,
            fromGrid: m,
            fromIndex: D,
            toGrid: t,
            toIndex: s
        }),
        K(c, g.itemClass),
        K(c, g.itemVisibleClass),
        K(c, g.itemHiddenClass),
        I(c, y.itemClass),
        I(c, p ? y.itemVisibleClass : y.itemHiddenClass),
        m._items.splice(D, 1),
        j(w, u, s),
        u._gridId = t._id,
        b !== (r = c.parentNode) && (b.appendChild(c),
        o = N(b, r, !0),
        _ || (l = (_ = z(c)).x,
        d = _.y),
        c.style[h] = V(l + o.left, d + o.top)),
        u._child.removeAttribute("style"),
        f(u._child, p ? y.visibleStyles : y.hiddenStyles),
        c.style.display = p ? "block" : "hidden",
        a = N(b, v, !0),
        u._refreshDimensions(),
        u._refreshSortData(),
        u._drag = y.dragEnabled ? new st(u) : null,
        this._isActive = !0,
        this._container = b,
        this._containerDiffX = a.left,
        this._containerDiffY = a.top,
        m._hasListeners("send") && m._emit("send", {
            item: u,
            fromGrid: m,
            fromIndex: D,
            toGrid: t,
            toIndex: s
        }),
        t._hasListeners("receive") && t._emit("receive", {
            item: u,
            fromGrid: m,
            fromIndex: D,
            toGrid: t,
            toIndex: s
        }),
        this
    }
    ,
    ft.prototype.stop = function(t, i) {
        if (this._isDestroyed || !this._isActive)
            return this;
        var e, s = this._item, n = s._element, r = s.getGrid()._element;
        return this._container !== r && (i || (t ? (e = z(n),
        dt.transform = V(e.x - this._containerDiffX, e.y - this._containerDiffY)) : dt.transform = V(s._left, s._top),
        i = dt),
        r.appendChild(n),
        f(n, i)),
        this._isActive = !1,
        this._container = null,
        this._containerDiffX = 0,
        this._containerDiffY = 0,
        this
    }
    ,
    ft.prototype.destroy = function() {
        return this._isDestroyed ? this : (this.stop(!0),
        this._item = null,
        this._isDestroyed = !0,
        this)
    }
    ;
    var ut = {};
    function ct(t) {
        this._item = t,
        this._isActive = !1,
        this._isDestroyed = !1,
        this._isPositioningStarted = !1,
        this._containerDiffX = 0,
        this._containerDiffY = 0
    }
    function pt(t) {
        var i = t._isActive
          , e = t._element
          , s = t.getGrid()._settings;
        this._item = t,
        this._isDestroyed = !1,
        this._isHidden = !i,
        this._isHiding = !1,
        this._isShowing = !1,
        this._queue = new _t,
        this._finishShow = this._finishShow.bind(this),
        this._finishHide = this._finishHide.bind(this),
        e.style.display = i ? "block" : "none",
        I(e, i ? s.itemVisibleClass : s.itemHiddenClass),
        f(t._child, i ? s.visibleStyles : s.hiddenStyles)
    }
    ct.prototype.start = function() {
        if (this._isDestroyed || this._isActive)
            return this;
        var t = this._item
          , i = t.getGrid();
        return this._isActive = !0,
        I(t._element, i._settings.itemReleasingClass),
        i._emit("dragReleaseStart", t),
        t._layout.start(!1),
        this
    }
    ,
    ct.prototype.stop = function(t, i) {
        if (this._isDestroyed || !this._isActive)
            return this;
        var e, s = this._item, n = s._element, r = s.getGrid(), o = r._element;
        return this._reset(),
        n.parentNode !== o && (i || (t ? (e = z(n),
        ut.transform = V(e.x - this._containerDiffX, e.y - this._containerDiffY)) : ut.transform = V(s._left, s._top),
        i = ut),
        o.appendChild(n),
        f(n, i)),
        t || r._emit("dragReleaseEnd", s),
        this
    }
    ,
    ct.prototype.destroy = function() {
        return this._isDestroyed ? this : (this.stop(!0),
        this._item = null,
        this._isDestroyed = !0,
        this)
    }
    ,
    ct.prototype._reset = function() {
        if (!this._isDestroyed) {
            var t = this._item;
            this._isActive = !1,
            this._isPositioningStarted = !1,
            this._containerDiffX = 0,
            this._containerDiffY = 0,
            K(t._element, t.getGrid()._settings.itemReleasingClass)
        }
    }
    ,
    pt.prototype.show = function(t, i) {
        if (this._isDestroyed)
            return this;
        var e = this._item
          , s = e._element
          , n = this._queue
          , r = "function" == typeof i ? i : null
          , o = e.getGrid()._settings;
        return this._isShowing || this._isHidden ? this._isShowing && !t ? (r && n.add(r),
        this) : (this._isShowing || (n.flush(!0, e),
        K(s, o.itemHiddenClass),
        I(s, o.itemVisibleClass),
        this._isHiding || (s.style.display = "block")),
        r && n.add(r),
        e._isActive = this._isShowing = !0,
        this._isHiding = this._isHidden = !1,
        this._startAnimation(!0, t, this._finishShow),
        this) : (r && r(!1, e),
        this)
    }
    ,
    pt.prototype.hide = function(t, i) {
        if (this._isDestroyed)
            return this;
        var e = this._item
          , s = e._element
          , n = this._queue
          , r = "function" == typeof i ? i : null
          , o = e.getGrid()._settings;
        return !this._isHiding && this._isHidden ? (r && r(!1, e),
        this) : this._isHiding && !t ? (r && n.add(r),
        this) : (this._isHiding || (n.flush(!0, e),
        I(s, o.itemHiddenClass),
        K(s, o.itemVisibleClass)),
        r && n.add(r),
        this._isHidden = this._isHiding = !0,
        e._isActive = this._isShowing = !1,
        this._startAnimation(!1, t, this._finishHide),
        this)
    }
    ,
    pt.prototype.destroy = function() {
        if (this._isDestroyed)
            return this;
        var t = this._item
          , i = t._element
          , e = t.getGrid()
          , s = this._queue
          , n = e._settings;
        return this._stopAnimation({}),
        s.flush(!0, t).destroy(),
        K(i, n.itemVisibleClass),
        K(i, n.itemHiddenClass),
        this._item = null,
        this._isHiding = this._isShowing = !1,
        this._isDestroyed = this._isHidden = !0,
        this
    }
    ,
    pt.prototype._startAnimation = function(t, i, e) {
        if (!this._isDestroyed) {
            var s, n = this._item, r = n.getGrid()._settings, o = t ? r.visibleStyles : r.hiddenStyles, h = parseInt(t ? r.showDuration : r.hideDuration) || 0, a = (t ? r.showEasing : r.hideEasing) || "ease", l = i || h <= 0;
            if (o) {
                if (b(n._id),
                l)
                    return n._animateChild.isAnimating() ? n._animateChild.stop(o) : f(n._child, o),
                    void (e && e());
                var u, c, p;
                u = n._id,
                c = function() {
                    s = function(t, i) {
                        var e = {};
                        for (var s in i)
                            e[s] = _(t, d(s));
                        return e
                    }(n._child, o)
                }
                ,
                p = function() {
                    n._animateChild.start(s, o, {
                        duration: h,
                        easing: a,
                        onFinish: e
                    })
                }
                ,
                m.add(u + y, c, p)
            } else
                e && e()
        }
    }
    ,
    pt.prototype._stopAnimation = function(t) {
        if (!this._isDestroyed) {
            var i = this._item;
            b(i._id),
            i._animateChild.stop(t)
        }
    }
    ,
    pt.prototype._finishShow = function() {
        this._isHidden || (this._isShowing = !1,
        this._queue.flush(!1, this._item))
    }
    ;
    var mt = {};
    pt.prototype._finishHide = function() {
        if (this._isHidden) {
            var t = this._item;
            this._isHiding = !1,
            mt.transform = V(0, 0),
            t._layout.stop(!0, mt),
            t._element.style.display = "none",
            this._queue.flush(!1, t)
        }
    }
    ;
    var gt, yt, vt, wt, Dt = 0;
    function bt() {
        return ++Dt
    }
    function St(t, i, e) {
        var s = t._settings;
        this._id = bt(),
        this._gridId = t._id,
        this._isDestroyed = !1,
        this._left = 0,
        this._top = 0,
        this._element = i,
        this._child = i.children[0],
        i.parentNode !== t._element && t._element.appendChild(i),
        I(i, s.itemClass),
        "boolean" != typeof e && (e = "none" !== _(i, "display")),
        this._isActive = e,
        i.style.left = "0",
        i.style.top = "0",
        i.style[h] = V(0, 0),
        this._animate = new u(i),
        this._animateChild = new u(this._child),
        this._visibility = new pt(this),
        this._layout = new lt(this),
        this._migrate = new ft(this),
        this._release = new ct(this),
        this._drag = s.dragEnabled ? new st(this) : null,
        this._refreshDimensions(),
        this._refreshSortData()
    }
    function At() {
        this._slots = [],
        this._slotSizes = [],
        this._freeSlots = [],
        this._newSlots = [],
        this._rectItem = {},
        this._rectStore = [],
        this._rectId = 0,
        this._layout = {
            slots: null,
            setWidth: !1,
            setHeight: !1,
            width: !1,
            height: !1
        },
        this._sortRectsLeftTop = this._sortRectsLeftTop.bind(this),
        this._sortRectsTopLeft = this._sortRectsTopLeft.bind(this)
    }
    St.prototype.getGrid = function() {
        return e[this._gridId]
    }
    ,
    St.prototype.getElement = function() {
        return this._element
    }
    ,
    St.prototype.getWidth = function() {
        return this._width
    }
    ,
    St.prototype.getHeight = function() {
        return this._height
    }
    ,
    St.prototype.getMargin = function() {
        return {
            left: this._marginLeft,
            right: this._marginRight,
            top: this._marginTop,
            bottom: this._marginBottom
        }
    }
    ,
    St.prototype.getPosition = function() {
        return {
            left: this._left,
            top: this._top
        }
    }
    ,
    St.prototype.isActive = function() {
        return this._isActive
    }
    ,
    St.prototype.isVisible = function() {
        return !!this._visibility && !this._visibility._isHidden
    }
    ,
    St.prototype.isShowing = function() {
        return !(!this._visibility || !this._visibility._isShowing)
    }
    ,
    St.prototype.isHiding = function() {
        return !(!this._visibility || !this._visibility._isHiding)
    }
    ,
    St.prototype.isPositioning = function() {
        return !(!this._layout || !this._layout._isActive)
    }
    ,
    St.prototype.isDragging = function() {
        return !(!this._drag || !this._drag._isActive)
    }
    ,
    St.prototype.isReleasing = function() {
        return !(!this._release || !this._release._isActive)
    }
    ,
    St.prototype.isDestroyed = function() {
        return this._isDestroyed
    }
    ,
    St.prototype._refreshDimensions = function() {
        if (!this._isDestroyed && !this._visibility._isHidden) {
            var t = this._element
              , i = t.getBoundingClientRect();
            this._width = i.width,
            this._height = i.height,
            this._marginLeft = Math.max(0, k(t, "margin-left")),
            this._marginRight = Math.max(0, k(t, "margin-right")),
            this._marginTop = Math.max(0, k(t, "margin-top")),
            this._marginBottom = Math.max(0, k(t, "margin-bottom"))
        }
    }
    ,
    St.prototype._refreshSortData = function() {
        if (!this._isDestroyed) {
            var t, i = this._sortData = {}, e = this.getGrid()._settings.sortData;
            for (t in e)
                i[t] = e[t](this, this._element)
        }
    }
    ,
    St.prototype._destroy = function(t) {
        if (!this._isDestroyed) {
            var i = this._element
              , e = this.getGrid()
              , s = e._settings
              , n = e._items.indexOf(this);
            this._release.destroy(),
            this._migrate.destroy(),
            this._layout.destroy(),
            this._visibility.destroy(),
            this._animate.destroy(),
            this._animateChild.destroy(),
            this._drag && this._drag.destroy(),
            i.removeAttribute("style"),
            this._child.removeAttribute("style"),
            K(i, s.itemClass),
            n > -1 && e._items.splice(n, 1),
            t && i.parentNode.removeChild(i),
            this._isActive = !1,
            this._isDestroyed = !0
        }
    }
    ,
    At.prototype.getLayout = function(t, i, e, s, n) {
        var r, o = this._layout, h = !(!n || !n.fillGaps), a = !(!n || !n.horizontal), _ = !(!n || !n.alignRight), l = !(!n || !n.alignBottom), d = !(!n || !n.rounding), f = this._slotSizes;
        if (o.slots = s || this._slots,
        o.width = a ? 0 : d ? Math.round(i) : i,
        o.height = a ? d ? Math.round(e) : e : 0,
        o.setWidth = a,
        o.setHeight = !a,
        o.slots.length = 0,
        f.length = 0,
        !t.length)
            return o;
        for (r = 0; r < t.length; r++)
            this._addSlot(t[r], a, h, d, _ || l);
        if (_)
            for (r = 0; r < o.slots.length; r += 2)
                o.slots[r] = o.width - (o.slots[r] + f[r]);
        if (l)
            for (r = 1; r < o.slots.length; r += 2)
                o.slots[r] = o.height - (o.slots[r] + f[r]);
        return f.length = 0,
        this._freeSlots.length = 0,
        this._newSlots.length = 0,
        this._rectId = 0,
        o
    }
    ,
    At.prototype._addSlot = (gt = {},
    function(t, i, e, s, n) {
        var r, o, h, a, _, l, d = this._layout, f = this._freeSlots, u = this._newSlots;
        for (u.length = 0,
        gt.left = null,
        gt.top = null,
        gt.width = t._width + t._marginLeft + t._marginRight,
        gt.height = t._height + t._marginTop + t._marginBottom,
        s && (gt.width = Math.round(gt.width),
        gt.height = Math.round(gt.height)),
        _ = 0; _ < f.length; _++)
            if ((o = f[_]) && (r = this._getRect(o),
            gt.width <= r.width + .001 && gt.height <= r.height + .001)) {
                gt.left = r.left,
                gt.top = r.top;
                break
            }
        for (null === gt.left && (gt.left = i ? d.width : 0,
        gt.top = i ? 0 : d.height,
        e || (a = !0)),
        !i && gt.top + gt.height > d.height && (gt.left > 0 && u.push(this._addRect(0, d.height, gt.left, 1 / 0)),
        gt.left + gt.width < d.width && u.push(this._addRect(gt.left + gt.width, d.height, d.width - gt.left - gt.width, 1 / 0)),
        d.height = gt.top + gt.height),
        i && gt.left + gt.width > d.width && (gt.top > 0 && u.push(this._addRect(d.width, 0, 1 / 0, gt.top)),
        gt.top + gt.height < d.height && u.push(this._addRect(d.width, gt.top + gt.height, 1 / 0, d.height - gt.top - gt.height)),
        d.width = gt.left + gt.width),
        _ = e ? 0 : a ? f.length : _; _ < f.length; _++)
            if (o = f[_])
                for (r = this._getRect(o),
                h = this._splitRect(r, gt),
                l = 0; l < h.length; l++)
                    o = h[l],
                    (r = this._getRect(o)).width > .49 && r.height > .49 && (!i && r.top < d.height || i && r.left < d.width) && u.push(o);
        u.length && this._purgeRects(u).sort(i ? this._sortRectsLeftTop : this._sortRectsTopLeft),
        i ? d.width = Math.max(d.width, gt.left + gt.width) : d.height = Math.max(d.height, gt.top + gt.height),
        d.slots.push(gt.left, gt.top),
        n && this._slotSizes.push(gt.width, gt.height),
        this._freeSlots = u,
        this._newSlots = f
    }
    ),
    At.prototype._addRect = function(t, i, e, s) {
        var n = ++this._rectId
          , r = this._rectStore;
        return r[n] = t || 0,
        r[++this._rectId] = i || 0,
        r[++this._rectId] = e || 0,
        r[++this._rectId] = s || 0,
        n
    }
    ,
    At.prototype._getRect = function(t, i) {
        var e = i || this._rectItem
          , s = this._rectStore;
        return e.left = s[t] || 0,
        e.top = s[++t] || 0,
        e.width = s[++t] || 0,
        e.height = s[++t] || 0,
        e
    }
    ,
    At.prototype._splitRect = (yt = [],
    function(t, i) {
        return yt.length = 0,
        this._doRectsOverlap(t, i) ? (t.left < i.left && yt.push(this._addRect(t.left, t.top, i.left - t.left, t.height)),
        t.left + t.width > i.left + i.width && yt.push(this._addRect(i.left + i.width, t.top, t.left + t.width - (i.left + i.width), t.height)),
        t.top < i.top && yt.push(this._addRect(t.left, t.top, t.width, i.top - t.top)),
        t.top + t.height > i.top + i.height && yt.push(this._addRect(t.left, i.top + i.height, t.width, t.top + t.height - (i.top + i.height))),
        yt) : (yt.push(this._addRect(t.left, t.top, t.width, t.height)),
        yt)
    }
    ),
    At.prototype._doRectsOverlap = function(t, i) {
        return !(t.left + t.width <= i.left || i.left + i.width <= t.left || t.top + t.height <= i.top || i.top + i.height <= t.top)
    }
    ,
    At.prototype._isRectWithinRect = function(t, i) {
        return t.left >= i.left && t.top >= i.top && t.left + t.width <= i.left + i.width && t.top + t.height <= i.top + i.height
    }
    ,
    At.prototype._purgeRects = (vt = {},
    wt = {},
    function(t) {
        for (var i, e = t.length; e--; )
            if (i = t.length,
            t[e])
                for (this._getRect(t[e], vt); i--; )
                    if (t[i] && e !== i && this._isRectWithinRect(vt, this._getRect(t[i], wt))) {
                        t[e] = 0;
                        break
                    }
        return t
    }
    ),
    At.prototype._sortRectsTopLeft = function() {
        var t = {}
          , i = {};
        return function(e, s) {
            return this._getRect(e, t),
            this._getRect(s, i),
            t.top < i.top ? -1 : t.top > i.top ? 1 : t.left < i.left ? -1 : t.left > i.left ? 1 : 0
        }
    }(),
    At.prototype._sortRectsLeftTop = function() {
        var t = {}
          , i = {};
        return function(e, s) {
            return this._getRect(e, t),
            this._getRect(s, i),
            t.left < i.left ? -1 : t.left > i.left ? 1 : t.top < i.top ? -1 : t.top > i.top ? 1 : 0
        }
    }();
    var xt = "[object HTMLCollection]"
      , Rt = "[object NodeList]";
    function Ct(t) {
        var i = Object.prototype.toString.call(t);
        return i === xt || i === Rt
    }
    function It(t) {
        return Ct(t) ? Array.prototype.slice.call(t) : Array.prototype.concat(t)
    }
    var Lt = new At
      , Et = function() {};
    function Mt(t, i) {
        var s, r, o, h = this;
        if (t = this._element = "string" == typeof t ? document.querySelector(t) : t,
        !document.body.contains(t))
            throw new Error("Container element must be an existing DOM element");
        "function" != typeof (s = this._settings = function(t, i) {
            var e = Ht({}, t);
            i && (e = Ht(e, i));
            return e.visibleStyles = (i || 0).visibleStyles || (t || 0).visibleStyles,
            e.hiddenStyles = (i || 0).hiddenStyles || (t || 0).hiddenStyles,
            e
        }(Mt.defaultOptions, i)).dragSort && (s.dragSort = !!s.dragSort),
        this._id = bt(),
        e[this._id] = h,
        this._isDestroyed = !1,
        this._layout = {
            id: 0,
            items: [],
            slots: [],
            setWidth: !1,
            setHeight: !1,
            width: 0,
            height: 0
        },
        this._emitter = new n,
        I(t, s.containerClass),
        this._items = [],
        "string" == typeof (r = s.items) ? It(t.children).forEach(function(t) {
            ("*" === r || C(t, r)) && h._items.push(new St(h,t))
        }) : (Array.isArray(r) || Ct(r)) && (this._items = It(r).map(function(t) {
            return new St(h,t)
        })),
        "number" != typeof (o = s.layoutOnResize) && (o = !0 === o ? 0 : -1),
        o >= 0 && window.addEventListener("resize", h._resizeHandler = P(function() {
            h.refreshItems().layout()
        }, o)),
        s.layoutOnInit && this.layout(!0)
    }
    function Ht(t, i) {
        var e, s, n, r = Object.keys(i), o = r.length;
        for (n = 0; n < o; n++)
            e = J(i[s = r[n]]),
            J(t[s]) && e ? t[s] = Ht(Ht({}, t[s]), i[s]) : e ? t[s] = Ht({}, i[s]) : Array.isArray(i[s]) ? t[s] = i[s].slice(0) : t[s] = i[s];
        return t
    }
    return Mt.Item = St,
    Mt.ItemLayout = lt,
    Mt.ItemVisibility = pt,
    Mt.ItemRelease = ct,
    Mt.ItemMigrate = ft,
    Mt.ItemAnimate = u,
    Mt.ItemDrag = st,
    Mt.Emitter = n,
    Mt.defaultOptions = {
        items: "*",
        showDuration: 300,
        showEasing: "ease",
        hideDuration: 300,
        hideEasing: "ease",
        visibleStyles: {
            opacity: "1",
            transform: "scale(1)"
        },
        hiddenStyles: {
            opacity: "0",
            transform: "scale(0.5)"
        },
        layout: {
            fillGaps: !1,
            horizontal: !1,
            alignRight: !1,
            alignBottom: !1,
            rounding: !0
        },
        layoutOnResize: 100,
        layoutOnInit: !0,
        layoutDuration: 300,
        layoutEasing: "ease",
        sortData: null,
        dragEnabled: !1,
        dragContainer: null,
        dragStartPredicate: {
            distance: 0,
            delay: 0,
            handle: !1
        },
        dragAxis: null,
        dragSort: !0,
        dragSortInterval: 100,
        dragSortPredicate: {
            threshold: 50,
            action: "move"
        },
        dragReleaseDuration: 300,
        dragReleaseEasing: "ease",
        dragHammerSettings: {
            touchAction: "none"
        },
        containerClass: "muuri",
        itemClass: "muuri-item",
        itemVisibleClass: "muuri-item-shown",
        itemHiddenClass: "muuri-item-hidden",
        itemPositioningClass: "muuri-item-positioning",
        itemDraggingClass: "muuri-item-dragging",
        itemReleasingClass: "muuri-item-releasing"
    },
    Mt.prototype.on = function(t, i) {
        return this._emitter.on(t, i),
        this
    }
    ,
    Mt.prototype.once = function(t, i) {
        return this._emitter.once(t, i),
        this
    }
    ,
    Mt.prototype.off = function(t, i) {
        return this._emitter.off(t, i),
        this
    }
    ,
    Mt.prototype.getElement = function() {
        return this._element
    }
    ,
    Mt.prototype.getItems = function(t) {
        if (this._isDestroyed || !t && 0 !== t)
            return this._items.slice(0);
        var i, e, s = [], n = It(t);
        for (e = 0; e < n.length; e++)
            (i = this._getItem(n[e])) && s.push(i);
        return s
    }
    ,
    Mt.prototype.refreshItems = function(t) {
        if (this._isDestroyed)
            return this;
        var i, e = this.getItems(t);
        for (i = 0; i < e.length; i++)
            e[i]._refreshDimensions();
        return this
    }
    ,
    Mt.prototype.refreshSortData = function(t) {
        if (this._isDestroyed)
            return this;
        var i, e = this.getItems(t);
        for (i = 0; i < e.length; i++)
            e[i]._refreshSortData();
        return this
    }
    ,
    Mt.prototype.synchronize = function() {
        if (this._isDestroyed)
            return this;
        var t, i, e, s = this._element, n = this._items;
        if (n.length) {
            for (e = 0; e < n.length; e++)
                (i = n[e]._element).parentNode === s && (t = t || document.createDocumentFragment()).appendChild(i);
            t && s.appendChild(t)
        }
        return this._emit("synchronize"),
        this
    }
    ,
    Mt.prototype.layout = function(t, i) {
        if (this._isDestroyed)
            return this;
        var e, n, r, o = this, h = this._element, a = this._updateLayout(), l = a.id, d = a.items.length, f = d, u = "function" == typeof t ? t : i, c = "function" == typeof u, p = c ? a.items.slice(0) : null;
        function m() {
            if (!(--f > 0)) {
                var t = o._layout.id !== l;
                c && u(t, p),
                !t && o._hasListeners(s) && o._emit(s, a.items.slice(0))
            }
        }
        if ((a.setHeight && "number" == typeof a.height || a.setWidth && "number" == typeof a.width) && (e = "border-box" === _(h, "box-sizing")),
        a.setHeight && ("number" == typeof a.height ? h.style.height = (e ? a.height + this._borderTop + this._borderBottom : a.height) + "px" : h.style.height = a.height),
        a.setWidth && ("number" == typeof a.width ? h.style.width = (e ? a.width + this._borderLeft + this._borderRight : a.width) + "px" : h.style.width = a.width),
        this._hasListeners("layoutStart") && this._emit("layoutStart", a.items.slice(0)),
        !d)
            return m(),
            this;
        for (r = 0; r < d; r++)
            (n = a.items[r]) && (n._left = a.slots[2 * r],
            n._top = a.slots[2 * r + 1],
            n.isDragging() ? m() : n._layout.start(!0 === t, m));
        return this
    }
    ,
    Mt.prototype.add = function(t, i) {
        if (this._isDestroyed || !t)
            return [];
        var e = It(t);
        if (!e.length)
            return e;
        var s, n, r = i || 0, o = r.layout ? r.layout : void 0 === r.layout, h = this._items, a = !1;
        for (n = 0; n < e.length; n++)
            s = new St(this,e[n],r.isActive),
            e[n] = s,
            s._isActive && (a = !0,
            s._layout._skipNextAnimation = !0);
        return j(h, e, r.index),
        this._hasListeners("add") && this._emit("add", e.slice(0)),
        a && o && this.layout("instant" === o, "function" == typeof o ? o : void 0),
        e
    }
    ,
    Mt.prototype.remove = function(t, i) {
        if (this._isDestroyed)
            return this;
        var e, s, n = i || 0, r = n.layout ? n.layout : void 0 === n.layout, o = !1, h = this.getItems(), a = this.getItems(t), _ = [];
        for (s = 0; s < a.length; s++)
            e = a[s],
            _.push(h.indexOf(e)),
            e._isActive && (o = !0),
            e._destroy(n.removeElements);
        return this._hasListeners("remove") && this._emit("remove", a.slice(0), _),
        o && r && this.layout("instant" === r, "function" == typeof r ? r : void 0),
        a
    }
    ,
    Mt.prototype.show = function(t, i) {
        return this._isDestroyed ? this : (this._setItemsVisibility(t, !0, i),
        this)
    }
    ,
    Mt.prototype.hide = function(t, i) {
        return this._isDestroyed ? this : (this._setItemsVisibility(t, !1, i),
        this)
    }
    ,
    Mt.prototype.filter = function(t, i) {
        if (this._isDestroyed || !this._items.length)
            return this;
        var e, s, n = [], r = [], o = "string" == typeof t, h = "function" == typeof t, a = i || 0, _ = !0 === a.instant, l = a.layout ? a.layout : void 0 === a.layout, d = "function" == typeof a.onFinish ? a.onFinish : null, f = -1, u = Et;
        if (d && (u = function() {
            ++f && d(n.slice(0), r.slice(0))
        }
        ),
        h || o)
            for (s = 0; s < this._items.length; s++)
                e = this._items[s],
                (h ? t(e) : C(e._element, t)) ? n.push(e) : r.push(e);
        return n.length ? this.show(n, {
            instant: _,
            onFinish: u,
            layout: !1
        }) : u(),
        r.length ? this.hide(r, {
            instant: _,
            onFinish: u,
            layout: !1
        }) : u(),
        (n.length || r.length) && (this._hasListeners("filter") && this._emit("filter", n.slice(0), r.slice(0)),
        l && this.layout("instant" === l, "function" == typeof l ? l : void 0)),
        this
    }
    ,
    Mt.prototype.sort = function() {
        var t, e, s, n;
        function r(t) {
            for (var i = {}, e = 0; e < t.length; e++)
                i[t[e]._id] = e;
            return i
        }
        function o(t, i) {
            var s = n[t._id]
              , r = n[i._id];
            return e ? r - s : s - r
        }
        function h(i, h) {
            for (var a, _, l, d, f = 0, u = 0; u < t.length; u++)
                if (a = t[u][0],
                _ = t[u][1],
                l = (i._sortData ? i : i._refreshSortData())._sortData[a],
                d = (h._sortData ? h : h._refreshSortData())._sortData[a],
                f = "desc" === _ || !_ && e ? d < l ? -1 : d > l ? 1 : 0 : l < d ? -1 : l > d ? 1 : 0)
                    return f;
            return f || (n || (n = r(s)),
            f = o(i, h)),
            f
        }
        function a(i, h) {
            var a = t(i, h);
            return e && a && (a = -a),
            a || (n || (n = r(s)),
            o(i, h))
        }
        return function(r, o) {
            if (this._isDestroyed || this._items.length < 2)
                return this;
            var _, l = this._items, d = o || 0, f = d.layout ? d.layout : void 0 === d.layout;
            if (t = r,
            e = !!d.descending,
            s = l.slice(0),
            n = null,
            "function" == typeof t)
                l.sort(a);
            else if ("string" == typeof t)
                t = r.trim().split(" ").map(function(t) {
                    return t.split(":")
                }),
                l.sort(h);
            else {
                if (!Array.isArray(t))
                    return this;
                if (t.length !== l.length)
                    throw new Error("[" + i + "] sort reference items do not match with grid items.");
                for (_ = 0; _ < l.length; _++) {
                    if (t.indexOf(l[_]) < 0)
                        throw new Error("[" + i + "] sort reference items do not match with grid items.");
                    l[_] = t[_]
                }
                e && l.reverse()
            }
            return this._hasListeners("sort") && this._emit("sort", l.slice(0), s),
            f && this.layout("instant" === f, "function" == typeof f ? f : void 0),
            this
        }
    }(),
    Mt.prototype.move = function(t, i, e) {
        if (this._isDestroyed || this._items.length < 2)
            return this;
        var s, n, r = this._items, o = e || 0, h = o.layout ? o.layout : void 0 === o.layout, a = "swap" === o.action, _ = a ? "swap" : "move", l = this._getItem(t), d = this._getItem(i);
        return l && d && l !== d && (s = r.indexOf(l),
        n = r.indexOf(d),
        a ? M(r, s, n) : E(r, s, n),
        this._hasListeners("move") && this._emit("move", {
            item: l,
            fromIndex: s,
            toIndex: n,
            action: _
        }),
        h && this.layout("instant" === h, "function" == typeof h ? h : void 0)),
        this
    }
    ,
    Mt.prototype.send = function(t, i, e, s) {
        if (this._isDestroyed || i._isDestroyed || this === i)
            return this;
        if (!(t = this._getItem(t)))
            return this;
        var n = s || 0
          , r = n.appendTo || document.body
          , o = n.layoutSender ? n.layoutSender : void 0 === n.layoutSender
          , h = n.layoutReceiver ? n.layoutReceiver : void 0 === n.layoutReceiver;
        return t._migrate.start(i, e, r),
        t._migrate._isActive && t._isActive && (o && this.layout("instant" === o, "function" == typeof o ? o : void 0),
        h && i.layout("instant" === h, "function" == typeof h ? h : void 0)),
        this
    }
    ,
    Mt.prototype.destroy = function(t) {
        if (this._isDestroyed)
            return this;
        var i, s = this._element, n = this._items.slice(0);
        for (this._resizeHandler && window.removeEventListener("resize", this._resizeHandler),
        i = 0; i < n.length; i++)
            n[i]._destroy(t);
        return K(s, this._settings.containerClass),
        s.style.height = "",
        s.style.width = "",
        this._emit("destroy"),
        this._emitter.destroy(),
        e[this._id] = void 0,
        this._isDestroyed = !0,
        this
    }
    ,
    Mt.prototype._getItem = function(t) {
        if (this._isDestroyed || !t && 0 !== t)
            return null;
        if ("number" == typeof t)
            return this._items[t > -1 ? t : this._items.length + t] || null;
        if (t instanceof St)
            return t._gridId === this._id ? t : null;
        for (var i = 0; i < this._items.length; i++)
            if (this._items[i]._element === t)
                return this._items[i];
        return null
    }
    ,
    Mt.prototype._updateLayout = function() {
        var t, i, e, s, n = this._layout, r = this._settings.layout;
        for (++n.id,
        n.items.length = 0,
        s = 0; s < this._items.length; s++)
            this._items[s]._isActive && n.items.push(this._items[s]);
        return this._refreshDimensions(),
        t = this._width - this._borderLeft - this._borderRight,
        i = this._height - this._borderTop - this._borderBottom,
        e = "function" == typeof r ? r(n.items, t, i) : Lt.getLayout(n.items, t, i, n.slots, r),
        n.slots = e.slots,
        n.setWidth = Boolean(e.setWidth),
        n.setHeight = Boolean(e.setHeight),
        n.width = e.width,
        n.height = e.height,
        n
    }
    ,
    Mt.prototype._emit = function() {
        this._isDestroyed || this._emitter.emit.apply(this._emitter, arguments)
    }
    ,
    Mt.prototype._hasListeners = function(t) {
        var i = this._emitter._events[t];
        return !(!i || !i.length)
    }
    ,
    Mt.prototype._updateBoundingRect = function() {
        var t = this._element.getBoundingClientRect();
        this._width = t.width,
        this._height = t.height,
        this._left = t.left,
        this._top = t.top
    }
    ,
    Mt.prototype._updateBorders = function(t, i, e, s) {
        var n = this._element;
        t && (this._borderLeft = k(n, "border-left-width")),
        i && (this._borderRight = k(n, "border-right-width")),
        e && (this._borderTop = k(n, "border-top-width")),
        s && (this._borderBottom = k(n, "border-bottom-width"))
    }
    ,
    Mt.prototype._refreshDimensions = function() {
        this._updateBoundingRect(),
        this._updateBorders(1, 1, 1, 1)
    }
    ,
    Mt.prototype._setItemsVisibility = function(t, i, e) {
        var s, n, r = this, o = this.getItems(t), h = e || 0, a = !0 === h.instant, _ = h.onFinish, l = h.layout ? h.layout : void 0 === h.layout, d = o.length, f = i ? "showStart" : "hideStart", u = i ? "showEnd" : "hideEnd", c = i ? "show" : "hide", p = !1, m = [], g = [];
        if (d) {
            for (this._hasListeners(f) && this._emit(f, o.slice(0)),
            n = 0; n < o.length; n++)
                s = o[n],
                (i && !s._isActive || !i && s._isActive) && (p = !0),
                i && !s._isActive && (s._layout._skipNextAnimation = !0),
                i && s._visibility._isHidden && g.push(s),
                s._visibility[c](a, function(t, i) {
                    t || m.push(i),
                    --d < 1 && ("function" == typeof _ && _(m.slice(0)),
                    r._hasListeners(u) && r._emit(u, m.slice(0)))
                });
            g.length && this.refreshItems(g),
            p && l && this.layout("instant" === l, "function" == typeof l ? l : void 0)
        } else
            "function" == typeof _ && _(o)
    }
    ,
    Mt
});
/**
* @version: 2.1.25
* @author: Dan Grossman http://www.dangrossman.info/
* @copyright: Copyright (c) 2012-2017 Dan Grossman. All rights reserved.
* @license: Licensed under the MIT license. See http://www.opensource.org/licenses/mit-license.php
* @website: https://www.daterangepicker.com/
*/
// Follow the UMD template https://github.com/umdjs/umd/blob/master/templates/returnExportsGlobal.js
(function(root, factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD. Make globaly available as well
        define(['moment', 'jquery'], function(moment, jquery) {
            return (root.daterangepicker = factory(moment, jquery));
        });
    } else if (typeof module === 'object' && module.exports) {
        // Node / Browserify
        //isomorphic issue
        var jQuery = (typeof window != 'undefined') ? window.jQuery : undefined;
        if (!jQuery) {
            jQuery = require('jquery');
            if (!jQuery.fn)
                jQuery.fn = {};
        }
        module.exports = factory(require('moment'), jQuery);
    } else {
        // Browser globals
        root.daterangepicker = factory(root.moment, root.jQuery);
    }
}(this, function(moment, $) {
    var DateRangePicker = function(element, options, cb) {

        //default settings for options
        this.parentEl = 'body';
        this.element = $(element);
        this.startDate = moment().startOf('day');
        this.endDate = moment().endOf('day');
        this.minDate = false;
        this.maxDate = false;
        this.dateLimit = false;
        this.autoApply = false;
        this.singleDatePicker = false;
        this.showDropdowns = false;
        this.showWeekNumbers = false;
        this.showISOWeekNumbers = false;
        this.showCustomRangeLabel = true;
        this.timePicker = false;
        this.timePicker24Hour = false;
        this.timePickerIncrement = 1;
        this.timePickerSeconds = false;
        this.linkedCalendars = true;
        this.autoUpdateInput = true;
        this.alwaysShowCalendars = false;
        this.ranges = {};

        this.opens = 'right';
        if (this.element.hasClass('pull-right'))
            this.opens = 'left';

        this.drops = 'down';
        if (this.element.hasClass('dropup'))
            this.drops = 'up';

        this.buttonClasses = 'btn btn-sm';
        this.applyClass = 'btn-success';
        this.cancelClass = 'btn-default';

        this.locale = {
            direction: 'ltr',
            format: moment.localeData().longDateFormat('L'),
            separator: ' - ',
            applyLabel: 'Apply',
            cancelLabel: 'Cancel',
            weekLabel: 'W',
            customRangeLabel: 'Custom Range',
            daysOfWeek: moment.weekdaysMin(),
            monthNames: moment.monthsShort(),
            firstDay: moment.localeData().firstDayOfWeek()
        };

        this.callback = function() {}
        ;

        //some state information
        this.isShowing = false;
        this.leftCalendar = {};
        this.rightCalendar = {};

        //custom options from user
        if (typeof options !== 'object' || options === null)
            options = {};

        //allow setting options with data attributes
        //data-api options will be overwritten with custom javascript options
        options = $.extend(this.element.data(), options);

        if ($('.daterangepicker').length > 0) {
            $('.daterangepicker').remove()
        }

        //html template for the picker UI
        if (typeof options.template !== 'string' && !(options.template instanceof $))
            options.template = '<div class="daterangepicker dropdown-menu">' + '<div class="calendar left">' + '<div class="daterangepicker_input">' + '<input class="input-mini form-control" type="text" name="daterangepicker_start" value="" />' + '<i class="fa fa-calendar glyphicon glyphicon-calendar"></i>' + '<div class="calendar-time">' + '<div></div>' + '<i class="fa fa-clock-o glyphicon glyphicon-time"></i>' + '</div>' + '</div>' + '<div class="calendar-table"></div>' + '</div>' + '<div class="calendar right">' + '<div class="daterangepicker_input">' + '<input class="input-mini form-control" type="text" name="daterangepicker_end" value="" />' + '<i class="fa fa-calendar glyphicon glyphicon-calendar"></i>' + '<div class="calendar-time">' + '<div></div>' + '<i class="fa fa-clock-o glyphicon glyphicon-time"></i>' + '</div>' + '</div>' + '<div class="calendar-table"></div>' + '</div>' + '<div class="ranges">' + '<div class="range_inputs">' + '<button class="applyBtn" disabled="disabled" type="button"></button> ' + '<button class="cancelBtn" type="button"></button>' + '</div>' + '</div>' + '</div>';

        this.parentEl = (options.parentEl && $(options.parentEl).length) ? $(options.parentEl) : $(this.parentEl);
        this.container = $(options.template).appendTo(this.parentEl);

        //
        // handle all the possible options overriding defaults
        //

        if (typeof options.locale === 'object') {

            if (typeof options.locale.direction === 'string')
                this.locale.direction = options.locale.direction;

            if (typeof options.locale.format === 'string')
                this.locale.format = options.locale.format;

            if (typeof options.locale.separator === 'string')
                this.locale.separator = options.locale.separator;

            if (typeof options.locale.daysOfWeek === 'object')
                this.locale.daysOfWeek = options.locale.daysOfWeek.slice();

            if (typeof options.locale.monthNames === 'object')
                this.locale.monthNames = options.locale.monthNames.slice();

            if (typeof options.locale.firstDay === 'number')
                this.locale.firstDay = options.locale.firstDay;

            if (typeof options.locale.applyLabel === 'string')
                this.locale.applyLabel = options.locale.applyLabel;

            if (typeof options.locale.cancelLabel === 'string')
                this.locale.cancelLabel = options.locale.cancelLabel;

            if (typeof options.locale.weekLabel === 'string')
                this.locale.weekLabel = options.locale.weekLabel;

            if (typeof options.locale.customRangeLabel === 'string') {
                //Support unicode chars in the custom range name.
                var elem = document.createElement('textarea');
                elem.innerHTML = options.locale.customRangeLabel;
                var rangeHtml = elem.value;
                this.locale.customRangeLabel = rangeHtml;
            }
        }
        this.container.addClass(this.locale.direction);

        if (typeof options.startDate === 'string')
            this.startDate = moment(options.startDate, this.locale.format);

        if (typeof options.endDate === 'string')
            this.endDate = moment(options.endDate, this.locale.format);

        if (typeof options.minDate === 'string')
            this.minDate = moment(options.minDate, this.locale.format);

        if (typeof options.maxDate === 'string')
            this.maxDate = moment(options.maxDate, this.locale.format);

        if (typeof options.startDate === 'object')
            this.startDate = moment(options.startDate);

        if (typeof options.endDate === 'object')
            this.endDate = moment(options.endDate);

        if (typeof options.minDate === 'object')
            this.minDate = moment(options.minDate);

        if (typeof options.maxDate === 'object')
            this.maxDate = moment(options.maxDate);

        // sanity check for bad options
        if (this.minDate && this.startDate.isBefore(this.minDate))
            this.startDate = this.minDate.clone();

        // sanity check for bad options
        if (this.maxDate && this.endDate.isAfter(this.maxDate))
            this.endDate = this.maxDate.clone();

        if (typeof options.applyClass === 'string')
            this.applyClass = options.applyClass;

        if (typeof options.cancelClass === 'string')
            this.cancelClass = options.cancelClass;

        if (typeof options.dateLimit === 'object')
            this.dateLimit = options.dateLimit;

        if (typeof options.opens === 'string')
            this.opens = options.opens;

        if (typeof options.drops === 'string')
            this.drops = options.drops;

        if (typeof options.showWeekNumbers === 'boolean')
            this.showWeekNumbers = options.showWeekNumbers;

        if (typeof options.showISOWeekNumbers === 'boolean')
            this.showISOWeekNumbers = options.showISOWeekNumbers;

        if (typeof options.buttonClasses === 'string')
            this.buttonClasses = options.buttonClasses;

        if (typeof options.buttonClasses === 'object')
            this.buttonClasses = options.buttonClasses.join(' ');

        if (typeof options.showDropdowns === 'boolean')
            this.showDropdowns = options.showDropdowns;

        if (typeof options.showCustomRangeLabel === 'boolean')
            this.showCustomRangeLabel = options.showCustomRangeLabel;

        if (typeof options.singleDatePicker === 'boolean') {
            this.singleDatePicker = options.singleDatePicker;
            if (this.singleDatePicker)
                this.endDate = this.startDate.clone();
        }

        if (typeof options.timePicker === 'boolean')
            this.timePicker = options.timePicker;

        if (typeof options.timePickerSeconds === 'boolean')
            this.timePickerSeconds = options.timePickerSeconds;

        if (typeof options.timePickerIncrement === 'number')
            this.timePickerIncrement = options.timePickerIncrement;

        if (typeof options.timePicker24Hour === 'boolean')
            this.timePicker24Hour = options.timePicker24Hour;

        if (typeof options.autoApply === 'boolean')
            this.autoApply = options.autoApply;

        if (typeof options.autoUpdateInput === 'boolean')
            this.autoUpdateInput = options.autoUpdateInput;

        if (typeof options.linkedCalendars === 'boolean')
            this.linkedCalendars = options.linkedCalendars;

        if (typeof options.isInvalidDate === 'function')
            this.isInvalidDate = options.isInvalidDate;

        if (typeof options.isCustomDate === 'function')
            this.isCustomDate = options.isCustomDate;

        if (typeof options.alwaysShowCalendars === 'boolean')
            this.alwaysShowCalendars = options.alwaysShowCalendars;

        // update day names order to firstDay
        if (this.locale.firstDay != 0) {
            var iterator = this.locale.firstDay;
            while (iterator > 0) {
                this.locale.daysOfWeek.push(this.locale.daysOfWeek.shift());
                iterator--;
            }
        }

        var start, end, range;

        //if no start/end dates set, check if an input element contains initial values
        if (typeof options.startDate === 'undefined' && typeof options.endDate === 'undefined') {
            if ($(this.element).is('input[type=text]')) {
                var val = $(this.element).val()
                  , split = val.split(this.locale.separator);

                start = end = null;

                if (split.length == 2) {
                    start = moment(split[0], this.locale.format);
                    end = moment(split[1], this.locale.format);
                } else if (this.singleDatePicker && val !== "") {
                    start = moment(val, this.locale.format);
                    end = moment(val, this.locale.format);
                }
                if (start !== null && end !== null) {
                    this.setStartDate(start);
                    this.setEndDate(end);
                }
            }
        }

        if (typeof options.ranges === 'object') {
            for (range in options.ranges) {

                if (typeof options.ranges[range][0] === 'string')
                    start = moment(options.ranges[range][0], this.locale.format);
                else
                    start = moment(options.ranges[range][0]);

                if (typeof options.ranges[range][1] === 'string')
                    end = moment(options.ranges[range][1], this.locale.format);
                else
                    end = moment(options.ranges[range][1]);

                // If the start or end date exceed those allowed by the minDate or dateLimit
                // options, shorten the range to the allowable period.
                if (this.minDate && start.isBefore(this.minDate))
                    start = this.minDate.clone();

                var maxDate = this.maxDate;
                if (this.dateLimit && maxDate && start.clone().add(this.dateLimit).isAfter(maxDate))
                    maxDate = start.clone().add(this.dateLimit);
                if (maxDate && end.isAfter(maxDate))
                    end = maxDate.clone();

                // If the end of the range is before the minimum or the start of the range is
                // after the maximum, don't display this range option at all.
                if ((this.minDate && end.isBefore(this.minDate, this.timepicker ? 'minute' : 'day')) || (maxDate && start.isAfter(maxDate, this.timepicker ? 'minute' : 'day')))
                    continue;

                //Support unicode chars in the range names.
                var elem = document.createElement('textarea');
                elem.innerHTML = range;
                var rangeHtml = elem.value;

                this.ranges[rangeHtml] = [start, end];
            }

            var list = '<ul>';
            for (range in this.ranges) {
                list += '<li data-range-key="' + range + '">' + range + '</li>';
            }
            if (this.showCustomRangeLabel) {
                list += '<li data-range-key="' + this.locale.customRangeLabel + '">' + this.locale.customRangeLabel + '</li>';
            }
            list += '</ul>';
            this.container.find('.ranges').prepend(list);
        }

        if (typeof cb === 'function') {
            this.callback = cb;
        }

        if (!this.timePicker) {
            this.startDate = this.startDate.startOf('day');
            this.endDate = this.endDate.endOf('day');
            this.container.find('.calendar-time').hide();
        }

        //can't be used together for now
        if (this.timePicker && this.autoApply)
            this.autoApply = false;

        if (this.autoApply && typeof options.ranges !== 'object') {
            this.container.find('.ranges').hide();
        } else if (this.autoApply) {
            this.container.find('.applyBtn, .cancelBtn').addClass('hide');
        }

        if (this.singleDatePicker) {
            this.container.addClass('single');
            this.container.find('.calendar.left').addClass('single');
            this.container.find('.calendar.left').show();
            this.container.find('.calendar.right').hide();
            this.container.find('.daterangepicker_input input, .daterangepicker_input > i').hide();
            if (this.timePicker) {
                this.container.find('.ranges ul').hide();
            } else {
                this.container.find('.ranges').hide();
            }
        }

        if ((typeof options.ranges === 'undefined' && !this.singleDatePicker) || this.alwaysShowCalendars) {
            this.container.addClass('show-calendar');
        }

        this.container.addClass('opens' + this.opens);

        //swap the position of the predefined ranges if opens right
        if (typeof options.ranges !== 'undefined' && this.opens == 'right') {
            this.container.find('.ranges').prependTo(this.container.find('.calendar.left').parent());
        }

        //apply CSS classes and labels to buttons
        this.container.find('.applyBtn, .cancelBtn').addClass(this.buttonClasses);
        if (this.applyClass.length)
            this.container.find('.applyBtn').addClass(this.applyClass);
        if (this.cancelClass.length)
            this.container.find('.cancelBtn').addClass(this.cancelClass);
        this.container.find('.applyBtn').html(this.locale.applyLabel);
        this.container.find('.cancelBtn').html(this.locale.cancelLabel);

        //
        // event listeners
        //

        this.container.find('.calendar').on('click.daterangepicker', '.prev', $.proxy(this.clickPrev, this)).on('click.daterangepicker', '.next', $.proxy(this.clickNext, this)).on('mousedown.daterangepicker', 'td.available', $.proxy(this.clickDate, this)).on('mouseenter.daterangepicker', 'td.available', $.proxy(this.hoverDate, this)).on('mouseleave.daterangepicker', 'td.available', $.proxy(this.updateFormInputs, this)).on('change.daterangepicker', 'select.yearselect', $.proxy(this.monthOrYearChanged, this)).on('change.daterangepicker', 'select.monthselect', $.proxy(this.monthOrYearChanged, this)).on('change.daterangepicker', 'select.hourselect,select.minuteselect,select.secondselect,select.ampmselect', $.proxy(this.timeChanged, this)).on('click.daterangepicker', '.daterangepicker_input input', $.proxy(this.showCalendars, this)).on('focus.daterangepicker', '.daterangepicker_input input', $.proxy(this.formInputsFocused, this)).on('blur.daterangepicker', '.daterangepicker_input input', $.proxy(this.formInputsBlurred, this)).on('change.daterangepicker', '.daterangepicker_input input', $.proxy(this.formInputsChanged, this));

        this.container.find('.ranges').on('click.daterangepicker', 'button.applyBtn', $.proxy(this.clickApply, this)).on('click.daterangepicker', 'button.cancelBtn', $.proxy(this.clickCancel, this)).on('click.daterangepicker', 'li', $.proxy(this.clickRange, this)).on('mouseenter.daterangepicker', 'li', $.proxy(this.hoverRange, this)).on('mouseleave.daterangepicker', 'li', $.proxy(this.updateFormInputs, this));

        if (this.element.is('input') || this.element.is('button')) {
            this.element.on({
                'click.daterangepicker': $.proxy(this.show, this),
                'focus.daterangepicker': $.proxy(this.show, this),
                'keyup.daterangepicker': $.proxy(this.elementChanged, this),
                'keydown.daterangepicker': $.proxy(this.keydown, this)
            });
        } else {
            this.element.on('click.daterangepicker', $.proxy(this.toggle, this));
        }

        //
        // if attached to a text input, set the initial value
        //

        if (this.element.is('input') && !this.singleDatePicker && this.autoUpdateInput) {
            this.element.val(this.startDate.format(this.locale.format) + this.locale.separator + this.endDate.format(this.locale.format));
            this.element.trigger('change');
        } else if (this.element.is('input') && this.autoUpdateInput) {
            this.element.val(this.startDate.format(this.locale.format));
            this.element.trigger('change');
        }

    };

    DateRangePicker.prototype = {

        constructor: DateRangePicker,

        setStartDate: function(startDate) {
            if (typeof startDate === 'string')
                this.startDate = moment(startDate, this.locale.format);

            if (typeof startDate === 'object')
                this.startDate = moment(startDate);

            if (!this.timePicker)
                this.startDate = this.startDate.startOf('day');

            if (this.timePicker && this.timePickerIncrement)
                this.startDate.minute(Math.round(this.startDate.minute() / this.timePickerIncrement) * this.timePickerIncrement);

            if (this.minDate && this.startDate.isBefore(this.minDate)) {
                this.startDate = this.minDate.clone();
                if (this.timePicker && this.timePickerIncrement)
                    this.startDate.minute(Math.round(this.startDate.minute() / this.timePickerIncrement) * this.timePickerIncrement);
            }

            if (this.maxDate && this.startDate.isAfter(this.maxDate)) {
                this.startDate = this.maxDate.clone();
                if (this.timePicker && this.timePickerIncrement)
                    this.startDate.minute(Math.floor(this.startDate.minute() / this.timePickerIncrement) * this.timePickerIncrement);
            }

            if (!this.isShowing)
                this.updateElement();

            this.updateMonthsInView();
        },

        setEndDate: function(endDate) {
            if (typeof endDate === 'string')
                this.endDate = moment(endDate, this.locale.format);

            if (typeof endDate === 'object')
                this.endDate = moment(endDate);

            if (!this.timePicker)
                this.endDate = this.endDate.endOf('day');

            if (this.timePicker && this.timePickerIncrement)
                this.endDate.minute(Math.round(this.endDate.minute() / this.timePickerIncrement) * this.timePickerIncrement);

            if (this.endDate.isBefore(this.startDate))
                this.endDate = this.startDate.clone();

            if (this.maxDate && this.endDate.isAfter(this.maxDate))
                this.endDate = this.maxDate.clone();

            if (this.dateLimit && this.startDate.clone().add(this.dateLimit).isBefore(this.endDate))
                this.endDate = this.startDate.clone().add(this.dateLimit);

            this.previousRightTime = this.endDate.clone();

            if (!this.isShowing)
                this.updateElement();

            this.updateMonthsInView();
        },

        isInvalidDate: function() {
            return false;
        },

        isCustomDate: function() {
            return false;
        },

        updateView: function() {
            if (this.timePicker) {
                this.renderTimePicker('left');
                this.renderTimePicker('right');
                if (!this.endDate) {
                    this.container.find('.right .calendar-time select').attr('disabled', 'disabled').addClass('disabled');
                } else {
                    this.container.find('.right .calendar-time select').removeAttr('disabled').removeClass('disabled');
                }
            }
            if (this.endDate) {
                this.container.find('input[name="daterangepicker_end"]').removeClass('active');
                this.container.find('input[name="daterangepicker_start"]').addClass('active');
            } else {
                this.container.find('input[name="daterangepicker_end"]').addClass('active');
                this.container.find('input[name="daterangepicker_start"]').removeClass('active');
            }
            this.updateMonthsInView();
            this.updateCalendars();
            this.updateFormInputs();
        },

        updateMonthsInView: function() {
            if (this.endDate) {

                //if both dates are visible already, do nothing
                if (!this.singleDatePicker && this.leftCalendar.month && this.rightCalendar.month && (this.startDate.format('YYYY-MM') == this.leftCalendar.month.format('YYYY-MM') || this.startDate.format('YYYY-MM') == this.rightCalendar.month.format('YYYY-MM')) && (this.endDate.format('YYYY-MM') == this.leftCalendar.month.format('YYYY-MM') || this.endDate.format('YYYY-MM') == this.rightCalendar.month.format('YYYY-MM'))) {
                    return;
                }

                this.leftCalendar.month = this.startDate.clone().date(2);
                if (!this.linkedCalendars && (this.endDate.month() != this.startDate.month() || this.endDate.year() != this.startDate.year())) {
                    this.rightCalendar.month = this.endDate.clone().date(2);
                } else {
                    this.rightCalendar.month = this.startDate.clone().date(2).add(1, 'month');
                }

            } else {
                if (this.leftCalendar.month.format('YYYY-MM') != this.startDate.format('YYYY-MM') && this.rightCalendar.month.format('YYYY-MM') != this.startDate.format('YYYY-MM')) {
                    this.leftCalendar.month = this.startDate.clone().date(2);
                    this.rightCalendar.month = this.startDate.clone().date(2).add(1, 'month');
                }
            }
            if (this.maxDate && this.linkedCalendars && !this.singleDatePicker && this.rightCalendar.month > this.maxDate) {
                this.rightCalendar.month = this.maxDate.clone().date(2);
                this.leftCalendar.month = this.maxDate.clone().date(2).subtract(1, 'month');
            }
        },

        updateCalendars: function() {

            if (this.timePicker) {
                var hour, minute, second;
                if (this.endDate) {
                    hour = parseInt(this.container.find('.left .hourselect').val(), 10);
                    minute = parseInt(this.container.find('.left .minuteselect').val(), 10);
                    second = this.timePickerSeconds ? parseInt(this.container.find('.left .secondselect').val(), 10) : 0;
                    if (!this.timePicker24Hour) {
                        var ampm = this.container.find('.left .ampmselect').val();
                        if (ampm === 'PM' && hour < 12)
                            hour += 12;
                        if (ampm === 'AM' && hour === 12)
                            hour = 0;
                    }
                } else {
                    hour = parseInt(this.container.find('.right .hourselect').val(), 10);
                    minute = parseInt(this.container.find('.right .minuteselect').val(), 10);
                    second = this.timePickerSeconds ? parseInt(this.container.find('.right .secondselect').val(), 10) : 0;
                    if (!this.timePicker24Hour) {
                        var ampm = this.container.find('.right .ampmselect').val();
                        if (ampm === 'PM' && hour < 12)
                            hour += 12;
                        if (ampm === 'AM' && hour === 12)
                            hour = 0;
                    }
                }
                this.leftCalendar.month.hour(hour).minute(minute).second(second);
                this.rightCalendar.month.hour(hour).minute(minute).second(second);
            }

            this.renderCalendar('left');
            this.renderCalendar('right');

            //highlight any predefined range matching the current start and end dates
            this.container.find('.ranges li').removeClass('active');
            if (this.endDate == null)
                return;

            this.calculateChosenLabel();
        },

        renderCalendar: function(side) {

            //
            // Build the matrix of dates that will populate the calendar
            //

            var calendar = side == 'left' ? this.leftCalendar : this.rightCalendar;
            var month = calendar.month.month();
            var year = calendar.month.year();
            var hour = calendar.month.hour();
            var minute = calendar.month.minute();
            var second = calendar.month.second();
            var daysInMonth = moment([year, month]).daysInMonth();
            var firstDay = moment([year, month, 1]);
            var lastDay = moment([year, month, daysInMonth]);
            var lastMonth = moment(firstDay).subtract(1, 'month').month();
            var lastYear = moment(firstDay).subtract(1, 'month').year();
            var daysInLastMonth = moment([lastYear, lastMonth]).daysInMonth();
            var dayOfWeek = firstDay.day();

            //initialize a 6 rows x 7 columns array for the calendar
            var calendar = [];
            calendar.firstDay = firstDay;
            calendar.lastDay = lastDay;

            for (var i = 0; i < 6; i++) {
                calendar[i] = [];
            }

            //populate the calendar with date objects
            var startDay = daysInLastMonth - dayOfWeek + this.locale.firstDay + 1;
            if (startDay > daysInLastMonth)
                startDay -= 7;

            if (dayOfWeek == this.locale.firstDay)
                startDay = daysInLastMonth - 6;

            var curDate = moment([lastYear, lastMonth, startDay, 12, minute, second]);

            var col, row;
            for (var i = 0, col = 0, row = 0; i < 42; i++,
            col++,
            curDate = moment(curDate).add(24, 'hour')) {
                if (i > 0 && col % 7 === 0) {
                    col = 0;
                    row++;
                }
                calendar[row][col] = curDate.clone().hour(hour).minute(minute).second(second);
                curDate.hour(12);

                if (this.minDate && calendar[row][col].format('YYYY-MM-DD') == this.minDate.format('YYYY-MM-DD') && calendar[row][col].isBefore(this.minDate) && side == 'left') {
                    calendar[row][col] = this.minDate.clone();
                }

                if (this.maxDate && calendar[row][col].format('YYYY-MM-DD') == this.maxDate.format('YYYY-MM-DD') && calendar[row][col].isAfter(this.maxDate) && side == 'right') {
                    calendar[row][col] = this.maxDate.clone();
                }

            }

            //make the calendar object available to hoverDate/clickDate
            if (side == 'left') {
                this.leftCalendar.calendar = calendar;
            } else {
                this.rightCalendar.calendar = calendar;
            }

            //
            // Display the calendar
            //

            var minDate = side == 'left' ? this.minDate : this.startDate;
            var maxDate = this.maxDate;
            var selected = side == 'left' ? this.startDate : this.endDate;
            var arrow = this.locale.direction == 'ltr' ? {
                left: 'chevron-left',
                right: 'chevron-right'
            } : {
                left: 'chevron-right',
                right: 'chevron-left'
            };

            var html = '<table class="table-condensed">';
            html += '<thead>';
            html += '<tr>';

            // add empty cell for week number
            if (this.showWeekNumbers || this.showISOWeekNumbers)
                html += '<th></th>';

            if ((!minDate || minDate.isBefore(calendar.firstDay)) && (!this.linkedCalendars || side == 'left')) {
                html += '<th class="prev available"><i class="fa fa-' + arrow.left + ' glyphicon glyphicon-' + arrow.left + '"></i></th>';
            } else {
                html += '<th></th>';
            }

            var dateHtml = this.locale.monthNames[calendar[1][1].month()] + calendar[1][1].format(" YYYY");

            if (this.showDropdowns) {
                var currentMonth = calendar[1][1].month();
                var currentYear = calendar[1][1].year();
                var maxYear = (maxDate && maxDate.year()) || (currentYear + 5);
                var minYear = (minDate && minDate.year()) || (currentYear - 50);
                var inMinYear = currentYear == minYear;
                var inMaxYear = currentYear == maxYear;

                var monthHtml = '<select class="monthselect">';
                for (var m = 0; m < 12; m++) {
                    if ((!inMinYear || m >= minDate.month()) && (!inMaxYear || m <= maxDate.month())) {
                        monthHtml += "<option value='" + m + "'" + (m === currentMonth ? " selected='selected'" : "") + ">" + this.locale.monthNames[m] + "</option>";
                    } else {
                        monthHtml += "<option value='" + m + "'" + (m === currentMonth ? " selected='selected'" : "") + " disabled='disabled'>" + this.locale.monthNames[m] + "</option>";
                    }
                }
                monthHtml += "</select>";

                var yearHtml = '<select class="yearselect">';
                for (var y = minYear; y <= maxYear; y++) {
                    yearHtml += '<option value="' + y + '"' + (y === currentYear ? ' selected="selected"' : '') + '>' + y + '</option>';
                }
                yearHtml += '</select>';

                dateHtml = monthHtml + yearHtml;
            }

            html += '<th colspan="5" class="month">' + dateHtml + '</th>';
            if ((!maxDate || maxDate.isAfter(calendar.lastDay)) && (!this.linkedCalendars || side == 'right' || this.singleDatePicker)) {
                html += '<th class="next available"><i class="fa fa-' + arrow.right + ' glyphicon glyphicon-' + arrow.right + '"></i></th>';
            } else {
                html += '<th></th>';
            }

            html += '</tr>';
            html += '<tr>';

            // add week number label
            if (this.showWeekNumbers || this.showISOWeekNumbers)
                html += '<th class="week">' + this.locale.weekLabel + '</th>';

            $.each(this.locale.daysOfWeek, function(index, dayOfWeek) {
                html += '<th>' + dayOfWeek + '</th>';
            });

            html += '</tr>';
            html += '</thead>';
            html += '<tbody>';

            //adjust maxDate to reflect the dateLimit setting in order to
            //grey out end dates beyond the dateLimit
            if (this.endDate == null && this.dateLimit) {
                var maxLimit = this.startDate.clone().add(this.dateLimit).endOf('day');
                if (!maxDate || maxLimit.isBefore(maxDate)) {
                    maxDate = maxLimit;
                }
            }

            for (var row = 0; row < 6; row++) {
                html += '<tr>';

                // add week number
                if (this.showWeekNumbers)
                    html += '<td class="week">' + calendar[row][0].week() + '</td>';
                else if (this.showISOWeekNumbers)
                    html += '<td class="week">' + calendar[row][0].isoWeek() + '</td>';

                for (var col = 0; col < 7; col++) {

                    var classes = [];

                    //highlight today's date
                    if (calendar[row][col].isSame(new Date(), "day"))
                        classes.push('today');

                    //highlight weekends
                    if (calendar[row][col].isoWeekday() > 5)
                        classes.push('weekend');

                    //grey out the dates in other months displayed at beginning and end of this calendar
                    if (calendar[row][col].month() != calendar[1][1].month())
                        classes.push('off');

                    //don't allow selection of dates before the minimum date
                    if (this.minDate && calendar[row][col].isBefore(this.minDate, 'day'))
                        classes.push('off', 'disabled');

                    //don't allow selection of dates after the maximum date
                    if (maxDate && calendar[row][col].isAfter(maxDate, 'day'))
                        classes.push('off', 'disabled');

                    //don't allow selection of date if a custom function decides it's invalid
                    if (this.isInvalidDate(calendar[row][col]))
                        classes.push('off', 'disabled');

                    //highlight the currently selected start date
                    if (calendar[row][col].format('YYYY-MM-DD') == this.startDate.format('YYYY-MM-DD'))
                        classes.push('active', 'start-date');

                    //highlight the currently selected end date
                    if (this.endDate != null && calendar[row][col].format('YYYY-MM-DD') == this.endDate.format('YYYY-MM-DD'))
                        classes.push('active', 'end-date');

                    //highlight dates in-between the selected dates
                    if (this.endDate != null && calendar[row][col] > this.startDate && calendar[row][col] < this.endDate)
                        classes.push('in-range');

                    //apply custom classes for this date
                    var isCustom = this.isCustomDate(calendar[row][col]);
                    if (isCustom !== false) {
                        if (typeof isCustom === 'string')
                            classes.push(isCustom);
                        else
                            Array.prototype.push.apply(classes, isCustom);
                    }

                    var cname = ''
                      , disabled = false;
                    for (var i = 0; i < classes.length; i++) {
                        cname += classes[i] + ' ';
                        if (classes[i] == 'disabled')
                            disabled = true;
                    }
                    if (!disabled)
                        cname += 'available';

                    html += '<td class="' + cname.replace(/^\s+|\s+$/g, '') + '" data-title="' + 'r' + row + 'c' + col + '">' + calendar[row][col].date() + '</td>';

                }
                html += '</tr>';
            }

            html += '</tbody>';
            html += '</table>';

            this.container.find('.calendar.' + side + ' .calendar-table').html(html);

        },

        renderTimePicker: function(side) {

            // Don't bother updating the time picker if it's currently disabled
            // because an end date hasn't been clicked yet
            if (side == 'right' && !this.endDate)
                return;

            var html, selected, minDate, maxDate = this.maxDate;

            if (this.dateLimit && (!this.maxDate || this.startDate.clone().add(this.dateLimit).isAfter(this.maxDate)))
                maxDate = this.startDate.clone().add(this.dateLimit);

            if (side == 'left') {
                selected = this.startDate.clone();
                minDate = this.minDate;
            } else if (side == 'right') {
                selected = this.endDate.clone();
                minDate = this.startDate;

                //Preserve the time already selected
                var timeSelector = this.container.find('.calendar.right .calendar-time div');
                if (timeSelector.html() != '') {

                    selected.hour(timeSelector.find('.hourselect option:selected').val() || selected.hour());
                    selected.minute(timeSelector.find('.minuteselect option:selected').val() || selected.minute());
                    selected.second(timeSelector.find('.secondselect option:selected').val() || selected.second());

                    if (!this.timePicker24Hour) {
                        var ampm = timeSelector.find('.ampmselect option:selected').val();
                        if (ampm === 'PM' && selected.hour() < 12)
                            selected.hour(selected.hour() + 12);
                        if (ampm === 'AM' && selected.hour() === 12)
                            selected.hour(0);
                    }

                }

                if (selected.isBefore(this.startDate))
                    selected = this.startDate.clone();

                if (maxDate && selected.isAfter(maxDate))
                    selected = maxDate.clone();

            }

            //
            // hours
            //

            html = '<select class="hourselect">';

            var start = this.timePicker24Hour ? 0 : 1;
            var end = this.timePicker24Hour ? 23 : 12;

            for (var i = start; i <= end; i++) {
                var i_in_24 = i;
                if (!this.timePicker24Hour)
                    i_in_24 = selected.hour() >= 12 ? (i == 12 ? 12 : i + 12) : (i == 12 ? 0 : i);

                var time = selected.clone().hour(i_in_24);
                var disabled = false;
                if (minDate && time.minute(59).isBefore(minDate))
                    disabled = true;
                if (maxDate && time.minute(0).isAfter(maxDate))
                    disabled = true;

                if (i_in_24 == selected.hour() && !disabled) {
                    html += '<option value="' + i + '" selected="selected">' + i + '</option>';
                } else if (disabled) {
                    html += '<option value="' + i + '" disabled="disabled" class="disabled">' + i + '</option>';
                } else {
                    html += '<option value="' + i + '">' + i + '</option>';
                }
            }

            html += '</select> ';

            //
            // minutes
            //

            html += ': <select class="minuteselect">';

            for (var i = 0; i < 60; i += this.timePickerIncrement) {
                var padded = i < 10 ? '0' + i : i;
                var time = selected.clone().minute(i);

                var disabled = false;
                if (minDate && time.second(59).isBefore(minDate))
                    disabled = true;
                if (maxDate && time.second(0).isAfter(maxDate))
                    disabled = true;

                if (selected.minute() == i && !disabled) {
                    html += '<option value="' + i + '" selected="selected">' + padded + '</option>';
                } else if (disabled) {
                    html += '<option value="' + i + '" disabled="disabled" class="disabled">' + padded + '</option>';
                } else {
                    html += '<option value="' + i + '">' + padded + '</option>';
                }
            }

            html += '</select> ';

            //
            // seconds
            //

            if (this.timePickerSeconds) {
                html += ': <select class="secondselect">';

                for (var i = 0; i < 60; i++) {
                    var padded = i < 10 ? '0' + i : i;
                    var time = selected.clone().second(i);

                    var disabled = false;
                    if (minDate && time.isBefore(minDate))
                        disabled = true;
                    if (maxDate && time.isAfter(maxDate))
                        disabled = true;

                    if (selected.second() == i && !disabled) {
                        html += '<option value="' + i + '" selected="selected">' + padded + '</option>';
                    } else if (disabled) {
                        html += '<option value="' + i + '" disabled="disabled" class="disabled">' + padded + '</option>';
                    } else {
                        html += '<option value="' + i + '">' + padded + '</option>';
                    }
                }

                html += '</select> ';
            }

            //
            // AM/PM
            //

            if (!this.timePicker24Hour) {
                html += '<select class="ampmselect">';

                var am_html = '';
                var pm_html = '';

                if (minDate && selected.clone().hour(12).minute(0).second(0).isBefore(minDate))
                    am_html = ' disabled="disabled" class="disabled"';

                if (maxDate && selected.clone().hour(0).minute(0).second(0).isAfter(maxDate))
                    pm_html = ' disabled="disabled" class="disabled"';

                if (selected.hour() >= 12) {
                    html += '<option value="AM"' + am_html + '>AM</option><option value="PM" selected="selected"' + pm_html + '>PM</option>';
                } else {
                    html += '<option value="AM" selected="selected"' + am_html + '>AM</option><option value="PM"' + pm_html + '>PM</option>';
                }

                html += '</select>';
            }

            this.container.find('.calendar.' + side + ' .calendar-time div').html(html);

        },

        updateFormInputs: function() {

            //ignore mouse movements while an above-calendar text input has focus
            if (this.container.find('input[name=daterangepicker_start]').is(":focus") || this.container.find('input[name=daterangepicker_end]').is(":focus"))
                return;

            this.container.find('input[name=daterangepicker_start]').val(this.startDate.format(this.locale.format));
            if (this.endDate)
                this.container.find('input[name=daterangepicker_end]').val(this.endDate.format(this.locale.format));

            if (this.singleDatePicker || (this.endDate && (this.startDate.isBefore(this.endDate) || this.startDate.isSame(this.endDate)))) {
                this.container.find('button.applyBtn').removeAttr('disabled');
            } else {
                this.container.find('button.applyBtn').attr('disabled', 'disabled');
            }

        },

        move: function() {
            var parentOffset = {
                top: 0,
                left: 0
            }, containerTop;
            var parentRightEdge = $(window).width();
            if (!this.parentEl.is('body')) {
                parentOffset = {
                    top: this.parentEl.offset().top - this.parentEl.scrollTop(),
                    left: this.parentEl.offset().left - this.parentEl.scrollLeft()
                };
                parentRightEdge = this.parentEl[0].clientWidth + this.parentEl.offset().left;
            }

            if (this.drops == 'up')
                containerTop = this.element.offset().top - this.container.outerHeight() - parentOffset.top;
            else
                containerTop = this.element.offset().top + this.element.outerHeight() - parentOffset.top;
            this.container[this.drops == 'up' ? 'addClass' : 'removeClass']('dropup');

            if (this.opens == 'left') {
                this.container.css({
                    top: containerTop,
                    right: parentRightEdge - this.element.offset().left - this.element.outerWidth(),
                    left: 'auto'
                });
                if (this.container.offset().left < 0) {
                    this.container.css({
                        right: 'auto',
                        left: 9
                    });
                }
            } else if (this.opens == 'center') {
                this.container.css({
                    top: containerTop,
                    left: this.element.offset().left - parentOffset.left + this.element.outerWidth() / 2 - this.container.outerWidth() / 2,
                    right: 'auto'
                });
                if (this.container.offset().left < 0) {
                    this.container.css({
                        right: 'auto',
                        left: 9
                    });
                }
            } else {
                this.container.css({
                    top: containerTop,
                    left: this.element.offset().left - parentOffset.left,
                    right: 'auto'
                });
                if (this.container.offset().left + this.container.outerWidth() > $(window).width()) {
                    this.container.css({
                        left: 'auto',
                        right: 0
                    });
                }
            }
        },

        show: function(e) {
            if (this.isShowing)
                return;

            // Create a click proxy that is private to this instance of datepicker, for unbinding
            this._outsideClickProxy = $.proxy(function(e) {
                this.outsideClick(e);
            }, this);

            // Bind global datepicker mousedown for hiding and
            $(document).on('mousedown.daterangepicker', this._outsideClickProxy)// also support mobile devices
            .on('touchend.daterangepicker', this._outsideClickProxy)// also explicitly play nice with Bootstrap dropdowns, which stopPropagation when clicking them
            .on('click.daterangepicker', '[data-toggle=dropdown]', this._outsideClickProxy)// and also close when focus changes to outside the picker (eg. tabbing between controls)
            .on('focusin.daterangepicker', this._outsideClickProxy);

            // Reposition the picker if the window is resized while it's open
            $(window).on('resize.daterangepicker', $.proxy(function(e) {
                this.move(e);
            }, this));

            this.oldStartDate = this.startDate.clone();
            this.oldEndDate = this.endDate.clone();
            this.previousRightTime = this.endDate.clone();

            this.updateView();
            this.container.show();
            this.move();
            this.element.trigger('show.daterangepicker', this);
            this.isShowing = true;
        },

        hide: function(e) {
            if (!this.isShowing)
                return;

            //incomplete date selection, revert to last values
            if (!this.endDate) {
                this.startDate = this.oldStartDate.clone();
                this.endDate = this.oldEndDate.clone();
            }

            //if a new date range was selected, invoke the user callback function
            if (!this.startDate.isSame(this.oldStartDate) || !this.endDate.isSame(this.oldEndDate))
                this.callback(this.startDate, this.endDate, this.chosenLabel);

            //if picker is attached to a text input, update it
            this.updateElement();

            $(document).off('.daterangepicker');
            $(window).off('.daterangepicker');
            this.container.hide();
            this.element.trigger('hide.daterangepicker', this);
            this.isShowing = false;
        },

        toggle: function(e) {
            if (this.isShowing) {
                this.hide();
            } else {
                this.show();
            }
        },

        outsideClick: function(e) {
            var target = $(e.target);
            // if the page is clicked anywhere except within the daterangerpicker/button
            // itself then call this.hide()
            if (// ie modal dialog fix
            e.type == "focusin" || target.closest(this.element).length || target.closest(this.container).length || target.closest('.calendar-table').length)
                return;
            this.hide();
            this.element.trigger('outsideClick.daterangepicker', this);
        },

        showCalendars: function() {
            this.container.addClass('show-calendar');
            this.move();
            this.element.trigger('showCalendar.daterangepicker', this);
        },

        hideCalendars: function() {
            this.container.removeClass('show-calendar');
            this.element.trigger('hideCalendar.daterangepicker', this);
        },

        hoverRange: function(e) {

            //ignore mouse movements while an above-calendar text input has focus
            if (this.container.find('input[name=daterangepicker_start]').is(":focus") || this.container.find('input[name=daterangepicker_end]').is(":focus"))
                return;

            var label = e.target.getAttribute('data-range-key');

            if (label == this.locale.customRangeLabel) {
                this.updateView();
            } else {
                var dates = this.ranges[label];
                this.container.find('input[name=daterangepicker_start]').val(dates[0].format(this.locale.format));
                this.container.find('input[name=daterangepicker_end]').val(dates[1].format(this.locale.format));
            }

        },

        clickRange: function(e) {
            var label = e.target.getAttribute('data-range-key');
            this.chosenLabel = label;
            if (label == this.locale.customRangeLabel) {
                this.showCalendars();
            } else {
                var dates = this.ranges[label];
                this.startDate = dates[0];
                this.endDate = dates[1];

                if (!this.timePicker) {
                    this.startDate.startOf('day');
                    this.endDate.endOf('day');
                }

                if (!this.alwaysShowCalendars)
                    this.hideCalendars();
                this.clickApply();
            }
        },

        clickPrev: function(e) {
            var cal = $(e.target).parents('.calendar');
            if (cal.hasClass('left')) {
                this.leftCalendar.month.subtract(1, 'month');
                if (this.linkedCalendars)
                    this.rightCalendar.month.subtract(1, 'month');
            } else {
                this.rightCalendar.month.subtract(1, 'month');
            }
            this.updateCalendars();
        },

        clickNext: function(e) {
            var cal = $(e.target).parents('.calendar');
            if (cal.hasClass('left')) {
                this.leftCalendar.month.add(1, 'month');
            } else {
                this.rightCalendar.month.add(1, 'month');
                if (this.linkedCalendars)
                    this.leftCalendar.month.add(1, 'month');
            }
            this.updateCalendars();
        },

        hoverDate: function(e) {

            //ignore mouse movements while an above-calendar text input has focus
            //if (this.container.find('input[name=daterangepicker_start]').is(":focus") || this.container.find('input[name=daterangepicker_end]').is(":focus"))
            //    return;

            //ignore dates that can't be selected
            if (!$(e.target).hasClass('available'))
                return;

            //have the text inputs above calendars reflect the date being hovered over
            var title = $(e.target).attr('data-title');
            var row = title.substr(1, 1);
            var col = title.substr(3, 1);
            var cal = $(e.target).parents('.calendar');
            var date = cal.hasClass('left') ? this.leftCalendar.calendar[row][col] : this.rightCalendar.calendar[row][col];

            if (this.endDate && !this.container.find('input[name=daterangepicker_start]').is(":focus")) {
                this.container.find('input[name=daterangepicker_start]').val(date.format(this.locale.format));
            } else if (!this.endDate && !this.container.find('input[name=daterangepicker_end]').is(":focus")) {
                this.container.find('input[name=daterangepicker_end]').val(date.format(this.locale.format));
            }

            //highlight the dates between the start date and the date being hovered as a potential end date
            var leftCalendar = this.leftCalendar;
            var rightCalendar = this.rightCalendar;
            var startDate = this.startDate;
            if (!this.endDate) {
                this.container.find('.calendar tbody td').each(function(index, el) {

                    //skip week numbers, only look at dates
                    if ($(el).hasClass('week'))
                        return;

                    var title = $(el).attr('data-title');
                    var row = title.substr(1, 1);
                    var col = title.substr(3, 1);
                    var cal = $(el).parents('.calendar');
                    var dt = cal.hasClass('left') ? leftCalendar.calendar[row][col] : rightCalendar.calendar[row][col];

                    if ((dt.isAfter(startDate) && dt.isBefore(date)) || dt.isSame(date, 'day')) {
                        $(el).addClass('in-range');
                    } else {
                        $(el).removeClass('in-range');
                    }

                });
            }

        },

        clickDate: function(e) {

            if (!$(e.target).hasClass('available'))
                return;

            var title = $(e.target).attr('data-title');
            var row = title.substr(1, 1);
            var col = title.substr(3, 1);
            var cal = $(e.target).parents('.calendar');
            var date = cal.hasClass('left') ? this.leftCalendar.calendar[row][col] : this.rightCalendar.calendar[row][col];

            //
            // this function needs to do a few things:
            // * alternate between selecting a start and end date for the range,
            // * if the time picker is enabled, apply the hour/minute/second from the select boxes to the clicked date
            // * if autoapply is enabled, and an end date was chosen, apply the selection
            // * if single date picker mode, and time picker isn't enabled, apply the selection immediately
            // * if one of the inputs above the calendars was focused, cancel that manual input
            //

            if (this.endDate || date.isBefore(this.startDate, 'day')) {
                //picking start
                if (this.timePicker) {
                    var hour = parseInt(this.container.find('.left .hourselect').val(), 10);
                    if (!this.timePicker24Hour) {
                        var ampm = this.container.find('.left .ampmselect').val();
                        if (ampm === 'PM' && hour < 12)
                            hour += 12;
                        if (ampm === 'AM' && hour === 12)
                            hour = 0;
                    }
                    var minute = parseInt(this.container.find('.left .minuteselect').val(), 10);
                    var second = this.timePickerSeconds ? parseInt(this.container.find('.left .secondselect').val(), 10) : 0;
                    date = date.clone().hour(hour).minute(minute).second(second);
                }
                this.endDate = null;
                this.setStartDate(date.clone());
            } else if (!this.endDate && date.isBefore(this.startDate)) {
                //special case: clicking the same date for start/end,
                //but the time of the end date is before the start date
                this.setEndDate(this.startDate.clone());
            } else {
                // picking end
                if (this.timePicker) {
                    var hour = parseInt(this.container.find('.right .hourselect').val(), 10);
                    if (!this.timePicker24Hour) {
                        var ampm = this.container.find('.right .ampmselect').val();
                        if (ampm === 'PM' && hour < 12)
                            hour += 12;
                        if (ampm === 'AM' && hour === 12)
                            hour = 0;
                    }
                    var minute = parseInt(this.container.find('.right .minuteselect').val(), 10);
                    var second = this.timePickerSeconds ? parseInt(this.container.find('.right .secondselect').val(), 10) : 0;
                    date = date.clone().hour(hour).minute(minute).second(second);
                }
                this.setEndDate(date.clone());
                if (this.autoApply) {
                    this.calculateChosenLabel();
                    this.clickApply();
                }
            }

            if (this.singleDatePicker) {
                this.setEndDate(this.startDate);
                if (!this.timePicker)
                    this.clickApply();
            }

            this.updateView();

            //This is to cancel the blur event handler if the mouse was in one of the inputs
            e.stopPropagation();

        },

        calculateChosenLabel: function() {
            var customRange = true;
            var i = 0;
            for (var range in this.ranges) {
                if (this.timePicker) {
                    if (this.startDate.isSame(this.ranges[range][0]) && this.endDate.isSame(this.ranges[range][1])) {
                        customRange = false;
                        this.chosenLabel = this.container.find('.ranges li:eq(' + i + ')').addClass('active').html();
                        break;
                    }
                } else {
                    //ignore times when comparing dates if time picker is not enabled
                    if (this.startDate.format('YYYY-MM-DD') == this.ranges[range][0].format('YYYY-MM-DD') && this.endDate.format('YYYY-MM-DD') == this.ranges[range][1].format('YYYY-MM-DD')) {
                        customRange = false;
                        this.chosenLabel = this.container.find('.ranges li:eq(' + i + ')').addClass('active').html();
                        break;
                    }
                }
                i++;
            }
            if (customRange) {
                if (this.showCustomRangeLabel) {
                    this.chosenLabel = this.container.find('.ranges li:last').addClass('active').html();
                } else {
                    this.chosenLabel = null;
                }
                this.showCalendars();
            }
        },

        clickApply: function(e) {
            this.hide();
            this.element.trigger('apply.daterangepicker', this);
        },

        clickCancel: function(e) {
            this.startDate = this.oldStartDate;
            this.endDate = this.oldEndDate;
            this.hide();
            this.element.trigger('cancel.daterangepicker', this);
        },

        monthOrYearChanged: function(e) {
            var isLeft = $(e.target).closest('.calendar').hasClass('left')
              , leftOrRight = isLeft ? 'left' : 'right'
              , cal = this.container.find('.calendar.' + leftOrRight);

            // Month must be Number for new moment versions
            var month = parseInt(cal.find('.monthselect').val(), 10);
            var year = cal.find('.yearselect').val();

            if (!isLeft) {
                if (year < this.startDate.year() || (year == this.startDate.year() && month < this.startDate.month())) {
                    month = this.startDate.month();
                    year = this.startDate.year();
                }
            }

            if (this.minDate) {
                if (year < this.minDate.year() || (year == this.minDate.year() && month < this.minDate.month())) {
                    month = this.minDate.month();
                    year = this.minDate.year();
                }
            }

            if (this.maxDate) {
                if (year > this.maxDate.year() || (year == this.maxDate.year() && month > this.maxDate.month())) {
                    month = this.maxDate.month();
                    year = this.maxDate.year();
                }
            }

            if (isLeft) {
                this.leftCalendar.month.month(month).year(year);
                if (this.linkedCalendars)
                    this.rightCalendar.month = this.leftCalendar.month.clone().add(1, 'month');
            } else {
                this.rightCalendar.month.month(month).year(year);
                if (this.linkedCalendars)
                    this.leftCalendar.month = this.rightCalendar.month.clone().subtract(1, 'month');
            }
            this.updateCalendars();
        },

        timeChanged: function(e) {

            var cal = $(e.target).closest('.calendar')
              , isLeft = cal.hasClass('left');

            var hour = parseInt(cal.find('.hourselect').val(), 10);
            var minute = parseInt(cal.find('.minuteselect').val(), 10);
            var second = this.timePickerSeconds ? parseInt(cal.find('.secondselect').val(), 10) : 0;

            if (!this.timePicker24Hour) {
                var ampm = cal.find('.ampmselect').val();
                if (ampm === 'PM' && hour < 12)
                    hour += 12;
                if (ampm === 'AM' && hour === 12)
                    hour = 0;
            }

            if (isLeft) {
                var start = this.startDate.clone();
                start.hour(hour);
                start.minute(minute);
                start.second(second);
                this.setStartDate(start);
                if (this.singleDatePicker) {
                    this.endDate = this.startDate.clone();
                } else if (this.endDate && this.endDate.format('YYYY-MM-DD') == start.format('YYYY-MM-DD') && this.endDate.isBefore(start)) {
                    this.setEndDate(start.clone());
                }
            } else if (this.endDate) {
                var end = this.endDate.clone();
                end.hour(hour);
                end.minute(minute);
                end.second(second);
                this.setEndDate(end);
            }

            //update the calendars so all clickable dates reflect the new time component
            this.updateCalendars();

            //update the form inputs above the calendars with the new time
            this.updateFormInputs();

            //re-render the time pickers because changing one selection can affect what's enabled in another
            this.renderTimePicker('left');
            this.renderTimePicker('right');

        },

        formInputsChanged: function(e) {
            var isRight = $(e.target).closest('.calendar').hasClass('right');
            var start = moment(this.container.find('input[name="daterangepicker_start"]').val(), this.locale.format);
            var end = moment(this.container.find('input[name="daterangepicker_end"]').val(), this.locale.format);

            if (start.isValid() && end.isValid()) {

                if (isRight && end.isBefore(start))
                    start = end.clone();

                this.setStartDate(start);
                this.setEndDate(end);

                if (isRight) {
                    this.container.find('input[name="daterangepicker_start"]').val(this.startDate.format(this.locale.format));
                } else {
                    this.container.find('input[name="daterangepicker_end"]').val(this.endDate.format(this.locale.format));
                }

            }

            this.updateView();
        },

        formInputsFocused: function(e) {

            // Highlight the focused input
            this.container.find('input[name="daterangepicker_start"], input[name="daterangepicker_end"]').removeClass('active');
            $(e.target).addClass('active');

            // Set the state such that if the user goes back to using a mouse, 
            // the calendars are aware we're selecting the end of the range, not
            // the start. This allows someone to edit the end of a date range without
            // re-selecting the beginning, by clicking on the end date input then
            // using the calendar.
            var isRight = $(e.target).closest('.calendar').hasClass('right');
            if (isRight) {
                this.endDate = null;
                this.setStartDate(this.startDate.clone());
                this.updateView();
            }

        },

        formInputsBlurred: function(e) {

            // this function has one purpose right now: if you tab from the first
            // text input to the second in the UI, the endDate is nulled so that
            // you can click another, but if you tab out without clicking anything
            // or changing the input value, the old endDate should be retained

            if (!this.endDate) {
                var val = this.container.find('input[name="daterangepicker_end"]').val();
                var end = moment(val, this.locale.format);
                if (end.isValid()) {
                    this.setEndDate(end);
                    this.updateView();
                }
            }

        },

        elementChanged: function() {
            if (!this.element.is('input'))
                return;
            if (!this.element.val().length)
                return;
            if (this.element.val().length < this.locale.format.length)
                return;

            var dateString = this.element.val().split(this.locale.separator)
              , start = null
              , end = null;

            if (dateString.length === 2) {
                start = moment(dateString[0], this.locale.format);
                end = moment(dateString[1], this.locale.format);
            }

            if (this.singleDatePicker || start === null || end === null) {
                start = moment(this.element.val(), this.locale.format);
                end = start;
            }

            if (!start.isValid() || !end.isValid())
                return;

            this.setStartDate(start);
            this.setEndDate(end);
            this.updateView();
        },

        keydown: function(e) {
            //hide on tab or enter
            if ((e.keyCode === 9) || (e.keyCode === 13)) {
                this.hide();
            }
        },

        updateElement: function() {
            if (this.element.is('input') && !this.singleDatePicker && this.autoUpdateInput) {
                this.element.val(this.startDate.format(this.locale.format) + this.locale.separator + this.endDate.format(this.locale.format));
                this.element.trigger('change');
            } else if (this.element.is('input') && this.autoUpdateInput) {
                this.element.val(this.startDate.format(this.locale.format));
                this.element.trigger('change');
            }
        },

        remove: function() {
            this.container.remove();
            this.element.off('.daterangepicker');
            this.element.removeData();
        }

    };

    $.fn.daterangepicker = function(options, callback) {
        this.each(function() {
            var el = $(this);
            if (el.data('daterangepicker'))
                el.data('daterangepicker').remove();
            el.data('daterangepicker', new DateRangePicker(el,options,callback));
        });
        return this;
    }
    ;

    return DateRangePicker;

}));

var BalanceUpdater = {
    PlayerId: 0,
    _intervalId: null,
    logOutCount: 0,
    _isRunning: false,

    start: function() {//if (this._isRunning)
    //    return;

    //this._intervalId = setInterval(this.getBalanceAmount.bind(this), 10000);
    //this._isRunning = true;
    },

    stop: function() {
        clearInterval(this._intervalId);
        this._isRunning = false;
    },

    // balance
    getBalanceAmount: function() {
        if (this.PlayerId > 0) {

            var obj = {
                id: this.PlayerId,
                gameId: $('#ProductId').val() || 1
            };
            var data = $.param(obj);

            document.cookie = 'l_i=' + $.param({
                gameId: obj.gameId,
                id: this.PlayerId
            }) + '; expires=' + moment().add(1, 'day').toDate().toString() + '; path=/;SameSite=Lax';

            if (this.logOutCount > 0) {
                data = $.param({});
                document.cookie = 'l_i=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';
            }

            $.ajax({
                url: '/common/getinfo?' + data,
                type: 'post',
                dataType: 'json',
                success: this.onBalanceStatus.bind(this)
            });
        }
    },

    onBalanceStatus: function(data) {

        if (data.Balance) {
            this.logOutCount = 0;

            var $balanceViewer = $('#menu-button-balance');
            if ($balanceViewer.length) {
                $balanceViewer.text(' ' + data.Balance);
                ;
            } else {
                $balanceViewer = $('.Play--Balance');
                $balanceViewer.text(' ' + data.Balance);
            }

            $('#menu-played-balance').text(' ' + data.PlayedBalance);
            $('#menu-notplayed-balance').text(' ' + data.NotPlayedBalance);
            $('#menu-withdrawable-balance').text(' ' + data.Withdrawable);
            $('#menu-play-balance').text(' ' + data.Balance);

        } else if (data.LogOut == "1") {
            this.logOutCount++;
            if (this.logOutCount <= 2) {
                this.getBalanceAmount();
            }
            if (this.logOutCount > 2) {
                document.location.reload();
            }
        }

        //desktop message

        $('.msg--count').remove();
        $('#msg--count').remove();
        if (data.InboxCount > 0) {
            var $messageViewer = $('.Button--messages .msg--holder');
            var $menuMessageViewer = $('#msg-row');

            if ($messageViewer.length) {
                $messageViewer.append('<span class="msg--count">' + data.InboxCount + '</span>');
                $menuMessageViewer.append('<span id="msg--count" class="msg--count">' + data.InboxCount + '</span>');
            } else {
                $menuMessageViewer.append('<span class="msg--count">' + data.InboxCount + '</span>');
            }
        }
    }
};

/*! topbar 0.1.4, 2020-04-27
 *  http://buunguyen.github.io/topbar
 *  Copyright (c) 2020 Buu Nguyen
 *  Licensed under the MIT License */
(function(a, b) {
    "use strict";
    !function() {
        for (var b = 0, c = ["ms", "moz", "webkit", "o"], d = 0; d < c.length && !a.requestAnimationFrame; ++d)
            a.requestAnimationFrame = a[c[d] + "RequestAnimationFrame"],
            a.cancelAnimationFrame = a[c[d] + "CancelAnimationFrame"] || a[c[d] + "CancelRequestAnimationFrame"];
        a.requestAnimationFrame || (a.requestAnimationFrame = function(c) {
            var d = (new Date).getTime()
              , e = Math.max(0, 16 - (d - b))
              , f = a.setTimeout(function() {
                c(d + e)
            }, e);
            return b = d + e,
            f
        }
        ),
        a.cancelAnimationFrame || (a.cancelAnimationFrame = function(a) {
            clearTimeout(a)
        }
        )
    }();
    var c, d, e, f, g, h = function(a, b, c) {
        a.addEventListener ? a.addEventListener(b, c, !1) : a.attachEvent ? a.attachEvent("on" + b, c) : a["on" + b] = c
    }, i = {
        autoRun: !0,
        barThickness: 3,
        barColors: {
            0: "rgba(26,  188, 156, .9)",
            ".25": "rgba(52,  152, 219, .9)",
            ".50": "rgba(241, 196, 15,  .9)",
            ".75": "rgba(230, 126, 34,  .9)",
            "1.0": "rgba(211, 84,  0,   .9)"
        },
        shadowBlur: 10,
        shadowColor: "rgba(0,   0,   0,   .6)",
        className: null
    }, j = function() {
        c.width = a.innerWidth,
        c.height = 5 * i.barThickness;
        var b = c.getContext("2d");
        b.shadowBlur = i.shadowBlur,
        b.shadowColor = i.shadowColor;
        var d = b.createLinearGradient(0, 0, c.width, 0);
        for (var e in i.barColors)
            d.addColorStop(e, i.barColors[e]);
        b.lineWidth = i.barThickness,
        b.beginPath(),
        b.moveTo(0, i.barThickness / 2),
        b.lineTo(Math.ceil(f * c.width), i.barThickness / 2),
        b.strokeStyle = d,
        b.stroke()
    }, k = function() {
        c = b.createElement("canvas");
        var d = c.style;
        d.position = "fixed",
        d.top = d.left = d.right = d.margin = d.padding = 0,
        d.zIndex = 100001,
        d.display = "none",
        i.className && c.classList.add(i.className),
        b.body.appendChild(c),
        h(a, "resize", j)
    }, l = {
        config: function(a) {
            for (var b in a)
                i.hasOwnProperty(b) && (i[b] = a[b])
        },
        show: function() {
            g || (g = !0,
            null !== e && a.cancelAnimationFrame(e),
            c || k(),
            c.style.opacity = 1,
            c.style.display = "block",
            l.progress(0),
            i.autoRun && !function b() {
                d = a.requestAnimationFrame(b),
                l.progress("+" + .05 * Math.pow(1 - Math.sqrt(f), 2))
            }())
        },
        progress: function(a) {
            return "undefined" == typeof a ? f : ("string" == typeof a && (a = (a.indexOf("+") >= 0 || a.indexOf("-") >= 0 ? f : 0) + parseFloat(a)),
            f = a > 1 ? 1 : a,
            j(),
            f)
        },
        hide: function() {
            g && (g = !1,
            null != d && (a.cancelAnimationFrame(d),
            d = null),
            function b() {
                return l.progress("+.1") >= 1 && (c.style.opacity -= .05,
                c.style.opacity <= .05) ? (c.style.display = "none",
                void (e = null)) : void (e = a.requestAnimationFrame(b))
            }())
        }
    };
    "object" == typeof module && "object" == typeof module.exports ? module.exports = l : "function" == typeof define && define.amd ? define(function() {
        return l
    }) : this.topbar = l
}
).call(this, window, document);
(function(window, $) {
    var Game = function(params) {
        return this.init(params);
    };

    Game.prototype = {
        init: function(params) {
            this.$el = $('.' + params.wrapper);

            this.build(params).bindEvents();
        },
        init: function(params) {
            this.$el = $('.' + params.wrapper);

            this.build(params).bindEvents();
        },

        build: function(params) {
            this.$closeBtn = params.closeBtn ? this.$el.find('.' + params.closeBtn) : null;
            this.$fullScreenBtn = params.fullScreenBtn ? this.$el.find('.' + params.fullScreenBtn) : null;
            this.$reloadBtn = params.reloadBtn ? this.$el.find('.' + params.reloadBtn) : null;
            this.$bonusTable = params.bonusTable ? this.$el.find('.' + params.bonusTable) : null;
            window.addEventListener('message', function(event) {
                if (event.data.Method == 'exitGame') {
                    var $gaCont = $(`.game-container[productid=${event.data.ProductId}]`);
                    var $btnC = $gaCont.find('.btn-close');
                    if ($btnC.length > 0)
                        $btnC.trigger("click");
                    else
                        window.top.location.href = window.location.protocol + "//" + window.location.host;
                }
            });
            return this;
        },

        _launchFullscreen: function($el) {
            if (screenfull.isFullscreen) {
                $(document.body).addClass('fullscreen');
            } else {
                $(document.body).removeClass('fullscreen');
            }
        },

        bindEvents: function() {
            var _self = this;

            if (this.$closeBtn != null) {
                this.$closeBtn.on('click', function(e) {
                    var _self = $(this);
                    e.preventDefault();

                    if ($('#playsearchsettings').hasClass('oneFrame') || $('.game-page').hasClass('single')) {
                        _self.addClass('loading');
                        var backUrl = localStorage.getItem('back_url') || '/';
                        window.location.href = backUrl;
                    } else {
                        var $gameCont = _self.closest('.game-container');
                        e.preventDefault();
                        $gameCont.remove();
                        if ($('.game-container').length == 1) {
                            $('.game-page').addClass('single');
                            $('#playsearchsettings').addClass('oneFrame');
                            $('.Container--GamePage').removeClass('twoFrame')

                            if (!$('.game-container').hasClass('first')) {
                                $('.game-container').addClass('first');
                                var $el = $('.game-container').find('.btn-close');
                                $el.unbind("click");
                                $el.on('click', function(e) {
                                    e.preventDefault();
                                    _self.addClass('loading');
                                    var backUrl = localStorage.getItem('back_url') || '/';
                                    window.location.href = backUrl;
                                });
                            }
                        } else if ($('.game-container').length == 3) {
                            if ($('#playsearchsettings').parent().is(":hidden")) {
                                $('#playsearchsettings').parent().show();
                            }
                            $('.Container--GamePage').removeClass('fourFrame')
                            $('.Container--GamePage').addClass('threeFrame')
                        } else if ($('.game-container').length == 2) {
                            $('.Container--GamePage').addClass('twoFrame')
                            $('.Container--GamePage').removeClass('threeFrame')
                        }

                        var hasHref = $('.game-container.first').find(".btn-real-game").attr('href');

                        if ($('.game-container').length == 1 && !(typeof hasHref !== 'undefined' && hasHref !== false)) {
                            var input2 = $('.game-container').find(".btn-real-game").find("input");

                            //var frameType2 = input2.attr('frametype');
                            var gameId2 = input2.attr('prodid');
                            var name2 = input2.attr('prodname');

                            var hrefUrl = `/real/frame/${gameId2}/${name2}/0`;

                            $('.game-container').find(".btn-real-game").attr("href", `${hrefUrl}`);
                        }
                    }

                });
            }

            if (this.$fullScreenBtn != null) {
                this.$fullScreenBtn.on('click', function(e) {
                    e.preventDefault();
                    var htmlEl = $('.game-container').get(0);

                    if (screenfull.enabled) {
                        screenfull.toggle(htmlEl);
                    }
                });
            }
            if (this.$reloadBtn != null) {
                this.$reloadBtn.on('click', function(e) {
                    e.preventDefault();
                    $(this).addClass('loading');

                    var reloadPlay = ($cont, type, frametype, gameId, name, lunchIsNotFirst, playReal, idTrans, nameTrans, amountTrans) => {
                        var played;
                        if ($cont.find('#playedGames')) {
                            played = $($cont.find('#playedGames')).detach();
                        }
                        $cont.empty();
                        $cont.addClass('loading');

                        $.ajax({
                            url: `/${type}/${frametype}/${gameId}/${name}/${lunchIsNotFirst}`,
                            success: function(val) {
                                var response = JSON.parse(val);
                                if (response.IsLoggedIn || type != 'real') {
                                    var $gameControl = $('<div>', {
                                        class: 'game-controls',
                                    }).append($('<div>', {
                                        class: 'game-controls-btn',
                                    }).append('<div class="btn-close"><i class= "las la-times"></i></div><div class="btn-full-screen"><i class="las la-expand-arrows-alt"></i></div><div class="btn-refresh"><i class="las la-redo-alt"></i></div>'));

                                    if (response.IsLoggedIn) {

                                        //Controls region 
                                        if (type == "real") {
                                            var controls = response.Controls;
                                            if (Object.keys(controls).length > 0) {
                                                var $pbt = $('<div>', {
                                                    class: 'player-bonus-table',
                                                });
                                                var $bTnb = $('<div>', {
                                                    class: 'btn-bonus',
                                                }).append($('<i>', {
                                                    class: 'tp-ic-gifts',
                                                }));

                                                var $bbw = $('<div>', {
                                                    class: 'bonus-body-wrapper',
                                                }).append($('<div>', {
                                                    class: 'bonus-body-row-title',
                                                }).append($('<div>', {
                                                    class: 'bonus-title-row',
                                                }).append($('<div>', {
                                                    class: 'bonus-id',
                                                    text: `${idTrans}`
                                                }), $('<div>', {
                                                    class: 'bonus-current-name',
                                                    text: `${nameTrans}`
                                                }), $('<div>', {
                                                    class: 'bonus-current-amount',
                                                    text: `${amountTrans}`
                                                }))));
                                                var $srtList = $('<ul>', {
                                                    id: 'sortableList',
                                                    class: 'bonus-table-body grid js-sortable',
                                                });
                                                controls.ProductBonusList.forEach( (item) => {
                                                    var dis = item.State == 2 ? '' : ' disabled';
                                                    var dishid = item.State == 2 ? '' : ' hidden';
                                                    var enhid = item.State == 5 ? '' : ' hidden';
                                                    var $li = $('<li>', {
                                                        class: `bonus-body-row item b-${item.Id}${dis}`,
                                                        bonsuOrder: `${item.Order}`,
                                                        bonusid: `${item.Id}`,
                                                        bonustype: `${item.Type}`,
                                                        bonusstate: `${item.State}`,
                                                    }).append($('<div>', {
                                                        class: 'bonus-body-row-title'
                                                    }).append($('<div>', {
                                                        class: 'bonus-id',
                                                        text: `${item.Id}`
                                                    }), $('<div>', {
                                                        class: 'bonus-current-name',
                                                        text: `${item.Name}`
                                                    }), $('<div>', {
                                                        class: 'bonus-current-amount',
                                                        text: `${roundToTwoDecimals(item.CurrentAmount, true)}`
                                                    }), $('<div>', {
                                                        class: `bonus-current-amount-full hidden ${parseFloat(item.CurrentAmount).toString() > roundToTwoDecimals(parseFloat(item.CurrentAmount)) ? 'tooltipShow' : ''}`,
                                                        text: `${item.CurrentAmount}`
                                                    })));

                                                    $li.append($('<div>', {
                                                        class: 'row'
                                                    }).append($('<button>', {
                                                        class: 'submit-state forfeit-btn',
                                                        text: `Forfeit`,
                                                        value: '7',
                                                        style: ''
                                                    }), $('<button>', {
                                                        class: `submit-state disable-btn${dishid}`,
                                                        text: `Disable`,
                                                        value: '5',
                                                        style: ''
                                                    }), ($('<button>', {
                                                        class: `submit-state enable-btn${enhid}`,
                                                        text: `Activate`,
                                                        value: '2',
                                                        style: ''
                                                    }))));
                                                    $srtList.append($li);
                                                }
                                                )

                                                $bbw.append($srtList);
                                                $bTnb.append($bbw);
                                                $pbt.append($bTnb, $bbw);
                                                $gameControl.append($pbt);
                                                $bTnb.on('click', function(e) {
                                                    $bTnb.toggleClass('open')
                                                });

                                                var $bonusInfo = $pbt.find('.bonus-body-row.item .bonus-body-row-title');
                                                $pbt.find('.row').slideUp()

                                                $bonusInfo.on('click', function(event) {
                                                    let target = event.target
                                                    $bonusInfo = $(target).parent()
                                                    $bonusInfo.toggleClass('open')
                                                    $bonusInfo.siblings(".row").slideUp()
                                                    if ($bonusInfo.hasClass('open')) {
                                                        $bonusInfo.siblings(".row").slideDown()
                                                    }
                                                });

                                            }

                                            function getValueOrDefault(obj, str, deflt) {
                                                var a = str.split(".");
                                                o = obj;
                                                for (var i = 0; i < a.length; i++) {
                                                    o = obj[a[i]];
                                                    if (!o) {
                                                        return deflt;
                                                    }
                                                }
                                                return o;
                                            }
                                            function toCurrencySymbolArray(currencySymbol, number, showDecimal) {
                                                var str = number < 0 ? "- " : " ";

                                                var num = showDecimal ? roundToTwoDecimals(number).toLocaleString('en-US', {
                                                    minimumFractionDigits: 2,
                                                    maximumFractionDigits: 2
                                                }) : roundToWithoutDecimals(number).toLocaleString('en-US', {
                                                    minimumFractionDigits: 2,
                                                    maximumFractionDigits: 2
                                                });

                                                return [str, currencySymbol + " ", ` ${num} `, ];
                                            }

                                            function roundToTwoDecimals(number, toFormat) {
                                                let rounded = Math.floor((+number) * 100) / 100;
                                                if (toFormat === true) {
                                                    return rounded.toLocaleString('en-US', {
                                                        minimumFractionDigits: 2,
                                                        maximumFractionDigits: 2
                                                    })
                                                }
                                                return rounded.toFixed(2);
                                            }

                                            function roundToWithoutDecimals(number) {

                                                var multiplier = Math.pow(10, 0);
                                                var adjusted = number * multiplier;
                                                var truncated = adjusted - (adjusted % 1);

                                                var rounded = truncated / multiplier;
                                                return rounded;
                                            }

                                            function isEmpty(value) {
                                                return (value == null || (typeof value === "string" && value.trim().length === 0));
                                            }

                                            const WalletTypes = Object.freeze({
                                                NOT_PLAYED_BALANCE: 1,
                                                PLAYED_BALANCE: 2,
                                            });

                                            const ObjectTypes = Object.freeze({
                                                PLAY_BALANCE: 332,
                                                PRODUCT_CASH_BALANCE: 329,
                                                PRODUCT_BONUS_BALANCE: 330,
                                                BONUS_AWARD_BALANCE: 331
                                            });

                                            var currencySymbol = response.Controls.CurrencySymbol;
                                            var list = response.Controls.WalletBalanceList;
                                            var notPlayedBalance = list && list != null ? list.find( (item) => item.TypeId == WalletTypes.NOT_PLAYED_BALANCE) ? getValueOrDefault(list.find( (item) => item.TypeId == WalletTypes.NOT_PLAYED_BALANCE), 'Balance', 0) : 0 : 0;
                                            var playedBalance = list && list != null ? list.find( (item) => item.TypeId == WalletTypes.PLAYED_BALANCE) ? getValueOrDefault(list.find( (item) => item.TypeId == WalletTypes.PLAYED_BALANCE), 'Balance', 0) : 0 : 0;

                                            var $bI = $('<div>', {
                                                id: `Balance--items_${response.Controls.ProductId}`,
                                                class: 'Balance--items',
                                            });

                                            var $ul = $('<ul>');

                                            if (response.SectionWrapperWidgetObjectList) {

                                                response.SectionWrapperWidgetObjectList.forEach( (obj) => {

                                                    var plContent = response.WidgetObjectContentList;

                                                    plContent = plContent && plContent != null ? plContent.find( (item) => item.WidgetObjectId == obj.WidgetObjectId && item.ContentLanguageId == response.LanguageCode) ? plContent.find( (item) => item.WidgetObjectId == obj.WidgetObjectId && item.ContentLanguageId == response.LanguageCode) : {
                                                        ContentName: obj.Name,
                                                        ContentText: obj.Text
                                                    } : {
                                                        ContentName: obj.Name,
                                                        ContentText: obj.Text
                                                    };

                                                    var data = [];
                                                    switch (obj.ObjectTypeId) {
                                                    case ObjectTypes.PLAY_BALANCE:

                                                        data = toCurrencySymbolArray(currencySymbol, roundToTwoDecimals(response.Controls.CashBalance + getValueOrDefault(response.Controls, 'BonusBetBalance', 0)), true);

                                                        var prodPB = $('<li>', {
                                                            class: `prod_${obj.Name}`,
                                                        }).append($('<div>', {
                                                            class: `${obj.ObjectStyle}`,
                                                        }).append($('<span>', {
                                                            class: `product-Play_Balance-Name`,
                                                            text: `${!isEmpty(plContent.ContentText) ? plContent.ContentText : plContent.ContentName}`
                                                        }).append($('<span>', {
                                                            id: 'product-play_balance',
                                                            class: 'product-Play_Balance'
                                                        }).append($('<span>', {
                                                            id: 'product-play_balance-sign',
                                                            class: 'product-Play_Balance-sign',
                                                            text: `${data[0]}`
                                                        }), $('<span>', {
                                                            text: `${data[1]}`
                                                        }), $('<span>', {
                                                            class: 'menu-play-balance-amnt',
                                                            text: `${roundToTwoDecimals(data[2], true)}`
                                                        }), $('<span>', {
                                                            class: `menu-play-balance-amnt-full hidden ${parseFloat(response.Controls.CashBalance) == parseFloat(response.Controls.CashBalance)?.toFixed(2) ? "" : "tooltipShow"}`,
                                                            text: `${data[1]} ${response.Controls.CashBalance + (response.Controls.BonusBetBalance ? response.Controls.BonusBetBalance : 0)}`
                                                        })))));

                                                        $ul.append(prodPB);
                                                        break;
                                                    case ObjectTypes.PRODUCT_CASH_BALANCE:

                                                        let sumBalance = notPlayedBalance + playedBalance;
                                                        data = toCurrencySymbolArray(currencySymbol, roundToTwoDecimals(sumBalance), true);

                                                        var prodPB = $('<li>', {
                                                            id: 'product-total-balance',
                                                            class: `prod_${obj.Name}`,
                                                        }).append($('<div>', {
                                                            class: `${obj.ObjectStyle}`,
                                                        }).append($('<span>', {
                                                            class: `product-Cash_Balance-Name`,
                                                            text: `${!isEmpty(plContent.ContentText) ? plContent.ContentText : plContent.ContentName}`
                                                        }).append($('<span>', {
                                                            id: 'product-cash_balance',
                                                            class: 'product-Cash_Balance'
                                                        }).append($('<span>', {
                                                            id: 'product-cash_balance-sign',
                                                            class: 'product-Cash_Balance-sign',
                                                            text: `${data[0]}`
                                                        }), $('<span>', {
                                                            text: `${data[1]}`
                                                        }), $('<span>', {
                                                            class: 'product-Cash_Balance-amnt',
                                                            text: `${roundToTwoDecimals(data[2], true)}`
                                                        }), $('<span>', {
                                                            class: `product-Cash_Balance-amnt-full hidden ${parseFloat(sumBalance) == parseFloat(sumBalance)?.toFixed(2) ? "" : "tooltipShow"}`,
                                                            text: `${data[1]} ${sumBalance}`
                                                        })))));

                                                        $ul.append(prodPB);
                                                        break;
                                                    case ObjectTypes.PRODUCT_BONUS_BALANCE:

                                                        data = toCurrencySymbolArray(currencySymbol, roundToTwoDecimals(getValueOrDefault(response.Controls, 'BonusBetBalance', 0)), true);

                                                        var prodPBClass = response.Controls.BonusBetBalance != null ? `prod_${obj.Name}` : `hidden prod_${obj.Name}`;

                                                        var prodPB = $('<li>', {
                                                            id: 'product-bonus-bet',
                                                            betwlt: `${response.Controls.BetWalletId}`,
                                                            betbonusid: `${response.Controls.BetBonusId}`,
                                                            class: `${prodPBClass}`,
                                                        }).append($('<div>', {
                                                            class: `${obj.ObjectStyle}`,
                                                        }).append($('<span>', {
                                                            class: `product-Bonus_Balance-Name`,
                                                            text: `${!isEmpty(plContent.ContentText) ? plContent.ContentText : plContent.ContentName}`
                                                        }).append($('<span>', {
                                                            id: 'product-bonus_balance',
                                                            class: 'product-Bonus_Balance'
                                                        }).append($('<span>', {
                                                            text: `${data[1]}`
                                                        }), $('<span>', {
                                                            class: 'product-Bonus_Balance-amnt',
                                                            text: `${roundToTwoDecimals(data[2], true)}`
                                                        }), $('<span>', {
                                                            class: `product-Bonus_Balance-amnt-full hidden ${parseFloat(response.Controls.BonusBetBalance) == parseFloat(response.Controls.BonusBetBalance)?.toFixed(2) ? "" : "tooltipShow"}`,
                                                            text: `${data[1]} ${response.Controls.BonusBetBalance}`
                                                        }), $('<input>', {
                                                            type: 'hidden',
                                                            bonusTitle: `${response.Controls.BonusTitle}`
                                                        })))));

                                                        $ul.append(prodPB);
                                                        break;
                                                    case ObjectTypes.BONUS_AWARD_BALANCE:
                                                        data = toCurrencySymbolArray(currencySymbol, roundToTwoDecimals(getValueOrDefault(response.Controls, 'BonusAwardBalance', 0)), true);

                                                        var prodPBClass = response.Controls.BonusAwardBalance != null ? `prod_${obj.Name}` : `hidden prod_${obj.Name}`;

                                                        var prodPB = $('<li>', {
                                                            id: 'product-bonus-award',
                                                            awardwlt: `${response.Controls.AwardWalletId}`,
                                                            awardbonusid: `${response.Controls.AwBonusId}`,
                                                            class: `${prodPBClass}`,
                                                        }).append($('<div>', {
                                                            class: `${obj.ObjectStyle}`,
                                                        }).append($('<span>', {
                                                            class: `product-Bonus_Award_Balance-Name`,
                                                            text: `${!isEmpty(plContent.ContentText) ? plContent.ContentText : plContent.ContentName}`
                                                        }).append($('<span>', {
                                                            id: 'product-bonus_award_balance',
                                                            class: 'product-Bonus_Award_Balance'
                                                        }).append($('<span>', {
                                                            id: 'product-bonus_award_balance-sign',
                                                            class: 'product-Bonus_Award_Balance-sign',
                                                            text: `${data[0]}`
                                                        }), $('<span>', {
                                                            text: `${data[1]}`
                                                        }), $('<span>', {
                                                            class: 'product-Bonus_Award_Balance-amnt',
                                                            text: `${roundToTwoDecimals(data[2], true)}`
                                                        }), $('<span>', {
                                                            class: `product-Bonus_Award_Balance-amnt-full hidden ${parseFloat(response.Controls.BonusAwardBalance) == parseFloat(response.Controls.BonusAwardBalance)?.toFixed(2) ? "" : "tooltipShow"}`,
                                                            text: `${data[1]} ${response.Controls.BonusAwardBalance}`
                                                        }), $('<input>', {
                                                            type: 'hidden',
                                                            awardTitle: `${response.Controls.AwBonusTitle}`
                                                        })))));

                                                        $ul.append(prodPB);
                                                        break;
                                                    }
                                                }
                                                )
                                            }

                                            $bI.append($ul);

                                            $cont.append($bI)
                                        }
                                        //Controls endregion

                                        $cont.append($gameControl).append($('<div>', {
                                            class: 'game-holder',
                                        }));

                                        var $selectedItem = $('.submit-state');
                                        $selectedItem.on('click', function(e) {
                                            e.preventDefault();
                                            e.stopPropagation();
                                            let targetVal = e.target.value;

                                            $selectedItem = $(this);
                                            $selectedItem.addClass('loading')
                                            var playerBonusId = parseInt($selectedItem.parent().parent().attr('bonusid'));
                                            var num = parseInt($selectedItem.attr('value'))

                                            const _disable = 5;
                                            const _enable = 2;
                                            const _forfeit = 7;

                                            var playerBonusState = parseInt($selectedItem.parent().parent().attr('bonusstate'));
                                            var params = {
                                                playerBonusId: playerBonusId,
                                                playerBonusState: num != _forfeit ? (playerBonusState == _disable ? _enable : _disable) : _forfeit
                                            };

                                            $.ajax({
                                                url: '/account/updatebonusstate',
                                                type: 'POST',
                                                data: params,
                                                success: function(result) {
                                                    if (result.Success) {
                                                        $selectedItem.removeClass('loading')
                                                    }
                                                },
                                                error: function(result) {
                                                    $selectedItem.parent().append("<div class='state__msg--error'>process error</div>")
                                                }
                                            })
                                        });

                                    } else {
                                        $cont.append($gameControl).append($('<div>', {
                                            class: 'game-holder',
                                        }));
                                    }

                                    var $closeBtn = $cont.find('.btn-close');
                                    var $fullScreenBtn = $cont.find('.btn-full-screen');
                                    var $reloadBtn = $cont.find('.btn-refresh');

                                    $closeBtn.on('click', function(e) {
                                        e.preventDefault();

                                        if ($('#playsearchsettings').hasClass('oneFrame') || $('.game-page').hasClass('single')) {
                                            $(this).addClass('loading');
                                            var backUrl = localStorage.getItem('back_url') || '/';
                                            window.location.href = backUrl;
                                        } else {
                                            var $cont = $(this).closest('.game-container');
                                            e.preventDefault();
                                            if ($cont.find('#playedGames')) {
                                                playedG = $($cont.find('#playedGames')).detach();
                                                $('.game-container')[1].append(playedG[0]);
                                            }
                                            $cont.remove();
                                            if ($('.game-container').length == 1) {
                                                $('.game-page').addClass('single');
                                                $('#playsearchsettings').addClass('oneFrame');
                                                $('.Container--GamePage').removeClass('twoFrame')

                                                if (!$('.game-container').hasClass('first')) {
                                                    $('.game-container').addClass('first');
                                                    var $el = $('.game-container').find('.btn-close');
                                                    $el.unbind("click");
                                                    $el.on('click', function(e) {
                                                        e.preventDefault();
                                                        $(this).addClass('loading');
                                                        var backUrl = localStorage.getItem('back_url') || '/';
                                                        window.location.href = backUrl;
                                                    });
                                                }
                                            } else if ($('.game-container').length == 3) {
                                                if ($('#playsearchsettings').parent().is(":hidden")) {
                                                    $('#playsearchsettings').parent().show();
                                                }
                                                $('.Container--GamePage').removeClass('fourFrame')
                                                $('.Container--GamePage').addClass('threeFrame')
                                            } else if ($('.game-container').length == 2) {
                                                $('.Container--GamePage').addClass('twoFrame')
                                                $('.Container--GamePage').removeClass('threeFrame')
                                            }

                                            var hasHref = $('.game-container.first').find(".btn-real-game").attr('href');

                                            if ($('.game-container').length == 1 && !(typeof hasHref !== 'undefined' && hasHref !== false)) {
                                                var input2 = $('.game-container').find(".btn-real-game").find("input");

                                                var gameId2 = input2.attr('prodid');
                                                var name2 = input2.attr('prodname');

                                                var hrefUrl = `/real/frame/${gameId2}/${name2}/0`;

                                                $('.game-container').find(".btn-real-game").attr("href", `${hrefUrl}`);
                                            }
                                        }
                                    });

                                    $fullScreenBtn.on('click', function(e) {
                                        e.preventDefault();
                                        var htmlEl = $(this).closest('.game-container').get(0);

                                        if (screenfull.enabled) {
                                            screenfull.toggle(htmlEl);
                                        }
                                    });

                                    $reloadBtn.on('click', function(e) {
                                        e.preventDefault();
                                        $(this).addClass('loading');
                                        var $gameContainer = $(this).closest('.game-container');
                                        reloadPlay($gameContainer, type, frametype, gameId, name, lunchIsNotFirst, playReal, idTrans, nameTrans, amountTrans);
                                        $(this).removeClass('loading');
                                    });

                                    screenfull.on('change', function() {
                                        launchFullscreen($(this).closest('.game-container'));
                                    });

                                    var launchFullscreen = function($el) {
                                        if (screenfull.isFullscreen) {
                                            $(document.body).addClass('fullscreen');
                                        } else {
                                            $(document.body).removeClass('fullscreen');
                                        }
                                    };

                                    $.ajax({
                                        url: `/Play/Launch/${type}/frame/${gameId}/play`,
                                        success: function(val) {
                                            if (val != "login") {
                                                $cont.find(".game-holder").removeClass('loading').append(val);
                                            } else {
                                                $(".game-holder").removeClass('loading');
                                                Popup('instant-login');
                                            }
                                        }
                                    })

                                    if (type != "real") {
                                        $cont.prepend($('<a>', {
                                            class: 'btn-real-game',
                                            html: `${playReal}`,
                                        }).append($('<i>', {
                                            class: 'fa fa-caret-right',
                                        }), $('<input>', {
                                            type: 'hidden',
                                            frametype: `${frametype}`,
                                            prodid: `${gameId}`,
                                            prodname: `${name}`,
                                        })));
                                        $cont.find(".btn-real-game").on('click', function(e) {
                                            e.preventDefault();
                                            reloadPlay($(this).parent(), 'real', frametype, gameId, name, lunchIsNotFirst, playReal, idTrans, nameTrans, amountTrans);
                                        });
                                    }

                                    var hasHref = $('.game-container.first').find(".btn-real-game").attr('href');

                                    if ($('.game-container').length > 1 && typeof hasHref !== 'undefined' && hasHref !== false) {
                                        $('.game-container.first').find(".btn-real-game").removeAttr("href");
                                        $('.game-container.first').find(".btn-real-game").on('click', function(e) {
                                            e.preventDefault();
                                            var input1 = $('.game-container.first').find(".btn-real-game").find("input");
                                            var gameId1 = input1.attr('prodid');
                                            var name1 = input1.attr('prodname');
                                            //var frameType1 = input1.attr('frametype');

                                            reloadPlay($(this).parent(), 'real', 'frame', gameId1, name1, 1, playReal, idTrans, nameTrans, amountTrans);
                                        });
                                    }
                                    if ($('.game-container').length == 4) {
                                        $('#playsearchsettings').parent().hide();
                                    }
                                    $cont.removeClass('loading');

                                    if ($('.game-container').length == 2) {
                                        $('.play-section .Container--GamePage').addClass('twoFrame')
                                    } else if ($('.game-container').length == 3) {
                                        $('.play-section .Container--GamePage').removeClass('twoFrame')
                                        $('.play-section .Container--GamePage').addClass('threeFrame')
                                    } else if ($('.game-container').length == 4) {
                                        $('.play-section .Container--GamePage').removeClass('threeFrame')
                                        $('.play-section .Container--GamePage').addClass('fourFrame')
                                    }

                                    $cont.append(played);
                                }
                                else {
                                    $(".game-holder").removeClass('loading');
                                    Popup('instant-login');
                                }
                            }
                        })

                    }
                    ;

                    var location = $(window.location).attr('href').split('/');

                    (location[location.length - 1] == '0' || location[location.length - 1] == '1') && location.pop();

                    var $gameContainer = $(this).closest('.game-container');
                    var type = location.length > 7 ? location[4] : location[3];
                    var frametype = location.length > 7 ? location[5] : location[4];
                    var gameId = location.length > 7 ? location[6] : location[5];
                    var name = location.length > 7 ? `${location[7]}` : `${location[6]}`;
                    var lunchIsNotFirst = $gameContainer.length == 1 ? '1' : '0';
                    var playReal = type == 'demo' ? $gameContainer.find(".btn-real-game").text() : null;
                    var idTrans = $gameContainer.find(".bonus-title-row .bonus-id").text()
                    var nameTrans = $gameContainer.find(".bonus-title-row .bonus-current-name").text()
                    var amountTrans = $gameContainer.find(".bonus-title-row .bonus-current-amount").text()

                    reloadPlay($gameContainer, type, frametype, gameId, name, lunchIsNotFirst, playReal, idTrans, nameTrans, amountTrans);

                    $(this).removeClass('loading');
                });

            }
            $(document).ready(function() {
                //hide CashBalance button from header only on game page
                $(".Widget--user").hide();
                screenfull.on('change', function() {
                    _self._launchFullscreen(_self.$el);
                });
            });

            if (this.$bonusTable != null) {
                var $selectedItem = $('.submit-state');
                $selectedItem.on('click', function(e) {
                    e.preventDefault();
                    e.stopPropagation();
                    let targetVal = e.target.value;

                    $selectedItem = $(this);
                    $selectedItem.addClass('loading')
                    var playerBonusId = parseInt($selectedItem.parent().parent().attr('bonusid'));
                    var num = parseInt($selectedItem.attr('value'))

                    const _disable = 5;
                    const _enable = 2;
                    const _forfeit = 7;

                    var playerBonusState = parseInt($selectedItem.parent().parent().attr('bonusstate'));
                    var params = {
                        playerBonusId: playerBonusId,
                        playerBonusState: num != _forfeit ? (playerBonusState == _disable ? _enable : _disable) : _forfeit
                    };

                    $.ajax({
                        url: '/account/updatebonusstate',
                        type: 'POST',
                        data: params,
                        success: function(result) {
                            if (result.Success) {
                                $selectedItem.removeClass('loading')
                            }
                        },
                        error: function(result) {
                            $selectedItem.parent().append("<div class='state__msg--error'>process error</div>")
                        }
                    })
                });

                //game bonus shortlist

                var $bonusBtn = $('.player-bonus-table .btn-bonus');
                $bonusBtn.on('click', function(e) {
                    $bonusBtn.toggleClass('open')
                });

                var $bonusInfo = $('.player-bonus-table .bonus-body-row.item .bonus-body-row-title');
                $('.player-bonus-table .row').slideUp()

                $bonusInfo.on('click', function(event) {
                    let target = event.target
                    $bonusInfo = $(target).parent()
                    $bonusInfo.toggleClass('open')
                    $bonusInfo.siblings(".row").slideUp()
                    if ($bonusInfo.hasClass('open')) {
                        $bonusInfo.siblings(".row").slideDown()
                    }
                });
            }

            return this;
        }
    };

    var RecentGames = function(params) {
        return this.init(params);
    };

    RecentGames.prototype = {
        init: function(params) {
            this.$el = $('#' + params.elemId);
            this.$slider = $('#playedGamesSlider');

            delete params.elemId;

            this.build().setParams(params).bindEvents();
        },

        build: function() {
            var _self = this
              , gameMaxWidth = 200
              , pageWidth = $(window).width()
              , slidesToShow = Math.floor(pageWidth / gameMaxWidth);

            this.triggerLabel = this.$el.find('.arrow').html();
            this._getRecentGamesPromise().done(function(resp) {
                if (resp) {
                    let html = '';
                    $.each(resp.Games, function(i, val) {
                        html = ($('<a>', {
                            href: `/real/${val.LaunchFrameType}/${val.GameID}/${val.NameInURL}`,
                            class: 'game-wrapper-link'
                        })).append($("<div>", {
                            class: 'game-wrapper'
                        }).append($('<img>', {
                            src: val.Img,
                            alt: `${val.Name} image`
                        }), $('<p>', {
                            class: `game-title `,
                            text: val.Name
                        })))
                        _self.$el.find('#playedGamesSlider').append(html);
                    });

                }

                _self._buildSlider(slidesToShow);
            });

            return this;
        },

        _getRecentGamesPromise: function() {
            return $.ajax({
                url: '/Common/GetRecentGames',
                data: [],
                dataType: 'json',
                cache: true
            });
        },

        setParams: function(params) {
            this.options = $.extend({}, params);

            return this;
        },

        _unbuildSlider: function() {
            this.$slider.slick('unslick');
        },

        _buildSlider: function(slidesToShow) {
            this.$slider.slick({
                slidesToShow: slidesToShow,
                slidesToScroll: 1,
                centerMode: true,
                focusOnSelect: true
            });
        },

        bindEvents: function() {
            var _self = this
              , $trigger = this.$el.find('.arrow');

            $trigger.on('click', function() {
                _self.$el.toggleClass('closed');

                if (!_self.$el.hasClass('closed')) {
                    // antipattern => Should be passed in the containing html
                    $trigger.html('');
                    $trigger.closest('.game-page').addClass('played-games-open');
                } else {
                    $trigger.html(_self.triggerLabel);
                    $trigger.closest('.game-page').removeClass('played-games-open');
                }
            });

            $(window).on('resize', function() {
                var gameMaxWidth = 200
                  , pageWidth = $(window).width()
                  , slidesToShow = Math.floor(pageWidth / gameMaxWidth);

                _self._unbuildSlider();
                _self._buildSlider(slidesToShow);
            });

            return this;
        }

    };

    setTimeout( () => {

        let $mobBalancebtn = $('.mob-btn-balance')
        let $mobBalanceInfo = $('.gameLaunchFull .Game--Balance--Wrapper');

        $mobBalancebtn.on('click', function() {

            $mobBalancebtn.toggleClass('open')
            $mobBalanceInfo.slideUp()
            if ($mobBalancebtn.hasClass('open')) {
                $mobBalanceInfo.slideDown()
            }
        });
    }
    , '1000')

    !window.Game && (window.Game = Game);
    !window.RecentGames && (window.RecentGames = RecentGames);
}
)(window, jQuery);

!function(e, i) {
    "function" == typeof define && define.amd ? define("jquery-bridget/jquery-bridget", ["jquery"], function(t) {
        return i(e, t)
    }) : "object" == typeof module && module.exports ? module.exports = i(e, require("jquery")) : e.jQueryBridget = i(e, e.jQuery)
}(window, function(t, e) {
    "use strict";
    var i = Array.prototype.slice
      , n = t.console
      , d = void 0 === n ? function() {}
    : function(t) {
        n.error(t)
    }
    ;
    function s(h, s, c) {
        (c = c || e || t.jQuery) && (s.prototype.option || (s.prototype.option = function(t) {
            c.isPlainObject(t) && (this.options = c.extend(!0, this.options, t))
        }
        ),
        c.fn[h] = function(t) {
            return "string" == typeof t ? function(t, o, r) {
                var a, l = "$()." + h + '("' + o + '")';
                return t.each(function(t, e) {
                    var i = c.data(e, h);
                    if (i) {
                        var n = i[o];
                        if (n && "_" != o.charAt(0)) {
                            var s = n.apply(i, r);
                            a = void 0 === a ? s : a
                        } else
                            d(l + " is not a valid method")
                    } else
                        d(h + " not initialized. Cannot call methods, i.e. " + l)
                }),
                void 0 !== a ? a : t
            }(this, t, i.call(arguments, 1)) : (function(t, n) {
                t.each(function(t, e) {
                    var i = c.data(e, h);
                    i ? (i.option(n),
                    i._init()) : (i = new s(e,n),
                    c.data(e, h, i))
                })
            }(this, t),
            this)
        }
        ,
        o(c))
    }
    function o(t) {
        !t || t && t.bridget || (t.bridget = s)
    }
    return o(e || t.jQuery),
    s
}),
function(t, e) {
    "function" == typeof define && define.amd ? define("ev-emitter/ev-emitter", e) : "object" == typeof module && module.exports ? module.exports = e() : t.EvEmitter = e()
}("undefined" != typeof window ? window : this, function() {
    function t() {}
    var e = t.prototype;
    return e.on = function(t, e) {
        if (t && e) {
            var i = this._events = this._events || {}
              , n = i[t] = i[t] || [];
            return -1 == n.indexOf(e) && n.push(e),
            this
        }
    }
    ,
    e.once = function(t, e) {
        if (t && e) {
            this.on(t, e);
            var i = this._onceEvents = this._onceEvents || {};
            return (i[t] = i[t] || {})[e] = !0,
            this
        }
    }
    ,
    e.off = function(t, e) {
        var i = this._events && this._events[t];
        if (i && i.length) {
            var n = i.indexOf(e);
            return -1 != n && i.splice(n, 1),
            this
        }
    }
    ,
    e.emitEvent = function(t, e) {
        var i = this._events && this._events[t];
        if (i && i.length) {
            i = i.slice(0),
            e = e || [];
            for (var n = this._onceEvents && this._onceEvents[t], s = 0; s < i.length; s++) {
                var o = i[s];
                n && n[o] && (this.off(t, o),
                delete n[o]),
                o.apply(this, e)
            }
            return this
        }
    }
    ,
    e.allOff = function() {
        delete this._events,
        delete this._onceEvents
    }
    ,
    t
}),
function(t, e) {
    "function" == typeof define && define.amd ? define("get-size/get-size", e) : "object" == typeof module && module.exports ? module.exports = e() : t.getSize = e()
}(window, function() {
    "use strict";
    function m(t) {
        var e = parseFloat(t);
        return -1 == t.indexOf("%") && !isNaN(e) && e
    }
    var i = "undefined" == typeof console ? function() {}
    : function(t) {
        console.error(t)
    }
      , y = ["paddingLeft", "paddingRight", "paddingTop", "paddingBottom", "marginLeft", "marginRight", "marginTop", "marginBottom", "borderLeftWidth", "borderRightWidth", "borderTopWidth", "borderBottomWidth"]
      , b = y.length;
    function E(t) {
        var e = getComputedStyle(t);
        return e || i("Style returned " + e + ". Are you running this code in a hidden iframe on Firefox? See https://bit.ly/getsizebug1"),
        e
    }
    var S, C = !1;
    function x(t) {
        if (function() {
            if (!C) {
                C = !0;
                var t = document.createElement("div");
                t.style.width = "200px",
                t.style.padding = "1px 2px 3px 4px",
                t.style.borderStyle = "solid",
                t.style.borderWidth = "1px 2px 3px 4px",
                t.style.boxSizing = "border-box";
                var e = document.body || document.documentElement;
                e.appendChild(t);
                var i = E(t);
                S = 200 == Math.round(m(i.width)),
                x.isBoxSizeOuter = S,
                e.removeChild(t)
            }
        }(),
        "string" == typeof t && (t = document.querySelector(t)),
        t && "object" == typeof t && t.nodeType) {
            var e = E(t);
            if ("none" == e.display)
                return function() {
                    for (var t = {
                        width: 0,
                        height: 0,
                        innerWidth: 0,
                        innerHeight: 0,
                        outerWidth: 0,
                        outerHeight: 0
                    }, e = 0; e < b; e++) {
                        t[y[e]] = 0
                    }
                    return t
                }();
            var i = {};
            i.width = t.offsetWidth,
            i.height = t.offsetHeight;
            for (var n = i.isBorderBox = "border-box" == e.boxSizing, s = 0; s < b; s++) {
                var o = y[s]
                  , r = e[o]
                  , a = parseFloat(r);
                i[o] = isNaN(a) ? 0 : a
            }
            var l = i.paddingLeft + i.paddingRight
              , h = i.paddingTop + i.paddingBottom
              , c = i.marginLeft + i.marginRight
              , d = i.marginTop + i.marginBottom
              , u = i.borderLeftWidth + i.borderRightWidth
              , f = i.borderTopWidth + i.borderBottomWidth
              , p = n && S
              , g = m(e.width);
            !1 !== g && (i.width = g + (p ? 0 : l + u));
            var v = m(e.height);
            return !1 !== v && (i.height = v + (p ? 0 : h + f)),
            i.innerWidth = i.width - (l + u),
            i.innerHeight = i.height - (h + f),
            i.outerWidth = i.width + c,
            i.outerHeight = i.height + d,
            i
        }
    }
    return x
}),
function(t, e) {
    "use strict";
    "function" == typeof define && define.amd ? define("desandro-matches-selector/matches-selector", e) : "object" == typeof module && module.exports ? module.exports = e() : t.matchesSelector = e()
}(window, function() {
    "use strict";
    var i = function() {
        var t = window.Element.prototype;
        if (t.matches)
            return "matches";
        if (t.matchesSelector)
            return "matchesSelector";
        for (var e = ["webkit", "moz", "ms", "o"], i = 0; i < e.length; i++) {
            var n = e[i] + "MatchesSelector";
            if (t[n])
                return n
        }
    }();
    return function(t, e) {
        return t[i](e)
    }
}),
function(e, i) {
    "function" == typeof define && define.amd ? define("fizzy-ui-utils/utils", ["desandro-matches-selector/matches-selector"], function(t) {
        return i(e, t)
    }) : "object" == typeof module && module.exports ? module.exports = i(e, require("desandro-matches-selector")) : e.fizzyUIUtils = i(e, e.matchesSelector)
}(window, function(h, o) {
    var c = {
        extend: function(t, e) {
            for (var i in e)
                t[i] = e[i];
            return t
        },
        modulo: function(t, e) {
            return (t % e + e) % e
        }
    }
      , e = Array.prototype.slice;
    c.makeArray = function(t) {
        return Array.isArray(t) ? t : null == t ? [] : "object" == typeof t && "number" == typeof t.length ? e.call(t) : [t]
    }
    ,
    c.removeFrom = function(t, e) {
        var i = t.indexOf(e);
        -1 != i && t.splice(i, 1)
    }
    ,
    c.getParent = function(t, e) {
        for (; t.parentNode && t != document.body; )
            if (t = t.parentNode,
            o(t, e))
                return t
    }
    ,
    c.getQueryElement = function(t) {
        return "string" == typeof t ? document.querySelector(t) : t
    }
    ,
    c.handleEvent = function(t) {
        var e = "on" + t.type;
        this[e] && this[e](t)
    }
    ,
    c.filterFindElements = function(t, n) {
        t = c.makeArray(t);
        var s = [];
        return t.forEach(function(t) {
            if (t instanceof HTMLElement)
                if (n) {
                    o(t, n) && s.push(t);
                    for (var e = t.querySelectorAll(n), i = 0; i < e.length; i++)
                        s.push(e[i])
                } else
                    s.push(t)
        }),
        s
    }
    ,
    c.debounceMethod = function(t, e, n) {
        n = n || 100;
        var s = t.prototype[e]
          , o = e + "Timeout";
        t.prototype[e] = function() {
            var t = this[o];
            clearTimeout(t);
            var e = arguments
              , i = this;
            this[o] = setTimeout(function() {
                s.apply(i, e),
                delete i[o]
            }, n)
        }
    }
    ,
    c.docReady = function(t) {
        var e = document.readyState;
        "complete" == e || "interactive" == e ? setTimeout(t) : document.addEventListener("DOMContentLoaded", t)
    }
    ,
    c.toDashed = function(t) {
        return t.replace(/(.)([A-Z])/g, function(t, e, i) {
            return e + "-" + i
        }).toLowerCase()
    }
    ;
    var d = h.console;
    return c.htmlInit = function(a, l) {
        c.docReady(function() {
            var t = c.toDashed(l)
              , s = "data-" + t
              , e = document.querySelectorAll("[" + s + "]")
              , i = document.querySelectorAll(".js-" + t)
              , n = c.makeArray(e).concat(c.makeArray(i))
              , o = s + "-options"
              , r = h.jQuery;
            n.forEach(function(e) {
                var t, i = e.getAttribute(s) || e.getAttribute(o);
                try {
                    t = i && JSON.parse(i)
                } catch (t) {
                    return void (d && d.error("Error parsing " + s + " on " + e.className + ": " + t))
                }
                var n = new a(e,t);
                r && r.data(e, l, n)
            })
        })
    }
    ,
    c
}),
function(e, i) {
    "function" == typeof define && define.amd ? define("flickity/js/cell", ["get-size/get-size"], function(t) {
        return i(e, t)
    }) : "object" == typeof module && module.exports ? module.exports = i(e, require("get-size")) : (e.Flickity = e.Flickity || {},
    e.Flickity.Cell = i(e, e.getSize))
}(window, function(t, e) {
    function i(t, e) {
        this.element = t,
        this.parent = e,
        this.create()
    }
    var n = i.prototype;
    return n.create = function() {
        this.element.style.position = "absolute",
        this.element.setAttribute("aria-hidden", "true"),
        this.x = 0,
        this.shift = 0
    }
    ,
    n.destroy = function() {
        this.unselect(),
        this.element.style.position = "";
        var t = this.parent.originSide;
        this.element.style[t] = ""
    }
    ,
    n.getSize = function() {
        this.size = e(this.element)
    }
    ,
    n.setPosition = function(t) {
        this.x = t,
        this.updateTarget(),
        this.renderPosition(t)
    }
    ,
    n.updateTarget = n.setDefaultTarget = function() {
        var t = "left" == this.parent.originSide ? "marginLeft" : "marginRight";
        this.target = this.x + this.size[t] + this.size.width * this.parent.cellAlign
    }
    ,
    n.renderPosition = function(t) {
        var e = this.parent.originSide;
        this.element.style[e] = this.parent.getPositionValue(t)
    }
    ,
    n.select = function() {
        this.element.classList.add("is-selected"),
        this.element.removeAttribute("aria-hidden")
    }
    ,
    n.unselect = function() {
        this.element.classList.remove("is-selected"),
        this.element.setAttribute("aria-hidden", "true")
    }
    ,
    n.wrapShift = function(t) {
        this.shift = t,
        this.renderPosition(this.x + this.parent.slideableWidth * t)
    }
    ,
    n.remove = function() {
        this.element.parentNode.removeChild(this.element)
    }
    ,
    i
}),
function(t, e) {
    "function" == typeof define && define.amd ? define("flickity/js/slide", e) : "object" == typeof module && module.exports ? module.exports = e() : (t.Flickity = t.Flickity || {},
    t.Flickity.Slide = e())
}(window, function() {
    "use strict";
    function t(t) {
        this.parent = t,
        this.isOriginLeft = "left" == t.originSide,
        this.cells = [],
        this.outerWidth = 0,
        this.height = 0
    }
    var e = t.prototype;
    return e.addCell = function(t) {
        if (this.cells.push(t),
        this.outerWidth += t.size.outerWidth,
        this.height = Math.max(t.size.outerHeight, this.height),
        1 == this.cells.length) {
            this.x = t.x;
            var e = this.isOriginLeft ? "marginLeft" : "marginRight";
            this.firstMargin = t.size[e]
        }
    }
    ,
    e.updateTarget = function() {
        var t = this.isOriginLeft ? "marginRight" : "marginLeft"
          , e = this.getLastCell()
          , i = e ? e.size[t] : 0
          , n = this.outerWidth - (this.firstMargin + i);
        this.target = this.x + this.firstMargin + n * this.parent.cellAlign
    }
    ,
    e.getLastCell = function() {
        return this.cells[this.cells.length - 1]
    }
    ,
    e.select = function() {
        this.cells.forEach(function(t) {
            t.select()
        })
    }
    ,
    e.unselect = function() {
        this.cells.forEach(function(t) {
            t.unselect()
        })
    }
    ,
    e.getCellElements = function() {
        return this.cells.map(function(t) {
            return t.element
        })
    }
    ,
    t
}),
function(e, i) {
    "function" == typeof define && define.amd ? define("flickity/js/animate", ["fizzy-ui-utils/utils"], function(t) {
        return i(e, t)
    }) : "object" == typeof module && module.exports ? module.exports = i(e, require("fizzy-ui-utils")) : (e.Flickity = e.Flickity || {},
    e.Flickity.animatePrototype = i(e, e.fizzyUIUtils))
}(window, function(t, e) {
    var i = {
        startAnimation: function() {
            this.isAnimating || (this.isAnimating = !0,
            this.restingFrames = 0,
            this.animate())
        },
        animate: function() {
            this.applyDragForce(),
            this.applySelectedAttraction();
            var t = this.x;
            if (this.integratePhysics(),
            this.positionSlider(),
            this.settle(t),
            this.isAnimating) {
                var e = this;
                requestAnimationFrame(function() {
                    e.animate()
                })
            }
        },
        positionSlider: function() {
            var t = this.x;
            this.options.wrapAround && 1 < this.cells.length && (t = e.modulo(t, this.slideableWidth),
            t -= this.slideableWidth,
            this.shiftWrapCells(t)),
            this.setTranslateX(t, this.isAnimating),
            this.dispatchScrollEvent()
        },
        setTranslateX: function(t, e) {
            t += this.cursorPosition,
            t = this.options.rightToLeft ? -t : t;
            var i = this.getPositionValue(t);
            this.slider.style.transform = e ? "translate3d(" + i + ",0,0)" : "translateX(" + i + ")"
        },
        dispatchScrollEvent: function() {
            var t = this.slides[0];
            if (t) {
                var e = -this.x - t.target
                  , i = e / this.slidesWidth;
                this.dispatchEvent("scroll", null, [i, e])
            }
        },
        positionSliderAtSelected: function() {
            this.cells.length && (this.x = -this.selectedSlide.target,
            this.velocity = 0,
            this.positionSlider())
        },
        getPositionValue: function(t) {
            return this.options.percentPosition ? .01 * Math.round(t / this.size.innerWidth * 1e4) + "%" : Math.round(t) + "px"
        },
        settle: function(t) {
            this.isPointerDown || Math.round(100 * this.x) != Math.round(100 * t) || this.restingFrames++,
            2 < this.restingFrames && (this.isAnimating = !1,
            delete this.isFreeScrolling,
            this.positionSlider(),
            this.dispatchEvent("settle", null, [this.selectedIndex]))
        },
        shiftWrapCells: function(t) {
            var e = this.cursorPosition + t;
            this._shiftCells(this.beforeShiftCells, e, -1);
            var i = this.size.innerWidth - (t + this.slideableWidth + this.cursorPosition);
            this._shiftCells(this.afterShiftCells, i, 1)
        },
        _shiftCells: function(t, e, i) {
            for (var n = 0; n < t.length; n++) {
                var s = t[n]
                  , o = 0 < e ? i : 0;
                s.wrapShift(o),
                e -= s.size.outerWidth
            }
        },
        _unshiftCells: function(t) {
            if (t && t.length)
                for (var e = 0; e < t.length; e++)
                    t[e].wrapShift(0)
        },
        integratePhysics: function() {
            this.x += this.velocity,
            this.velocity *= this.getFrictionFactor()
        },
        applyForce: function(t) {
            this.velocity += t
        },
        getFrictionFactor: function() {
            return 1 - this.options[this.isFreeScrolling ? "freeScrollFriction" : "friction"]
        },
        getRestingPosition: function() {
            return this.x + this.velocity / (1 - this.getFrictionFactor())
        },
        applyDragForce: function() {
            if (this.isDraggable && this.isPointerDown) {
                var t = this.dragX - this.x - this.velocity;
                this.applyForce(t)
            }
        },
        applySelectedAttraction: function() {
            if (!(this.isDraggable && this.isPointerDown) && !this.isFreeScrolling && this.slides.length) {
                var t = (-1 * this.selectedSlide.target - this.x) * this.options.selectedAttraction;
                this.applyForce(t)
            }
        }
    };
    return i
}),
function(r, a) {
    if ("function" == typeof define && define.amd)
        define("flickity/js/flickity", ["ev-emitter/ev-emitter", "get-size/get-size", "fizzy-ui-utils/utils", "./cell", "./slide", "./animate"], function(t, e, i, n, s, o) {
            return a(r, t, e, i, n, s, o)
        });
    else if ("object" == typeof module && module.exports)
        module.exports = a(r, require("ev-emitter"), require("get-size"), require("fizzy-ui-utils"), require("./cell"), require("./slide"), require("./animate"));
    else {
        var t = r.Flickity;
        r.Flickity = a(r, r.EvEmitter, r.getSize, r.fizzyUIUtils, t.Cell, t.Slide, t.animatePrototype)
    }
}(window, function(n, t, e, a, i, r, s) {
    var l = n.jQuery
      , o = n.getComputedStyle
      , h = n.console;
    function c(t, e) {
        for (t = a.makeArray(t); t.length; )
            e.appendChild(t.shift())
    }
    var d = 0
      , u = {};
    function f(t, e) {
        var i = a.getQueryElement(t);
        if (i) {
            if (this.element = i,
            this.element.flickityGUID) {
                var n = u[this.element.flickityGUID];
                return n.option(e),
                n
            }
            l && (this.$element = l(this.element)),
            this.options = a.extend({}, this.constructor.defaults),
            this.option(e),
            this._create()
        } else
            h && h.error("Bad element for Flickity: " + (i || t))
    }
    f.defaults = {
        accessibility: !0,
        cellAlign: "center",
        freeScrollFriction: .075,
        friction: .28,
        namespaceJQueryEvents: !0,
        percentPosition: !0,
        resize: !0,
        selectedAttraction: .025,
        setGallerySize: !0
    },
    f.createMethods = [];
    var p = f.prototype;
    a.extend(p, t.prototype),
    p._create = function() {
        var t = this.guid = ++d;
        for (var e in this.element.flickityGUID = t,
        (u[t] = this).selectedIndex = 0,
        this.restingFrames = 0,
        this.x = 0,
        this.velocity = 0,
        this.originSide = this.options.rightToLeft ? "right" : "left",
        this.viewport = document.createElement("div"),
        this.viewport.className = "flickity-viewport",
        this._createSlider(),
        (this.options.resize || this.options.watchCSS) && n.addEventListener("resize", this),
        this.options.on) {
            var i = this.options.on[e];
            this.on(e, i)
        }
        f.createMethods.forEach(function(t) {
            this[t]()
        }, this),
        this.options.watchCSS ? this.watchCSS() : this.activate()
    }
    ,
    p.option = function(t) {
        a.extend(this.options, t)
    }
    ,
    p.activate = function() {
        this.isActive || (this.isActive = !0,
        this.element.classList.add("flickity-enabled"),
        this.options.rightToLeft && this.element.classList.add("flickity-rtl"),
        this.getSize(),
        c(this._filterFindCellElements(this.element.children), this.slider),
        this.viewport.appendChild(this.slider),
        this.element.appendChild(this.viewport),
        this.reloadCells(),
        this.options.accessibility && (this.element.tabIndex = 0,
        this.element.addEventListener("keydown", this)),
        this.emitEvent("activate"),
        this.selectInitialIndex(),
        this.isInitActivated = !0,
        this.dispatchEvent("ready"))
    }
    ,
    p._createSlider = function() {
        var t = document.createElement("div");
        t.className = "flickity-slider",
        t.style[this.originSide] = 0,
        this.slider = t
    }
    ,
    p._filterFindCellElements = function(t) {
        return a.filterFindElements(t, this.options.cellSelector)
    }
    ,
    p.reloadCells = function() {
        this.cells = this._makeCells(this.slider.children),
        this.positionCells(),
        this._getWrapShiftCells(),
        this.setGallerySize()
    }
    ,
    p._makeCells = function(t) {
        return this._filterFindCellElements(t).map(function(t) {
            return new i(t,this)
        }, this)
    }
    ,
    p.getLastCell = function() {
        return this.cells[this.cells.length - 1]
    }
    ,
    p.getLastSlide = function() {
        return this.slides[this.slides.length - 1]
    }
    ,
    p.positionCells = function() {
        this._sizeCells(this.cells),
        this._positionCells(0)
    }
    ,
    p._positionCells = function(t) {
        t = t || 0,
        this.maxCellHeight = t && this.maxCellHeight || 0;
        var e = 0;
        if (0 < t) {
            var i = this.cells[t - 1];
            e = i.x + i.size.outerWidth
        }
        for (var n = this.cells.length, s = t; s < n; s++) {
            var o = this.cells[s];
            o.setPosition(e),
            e += o.size.outerWidth,
            this.maxCellHeight = Math.max(o.size.outerHeight, this.maxCellHeight)
        }
        this.slideableWidth = e,
        this.updateSlides(),
        this._containSlides(),
        this.slidesWidth = n ? this.getLastSlide().target - this.slides[0].target : 0
    }
    ,
    p._sizeCells = function(t) {
        t.forEach(function(t) {
            t.getSize()
        })
    }
    ,
    p.updateSlides = function() {
        if (this.slides = [],
        this.cells.length) {
            var n = new r(this);
            this.slides.push(n);
            var s = "left" == this.originSide ? "marginRight" : "marginLeft"
              , o = this._getCanCellFit();
            this.cells.forEach(function(t, e) {
                if (n.cells.length) {
                    var i = n.outerWidth - n.firstMargin + (t.size.outerWidth - t.size[s]);
                    o.call(this, e, i) || (n.updateTarget(),
                    n = new r(this),
                    this.slides.push(n)),
                    n.addCell(t)
                } else
                    n.addCell(t)
            }, this),
            n.updateTarget(),
            this.updateSelectedSlide()
        }
    }
    ,
    p._getCanCellFit = function() {
        var t = this.options.groupCells;
        if (!t)
            return function() {
                return !1
            }
            ;
        if ("number" == typeof t) {
            var e = parseInt(t, 10);
            return function(t) {
                return t % e != 0
            }
        }
        var i = "string" == typeof t && t.match(/^(\d+)%$/)
          , n = i ? parseInt(i[1], 10) / 100 : 1;
        return function(t, e) {
            return e <= (this.size.innerWidth + 1) * n
        }
    }
    ,
    p._init = p.reposition = function() {
        this.positionCells(),
        this.positionSliderAtSelected()
    }
    ,
    p.getSize = function() {
        this.size = e(this.element),
        this.setCellAlign(),
        this.cursorPosition = this.size.innerWidth * this.cellAlign
    }
    ;
    var g = {
        center: {
            left: .5,
            right: .5
        },
        left: {
            left: 0,
            right: 1
        },
        right: {
            right: 0,
            left: 1
        }
    };
    return p.setCellAlign = function() {
        var t = g[this.options.cellAlign];
        this.cellAlign = t ? t[this.originSide] : this.options.cellAlign
    }
    ,
    p.setGallerySize = function() {
        if (this.options.setGallerySize) {
            var t = this.options.adaptiveHeight && this.selectedSlide ? this.selectedSlide.height : this.maxCellHeight;
            this.viewport.style.height = t + "px"
        }
    }
    ,
    p._getWrapShiftCells = function() {
        if (this.options.wrapAround) {
            this._unshiftCells(this.beforeShiftCells),
            this._unshiftCells(this.afterShiftCells);
            var t = this.cursorPosition
              , e = this.cells.length - 1;
            this.beforeShiftCells = this._getGapCells(t, e, -1),
            t = this.size.innerWidth - this.cursorPosition,
            this.afterShiftCells = this._getGapCells(t, 0, 1)
        }
    }
    ,
    p._getGapCells = function(t, e, i) {
        for (var n = []; 0 < t; ) {
            var s = this.cells[e];
            if (!s)
                break;
            n.push(s),
            e += i,
            t -= s.size.outerWidth
        }
        return n
    }
    ,
    p._containSlides = function() {
        if (this.options.contain && !this.options.wrapAround && this.cells.length) {
            var t = this.options.rightToLeft
              , e = t ? "marginRight" : "marginLeft"
              , i = t ? "marginLeft" : "marginRight"
              , n = this.slideableWidth - this.getLastCell().size[i]
              , s = n < this.size.innerWidth
              , o = this.cursorPosition + this.cells[0].size[e]
              , r = n - this.size.innerWidth * (1 - this.cellAlign);
            this.slides.forEach(function(t) {
                s ? t.target = n * this.cellAlign : (t.target = Math.max(t.target, o),
                t.target = Math.min(t.target, r))
            }, this)
        }
    }
    ,
    p.dispatchEvent = function(t, e, i) {
        var n = e ? [e].concat(i) : i;
        if (this.emitEvent(t, n),
        l && this.$element) {
            var s = t += this.options.namespaceJQueryEvents ? ".flickity" : "";
            if (e) {
                var o = l.Event(e);
                o.type = t,
                s = o
            }
            this.$element.trigger(s, i)
        }
    }
    ,
    p.select = function(t, e, i) {
        if (this.isActive && (t = parseInt(t, 10),
        this._wrapSelect(t),
        (this.options.wrapAround || e) && (t = a.modulo(t, this.slides.length)),
        this.slides[t])) {
            var n = this.selectedIndex;
            this.selectedIndex = t,
            this.updateSelectedSlide(),
            i ? this.positionSliderAtSelected() : this.startAnimation(),
            this.options.adaptiveHeight && this.setGallerySize(),
            this.dispatchEvent("select", null, [t]),
            t != n && this.dispatchEvent("change", null, [t]),
            this.dispatchEvent("cellSelect")
        }
    }
    ,
    p._wrapSelect = function(t) {
        var e = this.slides.length;
        if (!(this.options.wrapAround && 1 < e))
            return t;
        var i = a.modulo(t, e)
          , n = Math.abs(i - this.selectedIndex)
          , s = Math.abs(i + e - this.selectedIndex)
          , o = Math.abs(i - e - this.selectedIndex);
        !this.isDragSelect && s < n ? t += e : !this.isDragSelect && o < n && (t -= e),
        t < 0 ? this.x -= this.slideableWidth : e <= t && (this.x += this.slideableWidth)
    }
    ,
    p.previous = function(t, e) {
        this.select(this.selectedIndex - 1, t, e)
    }
    ,
    p.next = function(t, e) {
        this.select(this.selectedIndex + 1, t, e)
    }
    ,
    p.updateSelectedSlide = function() {
        var t = this.slides[this.selectedIndex];
        t && (this.unselectSelectedSlide(),
        (this.selectedSlide = t).select(),
        this.selectedCells = t.cells,
        this.selectedElements = t.getCellElements(),
        this.selectedCell = t.cells[0],
        this.selectedElement = this.selectedElements[0])
    }
    ,
    p.unselectSelectedSlide = function() {
        this.selectedSlide && this.selectedSlide.unselect()
    }
    ,
    p.selectInitialIndex = function() {
        var t = this.options.initialIndex;
        if (this.isInitActivated)
            this.select(this.selectedIndex, !1, !0);
        else {
            if (t && "string" == typeof t)
                if (this.queryCell(t))
                    return void this.selectCell(t, !1, !0);
            var e = 0;
            t && this.slides[t] && (e = t),
            this.select(e, !1, !0)
        }
    }
    ,
    p.selectCell = function(t, e, i) {
        var n = this.queryCell(t);
        if (n) {
            var s = this.getCellSlideIndex(n);
            this.select(s, e, i)
        }
    }
    ,
    p.getCellSlideIndex = function(t) {
        for (var e = 0; e < this.slides.length; e++) {
            if (-1 != this.slides[e].cells.indexOf(t))
                return e
        }
    }
    ,
    p.getCell = function(t) {
        for (var e = 0; e < this.cells.length; e++) {
            var i = this.cells[e];
            if (i.element == t)
                return i
        }
    }
    ,
    p.getCells = function(t) {
        t = a.makeArray(t);
        var i = [];
        return t.forEach(function(t) {
            var e = this.getCell(t);
            e && i.push(e)
        }, this),
        i
    }
    ,
    p.getCellElements = function() {
        return this.cells.map(function(t) {
            return t.element
        })
    }
    ,
    p.getParentCell = function(t) {
        var e = this.getCell(t);
        return e || (t = a.getParent(t, ".flickity-slider > *"),
        this.getCell(t))
    }
    ,
    p.getAdjacentCellElements = function(t, e) {
        if (!t)
            return this.selectedSlide.getCellElements();
        e = void 0 === e ? this.selectedIndex : e;
        var i = this.slides.length;
        if (i <= 1 + 2 * t)
            return this.getCellElements();
        for (var n = [], s = e - t; s <= e + t; s++) {
            var o = this.options.wrapAround ? a.modulo(s, i) : s
              , r = this.slides[o];
            r && (n = n.concat(r.getCellElements()))
        }
        return n
    }
    ,
    p.queryCell = function(t) {
        if ("number" == typeof t)
            return this.cells[t];
        if ("string" == typeof t) {
            if (t.match(/^[#\.]?[\d\/]/))
                return;
            t = this.element.querySelector(t)
        }
        return this.getCell(t)
    }
    ,
    p.uiChange = function() {
        this.emitEvent("uiChange")
    }
    ,
    p.childUIPointerDown = function(t) {
        "touchstart" != t.type && t.preventDefault(),
        this.focus()
    }
    ,
    p.onresize = function() {
        this.watchCSS(),
        this.resize()
    }
    ,
    a.debounceMethod(f, "onresize", 150),
    p.resize = function() {
        if (this.isActive) {
            this.getSize(),
            this.options.wrapAround && (this.x = a.modulo(this.x, this.slideableWidth)),
            this.positionCells(),
            this._getWrapShiftCells(),
            this.setGallerySize(),
            this.emitEvent("resize");
            var t = this.selectedElements && this.selectedElements[0];
            this.selectCell(t, !1, !0)
        }
    }
    ,
    p.watchCSS = function() {
        this.options.watchCSS && (-1 != o(this.element, ":after").content.indexOf("flickity") ? this.activate() : this.deactivate())
    }
    ,
    p.onkeydown = function(t) {
        var e = document.activeElement && document.activeElement != this.element;
        if (this.options.accessibility && !e) {
            var i = f.keyboardHandlers[t.keyCode];
            i && i.call(this)
        }
    }
    ,
    f.keyboardHandlers = {
        37: function() {
            var t = this.options.rightToLeft ? "next" : "previous";
            this.uiChange(),
            this[t]()
        },
        39: function() {
            var t = this.options.rightToLeft ? "previous" : "next";
            this.uiChange(),
            this[t]()
        }
    },
    p.focus = function() {
        var t = n.pageYOffset;
        this.element.focus({
            preventScroll: !0
        }),
        n.pageYOffset != t && n.scrollTo(n.pageXOffset, t)
    }
    ,
    p.deactivate = function() {
        this.isActive && (this.element.classList.remove("flickity-enabled"),
        this.element.classList.remove("flickity-rtl"),
        this.unselectSelectedSlide(),
        this.cells.forEach(function(t) {
            t.destroy()
        }),
        this.element.removeChild(this.viewport),
        c(this.slider.children, this.element),
        this.options.accessibility && (this.element.removeAttribute("tabIndex"),
        this.element.removeEventListener("keydown", this)),
        this.isActive = !1,
        this.emitEvent("deactivate"))
    }
    ,
    p.destroy = function() {
        this.deactivate(),
        n.removeEventListener("resize", this),
        this.allOff(),
        this.emitEvent("destroy"),
        l && this.$element && l.removeData(this.element, "flickity"),
        delete this.element.flickityGUID,
        delete u[this.guid]
    }
    ,
    a.extend(p, s),
    f.data = function(t) {
        var e = (t = a.getQueryElement(t)) && t.flickityGUID;
        return e && u[e]
    }
    ,
    a.htmlInit(f, "flickity"),
    l && l.bridget && l.bridget("flickity", f),
    f.setJQuery = function(t) {
        l = t
    }
    ,
    f.Cell = i,
    f.Slide = r,
    f
}),
function(e, i) {
    "function" == typeof define && define.amd ? define("unipointer/unipointer", ["ev-emitter/ev-emitter"], function(t) {
        return i(e, t)
    }) : "object" == typeof module && module.exports ? module.exports = i(e, require("ev-emitter")) : e.Unipointer = i(e, e.EvEmitter)
}(window, function(s, t) {
    function e() {}
    var i = e.prototype = Object.create(t.prototype);
    i.bindStartEvent = function(t) {
        this._bindStartEvent(t, !0)
    }
    ,
    i.unbindStartEvent = function(t) {
        this._bindStartEvent(t, !1)
    }
    ,
    i._bindStartEvent = function(t, e) {
        var i = (e = void 0 === e || e) ? "addEventListener" : "removeEventListener"
          , n = "mousedown";
        s.PointerEvent ? n = "pointerdown" : "ontouchstart"in s && (n = "touchstart"),
        t[i](n, this)
    }
    ,
    i.handleEvent = function(t) {
        var e = "on" + t.type;
        this[e] && this[e](t)
    }
    ,
    i.getTouch = function(t) {
        for (var e = 0; e < t.length; e++) {
            var i = t[e];
            if (i.identifier == this.pointerIdentifier)
                return i
        }
    }
    ,
    i.onmousedown = function(t) {
        var e = t.button;
        e && 0 !== e && 1 !== e || this._pointerDown(t, t)
    }
    ,
    i.ontouchstart = function(t) {
        this._pointerDown(t, t.changedTouches[0])
    }
    ,
    i.onpointerdown = function(t) {
        this._pointerDown(t, t)
    }
    ,
    i._pointerDown = function(t, e) {
        t.button || this.isPointerDown || (this.isPointerDown = !0,
        this.pointerIdentifier = void 0 !== e.pointerId ? e.pointerId : e.identifier,
        this.pointerDown(t, e))
    }
    ,
    i.pointerDown = function(t, e) {
        this._bindPostStartEvents(t),
        this.emitEvent("pointerDown", [t, e])
    }
    ;
    var n = {
        mousedown: ["mousemove", "mouseup"],
        touchstart: ["touchmove", "touchend", "touchcancel"],
        pointerdown: ["pointermove", "pointerup", "pointercancel"]
    };
    return i._bindPostStartEvents = function(t) {
        if (t) {
            var e = n[t.type];
            e.forEach(function(t) {
                s.addEventListener(t, this)
            }, this),
            this._boundPointerEvents = e
        }
    }
    ,
    i._unbindPostStartEvents = function() {
        this._boundPointerEvents && (this._boundPointerEvents.forEach(function(t) {
            s.removeEventListener(t, this)
        }, this),
        delete this._boundPointerEvents)
    }
    ,
    i.onmousemove = function(t) {
        this._pointerMove(t, t)
    }
    ,
    i.onpointermove = function(t) {
        t.pointerId == this.pointerIdentifier && this._pointerMove(t, t)
    }
    ,
    i.ontouchmove = function(t) {
        var e = this.getTouch(t.changedTouches);
        e && this._pointerMove(t, e)
    }
    ,
    i._pointerMove = function(t, e) {
        this.pointerMove(t, e)
    }
    ,
    i.pointerMove = function(t, e) {
        this.emitEvent("pointerMove", [t, e])
    }
    ,
    i.onmouseup = function(t) {
        this._pointerUp(t, t)
    }
    ,
    i.onpointerup = function(t) {
        t.pointerId == this.pointerIdentifier && this._pointerUp(t, t)
    }
    ,
    i.ontouchend = function(t) {
        var e = this.getTouch(t.changedTouches);
        e && this._pointerUp(t, e)
    }
    ,
    i._pointerUp = function(t, e) {
        this._pointerDone(),
        this.pointerUp(t, e)
    }
    ,
    i.pointerUp = function(t, e) {
        this.emitEvent("pointerUp", [t, e])
    }
    ,
    i._pointerDone = function() {
        this._pointerReset(),
        this._unbindPostStartEvents(),
        this.pointerDone()
    }
    ,
    i._pointerReset = function() {
        this.isPointerDown = !1,
        delete this.pointerIdentifier
    }
    ,
    i.pointerDone = function() {}
    ,
    i.onpointercancel = function(t) {
        t.pointerId == this.pointerIdentifier && this._pointerCancel(t, t)
    }
    ,
    i.ontouchcancel = function(t) {
        var e = this.getTouch(t.changedTouches);
        e && this._pointerCancel(t, e)
    }
    ,
    i._pointerCancel = function(t, e) {
        this._pointerDone(),
        this.pointerCancel(t, e)
    }
    ,
    i.pointerCancel = function(t, e) {
        this.emitEvent("pointerCancel", [t, e])
    }
    ,
    e.getPointerPoint = function(t) {
        return {
            x: t.pageX,
            y: t.pageY
        }
    }
    ,
    e
}),
function(e, i) {
    "function" == typeof define && define.amd ? define("unidragger/unidragger", ["unipointer/unipointer"], function(t) {
        return i(e, t)
    }) : "object" == typeof module && module.exports ? module.exports = i(e, require("unipointer")) : e.Unidragger = i(e, e.Unipointer)
}(window, function(o, t) {
    function e() {}
    var i = e.prototype = Object.create(t.prototype);
    i.bindHandles = function() {
        this._bindHandles(!0)
    }
    ,
    i.unbindHandles = function() {
        this._bindHandles(!1)
    }
    ,
    i._bindHandles = function(t) {
        for (var e = (t = void 0 === t || t) ? "addEventListener" : "removeEventListener", i = t ? this._touchActionValue : "", n = 0; n < this.handles.length; n++) {
            var s = this.handles[n];
            this._bindStartEvent(s, t),
            s[e]("click", this),
            o.PointerEvent && (s.style.touchAction = i)
        }
    }
    ,
    i._touchActionValue = "none",
    i.pointerDown = function(t, e) {
        this.okayPointerDown(t) && (this.pointerDownPointer = e,
        t.preventDefault(),
        this.pointerDownBlur(),
        this._bindPostStartEvents(t),
        this.emitEvent("pointerDown", [t, e]))
    }
    ;
    var s = {
        TEXTAREA: !0,
        INPUT: !0,
        SELECT: !0,
        OPTION: !0
    }
      , r = {
        radio: !0,
        checkbox: !0,
        button: !0,
        submit: !0,
        image: !0,
        file: !0
    };
    return i.okayPointerDown = function(t) {
        var e = s[t.target.nodeName]
          , i = r[t.target.type]
          , n = !e || i;
        return n || this._pointerReset(),
        n
    }
    ,
    i.pointerDownBlur = function() {
        var t = document.activeElement;
        t && t.blur && t != document.body && t.blur()
    }
    ,
    i.pointerMove = function(t, e) {
        var i = this._dragPointerMove(t, e);
        this.emitEvent("pointerMove", [t, e, i]),
        this._dragMove(t, e, i)
    }
    ,
    i._dragPointerMove = function(t, e) {
        var i = {
            x: e.pageX - this.pointerDownPointer.pageX,
            y: e.pageY - this.pointerDownPointer.pageY
        };
        return !this.isDragging && this.hasDragStarted(i) && this._dragStart(t, e),
        i
    }
    ,
    i.hasDragStarted = function(t) {
        return 3 < Math.abs(t.x) || 3 < Math.abs(t.y)
    }
    ,
    i.pointerUp = function(t, e) {
        this.emitEvent("pointerUp", [t, e]),
        this._dragPointerUp(t, e)
    }
    ,
    i._dragPointerUp = function(t, e) {
        this.isDragging ? this._dragEnd(t, e) : this._staticClick(t, e)
    }
    ,
    i._dragStart = function(t, e) {
        this.isDragging = !0,
        this.isPreventingClicks = !0,
        this.dragStart(t, e)
    }
    ,
    i.dragStart = function(t, e) {
        this.emitEvent("dragStart", [t, e])
    }
    ,
    i._dragMove = function(t, e, i) {
        this.isDragging && this.dragMove(t, e, i)
    }
    ,
    i.dragMove = function(t, e, i) {
        t.preventDefault(),
        this.emitEvent("dragMove", [t, e, i])
    }
    ,
    i._dragEnd = function(t, e) {
        this.isDragging = !1,
        setTimeout(function() {
            delete this.isPreventingClicks
        }
        .bind(this)),
        this.dragEnd(t, e)
    }
    ,
    i.dragEnd = function(t, e) {
        this.emitEvent("dragEnd", [t, e])
    }
    ,
    i.onclick = function(t) {
        this.isPreventingClicks && t.preventDefault()
    }
    ,
    i._staticClick = function(t, e) {
        this.isIgnoringMouseUp && "mouseup" == t.type || (this.staticClick(t, e),
        "mouseup" != t.type && (this.isIgnoringMouseUp = !0,
        setTimeout(function() {
            delete this.isIgnoringMouseUp
        }
        .bind(this), 400)))
    }
    ,
    i.staticClick = function(t, e) {
        this.emitEvent("staticClick", [t, e])
    }
    ,
    e.getPointerPoint = t.getPointerPoint,
    e
}),
function(n, s) {
    "function" == typeof define && define.amd ? define("flickity/js/drag", ["./flickity", "unidragger/unidragger", "fizzy-ui-utils/utils"], function(t, e, i) {
        return s(n, t, e, i)
    }) : "object" == typeof module && module.exports ? module.exports = s(n, require("./flickity"), require("unidragger"), require("fizzy-ui-utils")) : n.Flickity = s(n, n.Flickity, n.Unidragger, n.fizzyUIUtils)
}(window, function(i, t, e, a) {
    a.extend(t.defaults, {
        draggable: ">1",
        dragThreshold: 3
    }),
    t.createMethods.push("_createDrag");
    var n = t.prototype;
    a.extend(n, e.prototype),
    n._touchActionValue = "pan-y";
    var s = "createTouch"in document
      , o = !1;
    n._createDrag = function() {
        this.on("activate", this.onActivateDrag),
        this.on("uiChange", this._uiChangeDrag),
        this.on("deactivate", this.onDeactivateDrag),
        this.on("cellChange", this.updateDraggable),
        s && !o && (i.addEventListener("touchmove", function() {}),
        o = !0)
    }
    ,
    n.onActivateDrag = function() {
        this.handles = [this.viewport],
        this.bindHandles(),
        this.updateDraggable()
    }
    ,
    n.onDeactivateDrag = function() {
        this.unbindHandles(),
        this.element.classList.remove("is-draggable")
    }
    ,
    n.updateDraggable = function() {
        ">1" == this.options.draggable ? this.isDraggable = 1 < this.slides.length : this.isDraggable = this.options.draggable,
        this.isDraggable ? this.element.classList.add("is-draggable") : this.element.classList.remove("is-draggable")
    }
    ,
    n.bindDrag = function() {
        this.options.draggable = !0,
        this.updateDraggable()
    }
    ,
    n.unbindDrag = function() {
        this.options.draggable = !1,
        this.updateDraggable()
    }
    ,
    n._uiChangeDrag = function() {
        delete this.isFreeScrolling
    }
    ,
    n.pointerDown = function(t, e) {
        this.isDraggable ? this.okayPointerDown(t) && (this._pointerDownPreventDefault(t),
        this.pointerDownFocus(t),
        document.activeElement != this.element && this.pointerDownBlur(),
        this.dragX = this.x,
        this.viewport.classList.add("is-pointer-down"),
        this.pointerDownScroll = l(),
        i.addEventListener("scroll", this),
        this._pointerDownDefault(t, e)) : this._pointerDownDefault(t, e)
    }
    ,
    n._pointerDownDefault = function(t, e) {
        this.pointerDownPointer = {
            pageX: e.pageX,
            pageY: e.pageY
        },
        this._bindPostStartEvents(t),
        this.dispatchEvent("pointerDown", t, [e])
    }
    ;
    var r = {
        INPUT: !0,
        TEXTAREA: !0,
        SELECT: !0
    };
    function l() {
        return {
            x: i.pageXOffset,
            y: i.pageYOffset
        }
    }
    return n.pointerDownFocus = function(t) {
        r[t.target.nodeName] || this.focus()
    }
    ,
    n._pointerDownPreventDefault = function(t) {
        var e = "touchstart" == t.type
          , i = "touch" == t.pointerType
          , n = r[t.target.nodeName];
        e || i || n || t.preventDefault()
    }
    ,
    n.hasDragStarted = function(t) {
        return Math.abs(t.x) > this.options.dragThreshold
    }
    ,
    n.pointerUp = function(t, e) {
        delete this.isTouchScrolling,
        this.viewport.classList.remove("is-pointer-down"),
        this.dispatchEvent("pointerUp", t, [e]),
        this._dragPointerUp(t, e)
    }
    ,
    n.pointerDone = function() {
        i.removeEventListener("scroll", this),
        delete this.pointerDownScroll
    }
    ,
    n.dragStart = function(t, e) {
        this.isDraggable && (this.dragStartPosition = this.x,
        this.startAnimation(),
        i.removeEventListener("scroll", this),
        this.dispatchEvent("dragStart", t, [e]))
    }
    ,
    n.pointerMove = function(t, e) {
        var i = this._dragPointerMove(t, e);
        this.dispatchEvent("pointerMove", t, [e, i]),
        this._dragMove(t, e, i)
    }
    ,
    n.dragMove = function(t, e, i) {
        if (this.isDraggable) {
            t.preventDefault(),
            this.previousDragX = this.dragX;
            var n = this.options.rightToLeft ? -1 : 1;
            this.options.wrapAround && (i.x = i.x % this.slideableWidth);
            var s = this.dragStartPosition + i.x * n;
            if (!this.options.wrapAround && this.slides.length) {
                var o = Math.max(-this.slides[0].target, this.dragStartPosition);
                s = o < s ? .5 * (s + o) : s;
                var r = Math.min(-this.getLastSlide().target, this.dragStartPosition);
                s = s < r ? .5 * (s + r) : s
            }
            this.dragX = s,
            this.dragMoveTime = new Date,
            this.dispatchEvent("dragMove", t, [e, i])
        }
    }
    ,
    n.dragEnd = function(t, e) {
        if (this.isDraggable) {
            this.options.freeScroll && (this.isFreeScrolling = !0);
            var i = this.dragEndRestingSelect();
            if (this.options.freeScroll && !this.options.wrapAround) {
                var n = this.getRestingPosition();
                this.isFreeScrolling = -n > this.slides[0].target && -n < this.getLastSlide().target
            } else
                this.options.freeScroll || i != this.selectedIndex || (i += this.dragEndBoostSelect());
            delete this.previousDragX,
            this.isDragSelect = this.options.wrapAround,
            this.select(i),
            delete this.isDragSelect,
            this.dispatchEvent("dragEnd", t, [e])
        }
    }
    ,
    n.dragEndRestingSelect = function() {
        var t = this.getRestingPosition()
          , e = Math.abs(this.getSlideDistance(-t, this.selectedIndex))
          , i = this._getClosestResting(t, e, 1)
          , n = this._getClosestResting(t, e, -1);
        return i.distance < n.distance ? i.index : n.index
    }
    ,
    n._getClosestResting = function(t, e, i) {
        for (var n = this.selectedIndex, s = 1 / 0, o = this.options.contain && !this.options.wrapAround ? function(t, e) {
            return t <= e
        }
        : function(t, e) {
            return t < e
        }
        ; o(e, s) && (n += i,
        s = e,
        null !== (e = this.getSlideDistance(-t, n))); )
            e = Math.abs(e);
        return {
            distance: s,
            index: n - i
        }
    }
    ,
    n.getSlideDistance = function(t, e) {
        var i = this.slides.length
          , n = this.options.wrapAround && 1 < i
          , s = n ? a.modulo(e, i) : e
          , o = this.slides[s];
        if (!o)
            return null;
        var r = n ? this.slideableWidth * Math.floor(e / i) : 0;
        return t - (o.target + r)
    }
    ,
    n.dragEndBoostSelect = function() {
        if (void 0 === this.previousDragX || !this.dragMoveTime || 100 < new Date - this.dragMoveTime)
            return 0;
        var t = this.getSlideDistance(-this.dragX, this.selectedIndex)
          , e = this.previousDragX - this.dragX;
        return 0 < t && 0 < e ? 1 : t < 0 && e < 0 ? -1 : 0
    }
    ,
    n.staticClick = function(t, e) {
        var i = this.getParentCell(t.target)
          , n = i && i.element
          , s = i && this.cells.indexOf(i);
        this.dispatchEvent("staticClick", t, [e, n, s])
    }
    ,
    n.onscroll = function() {
        var t = l()
          , e = this.pointerDownScroll.x - t.x
          , i = this.pointerDownScroll.y - t.y;
        (3 < Math.abs(e) || 3 < Math.abs(i)) && this._pointerDone()
    }
    ,
    t
}),
function(n, s) {
    "function" == typeof define && define.amd ? define("flickity/js/prev-next-button", ["./flickity", "unipointer/unipointer", "fizzy-ui-utils/utils"], function(t, e, i) {
        return s(n, t, e, i)
    }) : "object" == typeof module && module.exports ? module.exports = s(n, require("./flickity"), require("unipointer"), require("fizzy-ui-utils")) : s(n, n.Flickity, n.Unipointer, n.fizzyUIUtils)
}(window, function(t, e, i, n) {
    "use strict";
    var s = "http://www.w3.org/2000/svg";
    function o(t, e) {
        this.direction = t,
        this.parent = e,
        this._create()
    }
    (o.prototype = Object.create(i.prototype))._create = function() {
        this.isEnabled = !0,
        this.isPrevious = -1 == this.direction;
        var t = this.parent.options.rightToLeft ? 1 : -1;
        this.isLeft = this.direction == t;
        var e = this.element = document.createElement("button");
        e.className = "flickity-button flickity-prev-next-button",
        e.className += this.isPrevious ? " previous" : " next",
        e.setAttribute("type", "button"),
        this.disable(),
        e.setAttribute("aria-label", this.isPrevious ? "Previous" : "Next");
        var i = this.createSVG();
        e.appendChild(i),
        this.parent.on("select", this.update.bind(this)),
        this.on("pointerDown", this.parent.childUIPointerDown.bind(this.parent))
    }
    ,
    o.prototype.activate = function() {
        this.bindStartEvent(this.element),
        this.element.addEventListener("click", this),
        this.parent.element.appendChild(this.element)
    }
    ,
    o.prototype.deactivate = function() {
        this.parent.element.removeChild(this.element),
        this.unbindStartEvent(this.element),
        this.element.removeEventListener("click", this)
    }
    ,
    o.prototype.createSVG = function() {
        var t = document.createElementNS(s, "svg");
        t.setAttribute("class", "flickity-button-icon"),
        t.setAttribute("viewBox", "0 0 100 100");
        var e = document.createElementNS(s, "path")
          , i = function(t) {
            return "string" != typeof t ? "M " + t.x0 + ",50 L " + t.x1 + "," + (t.y1 + 50) + " L " + t.x2 + "," + (t.y2 + 50) + " L " + t.x3 + ",50  L " + t.x2 + "," + (50 - t.y2) + " L " + t.x1 + "," + (50 - t.y1) + " Z" : t
        }(this.parent.options.arrowShape);
        return e.setAttribute("d", i),
        e.setAttribute("class", "arrow"),
        this.isLeft || e.setAttribute("transform", "translate(100, 100) rotate(180) "),
        t.appendChild(e),
        t
    }
    ,
    o.prototype.handleEvent = n.handleEvent,
    o.prototype.onclick = function() {
        if (this.isEnabled) {
            this.parent.uiChange();
            var t = this.isPrevious ? "previous" : "next";
            this.parent[t]()
        }
    }
    ,
    o.prototype.enable = function() {
        this.isEnabled || (this.element.disabled = !1,
        this.isEnabled = !0)
    }
    ,
    o.prototype.disable = function() {
        this.isEnabled && (this.element.disabled = !0,
        this.isEnabled = !1)
    }
    ,
    o.prototype.update = function() {
        var t = this.parent.slides;
        if (this.parent.options.wrapAround && 1 < t.length)
            this.enable();
        else {
            var e = t.length ? t.length - 1 : 0
              , i = this.isPrevious ? 0 : e;
            this[this.parent.selectedIndex == i ? "disable" : "enable"]()
        }
    }
    ,
    o.prototype.destroy = function() {
        this.deactivate(),
        this.allOff()
    }
    ,
    n.extend(e.defaults, {
        prevNextButtons: !0,
        arrowShape: {
            x0: 10,
            x1: 60,
            y1: 50,
            x2: 70,
            y2: 40,
            x3: 30
        }
    }),
    e.createMethods.push("_createPrevNextButtons");
    var r = e.prototype;
    return r._createPrevNextButtons = function() {
        this.options.prevNextButtons && (this.prevButton = new o(-1,this),
        this.nextButton = new o(1,this),
        this.on("activate", this.activatePrevNextButtons))
    }
    ,
    r.activatePrevNextButtons = function() {
        this.prevButton.activate(),
        this.nextButton.activate(),
        this.on("deactivate", this.deactivatePrevNextButtons)
    }
    ,
    r.deactivatePrevNextButtons = function() {
        this.prevButton.deactivate(),
        this.nextButton.deactivate(),
        this.off("deactivate", this.deactivatePrevNextButtons)
    }
    ,
    e.PrevNextButton = o,
    e
}),
function(n, s) {
    "function" == typeof define && define.amd ? define("flickity/js/page-dots", ["./flickity", "unipointer/unipointer", "fizzy-ui-utils/utils"], function(t, e, i) {
        return s(n, t, e, i)
    }) : "object" == typeof module && module.exports ? module.exports = s(n, require("./flickity"), require("unipointer"), require("fizzy-ui-utils")) : s(n, n.Flickity, n.Unipointer, n.fizzyUIUtils)
}(window, function(t, e, i, n) {
    function s(t) {
        this.parent = t,
        this._create()
    }
    (s.prototype = Object.create(i.prototype))._create = function() {
        this.holder = document.createElement("ol"),
        this.holder.className = "flickity-page-dots",
        this.dots = [],
        this.handleClick = this.onClick.bind(this),
        this.on("pointerDown", this.parent.childUIPointerDown.bind(this.parent))
    }
    ,
    s.prototype.activate = function() {
        this.setDots(),
        this.holder.addEventListener("click", this.handleClick),
        this.bindStartEvent(this.holder),
        this.parent.element.appendChild(this.holder)
    }
    ,
    s.prototype.deactivate = function() {
        this.holder.removeEventListener("click", this.handleClick),
        this.unbindStartEvent(this.holder),
        this.parent.element.removeChild(this.holder)
    }
    ,
    s.prototype.setDots = function() {
        var t = this.parent.slides.length - this.dots.length;
        0 < t ? this.addDots(t) : t < 0 && this.removeDots(-t)
    }
    ,
    s.prototype.addDots = function(t) {
        for (var e = document.createDocumentFragment(), i = [], n = this.dots.length, s = n + t, o = n; o < s; o++) {
            var r = document.createElement("li");
            r.className = "dot",
            r.setAttribute("aria-label", "Page dot " + (o + 1)),
            e.appendChild(r),
            i.push(r)
        }
        this.holder.appendChild(e),
        this.dots = this.dots.concat(i)
    }
    ,
    s.prototype.removeDots = function(t) {
        this.dots.splice(this.dots.length - t, t).forEach(function(t) {
            this.holder.removeChild(t)
        }, this)
    }
    ,
    s.prototype.updateSelected = function() {
        this.selectedDot && (this.selectedDot.className = "dot",
        this.selectedDot.removeAttribute("aria-current")),
        this.dots.length && (this.selectedDot = this.dots[this.parent.selectedIndex],
        this.selectedDot.className = "dot is-selected",
        this.selectedDot.setAttribute("aria-current", "step"))
    }
    ,
    s.prototype.onTap = s.prototype.onClick = function(t) {
        var e = t.target;
        if ("LI" == e.nodeName) {
            this.parent.uiChange();
            var i = this.dots.indexOf(e);
            this.parent.select(i)
        }
    }
    ,
    s.prototype.destroy = function() {
        this.deactivate(),
        this.allOff()
    }
    ,
    e.PageDots = s,
    n.extend(e.defaults, {
        pageDots: !0
    }),
    e.createMethods.push("_createPageDots");
    var o = e.prototype;
    return o._createPageDots = function() {
        this.options.pageDots && (this.pageDots = new s(this),
        this.on("activate", this.activatePageDots),
        this.on("select", this.updateSelectedPageDots),
        this.on("cellChange", this.updatePageDots),
        this.on("resize", this.updatePageDots),
        this.on("deactivate", this.deactivatePageDots))
    }
    ,
    o.activatePageDots = function() {
        this.pageDots.activate()
    }
    ,
    o.updateSelectedPageDots = function() {
        this.pageDots.updateSelected()
    }
    ,
    o.updatePageDots = function() {
        this.pageDots.setDots()
    }
    ,
    o.deactivatePageDots = function() {
        this.pageDots.deactivate()
    }
    ,
    e.PageDots = s,
    e
}),
function(t, n) {
    "function" == typeof define && define.amd ? define("flickity/js/player", ["ev-emitter/ev-emitter", "fizzy-ui-utils/utils", "./flickity"], function(t, e, i) {
        return n(t, e, i)
    }) : "object" == typeof module && module.exports ? module.exports = n(require("ev-emitter"), require("fizzy-ui-utils"), require("./flickity")) : n(t.EvEmitter, t.fizzyUIUtils, t.Flickity)
}(window, function(t, e, i) {
    function n(t) {
        this.parent = t,
        this.state = "stopped",
        this.onVisibilityChange = this.visibilityChange.bind(this),
        this.onVisibilityPlay = this.visibilityPlay.bind(this)
    }
    (n.prototype = Object.create(t.prototype)).play = function() {
        "playing" != this.state && (document.hidden ? document.addEventListener("visibilitychange", this.onVisibilityPlay) : (this.state = "playing",
        document.addEventListener("visibilitychange", this.onVisibilityChange),
        this.tick()))
    }
    ,
    n.prototype.tick = function() {
        if ("playing" == this.state) {
            var t = this.parent.options.autoPlay;
            t = "number" == typeof t ? t : 3e3;
            var e = this;
            this.clear(),
            this.timeout = setTimeout(function() {
                e.parent.next(!0),
                e.tick()
            }, t)
        }
    }
    ,
    n.prototype.stop = function() {
        this.state = "stopped",
        this.clear(),
        document.removeEventListener("visibilitychange", this.onVisibilityChange)
    }
    ,
    n.prototype.clear = function() {
        clearTimeout(this.timeout)
    }
    ,
    n.prototype.pause = function() {
        "playing" == this.state && (this.state = "paused",
        this.clear())
    }
    ,
    n.prototype.unpause = function() {
        "paused" == this.state && this.play()
    }
    ,
    n.prototype.visibilityChange = function() {
        this[document.hidden ? "pause" : "unpause"]()
    }
    ,
    n.prototype.visibilityPlay = function() {
        this.play(),
        document.removeEventListener("visibilitychange", this.onVisibilityPlay)
    }
    ,
    e.extend(i.defaults, {
        pauseAutoPlayOnHover: !0
    }),
    i.createMethods.push("_createPlayer");
    var s = i.prototype;
    return s._createPlayer = function() {
        this.player = new n(this),
        this.on("activate", this.activatePlayer),
        this.on("uiChange", this.stopPlayer),
        this.on("pointerDown", this.stopPlayer),
        this.on("deactivate", this.deactivatePlayer)
    }
    ,
    s.activatePlayer = function() {
        this.options.autoPlay && (this.player.play(),
        this.element.addEventListener("mouseenter", this))
    }
    ,
    s.playPlayer = function() {
        this.player.play()
    }
    ,
    s.stopPlayer = function() {
        this.player.stop()
    }
    ,
    s.pausePlayer = function() {
        this.player.pause()
    }
    ,
    s.unpausePlayer = function() {
        this.player.unpause()
    }
    ,
    s.deactivatePlayer = function() {
        this.player.stop(),
        this.element.removeEventListener("mouseenter", this)
    }
    ,
    s.onmouseenter = function() {
        this.options.pauseAutoPlayOnHover && (this.player.pause(),
        this.element.addEventListener("mouseleave", this))
    }
    ,
    s.onmouseleave = function() {
        this.player.unpause(),
        this.element.removeEventListener("mouseleave", this)
    }
    ,
    i.Player = n,
    i
}),
function(i, n) {
    "function" == typeof define && define.amd ? define("flickity/js/add-remove-cell", ["./flickity", "fizzy-ui-utils/utils"], function(t, e) {
        return n(i, t, e)
    }) : "object" == typeof module && module.exports ? module.exports = n(i, require("./flickity"), require("fizzy-ui-utils")) : n(i, i.Flickity, i.fizzyUIUtils)
}(window, function(t, e, n) {
    var i = e.prototype;
    return i.insert = function(t, e) {
        var i = this._makeCells(t);
        if (i && i.length) {
            var n = this.cells.length;
            e = void 0 === e ? n : e;
            var s = function(t) {
                var e = document.createDocumentFragment();
                return t.forEach(function(t) {
                    e.appendChild(t.element)
                }),
                e
            }(i)
              , o = e == n;
            if (o)
                this.slider.appendChild(s);
            else {
                var r = this.cells[e].element;
                this.slider.insertBefore(s, r)
            }
            if (0 === e)
                this.cells = i.concat(this.cells);
            else if (o)
                this.cells = this.cells.concat(i);
            else {
                var a = this.cells.splice(e, n - e);
                this.cells = this.cells.concat(i).concat(a)
            }
            this._sizeCells(i),
            this.cellChange(e, !0)
        }
    }
    ,
    i.append = function(t) {
        this.insert(t, this.cells.length)
    }
    ,
    i.prepend = function(t) {
        this.insert(t, 0)
    }
    ,
    i.remove = function(t) {
        var e = this.getCells(t);
        if (e && e.length) {
            var i = this.cells.length - 1;
            e.forEach(function(t) {
                t.remove();
                var e = this.cells.indexOf(t);
                i = Math.min(e, i),
                n.removeFrom(this.cells, t)
            }, this),
            this.cellChange(i, !0)
        }
    }
    ,
    i.cellSizeChange = function(t) {
        var e = this.getCell(t);
        if (e) {
            e.getSize();
            var i = this.cells.indexOf(e);
            this.cellChange(i)
        }
    }
    ,
    i.cellChange = function(t, e) {
        var i = this.selectedElement;
        this._positionCells(t),
        this._getWrapShiftCells(),
        this.setGallerySize();
        var n = this.getCell(i);
        n && (this.selectedIndex = this.getCellSlideIndex(n)),
        this.selectedIndex = Math.min(this.slides.length - 1, this.selectedIndex),
        this.emitEvent("cellChange", [t]),
        this.select(this.selectedIndex),
        e && this.positionSliderAtSelected()
    }
    ,
    e
}),
function(i, n) {
    "function" == typeof define && define.amd ? define("flickity/js/lazyload", ["./flickity", "fizzy-ui-utils/utils"], function(t, e) {
        return n(i, t, e)
    }) : "object" == typeof module && module.exports ? module.exports = n(i, require("./flickity"), require("fizzy-ui-utils")) : n(i, i.Flickity, i.fizzyUIUtils)
}(window, function(t, e, o) {
    "use strict";
    e.createMethods.push("_createLazyload");
    var i = e.prototype;
    function s(t, e) {
        this.img = t,
        this.flickity = e,
        this.load()
    }
    return i._createLazyload = function() {
        this.on("select", this.lazyLoad)
    }
    ,
    i.lazyLoad = function() {
        var t = this.options.lazyLoad;
        if (t) {
            var e = "number" == typeof t ? t : 0
              , i = this.getAdjacentCellElements(e)
              , n = [];
            i.forEach(function(t) {
                var e = function(t) {
                    if ("IMG" == t.nodeName) {
                        var e = t.getAttribute("data-flickity-lazyload")
                          , i = t.getAttribute("data-flickity-lazyload-src")
                          , n = t.getAttribute("data-flickity-lazyload-srcset");
                        if (e || i || n)
                            return [t]
                    }
                    var s = t.querySelectorAll("img[data-flickity-lazyload], img[data-flickity-lazyload-src], img[data-flickity-lazyload-srcset]");
                    return o.makeArray(s)
                }(t);
                n = n.concat(e)
            }),
            n.forEach(function(t) {
                new s(t,this)
            }, this)
        }
    }
    ,
    s.prototype.handleEvent = o.handleEvent,
    s.prototype.load = function() {
        this.img.addEventListener("load", this),
        this.img.addEventListener("error", this);
        var t = this.img.getAttribute("data-flickity-lazyload") || this.img.getAttribute("data-flickity-lazyload-src")
          , e = this.img.getAttribute("data-flickity-lazyload-srcset");
        this.img.src = t,
        e && this.img.setAttribute("srcset", e),
        this.img.removeAttribute("data-flickity-lazyload"),
        this.img.removeAttribute("data-flickity-lazyload-src"),
        this.img.removeAttribute("data-flickity-lazyload-srcset")
    }
    ,
    s.prototype.onload = function(t) {
        this.complete(t, "flickity-lazyloaded")
    }
    ,
    s.prototype.onerror = function(t) {
        this.complete(t, "flickity-lazyerror")
    }
    ,
    s.prototype.complete = function(t, e) {
        this.img.removeEventListener("load", this),
        this.img.removeEventListener("error", this);
        var i = this.flickity.getParentCell(this.img)
          , n = i && i.element;
        this.flickity.cellSizeChange(n),
        this.img.classList.add(e),
        this.flickity.dispatchEvent("lazyLoad", t, n)
    }
    ,
    e.LazyLoader = s,
    e
}),
function(t, e) {
    "function" == typeof define && define.amd ? define("flickity/js/index", ["./flickity", "./drag", "./prev-next-button", "./page-dots", "./player", "./add-remove-cell", "./lazyload"], e) : "object" == typeof module && module.exports && (module.exports = e(require("./flickity"), require("./drag"), require("./prev-next-button"), require("./page-dots"), require("./player"), require("./add-remove-cell"), require("./lazyload")))
}(window, function(t) {
    return t
}),
function(t, e) {
    "function" == typeof define && define.amd ? define("flickity-as-nav-for/as-nav-for", ["flickity/js/index", "fizzy-ui-utils/utils"], e) : "object" == typeof module && module.exports ? module.exports = e(require("flickity"), require("fizzy-ui-utils")) : t.Flickity = e(t.Flickity, t.fizzyUIUtils)
}(window, function(n, s) {
    n.createMethods.push("_createAsNavFor");
    var t = n.prototype;
    return t._createAsNavFor = function() {
        this.on("activate", this.activateAsNavFor),
        this.on("deactivate", this.deactivateAsNavFor),
        this.on("destroy", this.destroyAsNavFor);
        var t = this.options.asNavFor;
        if (t) {
            var e = this;
            setTimeout(function() {
                e.setNavCompanion(t)
            })
        }
    }
    ,
    t.setNavCompanion = function(t) {
        t = s.getQueryElement(t);
        var e = n.data(t);
        if (e && e != this) {
            this.navCompanion = e;
            var i = this;
            this.onNavCompanionSelect = function() {
                i.navCompanionSelect()
            }
            ,
            e.on("select", this.onNavCompanionSelect),
            this.on("staticClick", this.onNavStaticClick),
            this.navCompanionSelect(!0)
        }
    }
    ,
    t.navCompanionSelect = function(t) {
        var e = this.navCompanion && this.navCompanion.selectedCells;
        if (e) {
            var i = e[0]
              , n = this.navCompanion.cells.indexOf(i)
              , s = n + e.length - 1
              , o = Math.floor(function(t, e, i) {
                return (e - t) * i + t
            }(n, s, this.navCompanion.cellAlign));
            if (this.selectCell(o, !1, t),
            this.removeNavSelectedElements(),
            !(o >= this.cells.length)) {
                var r = this.cells.slice(n, 1 + s);
                this.navSelectedElements = r.map(function(t) {
                    return t.element
                }),
                this.changeNavSelectedClass("add")
            }
        }
    }
    ,
    t.changeNavSelectedClass = function(e) {
        this.navSelectedElements.forEach(function(t) {
            t.classList[e]("is-nav-selected")
        })
    }
    ,
    t.activateAsNavFor = function() {
        this.navCompanionSelect(!0)
    }
    ,
    t.removeNavSelectedElements = function() {
        this.navSelectedElements && (this.changeNavSelectedClass("remove"),
        delete this.navSelectedElements)
    }
    ,
    t.onNavStaticClick = function(t, e, i, n) {
        "number" == typeof n && this.navCompanion.selectCell(n)
    }
    ,
    t.deactivateAsNavFor = function() {
        this.removeNavSelectedElements()
    }
    ,
    t.destroyAsNavFor = function() {
        this.navCompanion && (this.navCompanion.off("select", this.onNavCompanionSelect),
        this.off("staticClick", this.onNavStaticClick),
        delete this.navCompanion)
    }
    ,
    n
}),
function(e, i) {
    "use strict";
    "function" == typeof define && define.amd ? define("imagesloaded/imagesloaded", ["ev-emitter/ev-emitter"], function(t) {
        return i(e, t)
    }) : "object" == typeof module && module.exports ? module.exports = i(e, require("ev-emitter")) : e.imagesLoaded = i(e, e.EvEmitter)
}("undefined" != typeof window ? window : this, function(e, t) {
    var s = e.jQuery
      , o = e.console;
    function r(t, e) {
        for (var i in e)
            t[i] = e[i];
        return t
    }
    var a = Array.prototype.slice;
    function l(t, e, i) {
        if (!(this instanceof l))
            return new l(t,e,i);
        var n = t;
        "string" == typeof t && (n = document.querySelectorAll(t)),
        n ? (this.elements = function(t) {
            return Array.isArray(t) ? t : "object" == typeof t && "number" == typeof t.length ? a.call(t) : [t]
        }(n),
        this.options = r({}, this.options),
        "function" == typeof e ? i = e : r(this.options, e),
        i && this.on("always", i),
        this.getImages(),
        s && (this.jqDeferred = new s.Deferred),
        setTimeout(this.check.bind(this))) : o.error("Bad element for imagesLoaded " + (n || t))
    }
    (l.prototype = Object.create(t.prototype)).options = {},
    l.prototype.getImages = function() {
        this.images = [],
        this.elements.forEach(this.addElementImages, this)
    }
    ,
    l.prototype.addElementImages = function(t) {
        "IMG" == t.nodeName && this.addImage(t),
        !0 === this.options.background && this.addElementBackgroundImages(t);
        var e = t.nodeType;
        if (e && h[e]) {
            for (var i = t.querySelectorAll("img"), n = 0; n < i.length; n++) {
                var s = i[n];
                this.addImage(s)
            }
            if ("string" == typeof this.options.background) {
                var o = t.querySelectorAll(this.options.background);
                for (n = 0; n < o.length; n++) {
                    var r = o[n];
                    this.addElementBackgroundImages(r)
                }
            }
        }
    }
    ;
    var h = {
        1: !0,
        9: !0,
        11: !0
    };
    function i(t) {
        this.img = t
    }
    function n(t, e) {
        this.url = t,
        this.element = e,
        this.img = new Image
    }
    return l.prototype.addElementBackgroundImages = function(t) {
        var e = getComputedStyle(t);
        if (e)
            for (var i = /url\((['"])?(.*?)\1\)/gi, n = i.exec(e.backgroundImage); null !== n; ) {
                var s = n && n[2];
                s && this.addBackground(s, t),
                n = i.exec(e.backgroundImage)
            }
    }
    ,
    l.prototype.addImage = function(t) {
        var e = new i(t);
        this.images.push(e)
    }
    ,
    l.prototype.addBackground = function(t, e) {
        var i = new n(t,e);
        this.images.push(i)
    }
    ,
    l.prototype.check = function() {
        var n = this;
        function e(t, e, i) {
            setTimeout(function() {
                n.progress(t, e, i)
            })
        }
        this.progressedCount = 0,
        this.hasAnyBroken = !1,
        this.images.length ? this.images.forEach(function(t) {
            t.once("progress", e),
            t.check()
        }) : this.complete()
    }
    ,
    l.prototype.progress = function(t, e, i) {
        this.progressedCount++,
        this.hasAnyBroken = this.hasAnyBroken || !t.isLoaded,
        this.emitEvent("progress", [this, t, e]),
        this.jqDeferred && this.jqDeferred.notify && this.jqDeferred.notify(this, t),
        this.progressedCount == this.images.length && this.complete(),
        this.options.debug && o && o.log("progress: " + i, t, e)
    }
    ,
    l.prototype.complete = function() {
        var t = this.hasAnyBroken ? "fail" : "done";
        if (this.isComplete = !0,
        this.emitEvent(t, [this]),
        this.emitEvent("always", [this]),
        this.jqDeferred) {
            var e = this.hasAnyBroken ? "reject" : "resolve";
            this.jqDeferred[e](this)
        }
    }
    ,
    (i.prototype = Object.create(t.prototype)).check = function() {
        this.getIsImageComplete() ? this.confirm(0 !== this.img.naturalWidth, "naturalWidth") : (this.proxyImage = new Image,
        this.proxyImage.addEventListener("load", this),
        this.proxyImage.addEventListener("error", this),
        this.img.addEventListener("load", this),
        this.img.addEventListener("error", this),
        this.proxyImage.src = this.img.src)
    }
    ,
    i.prototype.getIsImageComplete = function() {
        return this.img.complete && this.img.naturalWidth
    }
    ,
    i.prototype.confirm = function(t, e) {
        this.isLoaded = t,
        this.emitEvent("progress", [this, this.img, e])
    }
    ,
    i.prototype.handleEvent = function(t) {
        var e = "on" + t.type;
        this[e] && this[e](t)
    }
    ,
    i.prototype.onload = function() {
        this.confirm(!0, "onload"),
        this.unbindEvents()
    }
    ,
    i.prototype.onerror = function() {
        this.confirm(!1, "onerror"),
        this.unbindEvents()
    }
    ,
    i.prototype.unbindEvents = function() {
        this.proxyImage.removeEventListener("load", this),
        this.proxyImage.removeEventListener("error", this),
        this.img.removeEventListener("load", this),
        this.img.removeEventListener("error", this)
    }
    ,
    (n.prototype = Object.create(i.prototype)).check = function() {
        this.img.addEventListener("load", this),
        this.img.addEventListener("error", this),
        this.img.src = this.url,
        this.getIsImageComplete() && (this.confirm(0 !== this.img.naturalWidth, "naturalWidth"),
        this.unbindEvents())
    }
    ,
    n.prototype.unbindEvents = function() {
        this.img.removeEventListener("load", this),
        this.img.removeEventListener("error", this)
    }
    ,
    n.prototype.confirm = function(t, e) {
        this.isLoaded = t,
        this.emitEvent("progress", [this, this.element, e])
    }
    ,
    l.makeJQueryPlugin = function(t) {
        (t = t || e.jQuery) && ((s = t).fn.imagesLoaded = function(t, e) {
            return new l(this,t,e).jqDeferred.promise(s(this))
        }
        )
    }
    ,
    l.makeJQueryPlugin(),
    l
}),
function(i, n) {
    "function" == typeof define && define.amd ? define(["flickity/js/index", "imagesloaded/imagesloaded"], function(t, e) {
        return n(i, t, e)
    }) : "object" == typeof module && module.exports ? module.exports = n(i, require("flickity"), require("imagesloaded")) : i.Flickity = n(i, i.Flickity, i.imagesLoaded)
}(window, function(t, e, i) {
    "use strict";
    e.createMethods.push("_createImagesLoaded");
    var n = e.prototype;
    return n._createImagesLoaded = function() {
        this.on("activate", this.imagesLoaded)
    }
    ,
    n.imagesLoaded = function() {
        if (this.options.imagesLoaded) {
            var n = this;
            i(this.slider).on("progress", function(t, e) {
                var i = n.getParentCell(e.img);
                n.cellSizeChange(i && i.element),
                n.options.freeScroll || n.positionSliderAtSelected()
            })
        }
    }
    ,
    e
});
/**
 * Flickity background lazyload v1.0.1
 * lazyload background cell images
 */

/*jshint browser: true, unused: true, undef: true */

(function(window, factory) {
    // universal module definition
    /*globals define, module, require */
    if (typeof define == 'function' && define.amd) {
        // AMD
        define(['flickity/js/index', 'fizzy-ui-utils/utils'], factory);
    } else if (typeof module == 'object' && module.exports) {
        // CommonJS
        module.exports = factory(require('flickity'), require('fizzy-ui-utils'));
    } else {
        // browser global
        factory(window.Flickity, window.fizzyUIUtils);
    }

}(window, function factory(Flickity, utils) {
    /*jshint strict: true */
    'use strict';

    Flickity.createMethods.push('_createBgLazyLoad');

    var proto = Flickity.prototype;

    proto._createBgLazyLoad = function() {
        this.on('select', this.bgLazyLoad);
    }
    ;

    proto.bgLazyLoad = function() {
        var lazyLoad = this.options.bgLazyLoad;
        if (!lazyLoad) {
            return;
        }

        // get adjacent cells, use lazyLoad option for adjacent count
        var adjCount = typeof lazyLoad == 'number' ? lazyLoad : 0;
        var cellElems = this.getAdjacentCellElements(adjCount);

        for (var i = 0; i < cellElems.length; i++) {
            var cellElem = cellElems[i];
            this.bgLazyLoadElem(cellElem);
            // select lazy elems in cell
            var children = cellElem.querySelectorAll('[data-flickity-bg-lazyload]');
            for (var j = 0; j < children.length; j++) {
                this.bgLazyLoadElem(children[j]);
            }
        }
    }
    ;

    proto.bgLazyLoadElem = function(elem) {
        var attr = elem.getAttribute('data-flickity-bg-lazyload');
        if (attr) {
            new BgLazyLoader(elem,attr,this);
        }
    }
    ;

    // -------------------------- LazyBGLoader -------------------------- //

    /**
     * class to handle loading images
     */
    function BgLazyLoader(elem, url, flickity) {
        this.element = elem;
        this.url = url;
        this.img = new Image();
        this.flickity = flickity;
        this.load();
    }

    BgLazyLoader.prototype.handleEvent = utils.handleEvent;

    BgLazyLoader.prototype.load = function() {
        this.img.addEventListener('load', this);
        this.img.addEventListener('error', this);
        // load image
        this.img.src = this.url;
        // remove attr
        this.element.removeAttribute('data-flickity-bg-lazyload');
    }
    ;

    BgLazyLoader.prototype.onload = function(event) {
        this.element.style.backgroundImage = 'url("' + this.url + '")';
        this.complete(event, 'flickity-bg-lazyloaded');
    }
    ;

    BgLazyLoader.prototype.onerror = function(event) {
        this.complete(event, 'flickity-bg-lazyerror');
    }
    ;

    BgLazyLoader.prototype.complete = function(event, className) {
        // unbind events
        this.img.removeEventListener('load', this);
        this.img.removeEventListener('error', this);

        this.element.classList.add(className);
        this.flickity.dispatchEvent('bgLazyLoad', event, this.element);
    }
    ;

    // -----  ----- //

    Flickity.BgLazyLoader = BgLazyLoader;

    return Flickity;

}));
/**
 * Flickity fade v1.0.0
 * Fade between Flickity slides
 */

/* jshint browser: true, undef: true, unused: true */

(function(window, factory) {
    // universal module definition
    /*globals define, module, require */
    if (typeof define == 'function' && define.amd) {
        // AMD
        define(['flickity/js/index', 'fizzy-ui-utils/utils', ], factory);
    } else if (typeof module == 'object' && module.exports) {
        // CommonJS
        module.exports = factory(require('flickity'), require('fizzy-ui-utils'));
    } else {
        // browser global
        factory(window.Flickity, window.fizzyUIUtils);
    }

}(this, function factory(Flickity, utils) {
    // ---- Slide ---- //

    var Slide = Flickity.Slide;

    var slideUpdateTarget = Slide.prototype.updateTarget;
    Slide.prototype.updateTarget = function() {
        slideUpdateTarget.apply(this, arguments);
        if (!this.parent.options.fade) {
            return;
        }
        // position cells at selected target
        var slideTargetX = this.target - this.x;
        var firstCellX = this.cells[0].x;
        this.cells.forEach(function(cell) {
            var targetX = cell.x - firstCellX - slideTargetX;
            cell.renderPosition(targetX);
        });
    }
    ;

    Slide.prototype.setOpacity = function(alpha) {
        this.cells.forEach(function(cell) {
            cell.element.style.opacity = alpha;
        });
    }
    ;

    // ---- Flickity ---- //

    var proto = Flickity.prototype;

    Flickity.createMethods.push('_createFade');

    proto._createFade = function() {
        this.fadeIndex = this.selectedIndex;
        this.prevSelectedIndex = this.selectedIndex;
        this.on('select', this.onSelectFade);
        this.on('dragEnd', this.onDragEndFade);
        this.on('settle', this.onSettleFade);
        this.on('activate', this.onActivateFade);
        this.on('deactivate', this.onDeactivateFade);
    }
    ;

    var updateSlides = proto.updateSlides;
    proto.updateSlides = function() {
        updateSlides.apply(this, arguments);
        if (!this.options.fade) {
            return;
        }
        // set initial opacity
        this.slides.forEach(function(slide, i) {
            var alpha = i === this.selectedIndex ? 1 : 0;
            slide.setOpacity(alpha);
        }, this);
    }
    ;

    /* ---- events ---- */

    proto.onSelectFade = function() {
        // in case of resize, keep fadeIndex within current count
        this.fadeIndex = Math.min(this.prevSelectedIndex, this.slides.length - 1);
        this.prevSelectedIndex = this.selectedIndex;
    }
    ;

    proto.onSettleFade = function() {
        delete this.didDragEnd;
        if (!this.options.fade) {
            return;
        }
        // set full and 0 opacity on selected & faded slides
        this.selectedSlide.setOpacity(1);
        var fadedSlide = this.slides[this.fadeIndex];
        if (fadedSlide && this.fadeIndex !== this.selectedIndex) {
            this.slides[this.fadeIndex].setOpacity(0);
        }
    }
    ;

    proto.onDragEndFade = function() {
        // set flag
        this.didDragEnd = true;
    }
    ;

    proto.onActivateFade = function() {
        if (this.options.fade) {
            this.element.classList.add('is-fade');
        }
    }
    ;

    proto.onDeactivateFade = function() {
        if (!this.options.fade) {
            return;
        }
        this.element.classList.remove('is-fade');
        // reset opacity
        this.slides.forEach(function(slide) {
            slide.setOpacity('');
        });
    }
    ;

    /* ---- position & fading ---- */

    var positionSlider = proto.positionSlider;
    proto.positionSlider = function() {
        if (!this.options.fade) {
            positionSlider.apply(this, arguments);
            return;
        }

        this.fadeSlides();
        this.dispatchScrollEvent();
    }
    ;

    var positionSliderAtSelected = proto.positionSliderAtSelected;
    proto.positionSliderAtSelected = function() {
        if (this.options.fade) {
            // position fade slider at origin
            this.setTranslateX(0);
        }
        positionSliderAtSelected.apply(this, arguments);
    }
    ;

    proto.fadeSlides = function() {
        if (this.slides.length < 2) {
            return;
        }
        // get slides to fade-in & fade-out
        var indexes = this.getFadeIndexes();
        var fadeSlideA = this.slides[indexes.a];
        var fadeSlideB = this.slides[indexes.b];
        var distance = this.wrapDifference(fadeSlideA.target, fadeSlideB.target);
        var progress = this.wrapDifference(fadeSlideA.target, -this.x);
        progress = Math.abs(progress / distance);

        fadeSlideA.setOpacity(1 - progress);
        fadeSlideB.setOpacity(progress);

        // hide previous slide
        var fadeHideIndex = indexes.a;
        if (this.isDragging) {
            fadeHideIndex = progress > 0.5 ? indexes.a : indexes.b;
        }
        var isNewHideIndex = this.fadeHideIndex != undefined && this.fadeHideIndex != fadeHideIndex && this.fadeHideIndex != indexes.a && this.fadeHideIndex != indexes.b;
        if (isNewHideIndex) {
            // new fadeHideSlide set, hide previous
            this.slides[this.fadeHideIndex].setOpacity(0);
        }
        this.fadeHideIndex = fadeHideIndex;
    }
    ;

    proto.getFadeIndexes = function() {
        if (!this.isDragging && !this.didDragEnd) {
            return {
                a: this.fadeIndex,
                b: this.selectedIndex,
            };
        }
        if (this.options.wrapAround) {
            return this.getFadeDragWrapIndexes();
        } else {
            return this.getFadeDragLimitIndexes();
        }
    }
    ;

    proto.getFadeDragWrapIndexes = function() {
        var distances = this.slides.map(function(slide, i) {
            return this.getSlideDistance(-this.x, i);
        }, this);
        var absDistances = distances.map(function(distance) {
            return Math.abs(distance);
        });
        var minDistance = Math.min.apply(Math, absDistances);
        var closestIndex = absDistances.indexOf(minDistance);
        var distance = distances[closestIndex];
        var len = this.slides.length;

        var delta = distance >= 0 ? 1 : -1;
        return {
            a: closestIndex,
            b: utils.modulo(closestIndex + delta, len),
        };
    }
    ;

    proto.getFadeDragLimitIndexes = function() {
        // calculate closest previous slide
        var dragIndex = 0;
        for (var i = 0; i < this.slides.length - 1; i++) {
            var slide = this.slides[i];
            if (-this.x < slide.target) {
                break;
            }
            dragIndex = i;
        }
        return {
            a: dragIndex,
            b: dragIndex + 1,
        };
    }
    ;

    proto.wrapDifference = function(a, b) {
        var diff = b - a;

        if (!this.options.wrapAround) {
            return diff;
        }

        var diffPlus = diff + this.slideableWidth;
        var diffMinus = diff - this.slideableWidth;
        if (Math.abs(diffPlus) < Math.abs(diff)) {
            diff = diffPlus;
        }
        if (Math.abs(diffMinus) < Math.abs(diff)) {
            diff = diffMinus;
        }
        return diff;
    }
    ;

    // ---- wrapAround ---- //

    var _getWrapShiftCells = proto._getWrapShiftCells;
    proto._getWrapShiftCells = function() {
        if (!this.options.fade) {
            _getWrapShiftCells.apply(this, arguments);
        }
    }
    ;

    var shiftWrapCells = proto.shiftWrapCells;
    proto.shiftWrapCells = function() {
        if (!this.options.fade) {
            shiftWrapCells.apply(this, arguments);
        }
    }
    ;

    return Flickity;

}));
/*
     _ _      _       _
 ___| (_) ___| | __  (_)___
/ __| | |/ __| |/ /  | / __|
\__ \ | | (__|   < _ | \__ \
|___/_|_|\___|_|\_(_)/ |___/
                   |__/

 Version: 1.8.0
  Author: Ken Wheeler
 Website: http://kenwheeler.github.io
    Docs: http://kenwheeler.github.io/slick
    Repo: http://github.com/kenwheeler/slick
  Issues: http://github.com/kenwheeler/slick/issues

 */
/* global window, document, define, jQuery, setInterval, clearInterval */
;(function(factory) {
    'use strict';
    if (typeof define === 'function' && define.amd) {
        define(['jquery'], factory);
    } else if (typeof exports !== 'undefined') {
        module.exports = factory(require('jquery'));
    } else {
        factory(jQuery);
    }

}(function($) {
    'use strict';
    var Slick = window.Slick || {};

    Slick = (function() {

        var instanceUid = 0;

        function Slick(element, settings) {

            var _ = this, dataSettings;

            _.defaults = {
                accessibility: true,
                adaptiveHeight: false,
                appendArrows: $(element),
                appendDots: $(element),
                arrows: true,
                asNavFor: null,
                prevArrow: '<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',
                nextArrow: '<button class="slick-next" aria-label="Next" type="button">Next</button>',
                autoplay: false,
                autoplaySpeed: 3000,
                centerMode: false,
                centerPadding: '50px',
                cssEase: 'ease',
                customPaging: function(slider, i) {
                    return $('<button type="button" />').text(i + 1);
                },
                dots: false,
                dotsClass: 'slick-dots',
                draggable: true,
                easing: 'linear',
                edgeFriction: 0.35,
                fade: false,
                focusOnSelect: false,
                focusOnChange: false,
                infinite: true,
                initialSlide: 0,
                lazyLoad: 'ondemand',
                mobileFirst: false,
                pauseOnHover: true,
                pauseOnFocus: true,
                pauseOnDotsHover: false,
                respondTo: 'window',
                responsive: null,
                rows: 1,
                rtl: false,
                slide: '',
                slidesPerRow: 1,
                slidesToShow: 1,
                slidesToScroll: 1,
                speed: 500,
                swipe: true,
                swipeToSlide: false,
                touchMove: true,
                touchThreshold: 5,
                useCSS: true,
                useTransform: true,
                variableWidth: false,
                vertical: false,
                verticalSwiping: false,
                waitForAnimate: true,
                zIndex: 1000
            };

            _.initials = {
                animating: false,
                dragging: false,
                autoPlayTimer: null,
                currentDirection: 0,
                currentLeft: null,
                currentSlide: 0,
                direction: 1,
                $dots: null,
                listWidth: null,
                listHeight: null,
                loadIndex: 0,
                $nextArrow: null,
                $prevArrow: null,
                scrolling: false,
                slideCount: null,
                slideWidth: null,
                $slideTrack: null,
                $slides: null,
                sliding: false,
                slideOffset: 0,
                swipeLeft: null,
                swiping: false,
                $list: null,
                touchObject: {},
                transformsEnabled: false,
                unslicked: false
            };

            $.extend(_, _.initials);

            _.activeBreakpoint = null;
            _.animType = null;
            _.animProp = null;
            _.breakpoints = [];
            _.breakpointSettings = [];
            _.cssTransitions = false;
            _.focussed = false;
            _.interrupted = false;
            _.hidden = 'hidden';
            _.paused = true;
            _.positionProp = null;
            _.respondTo = null;
            _.rowCount = 1;
            _.shouldClick = true;
            _.$slider = $(element);
            _.$slidesCache = null;
            _.transformType = null;
            _.transitionType = null;
            _.visibilityChange = 'visibilitychange';
            _.windowWidth = 0;
            _.windowTimer = null;

            dataSettings = $(element).data('slick') || {};

            _.options = $.extend({}, _.defaults, settings, dataSettings);

            _.currentSlide = _.options.initialSlide;

            _.originalSettings = _.options;

            if (typeof document.mozHidden !== 'undefined') {
                _.hidden = 'mozHidden';
                _.visibilityChange = 'mozvisibilitychange';
            } else if (typeof document.webkitHidden !== 'undefined') {
                _.hidden = 'webkitHidden';
                _.visibilityChange = 'webkitvisibilitychange';
            }

            _.autoPlay = $.proxy(_.autoPlay, _);
            _.autoPlayClear = $.proxy(_.autoPlayClear, _);
            _.autoPlayIterator = $.proxy(_.autoPlayIterator, _);
            _.changeSlide = $.proxy(_.changeSlide, _);
            _.clickHandler = $.proxy(_.clickHandler, _);
            _.selectHandler = $.proxy(_.selectHandler, _);
            _.setPosition = $.proxy(_.setPosition, _);
            _.swipeHandler = $.proxy(_.swipeHandler, _);
            _.dragHandler = $.proxy(_.dragHandler, _);
            _.keyHandler = $.proxy(_.keyHandler, _);

            _.instanceUid = instanceUid++;

            // A simple way to check for HTML strings
            // Strict HTML recognition (must start with <)
            // Extracted from jQuery v1.11 source
            _.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/;

            _.registerBreakpoints();
            _.init(true);

        }

        return Slick;

    }());

    Slick.prototype.activateADA = function() {
        var _ = this;

        _.$slideTrack.find('.slick-active').attr({
            'aria-hidden': 'false'
        }).find('a, input, button, select').attr({
            'tabindex': '0'
        });

    }
    ;

    Slick.prototype.addSlide = Slick.prototype.slickAdd = function(markup, index, addBefore) {

        var _ = this;

        if (typeof (index) === 'boolean') {
            addBefore = index;
            index = null;
        } else if (index < 0 || (index >= _.slideCount)) {
            return false;
        }

        _.unload();

        if (typeof (index) === 'number') {
            if (index === 0 && _.$slides.length === 0) {
                $(markup).appendTo(_.$slideTrack);
            } else if (addBefore) {
                $(markup).insertBefore(_.$slides.eq(index));
            } else {
                $(markup).insertAfter(_.$slides.eq(index));
            }
        } else {
            if (addBefore === true) {
                $(markup).prependTo(_.$slideTrack);
            } else {
                $(markup).appendTo(_.$slideTrack);
            }
        }

        _.$slides = _.$slideTrack.children(this.options.slide);

        _.$slideTrack.children(this.options.slide).detach();

        _.$slideTrack.append(_.$slides);

        _.$slides.each(function(index, element) {
            $(element).attr('data-slick-index', index);
        });

        _.$slidesCache = _.$slides;

        _.reinit();

    }
    ;

    Slick.prototype.animateHeight = function() {
        var _ = this;
        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {
            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);
            _.$list.animate({
                height: targetHeight
            }, _.options.speed);
        }
    }
    ;

    Slick.prototype.animateSlide = function(targetLeft, callback) {

        var animProps = {}
          , _ = this;

        _.animateHeight();

        if (_.options.rtl === true && _.options.vertical === false) {
            targetLeft = -targetLeft;
        }
        if (_.transformsEnabled === false) {
            if (_.options.vertical === false) {
                _.$slideTrack.animate({
                    left: targetLeft
                }, _.options.speed, _.options.easing, callback);
            } else {
                _.$slideTrack.animate({
                    top: targetLeft
                }, _.options.speed, _.options.easing, callback);
            }

        } else {

            if (_.cssTransitions === false) {
                if (_.options.rtl === true) {
                    _.currentLeft = -(_.currentLeft);
                }
                $({
                    animStart: _.currentLeft
                }).animate({
                    animStart: targetLeft
                }, {
                    duration: _.options.speed,
                    easing: _.options.easing,
                    step: function(now) {
                        now = Math.ceil(now);
                        if (_.options.vertical === false) {
                            animProps[_.animType] = 'translate(' + now + 'px, 0px)';
                            _.$slideTrack.css(animProps);
                        } else {
                            animProps[_.animType] = 'translate(0px,' + now + 'px)';
                            _.$slideTrack.css(animProps);
                        }
                    },
                    complete: function() {
                        if (callback) {
                            callback.call();
                        }
                    }
                });

            } else {

                _.applyTransition();
                targetLeft = Math.ceil(targetLeft);

                if (_.options.vertical === false) {
                    animProps[_.animType] = 'translate3d(' + targetLeft + 'px, 0px, 0px)';
                } else {
                    animProps[_.animType] = 'translate3d(0px,' + targetLeft + 'px, 0px)';
                }
                _.$slideTrack.css(animProps);

                if (callback) {
                    setTimeout(function() {

                        _.disableTransition();

                        callback.call();
                    }, _.options.speed);
                }

            }

        }

    }
    ;

    Slick.prototype.getNavTarget = function() {

        var _ = this
          , asNavFor = _.options.asNavFor;

        if (asNavFor && asNavFor !== null) {
            asNavFor = $(asNavFor).not(_.$slider);
        }

        return asNavFor;

    }
    ;

    Slick.prototype.asNavFor = function(index) {

        var _ = this
          , asNavFor = _.getNavTarget();

        if (asNavFor !== null && typeof asNavFor === 'object') {
            asNavFor.each(function() {
                var target = $(this).slick('getSlick');
                if (!target.unslicked) {
                    target.slideHandler(index, true);
                }
            });
        }

    }
    ;

    Slick.prototype.applyTransition = function(slide) {

        var _ = this
          , transition = {};

        if (_.options.fade === false) {
            transition[_.transitionType] = _.transformType + ' ' + _.options.speed + 'ms ' + _.options.cssEase;
        } else {
            transition[_.transitionType] = 'opacity ' + _.options.speed + 'ms ' + _.options.cssEase;
        }

        if (_.options.fade === false) {
            _.$slideTrack.css(transition);
        } else {
            _.$slides.eq(slide).css(transition);
        }

    }
    ;

    Slick.prototype.autoPlay = function() {

        var _ = this;

        _.autoPlayClear();

        if (_.slideCount > _.options.slidesToShow) {
            _.autoPlayTimer = setInterval(_.autoPlayIterator, _.options.autoplaySpeed);
        }

    }
    ;

    Slick.prototype.autoPlayClear = function() {

        var _ = this;

        if (_.autoPlayTimer) {
            clearInterval(_.autoPlayTimer);
        }

    }
    ;

    Slick.prototype.autoPlayIterator = function() {

        var _ = this
          , slideTo = _.currentSlide + _.options.slidesToScroll;

        if (!_.paused && !_.interrupted && !_.focussed) {

            if (_.options.infinite === false) {

                if (_.direction === 1 && (_.currentSlide + 1) === (_.slideCount - 1)) {
                    _.direction = 0;
                }
                else if (_.direction === 0) {

                    slideTo = _.currentSlide - _.options.slidesToScroll;

                    if (_.currentSlide - 1 === 0) {
                        _.direction = 1;
                    }

                }

            }

            _.slideHandler(slideTo);

        }

    }
    ;

    Slick.prototype.buildArrows = function() {

        var _ = this;

        if (_.options.arrows === true) {

            _.$prevArrow = $(_.options.prevArrow).addClass('slick-arrow');
            _.$nextArrow = $(_.options.nextArrow).addClass('slick-arrow');

            if (_.slideCount > _.options.slidesToShow) {

                _.$prevArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');
                _.$nextArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');

                if (_.htmlExpr.test(_.options.prevArrow)) {
                    _.$prevArrow.prependTo(_.options.appendArrows);
                }

                if (_.htmlExpr.test(_.options.nextArrow)) {
                    _.$nextArrow.appendTo(_.options.appendArrows);
                }

                if (_.options.infinite !== true) {
                    _.$prevArrow.addClass('slick-disabled').attr('aria-disabled', 'true');
                }

            } else {

                _.$prevArrow.add(_.$nextArrow)
                .addClass('slick-hidden').attr({
                    'aria-disabled': 'true',
                    'tabindex': '-1'
                });

            }

        }

    }
    ;

    Slick.prototype.buildDots = function() {

        var _ = this, i, dot;

        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {

            _.$slider.addClass('slick-dotted');

            dot = $('<ul />').addClass(_.options.dotsClass);

            for (i = 0; i <= _.getDotCount(); i += 1) {
                dot.append($('<li />').append(_.options.customPaging.call(this, _, i)));
            }

            _.$dots = dot.appendTo(_.options.appendDots);

            _.$dots.find('li').first().addClass('slick-active');

        }

    }
    ;

    Slick.prototype.buildOut = function() {

        var _ = this;

        _.$slides = _.$slider.children(_.options.slide + ':not(.slick-cloned)').addClass('slick-slide');

        _.slideCount = _.$slides.length;

        _.$slides.each(function(index, element) {
            $(element).attr('data-slick-index', index).data('originalStyling', $(element).attr('style') || '');
        });

        _.$slider.addClass('slick-slider');

        _.$slideTrack = (_.slideCount === 0) ? $('<div class="slick-track"/>').appendTo(_.$slider) : _.$slides.wrapAll('<div class="slick-track"/>').parent();

        _.$list = _.$slideTrack.wrap('<div class="slick-list"/>').parent();
        _.$slideTrack.css('opacity', 0);

        if (_.options.centerMode === true || _.options.swipeToSlide === true) {
            _.options.slidesToScroll = 1;
        }

        $('img[data-lazy]', _.$slider).not('[src]').addClass('slick-loading');

        _.setupInfinite();

        _.buildArrows();

        _.buildDots();

        _.updateDots();

        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);

        if (_.options.draggable === true) {
            _.$list.addClass('draggable');
        }

    }
    ;

    Slick.prototype.buildRows = function() {

        var _ = this, a, b, c, newSlides, numOfSlides, originalSlides, slidesPerSection;

        newSlides = document.createDocumentFragment();
        originalSlides = _.$slider.children();

        if (_.options.rows > 0) {

            slidesPerSection = _.options.slidesPerRow * _.options.rows;
            numOfSlides = Math.ceil(originalSlides.length / slidesPerSection);

            for (a = 0; a < numOfSlides; a++) {
                var slide = document.createElement('div');
                for (b = 0; b < _.options.rows; b++) {
                    var row = document.createElement('div');
                    for (c = 0; c < _.options.slidesPerRow; c++) {
                        var target = (a * slidesPerSection + ((b * _.options.slidesPerRow) + c));
                        if (originalSlides.get(target)) {
                            row.appendChild(originalSlides.get(target));
                        }
                    }
                    slide.appendChild(row);
                }
                newSlides.appendChild(slide);
            }

            _.$slider.empty().append(newSlides);
            _.$slider.children().children().children().css({
                'width': (100 / _.options.slidesPerRow) + '%',
                'display': 'inline-block'
            });

        }

    }
    ;

    Slick.prototype.checkResponsive = function(initial, forceUpdate) {

        var _ = this, breakpoint, targetBreakpoint, respondToWidth, triggerBreakpoint = false;
        var sliderWidth = _.$slider.width();
        var windowWidth = window.innerWidth || $(window).width();

        if (_.respondTo === 'window') {
            respondToWidth = windowWidth;
        } else if (_.respondTo === 'slider') {
            respondToWidth = sliderWidth;
        } else if (_.respondTo === 'min') {
            respondToWidth = Math.min(windowWidth, sliderWidth);
        }

        if (_.options.responsive && _.options.responsive.length && _.options.responsive !== null) {

            targetBreakpoint = null;

            for (breakpoint in _.breakpoints) {
                if (_.breakpoints.hasOwnProperty(breakpoint)) {
                    if (_.originalSettings.mobileFirst === false) {
                        if (respondToWidth < _.breakpoints[breakpoint]) {
                            targetBreakpoint = _.breakpoints[breakpoint];
                        }
                    } else {
                        if (respondToWidth > _.breakpoints[breakpoint]) {
                            targetBreakpoint = _.breakpoints[breakpoint];
                        }
                    }
                }
            }

            if (targetBreakpoint !== null) {
                if (_.activeBreakpoint !== null) {
                    if (targetBreakpoint !== _.activeBreakpoint || forceUpdate) {
                        _.activeBreakpoint = targetBreakpoint;
                        if (_.breakpointSettings[targetBreakpoint] === 'unslick') {
                            _.unslick(targetBreakpoint);
                        } else {
                            _.options = $.extend({}, _.originalSettings, _.breakpointSettings[targetBreakpoint]);
                            if (initial === true) {
                                _.currentSlide = _.options.initialSlide;
                            }
                            _.refresh(initial);
                        }
                        triggerBreakpoint = targetBreakpoint;
                    }
                } else {
                    _.activeBreakpoint = targetBreakpoint;
                    if (_.breakpointSettings[targetBreakpoint] === 'unslick') {
                        _.unslick(targetBreakpoint);
                    } else {
                        _.options = $.extend({}, _.originalSettings, _.breakpointSettings[targetBreakpoint]);
                        if (initial === true) {
                            _.currentSlide = _.options.initialSlide;
                        }
                        _.refresh(initial);
                    }
                    triggerBreakpoint = targetBreakpoint;
                }
            } else {
                if (_.activeBreakpoint !== null) {
                    _.activeBreakpoint = null;
                    _.options = _.originalSettings;
                    if (initial === true) {
                        _.currentSlide = _.options.initialSlide;
                    }
                    _.refresh(initial);
                    triggerBreakpoint = targetBreakpoint;
                }
            }

            // only trigger breakpoints during an actual break. not on initialize.
            if (!initial && triggerBreakpoint !== false) {
                _.$slider.trigger('breakpoint', [_, triggerBreakpoint]);
            }
        }

    }
    ;

    Slick.prototype.changeSlide = function(event, dontAnimate) {

        var _ = this, $target = $(event.currentTarget), indexOffset, slideOffset, unevenOffset;

        // If target is a link, prevent default action.
        if ($target.is('a')) {
            event.preventDefault();
        }

        // If target is not the <li> element (ie: a child), find the <li>.
        if (!$target.is('li')) {
            $target = $target.closest('li');
        }

        unevenOffset = (_.slideCount % _.options.slidesToScroll !== 0);
        indexOffset = unevenOffset ? 0 : (_.slideCount - _.currentSlide) % _.options.slidesToScroll;

        switch (event.data.message) {

        case 'previous':
            slideOffset = indexOffset === 0 ? _.options.slidesToScroll : _.options.slidesToShow - indexOffset;
            if (_.slideCount > _.options.slidesToShow) {
                _.slideHandler(_.currentSlide - slideOffset, false, dontAnimate);
            }
            break;

        case 'next':
            slideOffset = indexOffset === 0 ? _.options.slidesToScroll : indexOffset;
            if (_.slideCount > _.options.slidesToShow) {
                _.slideHandler(_.currentSlide + slideOffset, false, dontAnimate);
            }
            break;

        case 'index':
            var index = event.data.index === 0 ? 0 : event.data.index || $target.index() * _.options.slidesToScroll;

            _.slideHandler(_.checkNavigable(index), false, dontAnimate);
            $target.children().trigger('focus');
            break;

        default:
            return;
        }

    }
    ;

    Slick.prototype.checkNavigable = function(index) {

        var _ = this, navigables, prevNavigable;

        navigables = _.getNavigableIndexes();
        prevNavigable = 0;
        if (index > navigables[navigables.length - 1]) {
            index = navigables[navigables.length - 1];
        } else {
            for (var n in navigables) {
                if (index < navigables[n]) {
                    index = prevNavigable;
                    break;
                }
                prevNavigable = navigables[n];
            }
        }

        return index;
    }
    ;

    Slick.prototype.cleanUpEvents = function() {

        var _ = this;

        if (_.options.dots && _.$dots !== null) {

            $('li', _.$dots).off('click.slick', _.changeSlide).off('mouseenter.slick', $.proxy(_.interrupt, _, true)).off('mouseleave.slick', $.proxy(_.interrupt, _, false));

            if (_.options.accessibility === true) {
                _.$dots.off('keydown.slick', _.keyHandler);
            }
        }

        _.$slider.off('focus.slick blur.slick');

        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {
            _.$prevArrow && _.$prevArrow.off('click.slick', _.changeSlide);
            _.$nextArrow && _.$nextArrow.off('click.slick', _.changeSlide);

            if (_.options.accessibility === true) {
                _.$prevArrow && _.$prevArrow.off('keydown.slick', _.keyHandler);
                _.$nextArrow && _.$nextArrow.off('keydown.slick', _.keyHandler);
            }
        }

        _.$list.off('touchstart.slick mousedown.slick', _.swipeHandler);
        _.$list.off('touchmove.slick mousemove.slick', _.swipeHandler);
        _.$list.off('touchend.slick mouseup.slick', _.swipeHandler);
        _.$list.off('touchcancel.slick mouseleave.slick', _.swipeHandler);

        _.$list.off('click.slick', _.clickHandler);

        $(document).off(_.visibilityChange, _.visibility);

        _.cleanUpSlideEvents();

        if (_.options.accessibility === true) {
            _.$list.off('keydown.slick', _.keyHandler);
        }

        if (_.options.focusOnSelect === true) {
            $(_.$slideTrack).children().off('click.slick', _.selectHandler);
        }

        $(window).off('orientationchange.slick.slick-' + _.instanceUid, _.orientationChange);

        $(window).off('resize.slick.slick-' + _.instanceUid, _.resize);

        $('[draggable!=true]', _.$slideTrack).off('dragstart', _.preventDefault);

        $(window).off('load.slick.slick-' + _.instanceUid, _.setPosition);

    }
    ;

    Slick.prototype.cleanUpSlideEvents = function() {

        var _ = this;

        _.$list.off('mouseenter.slick', $.proxy(_.interrupt, _, true));
        _.$list.off('mouseleave.slick', $.proxy(_.interrupt, _, false));

    }
    ;

    Slick.prototype.cleanUpRows = function() {

        var _ = this, originalSlides;

        if (_.options.rows > 0) {
            originalSlides = _.$slides.children().children();
            originalSlides.removeAttr('style');
            _.$slider.empty().append(originalSlides);
        }

    }
    ;

    Slick.prototype.clickHandler = function(event) {

        var _ = this;

        if (_.shouldClick === false) {
            event.stopImmediatePropagation();
            event.stopPropagation();
            event.preventDefault();
        }

    }
    ;

    Slick.prototype.destroy = function(refresh) {

        var _ = this;

        _.autoPlayClear();

        _.touchObject = {};

        _.cleanUpEvents();

        $('.slick-cloned', _.$slider).detach();

        if (_.$dots) {
            _.$dots.remove();
        }

        if (_.$prevArrow && _.$prevArrow.length) {

            _.$prevArrow.removeClass('slick-disabled slick-arrow slick-hidden').removeAttr('aria-hidden aria-disabled tabindex').css('display', '');

            if (_.htmlExpr.test(_.options.prevArrow)) {
                _.$prevArrow.remove();
            }
        }

        if (_.$nextArrow && _.$nextArrow.length) {

            _.$nextArrow.removeClass('slick-disabled slick-arrow slick-hidden').removeAttr('aria-hidden aria-disabled tabindex').css('display', '');

            if (_.htmlExpr.test(_.options.nextArrow)) {
                _.$nextArrow.remove();
            }
        }

        if (_.$slides) {

            _.$slides.removeClass('slick-slide slick-active slick-center slick-visible slick-current').removeAttr('aria-hidden').removeAttr('data-slick-index').each(function() {
                $(this).attr('style', $(this).data('originalStyling'));
            });

            _.$slideTrack.children(this.options.slide).detach();

            _.$slideTrack.detach();

            _.$list.detach();

            _.$slider.append(_.$slides);
        }

        _.cleanUpRows();

        _.$slider.removeClass('slick-slider');
        _.$slider.removeClass('slick-initialized');
        _.$slider.removeClass('slick-dotted');

        _.unslicked = true;

        if (!refresh) {
            _.$slider.trigger('destroy', [_]);
        }

    }
    ;

    Slick.prototype.disableTransition = function(slide) {

        var _ = this
          , transition = {};

        transition[_.transitionType] = '';

        if (_.options.fade === false) {
            _.$slideTrack.css(transition);
        } else {
            _.$slides.eq(slide).css(transition);
        }

    }
    ;

    Slick.prototype.fadeSlide = function(slideIndex, callback) {

        var _ = this;

        if (_.cssTransitions === false) {

            _.$slides.eq(slideIndex).css({
                zIndex: _.options.zIndex
            });

            _.$slides.eq(slideIndex).animate({
                opacity: 1
            }, _.options.speed, _.options.easing, callback);

        } else {

            _.applyTransition(slideIndex);

            _.$slides.eq(slideIndex).css({
                opacity: 1,
                zIndex: _.options.zIndex
            });

            if (callback) {
                setTimeout(function() {

                    _.disableTransition(slideIndex);

                    callback.call();
                }, _.options.speed);
            }

        }

    }
    ;

    Slick.prototype.fadeSlideOut = function(slideIndex) {

        var _ = this;

        if (_.cssTransitions === false) {

            _.$slides.eq(slideIndex).animate({
                opacity: 0,
                zIndex: _.options.zIndex - 2
            }, _.options.speed, _.options.easing);

        } else {

            _.applyTransition(slideIndex);

            _.$slides.eq(slideIndex).css({
                opacity: 0,
                zIndex: _.options.zIndex - 2
            });

        }

    }
    ;

    Slick.prototype.filterSlides = Slick.prototype.slickFilter = function(filter) {

        var _ = this;

        if (filter !== null) {

            _.$slidesCache = _.$slides;

            _.unload();

            _.$slideTrack.children(this.options.slide).detach();

            _.$slidesCache.filter(filter).appendTo(_.$slideTrack);

            _.reinit();

        }

    }
    ;

    Slick.prototype.focusHandler = function() {

        var _ = this;

        _.$slider.off('focus.slick blur.slick').on('focus.slick blur.slick', '*', function(event) {

            event.stopImmediatePropagation();
            var $sf = $(this);

            setTimeout(function() {

                if (_.options.pauseOnFocus) {
                    _.focussed = $sf.is(':focus');
                    _.autoPlay();
                }

            }, 0);

        });
    }
    ;

    Slick.prototype.getCurrent = Slick.prototype.slickCurrentSlide = function() {

        var _ = this;
        return _.currentSlide;

    }
    ;

    Slick.prototype.getDotCount = function() {

        var _ = this;

        var breakPoint = 0;
        var counter = 0;
        var pagerQty = 0;

        if (_.options.infinite === true) {
            if (_.slideCount <= _.options.slidesToShow) {
                ++pagerQty;
            } else {
                while (breakPoint < _.slideCount) {
                    ++pagerQty;
                    breakPoint = counter + _.options.slidesToScroll;
                    counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
                }
            }
        } else if (_.options.centerMode === true) {
            pagerQty = _.slideCount;
        } else if (!_.options.asNavFor) {
            pagerQty = 1 + Math.ceil((_.slideCount - _.options.slidesToShow) / _.options.slidesToScroll);
        } else {
            while (breakPoint < _.slideCount) {
                ++pagerQty;
                breakPoint = counter + _.options.slidesToScroll;
                counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
            }
        }

        return pagerQty - 1;

    }
    ;

    Slick.prototype.getLeft = function(slideIndex) {

        var _ = this, targetLeft, verticalHeight, verticalOffset = 0, targetSlide, coef;

        _.slideOffset = 0;
        verticalHeight = _.$slides.first().outerHeight(true);

        if (_.options.infinite === true) {
            if (_.slideCount > _.options.slidesToShow) {
                _.slideOffset = (_.slideWidth * _.options.slidesToShow) * -1;
                coef = -1

                if (_.options.vertical === true && _.options.centerMode === true) {
                    if (_.options.slidesToShow === 2) {
                        coef = -1.5;
                    } else if (_.options.slidesToShow === 1) {
                        coef = -2
                    }
                }
                verticalOffset = (verticalHeight * _.options.slidesToShow) * coef;
            }
            if (_.slideCount % _.options.slidesToScroll !== 0) {
                if (slideIndex + _.options.slidesToScroll > _.slideCount && _.slideCount > _.options.slidesToShow) {
                    if (slideIndex > _.slideCount) {
                        _.slideOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * _.slideWidth) * -1;
                        verticalOffset = ((_.options.slidesToShow - (slideIndex - _.slideCount)) * verticalHeight) * -1;
                    } else {
                        _.slideOffset = ((_.slideCount % _.options.slidesToScroll) * _.slideWidth) * -1;
                        verticalOffset = ((_.slideCount % _.options.slidesToScroll) * verticalHeight) * -1;
                    }
                }
            }
        } else {
            if (slideIndex + _.options.slidesToShow > _.slideCount) {
                _.slideOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * _.slideWidth;
                verticalOffset = ((slideIndex + _.options.slidesToShow) - _.slideCount) * verticalHeight;
            }
        }

        if (_.slideCount <= _.options.slidesToShow) {
            _.slideOffset = 0;
            verticalOffset = 0;
        }

        if (_.options.centerMode === true && _.slideCount <= _.options.slidesToShow) {
            _.slideOffset = ((_.slideWidth * Math.floor(_.options.slidesToShow)) / 2) - ((_.slideWidth * _.slideCount) / 2);
        } else if (_.options.centerMode === true && _.options.infinite === true) {
            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2) - _.slideWidth;
        } else if (_.options.centerMode === true) {
            _.slideOffset = 0;
            _.slideOffset += _.slideWidth * Math.floor(_.options.slidesToShow / 2);
        }

        if (_.options.vertical === false) {
            targetLeft = ((slideIndex * _.slideWidth) * -1) + _.slideOffset;
        } else {
            targetLeft = ((slideIndex * verticalHeight) * -1) + verticalOffset;
        }

        if (_.options.variableWidth === true) {

            if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {
                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);
            } else {
                targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow);
            }

            if (_.options.rtl === true) {
                if (targetSlide[0]) {
                    targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;
                } else {
                    targetLeft = 0;
                }
            } else {
                targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;
            }

            if (_.options.centerMode === true) {
                if (_.slideCount <= _.options.slidesToShow || _.options.infinite === false) {
                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex);
                } else {
                    targetSlide = _.$slideTrack.children('.slick-slide').eq(slideIndex + _.options.slidesToShow + 1);
                }

                if (_.options.rtl === true) {
                    if (targetSlide[0]) {
                        targetLeft = (_.$slideTrack.width() - targetSlide[0].offsetLeft - targetSlide.width()) * -1;
                    } else {
                        targetLeft = 0;
                    }
                } else {
                    targetLeft = targetSlide[0] ? targetSlide[0].offsetLeft * -1 : 0;
                }

                targetLeft += (_.$list.width() - targetSlide.outerWidth()) / 2;
            }
        }

        return targetLeft;

    }
    ;

    Slick.prototype.getOption = Slick.prototype.slickGetOption = function(option) {

        var _ = this;

        return _.options[option];

    }
    ;

    Slick.prototype.getNavigableIndexes = function() {

        var _ = this, breakPoint = 0, counter = 0, indexes = [], max;

        if (_.options.infinite === false) {
            max = _.slideCount;
        } else {
            breakPoint = _.options.slidesToScroll * -1;
            counter = _.options.slidesToScroll * -1;
            max = _.slideCount * 2;
        }

        while (breakPoint < max) {
            indexes.push(breakPoint);
            breakPoint = counter + _.options.slidesToScroll;
            counter += _.options.slidesToScroll <= _.options.slidesToShow ? _.options.slidesToScroll : _.options.slidesToShow;
        }

        return indexes;

    }
    ;

    Slick.prototype.getSlick = function() {

        return this;

    }
    ;

    Slick.prototype.getSlideCount = function() {

        var _ = this, slidesTraversed, swipedSlide, centerOffset;

        centerOffset = _.options.centerMode === true ? _.slideWidth * Math.floor(_.options.slidesToShow / 2) : 0;

        if (_.options.swipeToSlide === true) {
            _.$slideTrack.find('.slick-slide').each(function(index, slide) {
                if (slide.offsetLeft - centerOffset + ($(slide).outerWidth() / 2) > (_.swipeLeft * -1)) {
                    swipedSlide = slide;
                    return false;
                }
            });

            slidesTraversed = Math.abs($(swipedSlide).attr('data-slick-index') - _.currentSlide) || 1;

            return slidesTraversed;

        } else {
            return _.options.slidesToScroll;
        }

    }
    ;

    Slick.prototype.goTo = Slick.prototype.slickGoTo = function(slide, dontAnimate) {

        var _ = this;

        _.changeSlide({
            data: {
                message: 'index',
                index: parseInt(slide)
            }
        }, dontAnimate);

    }
    ;

    Slick.prototype.init = function(creation) {

        var _ = this;

        if (!$(_.$slider).hasClass('slick-initialized')) {

            $(_.$slider).addClass('slick-initialized');

            _.buildRows();
            _.buildOut();
            _.setProps();
            _.startLoad();
            _.loadSlider();
            _.initializeEvents();
            _.updateArrows();
            _.updateDots();
            _.checkResponsive(true);
            _.focusHandler();

        }

        if (creation) {
            _.$slider.trigger('init', [_]);
        }

        if (_.options.accessibility === true) {
            _.initADA();
        }

        if (_.options.autoplay) {

            _.paused = false;
            _.autoPlay();

        }

    }
    ;

    Slick.prototype.initADA = function() {
        var _ = this
          , numDotGroups = Math.ceil(_.slideCount / _.options.slidesToShow)
          , tabControlIndexes = _.getNavigableIndexes().filter(function(val) {
            return (val >= 0) && (val < _.slideCount);
        });

        _.$slides.add(_.$slideTrack.find('.slick-cloned')).attr({
            'aria-hidden': 'true',
            'tabindex': '-1'
        }).find('a, input, button, select').attr({
            'tabindex': '-1'
        });

        if (_.$dots !== null) {
            _.$slides.not(_.$slideTrack.find('.slick-cloned')).each(function(i) {
                var slideControlIndex = tabControlIndexes.indexOf(i);

                $(this).attr({
                    'role': 'tabpanel',
                    'id': 'slick-slide' + _.instanceUid + i,
                    'tabindex': -1
                });

                if (slideControlIndex !== -1) {
                    var ariaButtonControl = 'slick-slide-control' + _.instanceUid + slideControlIndex
                    if ($('#' + ariaButtonControl).length) {
                        $(this).attr({
                            'aria-describedby': ariaButtonControl
                        });
                    }
                }
            });

            _.$dots.attr('role', 'tablist').find('li').each(function(i) {
                var mappedSlideIndex = tabControlIndexes[i];

                $(this).attr({
                    'role': 'presentation'
                });

                $(this).find('button').first().attr({
                    'role': 'tab',
                    'id': 'slick-slide-control' + _.instanceUid + i,
                    'aria-controls': 'slick-slide' + _.instanceUid + mappedSlideIndex,
                    'aria-label': (i + 1) + ' of ' + numDotGroups,
                    'aria-selected': null,
                    'tabindex': '-1'
                });

            }).eq(_.currentSlide).find('button').attr({
                'aria-selected': 'true',
                'tabindex': '0'
            }).end();
        }

        for (var i = _.currentSlide, max = i + _.options.slidesToShow; i < max; i++) {
            if (_.options.focusOnChange) {
                _.$slides.eq(i).attr({
                    'tabindex': '0'
                });
            } else {
                _.$slides.eq(i).removeAttr('tabindex');
            }
        }

        _.activateADA();

    }
    ;

    Slick.prototype.initArrowEvents = function() {

        var _ = this;

        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {
            _.$prevArrow.off('click.slick').on('click.slick', {
                message: 'previous'
            }, _.changeSlide);
            _.$nextArrow.off('click.slick').on('click.slick', {
                message: 'next'
            }, _.changeSlide);

            if (_.options.accessibility === true) {
                _.$prevArrow.on('keydown.slick', _.keyHandler);
                _.$nextArrow.on('keydown.slick', _.keyHandler);
            }
        }

    }
    ;

    Slick.prototype.initDotEvents = function() {

        var _ = this;

        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {
            $('li', _.$dots).on('click.slick', {
                message: 'index'
            }, _.changeSlide);

            if (_.options.accessibility === true) {
                _.$dots.on('keydown.slick', _.keyHandler);
            }
        }

        if (_.options.dots === true && _.options.pauseOnDotsHover === true && _.slideCount > _.options.slidesToShow) {

            $('li', _.$dots).on('mouseenter.slick', $.proxy(_.interrupt, _, true)).on('mouseleave.slick', $.proxy(_.interrupt, _, false));

        }

    }
    ;

    Slick.prototype.initSlideEvents = function() {

        var _ = this;

        if (_.options.pauseOnHover) {

            _.$list.on('mouseenter.slick', $.proxy(_.interrupt, _, true));
            _.$list.on('mouseleave.slick', $.proxy(_.interrupt, _, false));

        }

    }
    ;

    Slick.prototype.initializeEvents = function() {

        var _ = this;

        _.initArrowEvents();

        _.initDotEvents();
        _.initSlideEvents();

        _.$list.on('touchstart.slick mousedown.slick', {
            action: 'start'
        }, _.swipeHandler);
        _.$list.on('touchmove.slick mousemove.slick', {
            action: 'move'
        }, _.swipeHandler);
        _.$list.on('touchend.slick mouseup.slick', {
            action: 'end'
        }, _.swipeHandler);
        _.$list.on('touchcancel.slick mouseleave.slick', {
            action: 'end'
        }, _.swipeHandler);

        _.$list.on('click.slick', _.clickHandler);

        $(document).on(_.visibilityChange, $.proxy(_.visibility, _));

        if (_.options.accessibility === true) {
            _.$list.on('keydown.slick', _.keyHandler);
        }

        if (_.options.focusOnSelect === true) {
            $(_.$slideTrack).children().on('click.slick', _.selectHandler);
        }

        $(window).on('orientationchange.slick.slick-' + _.instanceUid, $.proxy(_.orientationChange, _));

        $(window).on('resize.slick.slick-' + _.instanceUid, $.proxy(_.resize, _));

        $('[draggable!=true]', _.$slideTrack).on('dragstart', _.preventDefault);

        $(window).on('load.slick.slick-' + _.instanceUid, _.setPosition);
        $(_.setPosition);

    }
    ;

    Slick.prototype.initUI = function() {

        var _ = this;

        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {

            _.$prevArrow.show();
            _.$nextArrow.show();

        }

        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {

            _.$dots.show();

        }

    }
    ;

    Slick.prototype.keyHandler = function(event) {

        var _ = this;
        //Dont slide if the cursor is inside the form fields and arrow keys are pressed
        if (!event.target.tagName.match('TEXTAREA|INPUT|SELECT')) {
            if (event.keyCode === 37 && _.options.accessibility === true) {
                _.changeSlide({
                    data: {
                        message: _.options.rtl === true ? 'next' : 'previous'
                    }
                });
            } else if (event.keyCode === 39 && _.options.accessibility === true) {
                _.changeSlide({
                    data: {
                        message: _.options.rtl === true ? 'previous' : 'next'
                    }
                });
            }
        }

    }
    ;

    Slick.prototype.lazyLoad = function() {

        var _ = this, loadRange, cloneRange, rangeStart, rangeEnd;

        function loadImages(imagesScope) {

            $('img[data-lazy]', imagesScope).each(function() {

                var image = $(this)
                  , imageSource = $(this).attr('data-lazy')
                  , imageSrcSet = $(this).attr('data-srcset')
                  , imageSizes = $(this).attr('data-sizes') || _.$slider.attr('data-sizes')
                  , imageToLoad = document.createElement('img');

                imageToLoad.onload = function() {

                    image.animate({
                        opacity: 0
                    }, 100, function() {

                        if (imageSrcSet) {
                            image.attr('srcset', imageSrcSet);

                            if (imageSizes) {
                                image.attr('sizes', imageSizes);
                            }
                        }

                        image.attr('src', imageSource).animate({
                            opacity: 1
                        }, 200, function() {
                            image.removeAttr('data-lazy data-srcset data-sizes').removeClass('slick-loading');
                        });
                        _.$slider.trigger('lazyLoaded', [_, image, imageSource]);
                    });

                }
                ;

                imageToLoad.onerror = function() {

                    image.removeAttr('data-lazy').removeClass('slick-loading').addClass('slick-lazyload-error');

                    _.$slider.trigger('lazyLoadError', [_, image, imageSource]);

                }
                ;

                imageToLoad.src = imageSource;

            });

        }

        if (_.options.centerMode === true) {
            if (_.options.infinite === true) {
                rangeStart = _.currentSlide + (_.options.slidesToShow / 2 + 1);
                rangeEnd = rangeStart + _.options.slidesToShow + 2;
            } else {
                rangeStart = Math.max(0, _.currentSlide - (_.options.slidesToShow / 2 + 1));
                rangeEnd = 2 + (_.options.slidesToShow / 2 + 1) + _.currentSlide;
            }
        } else {
            rangeStart = _.options.infinite ? _.options.slidesToShow + _.currentSlide : _.currentSlide;
            rangeEnd = Math.ceil(rangeStart + _.options.slidesToShow);
            if (_.options.fade === true) {
                if (rangeStart > 0)
                    rangeStart--;
                if (rangeEnd <= _.slideCount)
                    rangeEnd++;
            }
        }

        loadRange = _.$slider.find('.slick-slide').slice(rangeStart, rangeEnd);

        if (_.options.lazyLoad === 'anticipated') {
            var prevSlide = rangeStart - 1
              , nextSlide = rangeEnd
              , $slides = _.$slider.find('.slick-slide');

            for (var i = 0; i < _.options.slidesToScroll; i++) {
                if (prevSlide < 0)
                    prevSlide = _.slideCount - 1;
                loadRange = loadRange.add($slides.eq(prevSlide));
                loadRange = loadRange.add($slides.eq(nextSlide));
                prevSlide--;
                nextSlide++;
            }
        }

        loadImages(loadRange);

        if (_.slideCount <= _.options.slidesToShow) {
            cloneRange = _.$slider.find('.slick-slide');
            loadImages(cloneRange);
        } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow) {
            cloneRange = _.$slider.find('.slick-cloned').slice(0, _.options.slidesToShow);
            loadImages(cloneRange);
        } else if (_.currentSlide === 0) {
            cloneRange = _.$slider.find('.slick-cloned').slice(_.options.slidesToShow * -1);
            loadImages(cloneRange);
        }

    }
    ;

    Slick.prototype.loadSlider = function() {

        var _ = this;

        _.setPosition();

        _.$slideTrack.css({
            opacity: 1
        });

        _.$slider.removeClass('slick-loading');

        _.initUI();

        if (_.options.lazyLoad === 'progressive') {
            _.progressiveLazyLoad();
        }

    }
    ;

    Slick.prototype.next = Slick.prototype.slickNext = function() {

        var _ = this;

        _.changeSlide({
            data: {
                message: 'next'
            }
        });

    }
    ;

    Slick.prototype.orientationChange = function() {

        var _ = this;

        _.checkResponsive();
        _.setPosition();

    }
    ;

    Slick.prototype.pause = Slick.prototype.slickPause = function() {

        var _ = this;

        _.autoPlayClear();
        _.paused = true;

    }
    ;

    Slick.prototype.play = Slick.prototype.slickPlay = function() {

        var _ = this;

        _.autoPlay();
        _.options.autoplay = true;
        _.paused = false;
        _.focussed = false;
        _.interrupted = false;

    }
    ;

    Slick.prototype.postSlide = function(index) {

        var _ = this;

        if (!_.unslicked) {

            _.$slider.trigger('afterChange', [_, index]);

            _.animating = false;

            if (_.slideCount > _.options.slidesToShow) {
                _.setPosition();
            }

            _.swipeLeft = null;

            if (_.options.autoplay) {
                _.autoPlay();
            }

            if (_.options.accessibility === true) {
                _.initADA();

                if (_.options.focusOnChange) {
                    var $currentSlide = $(_.$slides.get(_.currentSlide));
                    $currentSlide.attr('tabindex', 0).focus();
                }
            }

        }

    }
    ;

    Slick.prototype.prev = Slick.prototype.slickPrev = function() {

        var _ = this;

        _.changeSlide({
            data: {
                message: 'previous'
            }
        });

    }
    ;

    Slick.prototype.preventDefault = function(event) {

        event.preventDefault();

    }
    ;

    Slick.prototype.progressiveLazyLoad = function(tryCount) {

        tryCount = tryCount || 1;

        var _ = this, $imgsToLoad = $('img[data-lazy]', _.$slider), image, imageSource, imageSrcSet, imageSizes, imageToLoad;

        if ($imgsToLoad.length) {

            image = $imgsToLoad.first();
            imageSource = image.attr('data-lazy');
            imageSrcSet = image.attr('data-srcset');
            imageSizes = image.attr('data-sizes') || _.$slider.attr('data-sizes');
            imageToLoad = document.createElement('img');

            imageToLoad.onload = function() {

                if (imageSrcSet) {
                    image.attr('srcset', imageSrcSet);

                    if (imageSizes) {
                        image.attr('sizes', imageSizes);
                    }
                }

                image.attr('src', imageSource).removeAttr('data-lazy data-srcset data-sizes').removeClass('slick-loading');

                if (_.options.adaptiveHeight === true) {
                    _.setPosition();
                }

                _.$slider.trigger('lazyLoaded', [_, image, imageSource]);
                _.progressiveLazyLoad();

            }
            ;

            imageToLoad.onerror = function() {

                if (tryCount < 3) {

                    /**
                     * try to load the image 3 times,
                     * leave a slight delay so we don't get
                     * servers blocking the request.
                     */
                    setTimeout(function() {
                        _.progressiveLazyLoad(tryCount + 1);
                    }, 500);

                } else {

                    image.removeAttr('data-lazy').removeClass('slick-loading').addClass('slick-lazyload-error');

                    _.$slider.trigger('lazyLoadError', [_, image, imageSource]);

                    _.progressiveLazyLoad();

                }

            }
            ;

            imageToLoad.src = imageSource;

        } else {

            _.$slider.trigger('allImagesLoaded', [_]);

        }

    }
    ;

    Slick.prototype.refresh = function(initializing) {

        var _ = this, currentSlide, lastVisibleIndex;

        lastVisibleIndex = _.slideCount - _.options.slidesToShow;

        // in non-infinite sliders, we don't want to go past the
        // last visible index.
        if (!_.options.infinite && (_.currentSlide > lastVisibleIndex)) {
            _.currentSlide = lastVisibleIndex;
        }

        // if less slides than to show, go to start.
        if (_.slideCount <= _.options.slidesToShow) {
            _.currentSlide = 0;

        }

        currentSlide = _.currentSlide;

        _.destroy(true);

        $.extend(_, _.initials, {
            currentSlide: currentSlide
        });

        _.init();

        if (!initializing) {

            _.changeSlide({
                data: {
                    message: 'index',
                    index: currentSlide
                }
            }, false);

        }

    }
    ;

    Slick.prototype.registerBreakpoints = function() {

        var _ = this, breakpoint, currentBreakpoint, l, responsiveSettings = _.options.responsive || null;

        if ($.type(responsiveSettings) === 'array' && responsiveSettings.length) {

            _.respondTo = _.options.respondTo || 'window';

            for (breakpoint in responsiveSettings) {

                l = _.breakpoints.length - 1;

                if (responsiveSettings.hasOwnProperty(breakpoint)) {
                    currentBreakpoint = responsiveSettings[breakpoint].breakpoint;

                    // loop through the breakpoints and cut out any existing
                    // ones with the same breakpoint number, we don't want dupes.
                    while (l >= 0) {
                        if (_.breakpoints[l] && _.breakpoints[l] === currentBreakpoint) {
                            _.breakpoints.splice(l, 1);
                        }
                        l--;
                    }

                    _.breakpoints.push(currentBreakpoint);
                    _.breakpointSettings[currentBreakpoint] = responsiveSettings[breakpoint].settings;

                }

            }

            _.breakpoints.sort(function(a, b) {
                return (_.options.mobileFirst) ? a - b : b - a;
            });

        }

    }
    ;

    Slick.prototype.reinit = function() {

        var _ = this;

        _.$slides = _.$slideTrack.children(_.options.slide).addClass('slick-slide');

        _.slideCount = _.$slides.length;

        if (_.currentSlide >= _.slideCount && _.currentSlide !== 0) {
            _.currentSlide = _.currentSlide - _.options.slidesToScroll;
        }

        if (_.slideCount <= _.options.slidesToShow) {
            _.currentSlide = 0;
        }

        _.registerBreakpoints();

        _.setProps();
        _.setupInfinite();
        _.buildArrows();
        _.updateArrows();
        _.initArrowEvents();
        _.buildDots();
        _.updateDots();
        _.initDotEvents();
        _.cleanUpSlideEvents();
        _.initSlideEvents();

        _.checkResponsive(false, true);

        if (_.options.focusOnSelect === true) {
            $(_.$slideTrack).children().on('click.slick', _.selectHandler);
        }

        _.setSlideClasses(typeof _.currentSlide === 'number' ? _.currentSlide : 0);

        _.setPosition();
        _.focusHandler();

        _.paused = !_.options.autoplay;
        _.autoPlay();

        _.$slider.trigger('reInit', [_]);

    }
    ;

    Slick.prototype.resize = function() {

        var _ = this;

        if ($(window).width() !== _.windowWidth) {
            clearTimeout(_.windowDelay);
            _.windowDelay = window.setTimeout(function() {
                _.windowWidth = $(window).width();
                _.checkResponsive();
                if (!_.unslicked) {
                    _.setPosition();
                }
            }, 50);
        }
    }
    ;

    Slick.prototype.removeSlide = Slick.prototype.slickRemove = function(index, removeBefore, removeAll) {

        var _ = this;

        if (typeof (index) === 'boolean') {
            removeBefore = index;
            index = removeBefore === true ? 0 : _.slideCount - 1;
        } else {
            index = removeBefore === true ? --index : index;
        }

        if (_.slideCount < 1 || index < 0 || index > _.slideCount - 1) {
            return false;
        }

        _.unload();

        if (removeAll === true) {
            _.$slideTrack.children().remove();
        } else {
            _.$slideTrack.children(this.options.slide).eq(index).remove();
        }

        _.$slides = _.$slideTrack.children(this.options.slide);

        _.$slideTrack.children(this.options.slide).detach();

        _.$slideTrack.append(_.$slides);

        _.$slidesCache = _.$slides;

        _.reinit();

    }
    ;

    Slick.prototype.setCSS = function(position) {

        var _ = this, positionProps = {}, x, y;

        if (_.options.rtl === true) {
            position = -position;
        }
        x = _.positionProp == 'left' ? Math.ceil(position) + 'px' : '0px';
        y = _.positionProp == 'top' ? Math.ceil(position) + 'px' : '0px';

        positionProps[_.positionProp] = position;

        if (_.transformsEnabled === false) {
            _.$slideTrack.css(positionProps);
        } else {
            positionProps = {};
            if (_.cssTransitions === false) {
                positionProps[_.animType] = 'translate(' + x + ', ' + y + ')';
                _.$slideTrack.css(positionProps);
            } else {
                positionProps[_.animType] = 'translate3d(' + x + ', ' + y + ', 0px)';
                _.$slideTrack.css(positionProps);
            }
        }

    }
    ;

    Slick.prototype.setDimensions = function() {

        var _ = this;

        if (_.options.vertical === false) {
            if (_.options.centerMode === true) {
                _.$list.css({
                    padding: ('0px ' + _.options.centerPadding)
                });
            }
        } else {
            _.$list.height(_.$slides.first().outerHeight(true) * _.options.slidesToShow);
            if (_.options.centerMode === true) {
                _.$list.css({
                    padding: (_.options.centerPadding + ' 0px')
                });
            }
        }

        _.listWidth = _.$list.width();
        _.listHeight = _.$list.height();

        if (_.options.vertical === false && _.options.variableWidth === false) {
            _.slideWidth = Math.ceil(_.listWidth / _.options.slidesToShow);
            _.$slideTrack.width(Math.ceil((_.slideWidth * _.$slideTrack.children('.slick-slide').length)));

        } else if (_.options.variableWidth === true) {
            _.$slideTrack.width(5000 * _.slideCount);
        } else {
            _.slideWidth = Math.ceil(_.listWidth);
            _.$slideTrack.height(Math.ceil((_.$slides.first().outerHeight(true) * _.$slideTrack.children('.slick-slide').length)));
        }

        var offset = _.$slides.first().outerWidth(true) - _.$slides.first().width();
        if (_.options.variableWidth === false)
            _.$slideTrack.children('.slick-slide').width(_.slideWidth - offset);

    }
    ;

    Slick.prototype.setFade = function() {

        var _ = this, targetLeft;

        _.$slides.each(function(index, element) {
            targetLeft = (_.slideWidth * index) * -1;
            if (_.options.rtl === true) {
                $(element).css({
                    position: 'relative',
                    right: targetLeft,
                    top: 0,
                    zIndex: _.options.zIndex - 2,
                    opacity: 0
                });
            } else {
                $(element).css({
                    position: 'relative',
                    left: targetLeft,
                    top: 0,
                    zIndex: _.options.zIndex - 2,
                    opacity: 0
                });
            }
        });

        _.$slides.eq(_.currentSlide).css({
            zIndex: _.options.zIndex - 1,
            opacity: 1
        });

    }
    ;

    Slick.prototype.setHeight = function() {

        var _ = this;

        if (_.options.slidesToShow === 1 && _.options.adaptiveHeight === true && _.options.vertical === false) {
            var targetHeight = _.$slides.eq(_.currentSlide).outerHeight(true);
            _.$list.css('height', targetHeight);
        }

    }
    ;

    Slick.prototype.setOption = Slick.prototype.slickSetOption = function() {

        /**
         * accepts arguments in format of:
         *
         *  - for changing a single option's value:
         *     .slick("setOption", option, value, refresh )
         *
         *  - for changing a set of responsive options:
         *     .slick("setOption", 'responsive', [{}, ...], refresh )
         *
         *  - for updating multiple values at once (not responsive)
         *     .slick("setOption", { 'option': value, ... }, refresh )
         */

        var _ = this, l, item, option, value, refresh = false, type;

        if ($.type(arguments[0]) === 'object') {

            option = arguments[0];
            refresh = arguments[1];
            type = 'multiple';

        } else if ($.type(arguments[0]) === 'string') {

            option = arguments[0];
            value = arguments[1];
            refresh = arguments[2];

            if (arguments[0] === 'responsive' && $.type(arguments[1]) === 'array') {

                type = 'responsive';

            } else if (typeof arguments[1] !== 'undefined') {

                type = 'single';

            }

        }

        if (type === 'single') {

            _.options[option] = value;

        } else if (type === 'multiple') {

            $.each(option, function(opt, val) {

                _.options[opt] = val;

            });

        } else if (type === 'responsive') {

            for (item in value) {

                if ($.type(_.options.responsive) !== 'array') {

                    _.options.responsive = [value[item]];

                } else {

                    l = _.options.responsive.length - 1;

                    // loop through the responsive object and splice out duplicates.
                    while (l >= 0) {

                        if (_.options.responsive[l].breakpoint === value[item].breakpoint) {

                            _.options.responsive.splice(l, 1);

                        }

                        l--;

                    }

                    _.options.responsive.push(value[item]);

                }

            }

        }

        if (refresh) {

            _.unload();
            _.reinit();

        }

    }
    ;

    Slick.prototype.setPosition = function() {

        var _ = this;

        _.setDimensions();

        _.setHeight();

        if (_.options.fade === false) {
            _.setCSS(_.getLeft(_.currentSlide));
        } else {
            _.setFade();
        }

        _.$slider.trigger('setPosition', [_]);

    }
    ;

    Slick.prototype.setProps = function() {

        var _ = this
          , bodyStyle = document.body.style;

        _.positionProp = _.options.vertical === true ? 'top' : 'left';

        if (_.positionProp === 'top') {
            _.$slider.addClass('slick-vertical');
        } else {
            _.$slider.removeClass('slick-vertical');
        }

        if (bodyStyle.WebkitTransition !== undefined || bodyStyle.MozTransition !== undefined || bodyStyle.msTransition !== undefined) {
            if (_.options.useCSS === true) {
                _.cssTransitions = true;
            }
        }

        if (_.options.fade) {
            if (typeof _.options.zIndex === 'number') {
                if (_.options.zIndex < 3) {
                    _.options.zIndex = 3;
                }
            } else {
                _.options.zIndex = _.defaults.zIndex;
            }
        }

        if (bodyStyle.OTransform !== undefined) {
            _.animType = 'OTransform';
            _.transformType = '-o-transform';
            _.transitionType = 'OTransition';
            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined)
                _.animType = false;
        }
        if (bodyStyle.MozTransform !== undefined) {
            _.animType = 'MozTransform';
            _.transformType = '-moz-transform';
            _.transitionType = 'MozTransition';
            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.MozPerspective === undefined)
                _.animType = false;
        }
        if (bodyStyle.webkitTransform !== undefined) {
            _.animType = 'webkitTransform';
            _.transformType = '-webkit-transform';
            _.transitionType = 'webkitTransition';
            if (bodyStyle.perspectiveProperty === undefined && bodyStyle.webkitPerspective === undefined)
                _.animType = false;
        }
        if (bodyStyle.msTransform !== undefined) {
            _.animType = 'msTransform';
            _.transformType = '-ms-transform';
            _.transitionType = 'msTransition';
            if (bodyStyle.msTransform === undefined)
                _.animType = false;
        }
        if (bodyStyle.transform !== undefined && _.animType !== false) {
            _.animType = 'transform';
            _.transformType = 'transform';
            _.transitionType = 'transition';
        }
        _.transformsEnabled = _.options.useTransform && (_.animType !== null && _.animType !== false);
    }
    ;

    Slick.prototype.setSlideClasses = function(index) {

        var _ = this, centerOffset, allSlides, indexOffset, remainder;

        allSlides = _.$slider.find('.slick-slide').removeClass('slick-active slick-center slick-current').attr('aria-hidden', 'true');

        _.$slides.eq(index).addClass('slick-current');

        if (_.options.centerMode === true) {

            var evenCoef = _.options.slidesToShow % 2 === 0 ? 1 : 0;

            centerOffset = Math.floor(_.options.slidesToShow / 2);

            if (_.options.infinite === true) {

                if (index >= centerOffset && index <= (_.slideCount - 1) - centerOffset) {
                    _.$slides.slice(index - centerOffset + evenCoef, index + centerOffset + 1).addClass('slick-active').attr('aria-hidden', 'false');

                } else {

                    indexOffset = _.options.slidesToShow + index;
                    allSlides.slice(indexOffset - centerOffset + 1 + evenCoef, indexOffset + centerOffset + 2).addClass('slick-active').attr('aria-hidden', 'false');

                }

                if (index === 0) {

                    allSlides.eq(allSlides.length - 1 - _.options.slidesToShow).addClass('slick-center');

                } else if (index === _.slideCount - 1) {

                    allSlides.eq(_.options.slidesToShow).addClass('slick-center');

                }

            }

            _.$slides.eq(index).addClass('slick-center');

        } else {

            if (index >= 0 && index <= (_.slideCount - _.options.slidesToShow)) {

                _.$slides.slice(index, index + _.options.slidesToShow).addClass('slick-active').attr('aria-hidden', 'false');

            } else if (allSlides.length <= _.options.slidesToShow) {

                allSlides.addClass('slick-active').attr('aria-hidden', 'false');

            } else {

                remainder = _.slideCount % _.options.slidesToShow;
                indexOffset = _.options.infinite === true ? _.options.slidesToShow + index : index;

                if (_.options.slidesToShow == _.options.slidesToScroll && (_.slideCount - index) < _.options.slidesToShow) {

                    allSlides.slice(indexOffset - (_.options.slidesToShow - remainder), indexOffset + remainder).addClass('slick-active').attr('aria-hidden', 'false');

                } else {

                    allSlides.slice(indexOffset, indexOffset + _.options.slidesToShow).addClass('slick-active').attr('aria-hidden', 'false');

                }

            }

        }

        if (_.options.lazyLoad === 'ondemand' || _.options.lazyLoad === 'anticipated') {
            _.lazyLoad();
        }
    }
    ;

    Slick.prototype.setupInfinite = function() {

        var _ = this, i, slideIndex, infiniteCount;

        if (_.options.fade === true) {
            _.options.centerMode = false;
        }

        if (_.options.infinite === true && _.options.fade === false) {

            slideIndex = null;

            if (_.slideCount > _.options.slidesToShow) {

                if (_.options.centerMode === true) {
                    infiniteCount = _.options.slidesToShow + 1;
                } else {
                    infiniteCount = _.options.slidesToShow;
                }

                for (i = _.slideCount; i > (_.slideCount - infiniteCount); i -= 1) {
                    slideIndex = i - 1;
                    $(_.$slides[slideIndex]).clone(true).attr('id', '').attr('data-slick-index', slideIndex - _.slideCount).prependTo(_.$slideTrack).addClass('slick-cloned');
                }
                for (i = 0; i < infiniteCount + _.slideCount; i += 1) {
                    slideIndex = i;
                    $(_.$slides[slideIndex]).clone(true).attr('id', '').attr('data-slick-index', slideIndex + _.slideCount).appendTo(_.$slideTrack).addClass('slick-cloned');
                }
                _.$slideTrack.find('.slick-cloned').find('[id]').each(function() {
                    $(this).attr('id', '');
                });

            }

        }

    }
    ;

    Slick.prototype.interrupt = function(toggle) {

        var _ = this;

        if (!toggle) {
            _.autoPlay();
        }
        _.interrupted = toggle;

    }
    ;

    Slick.prototype.selectHandler = function(event) {

        var _ = this;

        var targetElement = $(event.target).is('.slick-slide') ? $(event.target) : $(event.target).parents('.slick-slide');

        var index = parseInt(targetElement.attr('data-slick-index'));

        if (!index)
            index = 0;

        if (_.slideCount <= _.options.slidesToShow) {

            _.slideHandler(index, false, true);
            return;

        }

        _.slideHandler(index);

    }
    ;

    Slick.prototype.slideHandler = function(index, sync, dontAnimate) {

        var targetSlide, animSlide, oldSlide, slideLeft, targetLeft = null, _ = this, navTarget;

        sync = sync || false;

        if (_.animating === true && _.options.waitForAnimate === true) {
            return;
        }

        if (_.options.fade === true && _.currentSlide === index) {
            return;
        }

        if (sync === false) {
            _.asNavFor(index);
        }

        targetSlide = index;
        targetLeft = _.getLeft(targetSlide);
        slideLeft = _.getLeft(_.currentSlide);

        _.currentLeft = _.swipeLeft === null ? slideLeft : _.swipeLeft;

        if (_.options.infinite === false && _.options.centerMode === false && (index < 0 || index > _.getDotCount() * _.options.slidesToScroll)) {
            if (_.options.fade === false) {
                targetSlide = _.currentSlide;
                if (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {
                    _.animateSlide(slideLeft, function() {
                        _.postSlide(targetSlide);
                    });
                } else {
                    _.postSlide(targetSlide);
                }
            }
            return;
        } else if (_.options.infinite === false && _.options.centerMode === true && (index < 0 || index > (_.slideCount - _.options.slidesToScroll))) {
            if (_.options.fade === false) {
                targetSlide = _.currentSlide;
                if (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {
                    _.animateSlide(slideLeft, function() {
                        _.postSlide(targetSlide);
                    });
                } else {
                    _.postSlide(targetSlide);
                }
            }
            return;
        }

        if (_.options.autoplay) {
            clearInterval(_.autoPlayTimer);
        }

        if (targetSlide < 0) {
            if (_.slideCount % _.options.slidesToScroll !== 0) {
                animSlide = _.slideCount - (_.slideCount % _.options.slidesToScroll);
            } else {
                animSlide = _.slideCount + targetSlide;
            }
        } else if (targetSlide >= _.slideCount) {
            if (_.slideCount % _.options.slidesToScroll !== 0) {
                animSlide = 0;
            } else {
                animSlide = targetSlide - _.slideCount;
            }
        } else {
            animSlide = targetSlide;
        }

        _.animating = true;

        _.$slider.trigger('beforeChange', [_, _.currentSlide, animSlide]);

        oldSlide = _.currentSlide;
        _.currentSlide = animSlide;

        _.setSlideClasses(_.currentSlide);

        if (_.options.asNavFor) {

            navTarget = _.getNavTarget();
            navTarget = navTarget.slick('getSlick');

            if (navTarget.slideCount <= navTarget.options.slidesToShow) {
                navTarget.setSlideClasses(_.currentSlide);
            }

        }

        _.updateDots();
        _.updateArrows();

        if (_.options.fade === true) {
            if (dontAnimate !== true) {

                _.fadeSlideOut(oldSlide);

                _.fadeSlide(animSlide, function() {
                    _.postSlide(animSlide);
                });

            } else {
                _.postSlide(animSlide);
            }
            _.animateHeight();
            return;
        }

        if (dontAnimate !== true && _.slideCount > _.options.slidesToShow) {
            _.animateSlide(targetLeft, function() {
                _.postSlide(animSlide);
            });
        } else {
            _.postSlide(animSlide);
        }

    }
    ;

    Slick.prototype.startLoad = function() {

        var _ = this;

        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow) {

            _.$prevArrow.hide();
            _.$nextArrow.hide();

        }

        if (_.options.dots === true && _.slideCount > _.options.slidesToShow) {

            _.$dots.hide();

        }

        _.$slider.addClass('slick-loading');

    }
    ;

    Slick.prototype.swipeDirection = function() {

        var xDist, yDist, r, swipeAngle, _ = this;

        xDist = _.touchObject.startX - _.touchObject.curX;
        yDist = _.touchObject.startY - _.touchObject.curY;
        r = Math.atan2(yDist, xDist);

        swipeAngle = Math.round(r * 180 / Math.PI);
        if (swipeAngle < 0) {
            swipeAngle = 360 - Math.abs(swipeAngle);
        }

        if ((swipeAngle <= 45) && (swipeAngle >= 0)) {
            return (_.options.rtl === false ? 'left' : 'right');
        }
        if ((swipeAngle <= 360) && (swipeAngle >= 315)) {
            return (_.options.rtl === false ? 'left' : 'right');
        }
        if ((swipeAngle >= 135) && (swipeAngle <= 225)) {
            return (_.options.rtl === false ? 'right' : 'left');
        }
        if (_.options.verticalSwiping === true) {
            if ((swipeAngle >= 35) && (swipeAngle <= 135)) {
                return 'down';
            } else {
                return 'up';
            }
        }

        return 'vertical';

    }
    ;

    Slick.prototype.swipeEnd = function(event) {

        var _ = this, slideCount, direction;

        _.dragging = false;
        _.swiping = false;

        if (_.scrolling) {
            _.scrolling = false;
            return false;
        }

        _.interrupted = false;
        _.shouldClick = (_.touchObject.swipeLength > 10) ? false : true;

        if (_.touchObject.curX === undefined) {
            return false;
        }

        if (_.touchObject.edgeHit === true) {
            _.$slider.trigger('edge', [_, _.swipeDirection()]);
        }

        if (_.touchObject.swipeLength >= _.touchObject.minSwipe) {

            direction = _.swipeDirection();

            switch (direction) {

            case 'left':
            case 'down':

                slideCount = _.options.swipeToSlide ? _.checkNavigable(_.currentSlide + _.getSlideCount()) : _.currentSlide + _.getSlideCount();

                _.currentDirection = 0;

                break;

            case 'right':
            case 'up':

                slideCount = _.options.swipeToSlide ? _.checkNavigable(_.currentSlide - _.getSlideCount()) : _.currentSlide - _.getSlideCount();

                _.currentDirection = 1;

                break;

            default:

            }

            if (direction != 'vertical') {

                _.slideHandler(slideCount);
                _.touchObject = {};
                _.$slider.trigger('swipe', [_, direction]);

            }

        } else {

            if (_.touchObject.startX !== _.touchObject.curX) {

                _.slideHandler(_.currentSlide);
                _.touchObject = {};

            }

        }

    }
    ;

    Slick.prototype.swipeHandler = function(event) {

        var _ = this;

        if ((_.options.swipe === false) || ('ontouchend'in document && _.options.swipe === false)) {
            return;
        } else if (_.options.draggable === false && event.type.indexOf('mouse') !== -1) {
            return;
        }

        _.touchObject.fingerCount = event.originalEvent && event.originalEvent.touches !== undefined ? event.originalEvent.touches.length : 1;

        _.touchObject.minSwipe = _.listWidth / _.options.touchThreshold;

        if (_.options.verticalSwiping === true) {
            _.touchObject.minSwipe = _.listHeight / _.options.touchThreshold;
        }

        switch (event.data.action) {

        case 'start':
            _.swipeStart(event);
            break;

        case 'move':
            _.swipeMove(event);
            break;

        case 'end':
            _.swipeEnd(event);
            break;

        }

    }
    ;

    Slick.prototype.swipeMove = function(event) {

        var _ = this, edgeWasHit = false, curLeft, swipeDirection, swipeLength, positionOffset, touches, verticalSwipeLength;

        touches = event.originalEvent !== undefined ? event.originalEvent.touches : null;

        if (!_.dragging || _.scrolling || touches && touches.length !== 1) {
            return false;
        }

        curLeft = _.getLeft(_.currentSlide);

        _.touchObject.curX = touches !== undefined ? touches[0].pageX : event.clientX;
        _.touchObject.curY = touches !== undefined ? touches[0].pageY : event.clientY;

        _.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(_.touchObject.curX - _.touchObject.startX, 2)));

        verticalSwipeLength = Math.round(Math.sqrt(Math.pow(_.touchObject.curY - _.touchObject.startY, 2)));

        if (!_.options.verticalSwiping && !_.swiping && verticalSwipeLength > 4) {
            _.scrolling = true;
            return false;
        }

        if (_.options.verticalSwiping === true) {
            _.touchObject.swipeLength = verticalSwipeLength;
        }

        swipeDirection = _.swipeDirection();

        if (event.originalEvent !== undefined && _.touchObject.swipeLength > 4) {
            _.swiping = true;
            event.preventDefault();
        }

        positionOffset = (_.options.rtl === false ? 1 : -1) * (_.touchObject.curX > _.touchObject.startX ? 1 : -1);
        if (_.options.verticalSwiping === true) {
            positionOffset = _.touchObject.curY > _.touchObject.startY ? 1 : -1;
        }

        swipeLength = _.touchObject.swipeLength;

        _.touchObject.edgeHit = false;

        if (_.options.infinite === false) {
            if ((_.currentSlide === 0 && swipeDirection === 'right') || (_.currentSlide >= _.getDotCount() && swipeDirection === 'left')) {
                swipeLength = _.touchObject.swipeLength * _.options.edgeFriction;
                _.touchObject.edgeHit = true;
            }
        }

        if (_.options.vertical === false) {
            _.swipeLeft = curLeft + swipeLength * positionOffset;
        } else {
            _.swipeLeft = curLeft + (swipeLength * (_.$list.height() / _.listWidth)) * positionOffset;
        }
        if (_.options.verticalSwiping === true) {
            _.swipeLeft = curLeft + swipeLength * positionOffset;
        }

        if (_.options.fade === true || _.options.touchMove === false) {
            return false;
        }

        if (_.animating === true) {
            _.swipeLeft = null;
            return false;
        }

        _.setCSS(_.swipeLeft);

    }
    ;

    Slick.prototype.swipeStart = function(event) {

        var _ = this, touches;

        _.interrupted = true;

        if (_.touchObject.fingerCount !== 1 || _.slideCount <= _.options.slidesToShow) {
            _.touchObject = {};
            return false;
        }

        if (event.originalEvent !== undefined && event.originalEvent.touches !== undefined) {
            touches = event.originalEvent.touches[0];
        }

        _.touchObject.startX = _.touchObject.curX = touches !== undefined ? touches.pageX : event.clientX;
        _.touchObject.startY = _.touchObject.curY = touches !== undefined ? touches.pageY : event.clientY;

        _.dragging = true;

    }
    ;

    Slick.prototype.unfilterSlides = Slick.prototype.slickUnfilter = function() {

        var _ = this;

        if (_.$slidesCache !== null) {

            _.unload();

            _.$slideTrack.children(this.options.slide).detach();

            _.$slidesCache.appendTo(_.$slideTrack);

            _.reinit();

        }

    }
    ;

    Slick.prototype.unload = function() {

        var _ = this;

        $('.slick-cloned', _.$slider).remove();

        if (_.$dots) {
            _.$dots.remove();
        }

        if (_.$prevArrow && _.htmlExpr.test(_.options.prevArrow)) {
            _.$prevArrow.remove();
        }

        if (_.$nextArrow && _.htmlExpr.test(_.options.nextArrow)) {
            _.$nextArrow.remove();
        }

        _.$slides.removeClass('slick-slide slick-active slick-visible slick-current').attr('aria-hidden', 'true').css('width', '');

    }
    ;

    Slick.prototype.unslick = function(fromBreakpoint) {

        var _ = this;
        _.$slider.trigger('unslick', [_, fromBreakpoint]);
        _.destroy();

    }
    ;

    Slick.prototype.updateArrows = function() {

        var _ = this, centerOffset;

        centerOffset = Math.floor(_.options.slidesToShow / 2);

        if (_.options.arrows === true && _.slideCount > _.options.slidesToShow && !_.options.infinite) {

            _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');
            _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');

            if (_.currentSlide === 0) {

                _.$prevArrow.addClass('slick-disabled').attr('aria-disabled', 'true');
                _.$nextArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');

            } else if (_.currentSlide >= _.slideCount - _.options.slidesToShow && _.options.centerMode === false) {

                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');
                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');

            } else if (_.currentSlide >= _.slideCount - 1 && _.options.centerMode === true) {

                _.$nextArrow.addClass('slick-disabled').attr('aria-disabled', 'true');
                _.$prevArrow.removeClass('slick-disabled').attr('aria-disabled', 'false');

            }

        }

    }
    ;

    Slick.prototype.updateDots = function() {

        var _ = this;

        if (_.$dots !== null) {

            _.$dots.find('li').removeClass('slick-active').end();

            _.$dots.find('li').eq(Math.floor(_.currentSlide / _.options.slidesToScroll)).addClass('slick-active');

        }

    }
    ;

    Slick.prototype.visibility = function() {

        var _ = this;

        if (_.options.autoplay) {

            if (document[_.hidden]) {

                _.interrupted = true;

            } else {

                _.interrupted = false;

            }

        }

    }
    ;

    $.fn.slick = function() {
        var _ = this, opt = arguments[0], args = Array.prototype.slice.call(arguments, 1), l = _.length, i, ret;
        for (i = 0; i < l; i++) {
            if (typeof opt == 'object' || typeof opt == 'undefined')
                _[i].slick = new Slick(_[i],opt);
            else
                ret = _[i].slick[opt].apply(_[i].slick, args);
            if (typeof ret != 'undefined')
                return ret;
        }
        return _;
    }
    ;

}));

(function webpackUniversalModuleDefinition(root, factory) {
    if (typeof exports === 'object' && typeof module === 'object')
        module.exports = factory();
    else if (typeof define === 'function' && define.amd)
        define([], factory);
    else if (typeof exports === 'object')
        exports["SlimSelect"] = factory();
    else
        root["SlimSelect"] = factory();
}
)(window, function() {
    return /******/
    (function(modules) {
        // webpackBootstrap
        /******/
        // The module cache
        /******/
        var installedModules = {};
        /******/
        /******/
        // The require function
        /******/
        function __webpack_require__(moduleId) {
            /******/
            /******/
            // Check if module is in cache
            /******/
            if (installedModules[moduleId]) {
                /******/
                return installedModules[moduleId].exports;
                /******/
            }
            /******/
            // Create a new module (and put it into the cache)
            /******/
            var module = installedModules[moduleId] = {
                /******/
                i: moduleId,
                /******/
                l: false,
                /******/
                exports: {}/******/
            };
            /******/
            /******/
            // Execute the module function
            /******/
            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
            /******/
            /******/
            // Flag the module as loaded
            /******/
            module.l = true;
            /******/
            /******/
            // Return the exports of the module
            /******/
            return module.exports;
            /******/
        }
        /******/
        /******/
        /******/
        // expose the modules object (__webpack_modules__)
        /******/
        __webpack_require__.m = modules;
        /******/
        /******/
        // expose the module cache
        /******/
        __webpack_require__.c = installedModules;
        /******/
        /******/
        // define getter function for harmony exports
        /******/
        __webpack_require__.d = function(exports, name, getter) {
            /******/
            if (!__webpack_require__.o(exports, name)) {
                /******/
                Object.defineProperty(exports, name, {
                    enumerable: true,
                    get: getter
                });
                /******/
            }
            /******/
        }
        ;
        /******/
        /******/
        // define __esModule on exports
        /******/
        __webpack_require__.r = function(exports) {
            /******/
            if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {
                /******/
                Object.defineProperty(exports, Symbol.toStringTag, {
                    value: 'Module'
                });
                /******/
            }
            /******/
            Object.defineProperty(exports, '__esModule', {
                value: true
            });
            /******/
        }
        ;
        /******/
        /******/
        // create a fake namespace object
        /******/
        // mode & 1: value is a module id, require it
        /******/
        // mode & 2: merge all properties of value into the ns
        /******/
        // mode & 4: return value when already ns object
        /******/
        // mode & 8|1: behave like require
        /******/
        __webpack_require__.t = function(value, mode) {
            /******/
            if (mode & 1)
                value = __webpack_require__(value);
            /******/
            if (mode & 8)
                return value;
            /******/
            if ((mode & 4) && typeof value === 'object' && value && value.__esModule)
                return value;
            /******/
            var ns = Object.create(null);
            /******/
            __webpack_require__.r(ns);
            /******/
            Object.defineProperty(ns, 'default', {
                enumerable: true,
                value: value
            });
            /******/
            if (mode & 2 && typeof value != 'string')
                for (var key in value)
                    __webpack_require__.d(ns, key, function(key) {
                        return value[key];
                    }
                    .bind(null, key));
            /******/
            return ns;
            /******/
        }
        ;
        /******/
        /******/
        // getDefaultExport function for compatibility with non-harmony modules
        /******/
        __webpack_require__.n = function(module) {
            /******/
            var getter = module && module.__esModule ? /******/
            function getDefault() {
                return module['default'];
            }
            : /******/
            function getModuleExports() {
                return module;
            }
            ;
            /******/
            __webpack_require__.d(getter, 'a', getter);
            /******/
            return getter;
            /******/
        }
        ;
        /******/
        /******/
        // Object.prototype.hasOwnProperty.call
        /******/
        __webpack_require__.o = function(object, property) {
            return Object.prototype.hasOwnProperty.call(object, property);
        }
        ;
        /******/
        /******/
        // __webpack_public_path__
        /******/
        __webpack_require__.p = "";
        /******/
        /******/
        /******/
        // Load entry module and return exports
        /******/
        return __webpack_require__(__webpack_require__.s = 2);
        /******/
    }
    )/************************************************************************/
    /******/
    ([/* 0 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        exports.__esModule = true;
        exports.kebabCase = exports.highlight = exports.isValueInArrayOfObjects = exports.debounce = exports.putContent = exports.ensureElementInView = exports.hasClassInTree = void 0;
        function hasClassInTree(element, className) {
            function hasClass(e, c) {
                if (!(!c || !e || !e.classList || !e.classList.contains(c))) {
                    return e;
                }
                return null;
            }
            function parentByClass(e, c) {
                if (!e || e === document) {
                    return null;
                } else if (hasClass(e, c)) {
                    return e;
                } else {
                    return parentByClass(e.parentNode, c);
                }
            }
            return hasClass(element, className) || parentByClass(element, className);
        }
        exports.hasClassInTree = hasClassInTree;
        function ensureElementInView(container, element) {
            var cTop = container.scrollTop + container.offsetTop;
            var cBottom = cTop + container.clientHeight;
            var eTop = element.offsetTop;
            var eBottom = eTop + element.clientHeight;
            if (eTop < cTop) {
                container.scrollTop -= (cTop - eTop);
            } else if (eBottom > cBottom) {
                container.scrollTop += (eBottom - cBottom);
            }
        }
        exports.ensureElementInView = ensureElementInView;
        function putContent(el, currentPosition, isOpen) {
            var height = el.offsetHeight;
            var rect = el.getBoundingClientRect();
            var elemTop = (isOpen ? rect.top : rect.top - height);
            var elemBottom = (isOpen ? rect.bottom : rect.bottom + height);
            if (elemTop <= 0) {
                return 'below';
            }
            if (elemBottom >= window.innerHeight) {
                return 'above';
            }
            return (isOpen ? currentPosition : 'below');
        }
        exports.putContent = putContent;
        function debounce(func, wait, immediate) {
            if (wait === void 0) {
                wait = 100;
            }
            if (immediate === void 0) {
                immediate = false;
            }
            var timeout;
            return function() {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                var context = self;
                var later = function() {
                    timeout = null;
                    if (!immediate) {
                        func.apply(context, args);
                    }
                };
                var callNow = immediate && !timeout;
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
                if (callNow) {
                    func.apply(context, args);
                }
            }
            ;
        }
        exports.debounce = debounce;
        function isValueInArrayOfObjects(selected, key, value) {
            if (!Array.isArray(selected)) {
                return selected[key] === value;
            }
            for (var _i = 0, selected_1 = selected; _i < selected_1.length; _i++) {
                var s = selected_1[_i];
                if (s && s[key] && s[key] === value) {
                    return true;
                }
            }
            return false;
        }
        exports.isValueInArrayOfObjects = isValueInArrayOfObjects;
        function highlight(str, search, className) {
            var completedString = str;
            var regex = new RegExp('(' + search.trim() + ')(?![^<]*>[^<>]*</)','i');
            if (!str.match(regex)) {
                return str;
            }
            var matchStartPosition = str.match(regex).index;
            var matchEndPosition = matchStartPosition + str.match(regex)[0].toString().length;
            var originalTextFoundByRegex = str.substring(matchStartPosition, matchEndPosition);
            completedString = completedString.replace(regex, "<mark class=\"".concat(className, "\">").concat(originalTextFoundByRegex, "</mark>"));
            return completedString;
        }
        exports.highlight = highlight;
        function kebabCase(str) {
            var result = str.replace(/[A-Z\u00C0-\u00D6\u00D8-\u00DE]/g, function(match) {
                return '-' + match.toLowerCase();
            });
            return (str[0] === str[0].toUpperCase()) ? result.substring(1) : result;
        }
        exports.kebabCase = kebabCase;
        (function() {
            var w = window;
            if (typeof w.CustomEvent === 'function') {
                return;
            }
            function CustomEvent(event, params) {
                params = params || {
                    bubbles: false,
                    cancelable: false,
                    detail: undefined
                };
                var evt = document.createEvent('CustomEvent');
                evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
                return evt;
            }
            CustomEvent.prototype = w.Event.prototype;
            w.CustomEvent = CustomEvent;
        }
        )();

        /***/
    }
    ), /* 1 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        exports.__esModule = true;
        exports.validateOption = exports.validateData = exports.Data = void 0;
        var Data = (function() {
            function Data(info) {
                this.contentOpen = false;
                this.contentPosition = 'below';
                this.isOnChangeEnabled = true;
                this.main = info.main;
                this.searchValue = '';
                this.data = [];
                this.filtered = null;
                this.parseSelectData();
                this.setSelectedFromSelect();
            }
            Data.prototype.newOption = function(info) {
                return {
                    id: (info.id ? info.id : String(Math.floor(Math.random() * 100000000))),
                    value: (info.value ? info.value : ''),
                    text: (info.text ? info.text : ''),
                    innerHTML: (info.innerHTML ? info.innerHTML : ''),
                    selected: (info.selected ? info.selected : false),
                    display: (info.display !== undefined ? info.display : true),
                    disabled: (info.disabled ? info.disabled : false),
                    placeholder: (info.placeholder ? info.placeholder : false),
                    "class": (info["class"] ? info["class"] : undefined),
                    data: (info.data ? info.data : {}),
                    mandatory: (info.mandatory ? info.mandatory : false)
                };
            }
            ;
            Data.prototype.add = function(data) {
                this.data.push({
                    id: String(Math.floor(Math.random() * 100000000)),
                    value: data.value,
                    text: data.text,
                    innerHTML: '',
                    selected: false,
                    display: true,
                    disabled: false,
                    placeholder: false,
                    "class": undefined,
                    mandatory: data.mandatory,
                    data: {}
                });
            }
            ;
            Data.prototype.parseSelectData = function() {
                this.data = [];
                var nodes = this.main.select.element.childNodes;
                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {
                    var n = nodes_1[_i];
                    if (n.nodeName === 'OPTGROUP') {
                        var node = n;
                        var optgroup = {
                            label: node.label,
                            options: []
                        };
                        var options = n.childNodes;
                        for (var _a = 0, options_1 = options; _a < options_1.length; _a++) {
                            var o = options_1[_a];
                            if (o.nodeName === 'OPTION') {
                                var option = this.pullOptionData(o);
                                optgroup.options.push(option);
                                if (option.placeholder && option.text.trim() !== '') {
                                    this.main.config.placeholderText = option.text;
                                }
                            }
                        }
                        this.data.push(optgroup);
                    } else if (n.nodeName === 'OPTION') {
                        var option = this.pullOptionData(n);
                        this.data.push(option);
                        if (option.placeholder && option.text.trim() !== '') {
                            this.main.config.placeholderText = option.text;
                        }
                    }
                }
            }
            ;
            Data.prototype.pullOptionData = function(option) {
                return {
                    id: (option.dataset ? option.dataset.id : false) || String(Math.floor(Math.random() * 100000000)),
                    value: option.value,
                    text: option.text,
                    innerHTML: option.innerHTML,
                    selected: option.selected,
                    disabled: option.disabled,
                    placeholder: option.dataset.placeholder === 'true',
                    "class": option.className,
                    style: option.style.cssText,
                    data: option.dataset,
                    mandatory: (option.dataset ? option.dataset.mandatory === 'true' : false)
                };
            }
            ;
            Data.prototype.setSelectedFromSelect = function() {
                if (this.main.config.isMultiple) {
                    var options = this.main.select.element.options;
                    var newSelected = [];
                    for (var _i = 0, options_2 = options; _i < options_2.length; _i++) {
                        var o = options_2[_i];
                        if (o.selected) {
                            var newOption = this.getObjectFromData(o.value, 'value');
                            if (newOption && newOption.id) {
                                newSelected.push(newOption.id);
                            }
                        }
                    }
                    this.setSelected(newSelected, 'id');
                } else {
                    var element = this.main.select.element;
                    if (element.selectedIndex !== -1) {
                        var option = element.options[element.selectedIndex];
                        var value = option.value;
                        this.setSelected(value, 'value');
                    }
                }
            }
            ;
            Data.prototype.setSelected = function(value, type) {
                if (type === void 0) {
                    type = 'id';
                }
                for (var _i = 0, _a = this.data; _i < _a.length; _i++) {
                    var d = _a[_i];
                    if (d.hasOwnProperty('label')) {
                        if (d.hasOwnProperty('options')) {
                            var options = d.options;
                            if (options) {
                                for (var _b = 0, options_3 = options; _b < options_3.length; _b++) {
                                    var o = options_3[_b];
                                    if (o.placeholder) {
                                        continue;
                                    }
                                    o.selected = this.shouldBeSelected(o, value, type);
                                }
                            }
                        }
                    } else {
                        d.selected = this.shouldBeSelected(d, value, type);
                    }
                }
            }
            ;
            Data.prototype.shouldBeSelected = function(option, value, type) {
                if (type === void 0) {
                    type = 'id';
                }
                if (Array.isArray(value)) {
                    for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {
                        var v = value_1[_i];
                        if (type in option && String(option[type]) === String(v)) {
                            return true;
                        }
                    }
                } else {
                    if (type in option && String(option[type]) === String(value)) {
                        return true;
                    }
                }
                return false;
            }
            ;
            Data.prototype.getSelected = function() {
                var value = {
                    text: '',
                    placeholder: this.main.config.placeholderText
                };
                var values = [];
                for (var _i = 0, _a = this.data; _i < _a.length; _i++) {
                    var d = _a[_i];
                    if (d.hasOwnProperty('label')) {
                        if (d.hasOwnProperty('options')) {
                            var options = d.options;
                            if (options) {
                                for (var _b = 0, options_4 = options; _b < options_4.length; _b++) {
                                    var o = options_4[_b];
                                    if (o.selected) {
                                        if (!this.main.config.isMultiple) {
                                            value = o;
                                        } else {
                                            values.push(o);
                                        }
                                    }
                                }
                            }
                        }
                    } else {
                        if (d.selected) {
                            if (!this.main.config.isMultiple) {
                                value = d;
                            } else {
                                values.push(d);
                            }
                        }
                    }
                }
                if (this.main.config.isMultiple) {
                    return values;
                }
                return value;
            }
            ;
            Data.prototype.addToSelected = function(value, type) {
                if (type === void 0) {
                    type = 'id';
                }
                if (this.main.config.isMultiple) {
                    var values = [];
                    var selected = this.getSelected();
                    if (Array.isArray(selected)) {
                        for (var _i = 0, selected_1 = selected; _i < selected_1.length; _i++) {
                            var s = selected_1[_i];
                            values.push(s[type]);
                        }
                    }
                    values.push(value);
                    this.setSelected(values, type);
                }
            }
            ;
            Data.prototype.removeFromSelected = function(value, type) {
                if (type === void 0) {
                    type = 'id';
                }
                if (this.main.config.isMultiple) {
                    var values = [];
                    var selected = this.getSelected();
                    for (var _i = 0, selected_2 = selected; _i < selected_2.length; _i++) {
                        var s = selected_2[_i];
                        if (String(s[type]) !== String(value)) {
                            values.push(s[type]);
                        }
                    }
                    this.setSelected(values, type);
                }
            }
            ;
            Data.prototype.onDataChange = function() {
                if (this.main.onChange && this.isOnChangeEnabled) {
                    this.main.onChange(JSON.parse(JSON.stringify(this.getSelected())));
                }
            }
            ;
            Data.prototype.getObjectFromData = function(value, type) {
                if (type === void 0) {
                    type = 'id';
                }
                for (var _i = 0, _a = this.data; _i < _a.length; _i++) {
                    var d = _a[_i];
                    if (type in d && String(d[type]) === String(value)) {
                        return d;
                    }
                    if (d.hasOwnProperty('options')) {
                        var optgroupObject = d;
                        if (optgroupObject.options) {
                            for (var _b = 0, _c = optgroupObject.options; _b < _c.length; _b++) {
                                var oo = _c[_b];
                                if (String(oo[type]) === String(value)) {
                                    return oo;
                                }
                            }
                        }
                    }
                }
                return null;
            }
            ;
            Data.prototype.search = function(search) {
                this.searchValue = search;
                if (search.trim() === '') {
                    this.filtered = null;
                    return;
                }
                var searchFilter = this.main.config.searchFilter;
                var valuesArray = this.data.slice(0);
                search = search.trim();
                var filtered = valuesArray.map(function(obj) {
                    if (obj.hasOwnProperty('options')) {
                        var optgroupObj = obj;
                        var options = [];
                        if (optgroupObj.options) {
                            options = optgroupObj.options.filter(function(opt) {
                                return searchFilter(opt, search);
                            });
                        }
                        if (options.length !== 0) {
                            var optgroup = Object.assign({}, optgroupObj);
                            optgroup.options = options;
                            return optgroup;
                        }
                    }
                    if (obj.hasOwnProperty('text')) {
                        var optionObj = obj;
                        if (searchFilter(optionObj, search)) {
                            return obj;
                        }
                    }
                    return null;
                });
                this.filtered = filtered.filter(function(info) {
                    return info;
                });
            }
            ;
            return Data;
        }());
        exports.Data = Data;
        function validateData(data) {
            if (!data) {
                console.error('Data must be an array of objects');
                return false;
            }
            var isValid = false;
            var errorCount = 0;
            for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {
                var d = data_1[_i];
                if (d.hasOwnProperty('label')) {
                    if (d.hasOwnProperty('options')) {
                        var optgroup = d;
                        var options = optgroup.options;
                        if (options) {
                            for (var _a = 0, options_5 = options; _a < options_5.length; _a++) {
                                var o = options_5[_a];
                                isValid = validateOption(o);
                                if (!isValid) {
                                    errorCount++;
                                }
                            }
                        }
                    }
                } else {
                    var option = d;
                    isValid = validateOption(option);
                    if (!isValid) {
                        errorCount++;
                    }
                }
            }
            return errorCount === 0;
        }
        exports.validateData = validateData;
        function validateOption(option) {
            if (option.text === undefined) {
                console.error('Data object option must have at least have a text value. Check object: ' + JSON.stringify(option));
                return false;
            }
            return true;
        }
        exports.validateOption = validateOption;

        /***/
    }
    ), /* 2 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        exports.__esModule = true;
        var config_1 = __webpack_require__(3);
        var select_1 = __webpack_require__(4);
        var slim_1 = __webpack_require__(5);
        var data_1 = __webpack_require__(1);
        var helper_1 = __webpack_require__(0);
        var SlimSelect = (function() {
            function SlimSelect(info) {
                var _this = this;
                this.ajax = null;
                this.addable = null;
                this.beforeOnChange = null;
                this.onChange = null;
                this.beforeOpen = null;
                this.afterOpen = null;
                this.beforeClose = null;
                this.afterClose = null;
                this.windowScroll = (0,
                helper_1.debounce)(function(e) {
                    if (_this.data.contentOpen) {
                        if ((0,
                        helper_1.putContent)(_this.slim.content, _this.data.contentPosition, _this.data.contentOpen) === 'above') {
                            _this.moveContentAbove();
                        } else {
                            _this.moveContentBelow();
                        }
                    }
                });
                this.documentClick = function(e) {
                    if (e.target && !(0,
                    helper_1.hasClassInTree)(e.target, _this.config.id)) {
                        _this.close();
                    }
                }
                ;
                var selectElement = this.validate(info);
                if (selectElement.dataset.ssid) {
                    this.destroy(selectElement.dataset.ssid);
                }
                if (info.ajax) {
                    this.ajax = info.ajax;
                }
                if (info.addable) {
                    this.addable = info.addable;
                }
                this.config = new config_1.Config({
                    select: selectElement,
                    isAjax: (info.ajax ? true : false),
                    showSearch: info.showSearch,
                    searchPlaceholder: info.searchPlaceholder,
                    searchText: info.searchText,
                    searchingText: info.searchingText,
                    searchFocus: info.searchFocus,
                    searchHighlight: info.searchHighlight,
                    searchFilter: info.searchFilter,
                    closeOnSelect: info.closeOnSelect,
                    showContent: info.showContent,
                    placeholderText: info.placeholder,
                    allowDeselect: info.allowDeselect,
                    allowDeselectOption: info.allowDeselectOption,
                    hideSelectedOption: info.hideSelectedOption,
                    deselectLabel: info.deselectLabel,
                    isEnabled: info.isEnabled,
                    valuesUseText: info.valuesUseText,
                    showOptionTooltips: info.showOptionTooltips,
                    selectByGroup: info.selectByGroup,
                    limit: info.limit,
                    timeoutDelay: info.timeoutDelay,
                    addToBody: info.addToBody
                });
                this.select = new select_1.Select({
                    select: selectElement,
                    main: this
                });
                this.data = new data_1.Data({
                    main: this
                });
                this.slim = new slim_1.Slim({
                    main: this
                });
                if (this.select.element.parentNode) {
                    this.select.element.parentNode.insertBefore(this.slim.container, this.select.element.nextSibling);
                }
                if (info.data) {
                    this.setData(info.data);
                } else {
                    this.render();
                }
                document.addEventListener('click', this.documentClick);
                if (this.config.showContent === 'auto') {
                    window.addEventListener('scroll', this.windowScroll, false);
                }
                if (info.beforeOnChange) {
                    this.beforeOnChange = info.beforeOnChange;
                }
                if (info.onChange) {
                    this.onChange = info.onChange;
                }
                if (info.beforeOpen) {
                    this.beforeOpen = info.beforeOpen;
                }
                if (info.afterOpen) {
                    this.afterOpen = info.afterOpen;
                }
                if (info.beforeClose) {
                    this.beforeClose = info.beforeClose;
                }
                if (info.afterClose) {
                    this.afterClose = info.afterClose;
                }
                if (!this.config.isEnabled) {
                    this.disable();
                }
            }
            SlimSelect.prototype.validate = function(info) {
                var select = (typeof info.select === 'string' ? document.querySelector(info.select) : info.select);
                if (!select) {
                    throw new Error('Could not find select element');
                }
                if (select.tagName !== 'SELECT') {
                    throw new Error('Element isnt of type select');
                }
                return select;
            }
            ;
            SlimSelect.prototype.selected = function() {
                if (this.config.isMultiple) {
                    var selected = this.data.getSelected();
                    var outputSelected = [];
                    for (var _i = 0, selected_1 = selected; _i < selected_1.length; _i++) {
                        var s = selected_1[_i];
                        outputSelected.push(s.value);
                    }
                    return outputSelected;
                } else {
                    var selected = this.data.getSelected();
                    return (selected ? selected.value : '');
                }
            }
            ;
            SlimSelect.prototype.set = function(value, type, close, render) {
                if (type === void 0) {
                    type = 'value';
                }
                if (close === void 0) {
                    close = true;
                }
                if (render === void 0) {
                    render = true;
                }
                if (this.config.isMultiple && !Array.isArray(value)) {
                    this.data.addToSelected(value, type);
                } else {
                    this.data.setSelected(value, type);
                }
                this.select.setValue();
                this.data.onDataChange();
                this.render();
                if (this.config.hideSelectedOption && this.config.isMultiple && this.data.getSelected().length === this.data.data.length) {
                    close = true;
                }
                if (close) {
                    this.close();
                }
            }
            ;
            SlimSelect.prototype.setSelected = function(value, type, close, render) {
                if (type === void 0) {
                    type = 'value';
                }
                if (close === void 0) {
                    close = true;
                }
                if (render === void 0) {
                    render = true;
                }
                this.set(value, type, close, render);
            }
            ;
            SlimSelect.prototype.setData = function(data) {
                var isValid = (0,
                data_1.validateData)(data);
                if (!isValid) {
                    console.error('Validation problem on: #' + this.select.element.id);
                    return;
                }
                var newData = JSON.parse(JSON.stringify(data));
                var selected = this.data.getSelected();
                for (var i = 0; i < newData.length; i++) {
                    if (!newData[i].value && !newData[i].placeholder) {
                        newData[i].value = newData[i].text;
                    }
                }
                if (this.config.isAjax && selected) {
                    if (this.config.isMultiple) {
                        var reverseSelected = selected.reverse();
                        for (var _i = 0, reverseSelected_1 = reverseSelected; _i < reverseSelected_1.length; _i++) {
                            var r = reverseSelected_1[_i];
                            newData.unshift(r);
                        }
                    } else {
                        newData.unshift(selected);
                        for (var i = 0; i < newData.length; i++) {
                            if (!newData[i].placeholder && newData[i].value === selected.value && newData[i].text === selected.text) {
                                newData.splice(i, 1);
                            }
                        }
                        var hasPlaceholder = false;
                        for (var i = 0; i < newData.length; i++) {
                            if (newData[i].placeholder) {
                                hasPlaceholder = true;
                            }
                        }
                        if (!hasPlaceholder) {
                            newData.unshift({
                                text: '',
                                placeholder: true
                            });
                        }
                    }
                }
                this.select.create(newData);
                this.data.parseSelectData();
                this.data.setSelectedFromSelect();
            }
            ;
            SlimSelect.prototype.addData = function(data) {
                var isValid = (0,
                data_1.validateData)([data]);
                if (!isValid) {
                    console.error('Validation problem on: #' + this.select.element.id);
                    return;
                }
                this.data.add(this.data.newOption(data));
                this.select.create(this.data.data);
                this.data.parseSelectData();
                this.data.setSelectedFromSelect();
                this.render();
            }
            ;
            SlimSelect.prototype.open = function() {
                var _this = this;
                if (!this.config.isEnabled) {
                    return;
                }
                if (this.data.contentOpen) {
                    return;
                }
                if (this.config.hideSelectedOption && this.config.isMultiple && this.data.getSelected().length === this.data.data.length) {
                    return;
                }
                if (this.beforeOpen) {
                    this.beforeOpen();
                }
                if (this.config.isMultiple && this.slim.multiSelected) {
                    this.slim.multiSelected.plus.classList.add('ss-cross');
                } else if (this.slim.singleSelected) {
                    this.slim.singleSelected.arrowIcon.arrow.classList.remove('arrow-down');
                    this.slim.singleSelected.arrowIcon.arrow.classList.add('arrow-up');
                }
                this.slim[(this.config.isMultiple ? 'multiSelected' : 'singleSelected')].container.classList.add((this.data.contentPosition === 'above' ? this.config.openAbove : this.config.openBelow));
                if (this.config.addToBody) {
                    var containerRect = this.slim.container.getBoundingClientRect();
                    this.slim.content.style.top = (containerRect.top + containerRect.height + window.scrollY) + 'px';
                    this.slim.content.style.left = (containerRect.left + window.scrollX) + 'px';
                    this.slim.content.style.width = containerRect.width + 'px';
                }
                this.slim.content.classList.add(this.config.open);
                if (this.config.showContent.toLowerCase() === 'up') {
                    this.moveContentAbove();
                } else if (this.config.showContent.toLowerCase() === 'down') {
                    this.moveContentBelow();
                } else {
                    if ((0,
                    helper_1.putContent)(this.slim.content, this.data.contentPosition, this.data.contentOpen) === 'above') {
                        this.moveContentAbove();
                    } else {
                        this.moveContentBelow();
                    }
                }
                if (!this.config.isMultiple) {
                    var selected = this.data.getSelected();
                    if (selected) {
                        var selectedId = selected.id;
                        var selectedOption = this.slim.list.querySelector('[data-id="' + selectedId + '"]');
                        if (selectedOption) {
                            (0,
                            helper_1.ensureElementInView)(this.slim.list, selectedOption);
                        }
                    }
                }
                setTimeout(function() {
                    _this.data.contentOpen = true;
                    if (_this.config.searchFocus) {
                        _this.slim.search.input.focus();
                    }
                    if (_this.afterOpen) {
                        _this.afterOpen();
                    }
                }, this.config.timeoutDelay);
            }
            ;
            SlimSelect.prototype.close = function() {
                var _this = this;
                if (!this.data.contentOpen) {
                    return;
                }
                if (this.beforeClose) {
                    this.beforeClose();
                }
                if (this.config.isMultiple && this.slim.multiSelected) {
                    this.slim.multiSelected.container.classList.remove(this.config.openAbove);
                    this.slim.multiSelected.container.classList.remove(this.config.openBelow);
                    this.slim.multiSelected.plus.classList.remove('ss-cross');
                } else if (this.slim.singleSelected) {
                    this.slim.singleSelected.container.classList.remove(this.config.openAbove);
                    this.slim.singleSelected.container.classList.remove(this.config.openBelow);
                    this.slim.singleSelected.arrowIcon.arrow.classList.add('arrow-down');
                    this.slim.singleSelected.arrowIcon.arrow.classList.remove('arrow-up');
                }
                this.slim.content.classList.remove(this.config.open);
                this.data.contentOpen = false;
                this.search('');
                setTimeout(function() {
                    _this.slim.content.removeAttribute('style');
                    _this.data.contentPosition = 'below';
                    if (_this.config.isMultiple && _this.slim.multiSelected) {
                        _this.slim.multiSelected.container.classList.remove(_this.config.openAbove);
                        _this.slim.multiSelected.container.classList.remove(_this.config.openBelow);
                    } else if (_this.slim.singleSelected) {
                        _this.slim.singleSelected.container.classList.remove(_this.config.openAbove);
                        _this.slim.singleSelected.container.classList.remove(_this.config.openBelow);
                    }
                    _this.slim.search.input.blur();
                    if (_this.afterClose) {
                        _this.afterClose();
                    }
                }, this.config.timeoutDelay);
            }
            ;
            SlimSelect.prototype.moveContentAbove = function() {
                var selectHeight = 0;
                if (this.config.isMultiple && this.slim.multiSelected) {
                    selectHeight = this.slim.multiSelected.container.offsetHeight;
                } else if (this.slim.singleSelected) {
                    selectHeight = this.slim.singleSelected.container.offsetHeight;
                }
                var contentHeight = this.slim.content.offsetHeight;
                var height = selectHeight + contentHeight - 1;
                this.slim.content.style.margin = '-' + height + 'px 0 0 0';
                this.slim.content.style.height = (height - selectHeight + 1) + 'px';
                this.slim.content.style.transformOrigin = 'center bottom';
                this.data.contentPosition = 'above';
                if (this.config.isMultiple && this.slim.multiSelected) {
                    this.slim.multiSelected.container.classList.remove(this.config.openBelow);
                    this.slim.multiSelected.container.classList.add(this.config.openAbove);
                } else if (this.slim.singleSelected) {
                    this.slim.singleSelected.container.classList.remove(this.config.openBelow);
                    this.slim.singleSelected.container.classList.add(this.config.openAbove);
                }
            }
            ;
            SlimSelect.prototype.moveContentBelow = function() {
                this.slim.content.style.margin = '-' + 1 + 'px 0 0 0';
                this.slim.content.style.transformOrigin = 'center top';
                this.data.contentPosition = 'below';
                if (this.config.isMultiple && this.slim.multiSelected) {
                    this.slim.multiSelected.container.classList.remove(this.config.openAbove);
                    this.slim.multiSelected.container.classList.add(this.config.openBelow);
                } else if (this.slim.singleSelected) {
                    this.slim.singleSelected.container.classList.remove(this.config.openAbove);
                    this.slim.singleSelected.container.classList.add(this.config.openBelow);
                }
            }
            ;
            SlimSelect.prototype.enable = function() {
                this.config.isEnabled = true;
                if (this.config.isMultiple && this.slim.multiSelected) {
                    this.slim.multiSelected.container.classList.remove(this.config.disabled);
                } else if (this.slim.singleSelected) {
                    this.slim.singleSelected.container.classList.remove(this.config.disabled);
                }
                this.select.triggerMutationObserver = false;
                this.select.element.disabled = false;
                this.slim.search.input.disabled = false;
                this.select.triggerMutationObserver = true;
            }
            ;
            SlimSelect.prototype.disable = function() {
                this.config.isEnabled = false;
                if (this.config.isMultiple && this.slim.multiSelected) {
                    this.slim.multiSelected.container.classList.add(this.config.disabled);
                } else if (this.slim.singleSelected) {
                    this.slim.singleSelected.container.classList.add(this.config.disabled);
                }
                this.select.triggerMutationObserver = false;
                this.select.element.disabled = true;
                this.slim.search.input.disabled = true;
                this.select.triggerMutationObserver = true;
            }
            ;
            SlimSelect.prototype.search = function(value) {
                if (this.data.searchValue === value) {
                    return;
                }
                this.slim.search.input.value = value;
                if (this.config.isAjax) {
                    var master_1 = this;
                    this.config.isSearching = true;
                    this.render();
                    if (this.ajax) {
                        this.ajax(value, function(info) {
                            master_1.config.isSearching = false;
                            if (Array.isArray(info)) {
                                info.unshift({
                                    text: '',
                                    placeholder: true
                                });
                                master_1.setData(info);
                                master_1.data.search(value);
                                master_1.render();
                            } else if (typeof info === 'string') {
                                master_1.slim.options(info);
                            } else {
                                master_1.render();
                            }
                        });
                    }
                } else {
                    this.data.search(value);
                    this.render();
                }
            }
            ;
            SlimSelect.prototype.setSearchText = function(text) {
                this.config.searchText = text;
            }
            ;
            SlimSelect.prototype.render = function() {
                if (this.config.isMultiple) {
                    this.slim.values();
                } else {
                    this.slim.placeholder();
                    this.slim.deselect();
                }
                this.slim.options();
            }
            ;
            SlimSelect.prototype.destroy = function(id) {
                if (id === void 0) {
                    id = null;
                }
                var slim = (id ? document.querySelector('.' + id + '.ss-main') : this.slim.container);
                var select = (id ? document.querySelector("[data-ssid=".concat(id, "]")) : this.select.element);
                if (!slim || !select) {
                    return;
                }
                document.removeEventListener('click', this.documentClick);
                if (this.config.showContent === 'auto') {
                    window.removeEventListener('scroll', this.windowScroll, false);
                }
                select.style.display = '';
                delete select.dataset.ssid;
                var el = select;
                el.slim = null;
                if (slim.parentElement) {
                    slim.parentElement.removeChild(slim);
                }
                if (this.config.addToBody) {
                    var slimContent = (id ? document.querySelector('.' + id + '.ss-content') : this.slim.content);
                    if (!slimContent) {
                        return;
                    }
                    document.body.removeChild(slimContent);
                }
            }
            ;
            return SlimSelect;
        }());
        exports["default"] = SlimSelect;

        /***/
    }
    ), /* 3 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        exports.__esModule = true;
        exports.Config = void 0;
        var Config = (function() {
            function Config(info) {
                this.id = '';
                this.isMultiple = false;
                this.isAjax = false;
                this.isSearching = false;
                this.showSearch = true;
                this.searchFocus = true;
                this.searchHighlight = false;
                this.closeOnSelect = true;
                this.showContent = 'auto';
                this.searchPlaceholder = 'Search';
                this.searchText = 'No Results';
                this.searchingText = 'Searching...';
                this.placeholderText = 'Select Value';
                this.allowDeselect = false;
                this.allowDeselectOption = false;
                this.hideSelectedOption = false;
                this.deselectLabel = 'x';
                this.isEnabled = true;
                this.valuesUseText = false;
                this.showOptionTooltips = false;
                this.selectByGroup = false;
                this.limit = 0;
                this.timeoutDelay = 200;
                this.addToBody = false;
                this.main = 'ss-main';
                this.singleSelected = 'ss-single-selected';
                this.arrow = 'ss-arrow';
                this.multiSelected = 'ss-multi-selected';
                this.add = 'ss-add';
                this.plus = 'ss-plus';
                this.values = 'ss-values';
                this.value = 'ss-value';
                this.valueText = 'ss-value-text';
                this.valueDelete = 'ss-value-delete';
                this.content = 'ss-content';
                this.open = 'ss-open';
                this.openAbove = 'ss-open-above';
                this.openBelow = 'ss-open-below';
                this.search = 'ss-search';
                this.searchHighlighter = 'ss-search-highlight';
                this.addable = 'ss-addable';
                this.list = 'ss-list';
                this.optgroup = 'ss-optgroup';
                this.optgroupLabel = 'ss-optgroup-label';
                this.optgroupLabelSelectable = 'ss-optgroup-label-selectable';
                this.option = 'ss-option';
                this.optionSelected = 'ss-option-selected';
                this.highlighted = 'ss-highlighted';
                this.disabled = 'ss-disabled';
                this.hide = 'ss-hide';
                this.id = 'ss-' + Math.floor(Math.random() * 100000);
                this.style = info.select.style.cssText;
                this["class"] = info.select.className.split(' ');
                this.isMultiple = info.select.multiple;
                this.isAjax = info.isAjax;
                this.showSearch = (info.showSearch === false ? false : true);
                this.searchFocus = (info.searchFocus === false ? false : true);
                this.searchHighlight = (info.searchHighlight === true ? true : false);
                this.closeOnSelect = (info.closeOnSelect === false ? false : true);
                if (info.showContent) {
                    this.showContent = info.showContent;
                }
                this.isEnabled = (info.isEnabled === false ? false : true);
                if (info.searchPlaceholder) {
                    this.searchPlaceholder = info.searchPlaceholder;
                }
                if (info.searchText) {
                    this.searchText = info.searchText;
                }
                if (info.searchingText) {
                    this.searchingText = info.searchingText;
                }
                if (info.placeholderText) {
                    this.placeholderText = info.placeholderText;
                }
                this.allowDeselect = (info.allowDeselect === true ? true : false);
                this.allowDeselectOption = (info.allowDeselectOption === true ? true : false);
                this.hideSelectedOption = (info.hideSelectedOption === true ? true : false);
                if (info.deselectLabel) {
                    this.deselectLabel = info.deselectLabel;
                }
                if (info.valuesUseText) {
                    this.valuesUseText = info.valuesUseText;
                }
                if (info.showOptionTooltips) {
                    this.showOptionTooltips = info.showOptionTooltips;
                }
                if (info.selectByGroup) {
                    this.selectByGroup = info.selectByGroup;
                }
                if (info.limit) {
                    this.limit = info.limit;
                }
                if (info.searchFilter) {
                    this.searchFilter = info.searchFilter;
                }
                if (info.timeoutDelay != null) {
                    this.timeoutDelay = info.timeoutDelay;
                }
                this.addToBody = (info.addToBody === true ? true : false);
            }
            Config.prototype.searchFilter = function(opt, search) {
                return opt.text.toLowerCase().indexOf(search.toLowerCase()) !== -1;
            }
            ;
            return Config;
        }());
        exports.Config = Config;

        /***/
    }
    ), /* 4 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        exports.__esModule = true;
        exports.Select = void 0;
        var helper_1 = __webpack_require__(0);
        var Select = (function() {
            function Select(info) {
                this.triggerMutationObserver = true;
                this.element = info.select;
                this.main = info.main;
                if (this.element.disabled) {
                    this.main.config.isEnabled = false;
                }
                this.addAttributes();
                this.addEventListeners();
                this.mutationObserver = null;
                this.addMutationObserver();
                var el = this.element;
                el.slim = info.main;
            }
            Select.prototype.setValue = function() {
                if (!this.main.data.getSelected()) {
                    return;
                }
                if (this.main.config.isMultiple) {
                    var selected = this.main.data.getSelected();
                    var options = this.element.options;
                    for (var _i = 0, options_1 = options; _i < options_1.length; _i++) {
                        var o = options_1[_i];
                        o.selected = false;
                        for (var _a = 0, selected_1 = selected; _a < selected_1.length; _a++) {
                            var s = selected_1[_a];
                            if (s.value === o.value) {
                                o.selected = true;
                            }
                        }
                    }
                } else {
                    var selected = this.main.data.getSelected();
                    this.element.value = (selected ? selected.value : '');
                }
                this.main.data.isOnChangeEnabled = false;
                this.element.dispatchEvent(new CustomEvent('change',{
                    bubbles: true
                }));
                this.main.data.isOnChangeEnabled = true;
            }
            ;
            Select.prototype.addAttributes = function() {
                this.element.tabIndex = -1;
                this.element.style.display = 'none';
                this.element.dataset.ssid = this.main.config.id;
                this.element.setAttribute('aria-hidden', 'true');
            }
            ;
            Select.prototype.addEventListeners = function() {
                var _this = this;
                this.element.addEventListener('change', function(e) {
                    _this.main.data.setSelectedFromSelect();
                    _this.main.render();
                });
            }
            ;
            Select.prototype.addMutationObserver = function() {
                var _this = this;
                if (this.main.config.isAjax) {
                    return;
                }
                this.mutationObserver = new MutationObserver(function(mutations) {
                    if (!_this.triggerMutationObserver) {
                        return;
                    }
                    _this.main.data.parseSelectData();
                    _this.main.data.setSelectedFromSelect();
                    _this.main.render();
                    mutations.forEach(function(mutation) {
                        if (mutation.attributeName === 'class') {
                            _this.main.slim.updateContainerDivClass(_this.main.slim.container);
                        }
                    });
                }
                );
                this.observeMutationObserver();
            }
            ;
            Select.prototype.observeMutationObserver = function() {
                if (!this.mutationObserver) {
                    return;
                }
                this.mutationObserver.observe(this.element, {
                    attributes: true,
                    childList: true,
                    characterData: true
                });
            }
            ;
            Select.prototype.disconnectMutationObserver = function() {
                if (this.mutationObserver) {
                    this.mutationObserver.disconnect();
                }
            }
            ;
            Select.prototype.create = function(data) {
                this.element.innerHTML = '';
                for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {
                    var d = data_1[_i];
                    if (d.hasOwnProperty('options')) {
                        var optgroupObject = d;
                        var optgroupEl = document.createElement('optgroup');
                        optgroupEl.label = optgroupObject.label;
                        if (optgroupObject.options) {
                            for (var _a = 0, _b = optgroupObject.options; _a < _b.length; _a++) {
                                var oo = _b[_a];
                                optgroupEl.appendChild(this.createOption(oo));
                            }
                        }
                        this.element.appendChild(optgroupEl);
                    } else {
                        this.element.appendChild(this.createOption(d));
                    }
                }
            }
            ;
            Select.prototype.createOption = function(info) {
                var optionEl = document.createElement('option');
                optionEl.value = info.value !== '' ? info.value : info.text;
                optionEl.innerHTML = info.innerHTML || info.text;
                if (info.selected) {
                    optionEl.selected = info.selected;
                }
                if (info.display === false) {
                    optionEl.style.display = 'none';
                }
                if (info.disabled) {
                    optionEl.disabled = true;
                }
                if (info.placeholder) {
                    optionEl.setAttribute('data-placeholder', 'true');
                }
                if (info.mandatory) {
                    optionEl.setAttribute('data-mandatory', 'true');
                }
                if (info["class"]) {
                    info["class"].split(' ').forEach(function(optionClass) {
                        optionEl.classList.add(optionClass);
                    });
                }
                if (info.data && typeof info.data === 'object') {
                    Object.keys(info.data).forEach(function(key) {
                        optionEl.setAttribute('data-' + (0,
                        helper_1.kebabCase)(key), info.data[key]);
                    });
                }
                return optionEl;
            }
            ;
            return Select;
        }());
        exports.Select = Select;

        /***/
    }
    ), /* 5 */
    /***/
    (function(module, exports, __webpack_require__) {

        "use strict";

        exports.__esModule = true;
        exports.Slim = void 0;
        var helper_1 = __webpack_require__(0);
        var data_1 = __webpack_require__(1);
        var Slim = (function() {
            function Slim(info) {
                this.main = info.main;
                this.container = this.containerDiv();
                this.content = this.contentDiv();
                this.search = this.searchDiv();
                this.list = this.listDiv();
                this.options();
                this.singleSelected = null;
                this.multiSelected = null;
                if (this.main.config.isMultiple) {
                    this.multiSelected = this.multiSelectedDiv();
                    if (this.multiSelected) {
                        this.container.appendChild(this.multiSelected.container);
                    }
                } else {
                    this.singleSelected = this.singleSelectedDiv();
                    this.container.appendChild(this.singleSelected.container);
                }
                if (this.main.config.addToBody) {
                    this.content.classList.add(this.main.config.id);
                    document.body.appendChild(this.content);
                } else {
                    this.container.appendChild(this.content);
                }
                this.content.appendChild(this.search.container);
                this.content.appendChild(this.list);
            }
            Slim.prototype.containerDiv = function() {
                var container = document.createElement('div');
                container.style.cssText = this.main.config.style;
                this.updateContainerDivClass(container);
                return container;
            }
            ;
            Slim.prototype.updateContainerDivClass = function(container) {
                this.main.config["class"] = this.main.select.element.className.split(' ');
                container.className = '';
                container.classList.add(this.main.config.id);
                container.classList.add(this.main.config.main);
                for (var _i = 0, _a = this.main.config["class"]; _i < _a.length; _i++) {
                    var c = _a[_i];
                    if (c.trim() !== '') {
                        container.classList.add(c);
                    }
                }
            }
            ;
            Slim.prototype.singleSelectedDiv = function() {
                var _this = this;
                var container = document.createElement('div');
                container.classList.add(this.main.config.singleSelected);
                var placeholder = document.createElement('span');
                placeholder.classList.add('placeholder');
                container.appendChild(placeholder);
                var deselect = document.createElement('span');
                deselect.innerHTML = this.main.config.deselectLabel;
                deselect.classList.add('ss-deselect');
                deselect.onclick = function(e) {
                    e.stopPropagation();
                    if (!_this.main.config.isEnabled) {
                        return;
                    }
                    _this.main.set('');
                }
                ;
                container.appendChild(deselect);
                var arrowContainer = document.createElement('span');
                arrowContainer.classList.add(this.main.config.arrow);
                var arrowIcon = document.createElement('span');
                arrowIcon.classList.add('arrow-down');
                arrowContainer.appendChild(arrowIcon);
                container.appendChild(arrowContainer);
                container.onclick = function() {
                    if (!_this.main.config.isEnabled) {
                        return;
                    }
                    _this.main.data.contentOpen ? _this.main.close() : _this.main.open();
                }
                ;
                return {
                    container: container,
                    placeholder: placeholder,
                    deselect: deselect,
                    arrowIcon: {
                        container: arrowContainer,
                        arrow: arrowIcon
                    }
                };
            }
            ;
            Slim.prototype.placeholder = function() {
                var selected = this.main.data.getSelected();
                if (selected === null || (selected && selected.placeholder)) {
                    var placeholder = document.createElement('span');
                    placeholder.classList.add(this.main.config.disabled);
                    placeholder.innerHTML = this.main.config.placeholderText;
                    if (this.singleSelected) {
                        this.singleSelected.placeholder.innerHTML = placeholder.outerHTML;
                    }
                } else {
                    var selectedValue = '';
                    if (selected) {
                        selectedValue = selected.innerHTML && this.main.config.valuesUseText !== true ? selected.innerHTML : selected.text;
                    }
                    if (this.singleSelected) {
                        this.singleSelected.placeholder.innerHTML = (selected ? selectedValue : '');
                    }
                }
            }
            ;
            Slim.prototype.deselect = function() {
                if (this.singleSelected) {
                    if (!this.main.config.allowDeselect) {
                        this.singleSelected.deselect.classList.add('ss-hide');
                        return;
                    }
                    if (this.main.selected() === '') {
                        this.singleSelected.deselect.classList.add('ss-hide');
                    } else {
                        this.singleSelected.deselect.classList.remove('ss-hide');
                    }
                }
            }
            ;
            Slim.prototype.multiSelectedDiv = function() {
                var _this = this;
                var container = document.createElement('div');
                container.classList.add(this.main.config.multiSelected);
                var values = document.createElement('div');
                values.classList.add(this.main.config.values);
                container.appendChild(values);
                var add = document.createElement('div');
                add.classList.add(this.main.config.add);
                var plus = document.createElement('span');
                plus.classList.add(this.main.config.plus);
                plus.onclick = function(e) {
                    if (_this.main.data.contentOpen) {
                        _this.main.close();
                        e.stopPropagation();
                    }
                }
                ;
                add.appendChild(plus);
                container.appendChild(add);
                container.onclick = function(e) {
                    if (!_this.main.config.isEnabled) {
                        return;
                    }
                    var target = e.target;
                    if (!target.classList.contains(_this.main.config.valueDelete)) {
                        _this.main.data.contentOpen ? _this.main.close() : _this.main.open();
                    }
                }
                ;
                return {
                    container: container,
                    values: values,
                    add: add,
                    plus: plus
                };
            }
            ;
            Slim.prototype.values = function() {
                if (!this.multiSelected) {
                    return;
                }
                var currentNodes = this.multiSelected.values.childNodes;
                var selected = this.main.data.getSelected();
                var exists;
                var nodesToRemove = [];
                for (var _i = 0, currentNodes_1 = currentNodes; _i < currentNodes_1.length; _i++) {
                    var c = currentNodes_1[_i];
                    exists = true;
                    for (var _a = 0, selected_1 = selected; _a < selected_1.length; _a++) {
                        var s = selected_1[_a];
                        if (String(s.id) === String(c.dataset.id)) {
                            exists = false;
                        }
                    }
                    if (exists) {
                        nodesToRemove.push(c);
                    }
                }
                for (var _b = 0, nodesToRemove_1 = nodesToRemove; _b < nodesToRemove_1.length; _b++) {
                    var n = nodesToRemove_1[_b];
                    n.classList.add('ss-out');
                    this.multiSelected.values.removeChild(n);
                }
                currentNodes = this.multiSelected.values.childNodes;
                for (var s = 0; s < selected.length; s++) {
                    exists = false;
                    for (var _c = 0, currentNodes_2 = currentNodes; _c < currentNodes_2.length; _c++) {
                        var c = currentNodes_2[_c];
                        if (String(selected[s].id) === String(c.dataset.id)) {
                            exists = true;
                        }
                    }
                    if (!exists) {
                        if (currentNodes.length === 0 || !HTMLElement.prototype.insertAdjacentElement) {
                            this.multiSelected.values.appendChild(this.valueDiv(selected[s]));
                        } else if (s === 0) {
                            this.multiSelected.values.insertBefore(this.valueDiv(selected[s]), currentNodes[s]);
                        } else {
                            currentNodes[s - 1].insertAdjacentElement('afterend', this.valueDiv(selected[s]));
                        }
                    }
                }
                if (selected.length === 0) {
                    var placeholder = document.createElement('span');
                    placeholder.classList.add(this.main.config.disabled);
                    //placeholder.innerHTML = this.main.config.placeholderText;
                    this.multiSelected.values.innerHTML = placeholder.outerHTML;
                }
            }
            ;
            Slim.prototype.valueDiv = function(optionObj) {
                var _this = this;
                var value = document.createElement('div');
                value.classList.add(this.main.config.value);
                value.dataset.id = optionObj.id;
                var text = document.createElement('span');
                text.classList.add(this.main.config.valueText);
                text.innerHTML = (optionObj.innerHTML && this.main.config.valuesUseText !== true ? optionObj.innerHTML : optionObj.text);
                value.appendChild(text);
                if (!optionObj.mandatory) {
                    var deleteSpan = document.createElement('span');
                    deleteSpan.innerHTML = this.main.config.deselectLabel;
                    deleteSpan.onclick = function(e) {
                        e.preventDefault();
                        e.stopPropagation();
                        var shouldUpdate = false;
                        if (!_this.main.beforeOnChange) {
                            shouldUpdate = true;
                        }
                        if (_this.main.beforeOnChange) {
                            var selected = _this.main.data.getSelected();
                            var currentValues = JSON.parse(JSON.stringify(selected));
                            for (var i = 0; i < currentValues.length; i++) {
                                if (currentValues[i].id === optionObj.id) {
                                    currentValues.splice(i);
                                }
                            }
                            var beforeOnchange = _this.main.beforeOnChange(currentValues);
                            if (beforeOnchange !== false) {
                                shouldUpdate = true;
                            }
                        }
                        if (shouldUpdate) {
                            _this.main.data.removeFromSelected(optionObj.id, 'id');
                            _this.main.render();
                            _this.main.select.setValue();
                            _this.main.data.onDataChange();
                        }
                    }
                    ;
                    value.appendChild(deleteSpan);
                }
                return value;
            }
            ;
            Slim.prototype.contentDiv = function() {
                var container = document.createElement('div');
                container.classList.add(this.main.config.content);
                return container;
            }
            ;
            Slim.prototype.searchDiv = function() {
                var _this = this;
                var container = document.createElement('div');
                var input = document.createElement('input');
                var addable = document.createElement('div');
                container.classList.add(this.main.config.search);
                var searchReturn = {
                    container: container,
                    input: input
                };
                if (!this.main.config.showSearch) {
                    container.classList.add(this.main.config.hide);
                    input.readOnly = true;
                }
                input.type = 'search';
                input.placeholder = this.main.config.searchPlaceholder;
                input.tabIndex = 0;
                input.setAttribute('aria-label', this.main.config.searchPlaceholder);
                input.setAttribute('autocapitalize', 'off');
                input.setAttribute('autocomplete', 'off');
                input.setAttribute('autocorrect', 'off');
                input.onclick = function(e) {
                    setTimeout(function() {
                        var target = e.target;
                        if (target.value === '') {
                            _this.main.search('');
                        }
                    }, 10);
                }
                ;
                input.onkeydown = function(e) {
                    if (e.key === 'ArrowUp') {
                        _this.main.open();
                        _this.highlightUp();
                        e.preventDefault();
                    } else if (e.key === 'ArrowDown') {
                        _this.main.open();
                        _this.highlightDown();
                        e.preventDefault();
                    } else if (e.key === 'Tab') {
                        if (!_this.main.data.contentOpen) {
                            setTimeout(function() {
                                _this.main.close();
                            }, _this.main.config.timeoutDelay);
                        } else {
                            _this.main.close();
                        }
                    } else if (e.key === 'Enter') {
                        e.preventDefault();
                    }
                }
                ;
                input.onkeyup = function(e) {
                    var target = e.target;
                    if (e.key === 'Enter') {
                        if (_this.main.addable && e.ctrlKey) {
                            addable.click();
                            e.preventDefault();
                            e.stopPropagation();
                            return;
                        }
                        var highlighted = _this.list.querySelector('.' + _this.main.config.highlighted);
                        if (highlighted) {
                            highlighted.click();
                        }
                    } else if (e.key === 'ArrowUp' || e.key === 'ArrowDown') {} else if (e.key === 'Escape') {
                        _this.main.close();
                    } else {
                        if (_this.main.config.showSearch && _this.main.data.contentOpen) {
                            _this.main.search(target.value);
                        } else {
                            input.value = '';
                        }
                    }
                    e.preventDefault();
                    e.stopPropagation();
                }
                ;
                input.onfocus = function() {
                    _this.main.open();
                }
                ;
                container.appendChild(input);
                if (this.main.addable) {
                    addable.classList.add(this.main.config.addable);
                    addable.innerHTML = '+';
                    addable.onclick = function(e) {
                        if (_this.main.addable) {
                            e.preventDefault();
                            e.stopPropagation();
                            var inputValue = _this.search.input.value;
                            if (inputValue.trim() === '') {
                                _this.search.input.focus();
                                return;
                            }
                            var addableValue = _this.main.addable(inputValue);
                            var addableValueStr_1 = '';
                            if (!addableValue) {
                                return;
                            }
                            if (typeof addableValue === 'object') {
                                var validValue = (0,
                                data_1.validateOption)(addableValue);
                                if (validValue) {
                                    _this.main.addData(addableValue);
                                    addableValueStr_1 = (addableValue.value ? addableValue.value : addableValue.text);
                                }
                            } else {
                                _this.main.addData(_this.main.data.newOption({
                                    text: addableValue,
                                    value: addableValue
                                }));
                                addableValueStr_1 = addableValue;
                            }
                            _this.main.search('');
                            setTimeout(function() {
                                _this.main.set(addableValueStr_1, 'value', false, false);
                            }, 100);
                            if (_this.main.config.closeOnSelect) {
                                setTimeout(function() {
                                    _this.main.close();
                                }, 100);
                            }
                        }
                    }
                    ;
                    container.appendChild(addable);
                    searchReturn.addable = addable;
                }
                return searchReturn;
            }
            ;
            Slim.prototype.highlightUp = function() {
                var highlighted = this.list.querySelector('.' + this.main.config.highlighted);
                var prev = null;
                if (highlighted) {
                    prev = highlighted.previousSibling;
                    while (prev !== null) {
                        if (prev.classList.contains(this.main.config.disabled)) {
                            prev = prev.previousSibling;
                            continue;
                        } else {
                            break;
                        }
                    }
                } else {
                    var allOptions = this.list.querySelectorAll('.' + this.main.config.option + ':not(.' + this.main.config.disabled + ')');
                    prev = allOptions[allOptions.length - 1];
                }
                if (prev && prev.classList.contains(this.main.config.optgroupLabel)) {
                    prev = null;
                }
                if (prev === null) {
                    var parent_1 = highlighted.parentNode;
                    if (parent_1.classList.contains(this.main.config.optgroup)) {
                        if (parent_1.previousSibling) {
                            var prevNodes = parent_1.previousSibling.querySelectorAll('.' + this.main.config.option + ':not(.' + this.main.config.disabled + ')');
                            if (prevNodes.length) {
                                prev = prevNodes[prevNodes.length - 1];
                            }
                        }
                    }
                }
                if (prev) {
                    if (highlighted) {
                        highlighted.classList.remove(this.main.config.highlighted);
                    }
                    prev.classList.add(this.main.config.highlighted);
                    (0,
                    helper_1.ensureElementInView)(this.list, prev);
                }
            }
            ;
            Slim.prototype.highlightDown = function() {
                var highlighted = this.list.querySelector('.' + this.main.config.highlighted);
                var next = null;
                if (highlighted) {
                    next = highlighted.nextSibling;
                    while (next !== null) {
                        if (next.classList.contains(this.main.config.disabled)) {
                            next = next.nextSibling;
                            continue;
                        } else {
                            break;
                        }
                    }
                } else {
                    next = this.list.querySelector('.' + this.main.config.option + ':not(.' + this.main.config.disabled + ')');
                }
                if (next === null && highlighted !== null) {
                    var parent_2 = highlighted.parentNode;
                    if (parent_2.classList.contains(this.main.config.optgroup)) {
                        if (parent_2.nextSibling) {
                            var sibling = parent_2.nextSibling;
                            next = sibling.querySelector('.' + this.main.config.option + ':not(.' + this.main.config.disabled + ')');
                        }
                    }
                }
                if (next) {
                    if (highlighted) {
                        highlighted.classList.remove(this.main.config.highlighted);
                    }
                    next.classList.add(this.main.config.highlighted);
                    (0,
                    helper_1.ensureElementInView)(this.list, next);
                }
            }
            ;
            Slim.prototype.listDiv = function() {
                var list = document.createElement('div');
                list.classList.add(this.main.config.list);
                list.setAttribute('role', 'listbox');
                return list;
            }
            ;
            Slim.prototype.options = function(content) {
                if (content === void 0) {
                    content = '';
                }
                var data = this.main.data.filtered || this.main.data.data;
                this.list.innerHTML = '';
                if (content !== '') {
                    var searching = document.createElement('div');
                    searching.classList.add(this.main.config.option);
                    searching.classList.add(this.main.config.disabled);
                    searching.innerHTML = content;
                    this.list.appendChild(searching);
                    return;
                }
                if (this.main.config.isAjax && this.main.config.isSearching) {
                    var searching = document.createElement('div');
                    searching.classList.add(this.main.config.option);
                    searching.classList.add(this.main.config.disabled);
                    searching.innerHTML = this.main.config.searchingText;
                    this.list.appendChild(searching);
                    return;
                }
                if (data.length === 0) {
                    var noResults = document.createElement('div');
                    noResults.classList.add(this.main.config.option);
                    noResults.classList.add(this.main.config.disabled);
                    noResults.innerHTML = this.main.config.searchText;
                    this.list.appendChild(noResults);
                    return;
                }
                var _loop_1 = function(d) {
                    if (d.hasOwnProperty('label')) {
                        var item = d;
                        var optgroupEl_1 = document.createElement('div');
                        optgroupEl_1.classList.add(this_1.main.config.optgroup);
                        var optgroupLabel = document.createElement('div');
                        optgroupLabel.classList.add(this_1.main.config.optgroupLabel);
                        if (this_1.main.config.selectByGroup && this_1.main.config.isMultiple) {
                            optgroupLabel.classList.add(this_1.main.config.optgroupLabelSelectable);
                        }
                        optgroupLabel.innerHTML = item.label;
                        optgroupEl_1.appendChild(optgroupLabel);
                        var options = item.options;
                        if (options) {
                            for (var _a = 0, options_1 = options; _a < options_1.length; _a++) {
                                var o = options_1[_a];
                                optgroupEl_1.appendChild(this_1.option(o));
                            }
                            if (this_1.main.config.selectByGroup && this_1.main.config.isMultiple) {
                                var master_1 = this_1;
                                optgroupLabel.addEventListener('click', function(e) {
                                    e.preventDefault();
                                    e.stopPropagation();
                                    for (var _i = 0, _a = optgroupEl_1.children; _i < _a.length; _i++) {
                                        var childEl = _a[_i];
                                        if (childEl.className.indexOf(master_1.main.config.option) !== -1) {
                                            childEl.click();
                                        }
                                    }
                                });
                            }
                        }
                        this_1.list.appendChild(optgroupEl_1);
                    } else {
                        this_1.list.appendChild(this_1.option(d));
                    }
                };
                var this_1 = this;
                for (var _i = 0, data_2 = data; _i < data_2.length; _i++) {
                    var d = data_2[_i];
                    _loop_1(d);
                }
            }
            ;
            Slim.prototype.option = function(data) {
                if (data.placeholder) {
                    var placeholder = document.createElement('div');
                    placeholder.classList.add(this.main.config.option);
                    placeholder.classList.add(this.main.config.hide);
                    return placeholder;
                }
                var optionEl = document.createElement('div');
                optionEl.classList.add(this.main.config.option);
                optionEl.setAttribute('role', 'option');
                if (data["class"]) {
                    data["class"].split(' ').forEach(function(dataClass) {
                        optionEl.classList.add(dataClass);
                    });
                }
                if (data.style) {
                    optionEl.style.cssText = data.style;
                }
                var selected = this.main.data.getSelected();
                optionEl.dataset.id = data.id;
                if (this.main.config.searchHighlight && this.main.slim && data.innerHTML && this.main.slim.search.input.value.trim() !== '') {
                    optionEl.innerHTML = (0,
                    helper_1.highlight)(data.innerHTML, this.main.slim.search.input.value, this.main.config.searchHighlighter);
                } else if (data.innerHTML) {
                    optionEl.innerHTML = data.innerHTML;
                }
                if (this.main.config.showOptionTooltips && optionEl.textContent) {
                    optionEl.setAttribute('title', optionEl.textContent);
                }
                var master = this;
                optionEl.addEventListener('click', function(e) {
                    e.preventDefault();
                    e.stopPropagation();
                    var element = this;
                    var elementID = element.dataset.id;
                    if (data.selected === true && master.main.config.allowDeselectOption) {
                        var shouldUpdate = false;
                        if (!master.main.beforeOnChange || !master.main.config.isMultiple) {
                            shouldUpdate = true;
                        }
                        if (master.main.beforeOnChange && master.main.config.isMultiple) {
                            var selectedValues = master.main.data.getSelected();
                            var currentValues = JSON.parse(JSON.stringify(selectedValues));
                            for (var i = 0; i < currentValues.length; i++) {
                                if (currentValues[i].id === elementID) {
                                    currentValues.splice(i, 1);
                                }
                            }
                            var beforeOnchange = master.main.beforeOnChange(currentValues);
                            if (beforeOnchange !== false) {
                                shouldUpdate = true;
                            }
                        }
                        if (shouldUpdate) {
                            if (master.main.config.isMultiple) {
                                master.main.data.removeFromSelected(elementID, 'id');
                                master.main.render();
                                master.main.select.setValue();
                                master.main.data.onDataChange();
                            } else {
                                master.main.set('');
                            }
                        }
                    } else {
                        if (data.disabled || data.selected) {
                            return;
                        }
                        if (master.main.config.limit && Array.isArray(selected) && master.main.config.limit <= selected.length) {
                            return;
                        }
                        if (master.main.beforeOnChange) {
                            var value = void 0;
                            var objectInfo = JSON.parse(JSON.stringify(master.main.data.getObjectFromData(elementID)));
                            objectInfo.selected = true;
                            if (master.main.config.isMultiple) {
                                value = JSON.parse(JSON.stringify(selected));
                                value.push(objectInfo);
                            } else {
                                value = JSON.parse(JSON.stringify(objectInfo));
                            }
                            var beforeOnchange = master.main.beforeOnChange(value);
                            if (beforeOnchange !== false) {
                                master.main.set(elementID, 'id', master.main.config.closeOnSelect);
                            }
                        } else {
                            master.main.set(elementID, 'id', master.main.config.closeOnSelect);
                        }
                    }
                });
                var isSelected = selected && (0,
                helper_1.isValueInArrayOfObjects)(selected, 'id', data.id);
                if (data.disabled || isSelected) {
                    optionEl.onclick = null;
                    if (!master.main.config.allowDeselectOption) {
                        optionEl.classList.add(this.main.config.disabled);
                    }
                    if (master.main.config.hideSelectedOption) {
                        optionEl.classList.add(this.main.config.hide);
                    }
                }
                if (isSelected) {
                    optionEl.classList.add(this.main.config.optionSelected);
                } else {
                    optionEl.classList.remove(this.main.config.optionSelected);
                }
                return optionEl;
            }
            ;
            return Slim;
        }());
        exports.Slim = Slim;

        /***/
    }
    )/******/
    ])["default"];
});

/**
 * Swiper 8.2.6
 * Most modern mobile touch slider and framework with hardware accelerated transitions
 * https://swiperjs.com
 *
 * Copyright 2014-2022 Vladimir Kharlampidi
 *
 * Released under the MIT License
 *
 * Released on: June 29, 2022
 */

(function(global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self,
    global.Swiper = factory());
}
)(this, (function() {
    'use strict';

    /**
     * SSR Window 4.0.2
     * Better handling for window object in SSR environment
     * https://github.com/nolimits4web/ssr-window
     *
     * Copyright 2021, Vladimir Kharlampidi
     *
     * Licensed under MIT
     *
     * Released on: December 13, 2021
     */

    /* eslint-disable no-param-reassign */
    function isObject$1(obj) {
        return obj !== null && typeof obj === 'object' && 'constructor'in obj && obj.constructor === Object;
    }

    function extend$1(target, src) {
        if (target === void 0) {
            target = {};
        }

        if (src === void 0) {
            src = {};
        }

        Object.keys(src).forEach(key => {
            if (typeof target[key] === 'undefined')
                target[key] = src[key];
            else if (isObject$1(src[key]) && isObject$1(target[key]) && Object.keys(src[key]).length > 0) {
                extend$1(target[key], src[key]);
            }
        }
        );
    }

    const ssrDocument = {
        body: {},

        addEventListener() {},

        removeEventListener() {},

        activeElement: {
            blur() {},

            nodeName: ''
        },

        querySelector() {
            return null;
        },

        querySelectorAll() {
            return [];
        },

        getElementById() {
            return null;
        },

        createEvent() {
            return {
                initEvent() {}

            };
        },

        createElement() {
            return {
                children: [],
                childNodes: [],
                style: {},

                setAttribute() {},

                getElementsByTagName() {
                    return [];
                }

            };
        },

        createElementNS() {
            return {};
        },

        importNode() {
            return null;
        },

        location: {
            hash: '',
            host: '',
            hostname: '',
            href: '',
            origin: '',
            pathname: '',
            protocol: '',
            search: ''
        }
    };

    function getDocument() {
        const doc = typeof document !== 'undefined' ? document : {};
        extend$1(doc, ssrDocument);
        return doc;
    }

    const ssrWindow = {
        document: ssrDocument,
        navigator: {
            userAgent: ''
        },
        location: {
            hash: '',
            host: '',
            hostname: '',
            href: '',
            origin: '',
            pathname: '',
            protocol: '',
            search: ''
        },
        history: {
            replaceState() {},

            pushState() {},

            go() {},

            back() {}

        },
        CustomEvent: function CustomEvent() {
            return this;
        },

        addEventListener() {},

        removeEventListener() {},

        getComputedStyle() {
            return {
                getPropertyValue() {
                    return '';
                }

            };
        },

        Image() {},

        Date() {},

        screen: {},

        setTimeout() {},

        clearTimeout() {},

        matchMedia() {
            return {};
        },

        requestAnimationFrame(callback) {
            if (typeof setTimeout === 'undefined') {
                callback();
                return null;
            }

            return setTimeout(callback, 0);
        },

        cancelAnimationFrame(id) {
            if (typeof setTimeout === 'undefined') {
                return;
            }

            clearTimeout(id);
        }

    };

    function getWindow() {
        const win = typeof window !== 'undefined' ? window : {};
        extend$1(win, ssrWindow);
        return win;
    }

    /**
     * Dom7 4.0.4
     * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API
     * https://framework7.io/docs/dom7.html
     *
     * Copyright 2022, Vladimir Kharlampidi
     *
     * Licensed under MIT
     *
     * Released on: January 11, 2022
     */
    /* eslint-disable no-proto */

    function makeReactive(obj) {
        const proto = obj.__proto__;
        Object.defineProperty(obj, '__proto__', {
            get() {
                return proto;
            },

            set(value) {
                proto.__proto__ = value;
            }

        });
    }

    class Dom7 extends Array {
        constructor(items) {
            if (typeof items === 'number') {
                super(items);
            } else {
                super(...(items || []));
                makeReactive(this);
            }
        }

    }

    function arrayFlat(arr) {
        if (arr === void 0) {
            arr = [];
        }

        const res = [];
        arr.forEach(el => {
            if (Array.isArray(el)) {
                res.push(...arrayFlat(el));
            } else {
                res.push(el);
            }
        }
        );
        return res;
    }

    function arrayFilter(arr, callback) {
        return Array.prototype.filter.call(arr, callback);
    }

    function arrayUnique(arr) {
        const uniqueArray = [];

        for (let i = 0; i < arr.length; i += 1) {
            if (uniqueArray.indexOf(arr[i]) === -1)
                uniqueArray.push(arr[i]);
        }

        return uniqueArray;
    }

    function qsa(selector, context) {
        if (typeof selector !== 'string') {
            return [selector];
        }

        const a = [];
        const res = context.querySelectorAll(selector);

        for (let i = 0; i < res.length; i += 1) {
            a.push(res[i]);
        }

        return a;
    }

    function $(selector, context) {
        const window = getWindow();
        const document = getDocument();
        let arr = [];

        if (!context && selector instanceof Dom7) {
            return selector;
        }

        if (!selector) {
            return new Dom7(arr);
        }

        if (typeof selector === 'string') {
            const html = selector.trim();

            if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {
                let toCreate = 'div';
                if (html.indexOf('<li') === 0)
                    toCreate = 'ul';
                if (html.indexOf('<tr') === 0)
                    toCreate = 'tbody';
                if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0)
                    toCreate = 'tr';
                if (html.indexOf('<tbody') === 0)
                    toCreate = 'table';
                if (html.indexOf('<option') === 0)
                    toCreate = 'select';
                const tempParent = document.createElement(toCreate);
                tempParent.innerHTML = html;

                for (let i = 0; i < tempParent.childNodes.length; i += 1) {
                    arr.push(tempParent.childNodes[i]);
                }
            } else {
                arr = qsa(selector.trim(), context || document);
            }
            // arr = qsa(selector, document);

        } else if (selector.nodeType || selector === window || selector === document) {
            arr.push(selector);
        } else if (Array.isArray(selector)) {
            if (selector instanceof Dom7)
                return selector;
            arr = selector;
        }

        return new Dom7(arrayUnique(arr));
    }

    $.fn = Dom7.prototype;
    // eslint-disable-next-line

    function addClass() {
        for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
            classes[_key] = arguments[_key];
        }

        const classNames = arrayFlat(classes.map(c => c.split(' ')));
        this.forEach(el => {
            el.classList.add(...classNames);
        }
        );
        return this;
    }

    function removeClass() {
        for (var _len2 = arguments.length, classes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
            classes[_key2] = arguments[_key2];
        }

        const classNames = arrayFlat(classes.map(c => c.split(' ')));
        this.forEach(el => {
            el.classList.remove(...classNames);
        }
        );
        return this;
    }

    function toggleClass() {
        for (var _len3 = arguments.length, classes = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
            classes[_key3] = arguments[_key3];
        }

        const classNames = arrayFlat(classes.map(c => c.split(' ')));
        this.forEach(el => {
            classNames.forEach(className => {
                el.classList.toggle(className);
            }
            );
        }
        );
    }

    function hasClass() {
        for (var _len4 = arguments.length, classes = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
            classes[_key4] = arguments[_key4];
        }

        const classNames = arrayFlat(classes.map(c => c.split(' ')));
        return arrayFilter(this, el => {
            return classNames.filter(className => el.classList.contains(className)).length > 0;
        }
        ).length > 0;
    }

    function attr(attrs, value) {
        if (arguments.length === 1 && typeof attrs === 'string') {
            // Get attr
            if (this[0])
                return this[0].getAttribute(attrs);
            return undefined;
        }
        // Set attrs

        for (let i = 0; i < this.length; i += 1) {
            if (arguments.length === 2) {
                // String
                this[i].setAttribute(attrs, value);
            } else {
                // Object
                for (const attrName in attrs) {
                    this[i][attrName] = attrs[attrName];
                    this[i].setAttribute(attrName, attrs[attrName]);
                }
            }
        }

        return this;
    }

    function removeAttr(attr) {
        for (let i = 0; i < this.length; i += 1) {
            this[i].removeAttribute(attr);
        }

        return this;
    }

    function transform(transform) {
        for (let i = 0; i < this.length; i += 1) {
            this[i].style.transform = transform;
        }

        return this;
    }

    function transition$1(duration) {
        for (let i = 0; i < this.length; i += 1) {
            this[i].style.transitionDuration = typeof duration !== 'string' ? `${duration}ms` : duration;
        }

        return this;
    }

    function on() {
        for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
            args[_key5] = arguments[_key5];
        }

        let[eventType,targetSelector,listener,capture] = args;

        if (typeof args[1] === 'function') {
            [eventType,listener,capture] = args;
            targetSelector = undefined;
        }

        if (!capture)
            capture = false;

        function handleLiveEvent(e) {
            const target = e.target;
            if (!target)
                return;
            const eventData = e.target.dom7EventData || [];

            if (eventData.indexOf(e) < 0) {
                eventData.unshift(e);
            }

            if ($(target).is(targetSelector))
                listener.apply(target, eventData);
            else {
                const parents = $(target).parents();
                // eslint-disable-line

                for (let k = 0; k < parents.length; k += 1) {
                    if ($(parents[k]).is(targetSelector))
                        listener.apply(parents[k], eventData);
                }
            }
        }

        function handleEvent(e) {
            const eventData = e && e.target ? e.target.dom7EventData || [] : [];

            if (eventData.indexOf(e) < 0) {
                eventData.unshift(e);
            }

            listener.apply(this, eventData);
        }

        const events = eventType.split(' ');
        let j;

        for (let i = 0; i < this.length; i += 1) {
            const el = this[i];

            if (!targetSelector) {
                for (j = 0; j < events.length; j += 1) {
                    const event = events[j];
                    if (!el.dom7Listeners)
                        el.dom7Listeners = {};
                    if (!el.dom7Listeners[event])
                        el.dom7Listeners[event] = [];
                    el.dom7Listeners[event].push({
                        listener,
                        proxyListener: handleEvent
                    });
                    el.addEventListener(event, handleEvent, capture);
                }
            } else {
                // Live events
                for (j = 0; j < events.length; j += 1) {
                    const event = events[j];
                    if (!el.dom7LiveListeners)
                        el.dom7LiveListeners = {};
                    if (!el.dom7LiveListeners[event])
                        el.dom7LiveListeners[event] = [];
                    el.dom7LiveListeners[event].push({
                        listener,
                        proxyListener: handleLiveEvent
                    });
                    el.addEventListener(event, handleLiveEvent, capture);
                }
            }
        }

        return this;
    }

    function off() {
        for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
            args[_key6] = arguments[_key6];
        }

        let[eventType,targetSelector,listener,capture] = args;

        if (typeof args[1] === 'function') {
            [eventType,listener,capture] = args;
            targetSelector = undefined;
        }

        if (!capture)
            capture = false;
        const events = eventType.split(' ');

        for (let i = 0; i < events.length; i += 1) {
            const event = events[i];

            for (let j = 0; j < this.length; j += 1) {
                const el = this[j];
                let handlers;

                if (!targetSelector && el.dom7Listeners) {
                    handlers = el.dom7Listeners[event];
                } else if (targetSelector && el.dom7LiveListeners) {
                    handlers = el.dom7LiveListeners[event];
                }

                if (handlers && handlers.length) {
                    for (let k = handlers.length - 1; k >= 0; k -= 1) {
                        const handler = handlers[k];

                        if (listener && handler.listener === listener) {
                            el.removeEventListener(event, handler.proxyListener, capture);
                            handlers.splice(k, 1);
                        } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {
                            el.removeEventListener(event, handler.proxyListener, capture);
                            handlers.splice(k, 1);
                        } else if (!listener) {
                            el.removeEventListener(event, handler.proxyListener, capture);
                            handlers.splice(k, 1);
                        }
                    }
                }
            }
        }

        return this;
    }

    function trigger() {
        const window = getWindow();

        for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
            args[_key9] = arguments[_key9];
        }

        const events = args[0].split(' ');
        const eventData = args[1];

        for (let i = 0; i < events.length; i += 1) {
            const event = events[i];

            for (let j = 0; j < this.length; j += 1) {
                const el = this[j];

                if (window.CustomEvent) {
                    const evt = new window.CustomEvent(event,{
                        detail: eventData,
                        bubbles: true,
                        cancelable: true
                    });
                    el.dom7EventData = args.filter( (data, dataIndex) => dataIndex > 0);
                    el.dispatchEvent(evt);
                    el.dom7EventData = [];
                    delete el.dom7EventData;
                }
            }
        }

        return this;
    }

    function transitionEnd$1(callback) {
        const dom = this;

        function fireCallBack(e) {
            if (e.target !== this)
                return;
            callback.call(this, e);
            dom.off('transitionend', fireCallBack);
        }

        if (callback) {
            dom.on('transitionend', fireCallBack);
        }

        return this;
    }

    function outerWidth(includeMargins) {
        if (this.length > 0) {
            if (includeMargins) {
                const styles = this.styles();
                return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));
            }

            return this[0].offsetWidth;
        }

        return null;
    }

    function outerHeight(includeMargins) {
        if (this.length > 0) {
            if (includeMargins) {
                const styles = this.styles();
                return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));
            }

            return this[0].offsetHeight;
        }

        return null;
    }

    function offset() {
        if (this.length > 0) {
            const window = getWindow();
            const document = getDocument();
            const el = this[0];
            const box = el.getBoundingClientRect();
            const body = document.body;
            const clientTop = el.clientTop || body.clientTop || 0;
            const clientLeft = el.clientLeft || body.clientLeft || 0;
            const scrollTop = el === window ? window.scrollY : el.scrollTop;
            const scrollLeft = el === window ? window.scrollX : el.scrollLeft;
            return {
                top: box.top + scrollTop - clientTop,
                left: box.left + scrollLeft - clientLeft
            };
        }

        return null;
    }

    function styles() {
        const window = getWindow();
        if (this[0])
            return window.getComputedStyle(this[0], null);
        return {};
    }

    function css(props, value) {
        const window = getWindow();
        let i;

        if (arguments.length === 1) {
            if (typeof props === 'string') {
                // .css('width')
                if (this[0])
                    return window.getComputedStyle(this[0], null).getPropertyValue(props);
            } else {
                // .css({ width: '100px' })
                for (i = 0; i < this.length; i += 1) {
                    for (const prop in props) {
                        this[i].style[prop] = props[prop];
                    }
                }

                return this;
            }
        }

        if (arguments.length === 2 && typeof props === 'string') {
            // .css('width', '100px')
            for (i = 0; i < this.length; i += 1) {
                this[i].style[props] = value;
            }

            return this;
        }

        return this;
    }

    function each(callback) {
        if (!callback)
            return this;
        this.forEach( (el, index) => {
            callback.apply(el, [el, index]);
        }
        );
        return this;
    }

    function filter(callback) {
        const result = arrayFilter(this, callback);
        return $(result);
    }

    function html(html) {
        if (typeof html === 'undefined') {
            return this[0] ? this[0].innerHTML : null;
        }

        for (let i = 0; i < this.length; i += 1) {
            this[i].innerHTML = html;
        }

        return this;
    }

    function text(text) {
        if (typeof text === 'undefined') {
            return this[0] ? this[0].textContent.trim() : null;
        }

        for (let i = 0; i < this.length; i += 1) {
            this[i].textContent = text;
        }

        return this;
    }

    function is(selector) {
        const window = getWindow();
        const document = getDocument();
        const el = this[0];
        let compareWith;
        let i;
        if (!el || typeof selector === 'undefined')
            return false;

        if (typeof selector === 'string') {
            if (el.matches)
                return el.matches(selector);
            if (el.webkitMatchesSelector)
                return el.webkitMatchesSelector(selector);
            if (el.msMatchesSelector)
                return el.msMatchesSelector(selector);
            compareWith = $(selector);

            for (i = 0; i < compareWith.length; i += 1) {
                if (compareWith[i] === el)
                    return true;
            }

            return false;
        }

        if (selector === document) {
            return el === document;
        }

        if (selector === window) {
            return el === window;
        }

        if (selector.nodeType || selector instanceof Dom7) {
            compareWith = selector.nodeType ? [selector] : selector;

            for (i = 0; i < compareWith.length; i += 1) {
                if (compareWith[i] === el)
                    return true;
            }

            return false;
        }

        return false;
    }

    function index() {
        let child = this[0];
        let i;

        if (child) {
            i = 0;
            // eslint-disable-next-line

            while ((child = child.previousSibling) !== null) {
                if (child.nodeType === 1)
                    i += 1;
            }

            return i;
        }

        return undefined;
    }

    function eq(index) {
        if (typeof index === 'undefined')
            return this;
        const length = this.length;

        if (index > length - 1) {
            return $([]);
        }

        if (index < 0) {
            const returnIndex = length + index;
            if (returnIndex < 0)
                return $([]);
            return $([this[returnIndex]]);
        }

        return $([this[index]]);
    }

    function append() {
        let newChild;
        const document = getDocument();

        for (let k = 0; k < arguments.length; k += 1) {
            newChild = k < 0 || arguments.length <= k ? undefined : arguments[k];

            for (let i = 0; i < this.length; i += 1) {
                if (typeof newChild === 'string') {
                    const tempDiv = document.createElement('div');
                    tempDiv.innerHTML = newChild;

                    while (tempDiv.firstChild) {
                        this[i].appendChild(tempDiv.firstChild);
                    }
                } else if (newChild instanceof Dom7) {
                    for (let j = 0; j < newChild.length; j += 1) {
                        this[i].appendChild(newChild[j]);
                    }
                } else {
                    this[i].appendChild(newChild);
                }
            }
        }

        return this;
    }

    function prepend(newChild) {
        const document = getDocument();
        let i;
        let j;

        for (i = 0; i < this.length; i += 1) {
            if (typeof newChild === 'string') {
                const tempDiv = document.createElement('div');
                tempDiv.innerHTML = newChild;

                for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {
                    this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);
                }
            } else if (newChild instanceof Dom7) {
                for (j = 0; j < newChild.length; j += 1) {
                    this[i].insertBefore(newChild[j], this[i].childNodes[0]);
                }
            } else {
                this[i].insertBefore(newChild, this[i].childNodes[0]);
            }
        }

        return this;
    }

    function next(selector) {
        if (this.length > 0) {
            if (selector) {
                if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {
                    return $([this[0].nextElementSibling]);
                }

                return $([]);
            }

            if (this[0].nextElementSibling)
                return $([this[0].nextElementSibling]);
            return $([]);
        }

        return $([]);
    }

    function nextAll(selector) {
        const nextEls = [];
        let el = this[0];
        if (!el)
            return $([]);

        while (el.nextElementSibling) {
            const next = el.nextElementSibling;
            // eslint-disable-line

            if (selector) {
                if ($(next).is(selector))
                    nextEls.push(next);
            } else
                nextEls.push(next);

            el = next;
        }

        return $(nextEls);
    }

    function prev(selector) {
        if (this.length > 0) {
            const el = this[0];

            if (selector) {
                if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {
                    return $([el.previousElementSibling]);
                }

                return $([]);
            }

            if (el.previousElementSibling)
                return $([el.previousElementSibling]);
            return $([]);
        }

        return $([]);
    }

    function prevAll(selector) {
        const prevEls = [];
        let el = this[0];
        if (!el)
            return $([]);

        while (el.previousElementSibling) {
            const prev = el.previousElementSibling;
            // eslint-disable-line

            if (selector) {
                if ($(prev).is(selector))
                    prevEls.push(prev);
            } else
                prevEls.push(prev);

            el = prev;
        }

        return $(prevEls);
    }

    function parent(selector) {
        const parents = [];
        // eslint-disable-line

        for (let i = 0; i < this.length; i += 1) {
            if (this[i].parentNode !== null) {
                if (selector) {
                    if ($(this[i].parentNode).is(selector))
                        parents.push(this[i].parentNode);
                } else {
                    parents.push(this[i].parentNode);
                }
            }
        }

        return $(parents);
    }

    function parents(selector) {
        const parents = [];
        // eslint-disable-line

        for (let i = 0; i < this.length; i += 1) {
            let parent = this[i].parentNode;
            // eslint-disable-line

            while (parent) {
                if (selector) {
                    if ($(parent).is(selector))
                        parents.push(parent);
                } else {
                    parents.push(parent);
                }

                parent = parent.parentNode;
            }
        }

        return $(parents);
    }

    function closest(selector) {
        let closest = this;
        // eslint-disable-line

        if (typeof selector === 'undefined') {
            return $([]);
        }

        if (!closest.is(selector)) {
            closest = closest.parents(selector).eq(0);
        }

        return closest;
    }

    function find(selector) {
        const foundElements = [];

        for (let i = 0; i < this.length; i += 1) {
            const found = this[i].querySelectorAll(selector);

            for (let j = 0; j < found.length; j += 1) {
                foundElements.push(found[j]);
            }
        }

        return $(foundElements);
    }

    function children(selector) {
        const children = [];
        // eslint-disable-line

        for (let i = 0; i < this.length; i += 1) {
            const childNodes = this[i].children;

            for (let j = 0; j < childNodes.length; j += 1) {
                if (!selector || $(childNodes[j]).is(selector)) {
                    children.push(childNodes[j]);
                }
            }
        }

        return $(children);
    }

    function remove() {
        for (let i = 0; i < this.length; i += 1) {
            if (this[i].parentNode)
                this[i].parentNode.removeChild(this[i]);
        }

        return this;
    }

    const Methods = {
        addClass,
        removeClass,
        hasClass,
        toggleClass,
        attr,
        removeAttr,
        transform,
        transition: transition$1,
        on,
        off,
        trigger,
        transitionEnd: transitionEnd$1,
        outerWidth,
        outerHeight,
        styles,
        offset,
        css,
        each,
        html,
        text,
        is,
        index,
        eq,
        append,
        prepend,
        next,
        nextAll,
        prev,
        prevAll,
        parent,
        parents,
        closest,
        find,
        children,
        filter,
        remove
    };
    Object.keys(Methods).forEach(methodName => {
        Object.defineProperty($.fn, methodName, {
            value: Methods[methodName],
            writable: true
        });
    }
    );

    function deleteProps(obj) {
        const object = obj;
        Object.keys(object).forEach(key => {
            try {
                object[key] = null;
            } catch (e) {// no getter for object
            }

            try {
                delete object[key];
            } catch (e) {// something got wrong
            }
        }
        );
    }

    function nextTick(callback, delay) {
        if (delay === void 0) {
            delay = 0;
        }

        return setTimeout(callback, delay);
    }

    function now() {
        return Date.now();
    }

    function getComputedStyle$1(el) {
        const window = getWindow();
        let style;

        if (window.getComputedStyle) {
            style = window.getComputedStyle(el, null);
        }

        if (!style && el.currentStyle) {
            style = el.currentStyle;
        }

        if (!style) {
            style = el.style;
        }

        return style;
    }

    function getTranslate(el, axis) {
        if (axis === void 0) {
            axis = 'x';
        }

        const window = getWindow();
        let matrix;
        let curTransform;
        let transformMatrix;
        const curStyle = getComputedStyle$1(el);

        if (window.WebKitCSSMatrix) {
            curTransform = curStyle.transform || curStyle.webkitTransform;

            if (curTransform.split(',').length > 6) {
                curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');
            }
            // Some old versions of Webkit choke when 'none' is passed; pass
            // empty string instead in this case

            transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);
        } else {
            transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');
            matrix = transformMatrix.toString().split(',');
        }

        if (axis === 'x') {
            // Latest Chrome and webkits Fix
            if (window.WebKitCSSMatrix)
                curTransform = transformMatrix.m41;
                // Crazy IE10 Matrix
            else if (matrix.length === 16)
                curTransform = parseFloat(matrix[12]);
                // Normal Browsers
            else
                curTransform = parseFloat(matrix[4]);
        }

        if (axis === 'y') {
            // Latest Chrome and webkits Fix
            if (window.WebKitCSSMatrix)
                curTransform = transformMatrix.m42;
                // Crazy IE10 Matrix
            else if (matrix.length === 16)
                curTransform = parseFloat(matrix[13]);
                // Normal Browsers
            else
                curTransform = parseFloat(matrix[5]);
        }

        return curTransform || 0;
    }

    function isObject(o) {
        return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';
    }

    function isNode(node) {
        // eslint-disable-next-line
        if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {
            return node instanceof HTMLElement;
        }

        return node && (node.nodeType === 1 || node.nodeType === 11);
    }

    function extend() {
        const to = Object(arguments.length <= 0 ? undefined : arguments[0]);
        const noExtend = ['__proto__', 'constructor', 'prototype'];

        for (let i = 1; i < arguments.length; i += 1) {
            const nextSource = i < 0 || arguments.length <= i ? undefined : arguments[i];

            if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {
                const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);

                for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {
                    const nextKey = keysArray[nextIndex];
                    const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);

                    if (desc !== undefined && desc.enumerable) {
                        if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {
                            if (nextSource[nextKey].__swiper__) {
                                to[nextKey] = nextSource[nextKey];
                            } else {
                                extend(to[nextKey], nextSource[nextKey]);
                            }
                        } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {
                            to[nextKey] = {};

                            if (nextSource[nextKey].__swiper__) {
                                to[nextKey] = nextSource[nextKey];
                            } else {
                                extend(to[nextKey], nextSource[nextKey]);
                            }
                        } else {
                            to[nextKey] = nextSource[nextKey];
                        }
                    }
                }
            }
        }

        return to;
    }

    function setCSSProperty(el, varName, varValue) {
        el.style.setProperty(varName, varValue);
    }

    function animateCSSModeScroll(_ref) {
        let {swiper, targetPosition, side} = _ref;
        const window = getWindow();
        const startPosition = -swiper.translate;
        let startTime = null;
        let time;
        const duration = swiper.params.speed;
        swiper.wrapperEl.style.scrollSnapType = 'none';
        window.cancelAnimationFrame(swiper.cssModeFrameID);
        const dir = targetPosition > startPosition ? 'next' : 'prev';

        const isOutOfBound = (current, target) => {
            return dir === 'next' && current >= target || dir === 'prev' && current <= target;
        }
        ;

        const animate = () => {
            time = new Date().getTime();

            if (startTime === null) {
                startTime = time;
            }

            const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);
            const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;
            let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);

            if (isOutOfBound(currentPosition, targetPosition)) {
                currentPosition = targetPosition;
            }

            swiper.wrapperEl.scrollTo({
                [side]: currentPosition
            });

            if (isOutOfBound(currentPosition, targetPosition)) {
                swiper.wrapperEl.style.overflow = 'hidden';
                swiper.wrapperEl.style.scrollSnapType = '';
                setTimeout( () => {
                    swiper.wrapperEl.style.overflow = '';
                    swiper.wrapperEl.scrollTo({
                        [side]: currentPosition
                    });
                }
                );
                window.cancelAnimationFrame(swiper.cssModeFrameID);
                return;
            }

            swiper.cssModeFrameID = window.requestAnimationFrame(animate);
        }
        ;

        animate();
    }

    let support;

    function calcSupport() {
        const window = getWindow();
        const document = getDocument();
        return {
            smoothScroll: document.documentElement && 'scrollBehavior'in document.documentElement.style,
            touch: !!('ontouchstart'in window || window.DocumentTouch && document instanceof window.DocumentTouch),
            passiveListener: function checkPassiveListener() {
                let supportsPassive = false;

                try {
                    const opts = Object.defineProperty({}, 'passive', {
                        // eslint-disable-next-line
                        get() {
                            supportsPassive = true;
                        }

                    });
                    window.addEventListener('testPassiveListener', null, opts);
                } catch (e) {// No support
                }

                return supportsPassive;
            }(),
            gestures: function checkGestures() {
                return 'ongesturestart'in window;
            }()
        };
    }

    function getSupport() {
        if (!support) {
            support = calcSupport();
        }

        return support;
    }

    let deviceCached;

    function calcDevice(_temp) {
        let {userAgent} = _temp === void 0 ? {} : _temp;
        const support = getSupport();
        const window = getWindow();
        const platform = window.navigator.platform;
        const ua = userAgent || window.navigator.userAgent;
        const device = {
            ios: false,
            android: false
        };
        const screenWidth = window.screen.width;
        const screenHeight = window.screen.height;
        const android = ua.match(/(Android);?[\s\/]+([\d.]+)?/);
        // eslint-disable-line

        let ipad = ua.match(/(iPad).*OS\s([\d_]+)/);
        const ipod = ua.match(/(iPod)(.*OS\s([\d_]+))?/);
        const iphone = !ipad && ua.match(/(iPhone\sOS|iOS)\s([\d_]+)/);
        const windows = platform === 'Win32';
        let macos = platform === 'MacIntel';
        // iPadOs 13 fix

        const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];

        if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {
            ipad = ua.match(/(Version)\/([\d.]+)/);
            if (!ipad)
                ipad = [0, 1, '13_0_0'];
            macos = false;
        }
        // Android

        if (android && !windows) {
            device.os = 'android';
            device.android = true;
        }

        if (ipad || iphone || ipod) {
            device.os = 'ios';
            device.ios = true;
        }
        // Export object

        return device;
    }

    function getDevice(overrides) {
        if (overrides === void 0) {
            overrides = {};
        }

        if (!deviceCached) {
            deviceCached = calcDevice(overrides);
        }

        return deviceCached;
    }

    let browser;

    function calcBrowser() {
        const window = getWindow();

        function isSafari() {
            const ua = window.navigator.userAgent.toLowerCase();
            return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;
        }

        return {
            isSafari: isSafari(),
            isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)
        };
    }

    function getBrowser() {
        if (!browser) {
            browser = calcBrowser();
        }

        return browser;
    }

    function Resize(_ref) {
        let {swiper, on, emit} = _ref;
        const window = getWindow();
        let observer = null;
        let animationFrame = null;

        const resizeHandler = () => {
            if (!swiper || swiper.destroyed || !swiper.initialized)
                return;
            emit('beforeResize');
            emit('resize');
        }
        ;

        const createObserver = () => {
            if (!swiper || swiper.destroyed || !swiper.initialized)
                return;
            observer = new ResizeObserver(entries => {
                animationFrame = window.requestAnimationFrame( () => {
                    const {width, height} = swiper;
                    let newWidth = width;
                    let newHeight = height;
                    entries.forEach(_ref2 => {
                        let {contentBoxSize, contentRect, target} = _ref2;
                        if (target && target !== swiper.el)
                            return;
                        newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;
                        newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;
                    }
                    );

                    if (newWidth !== width || newHeight !== height) {
                        resizeHandler();
                    }
                }
                );
            }
            );
            observer.observe(swiper.el);
        }
        ;

        const removeObserver = () => {
            if (animationFrame) {
                window.cancelAnimationFrame(animationFrame);
            }

            if (observer && observer.unobserve && swiper.el) {
                observer.unobserve(swiper.el);
                observer = null;
            }
        }
        ;

        const orientationChangeHandler = () => {
            if (!swiper || swiper.destroyed || !swiper.initialized)
                return;
            emit('orientationchange');
        }
        ;

        on('init', () => {
            if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {
                createObserver();
                return;
            }

            window.addEventListener('resize', resizeHandler);
            window.addEventListener('orientationchange', orientationChangeHandler);
        }
        );
        on('destroy', () => {
            removeObserver();
            window.removeEventListener('resize', resizeHandler);
            window.removeEventListener('orientationchange', orientationChangeHandler);
        }
        );
    }

    function Observer(_ref) {
        let {swiper, extendParams, on, emit} = _ref;
        const observers = [];
        const window = getWindow();

        const attach = function(target, options) {
            if (options === void 0) {
                options = {};
            }

            const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;
            const observer = new ObserverFunc(mutations => {
                // The observerUpdate event should only be triggered
                // once despite the number of mutations.  Additional
                // triggers are redundant and are very costly
                if (mutations.length === 1) {
                    emit('observerUpdate', mutations[0]);
                    return;
                }

                const observerUpdate = function observerUpdate() {
                    emit('observerUpdate', mutations[0]);
                };

                if (window.requestAnimationFrame) {
                    window.requestAnimationFrame(observerUpdate);
                } else {
                    window.setTimeout(observerUpdate, 0);
                }
            }
            );
            observer.observe(target, {
                attributes: typeof options.attributes === 'undefined' ? true : options.attributes,
                childList: typeof options.childList === 'undefined' ? true : options.childList,
                characterData: typeof options.characterData === 'undefined' ? true : options.characterData
            });
            observers.push(observer);
        };

        const init = () => {
            if (!swiper.params.observer)
                return;

            if (swiper.params.observeParents) {
                const containerParents = swiper.$el.parents();

                for (let i = 0; i < containerParents.length; i += 1) {
                    attach(containerParents[i]);
                }
            }
            // Observe container

            attach(swiper.$el[0], {
                childList: swiper.params.observeSlideChildren
            });
            // Observe wrapper

            attach(swiper.$wrapperEl[0], {
                attributes: false
            });
        }
        ;

        const destroy = () => {
            observers.forEach(observer => {
                observer.disconnect();
            }
            );
            observers.splice(0, observers.length);
        }
        ;

        extendParams({
            observer: false,
            observeParents: false,
            observeSlideChildren: false
        });
        on('init', init);
        on('destroy', destroy);
    }

    /* eslint-disable no-underscore-dangle */
    var eventsEmitter = {
        on(events, handler, priority) {
            const self = this;
            if (!self.eventsListeners || self.destroyed)
                return self;
            if (typeof handler !== 'function')
                return self;
            const method = priority ? 'unshift' : 'push';
            events.split(' ').forEach(event => {
                if (!self.eventsListeners[event])
                    self.eventsListeners[event] = [];
                self.eventsListeners[event][method](handler);
            }
            );
            return self;
        },

        once(events, handler, priority) {
            const self = this;
            if (!self.eventsListeners || self.destroyed)
                return self;
            if (typeof handler !== 'function')
                return self;

            function onceHandler() {
                self.off(events, onceHandler);

                if (onceHandler.__emitterProxy) {
                    delete onceHandler.__emitterProxy;
                }

                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                    args[_key] = arguments[_key];
                }

                handler.apply(self, args);
            }

            onceHandler.__emitterProxy = handler;
            return self.on(events, onceHandler, priority);
        },

        onAny(handler, priority) {
            const self = this;
            if (!self.eventsListeners || self.destroyed)
                return self;
            if (typeof handler !== 'function')
                return self;
            const method = priority ? 'unshift' : 'push';

            if (self.eventsAnyListeners.indexOf(handler) < 0) {
                self.eventsAnyListeners[method](handler);
            }

            return self;
        },

        offAny(handler) {
            const self = this;
            if (!self.eventsListeners || self.destroyed)
                return self;
            if (!self.eventsAnyListeners)
                return self;
            const index = self.eventsAnyListeners.indexOf(handler);

            if (index >= 0) {
                self.eventsAnyListeners.splice(index, 1);
            }

            return self;
        },

        off(events, handler) {
            const self = this;
            if (!self.eventsListeners || self.destroyed)
                return self;
            if (!self.eventsListeners)
                return self;
            events.split(' ').forEach(event => {
                if (typeof handler === 'undefined') {
                    self.eventsListeners[event] = [];
                } else if (self.eventsListeners[event]) {
                    self.eventsListeners[event].forEach( (eventHandler, index) => {
                        if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {
                            self.eventsListeners[event].splice(index, 1);
                        }
                    }
                    );
                }
            }
            );
            return self;
        },

        emit() {
            const self = this;
            if (!self.eventsListeners || self.destroyed)
                return self;
            if (!self.eventsListeners)
                return self;
            let events;
            let data;
            let context;

            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                args[_key2] = arguments[_key2];
            }

            if (typeof args[0] === 'string' || Array.isArray(args[0])) {
                events = args[0];
                data = args.slice(1, args.length);
                context = self;
            } else {
                events = args[0].events;
                data = args[0].data;
                context = args[0].context || self;
            }

            data.unshift(context);
            const eventsArray = Array.isArray(events) ? events : events.split(' ');
            eventsArray.forEach(event => {
                if (self.eventsAnyListeners && self.eventsAnyListeners.length) {
                    self.eventsAnyListeners.forEach(eventHandler => {
                        eventHandler.apply(context, [event, ...data]);
                    }
                    );
                }

                if (self.eventsListeners && self.eventsListeners[event]) {
                    self.eventsListeners[event].forEach(eventHandler => {
                        eventHandler.apply(context, data);
                    }
                    );
                }
            }
            );
            return self;
        }

    };

    function updateSize() {
        const swiper = this;
        let width;
        let height;
        const $el = swiper.$el;

        if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {
            width = swiper.params.width;
        } else {
            width = $el[0].clientWidth;
        }

        if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {
            height = swiper.params.height;
        } else {
            height = $el[0].clientHeight;
        }

        if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {
            return;
        }
        // Subtract paddings

        width = width - parseInt($el.css('padding-left') || 0, 10) - parseInt($el.css('padding-right') || 0, 10);
        height = height - parseInt($el.css('padding-top') || 0, 10) - parseInt($el.css('padding-bottom') || 0, 10);
        if (Number.isNaN(width))
            width = 0;
        if (Number.isNaN(height))
            height = 0;
        Object.assign(swiper, {
            width,
            height,
            size: swiper.isHorizontal() ? width : height
        });
    }

    function updateSlides() {
        const swiper = this;

        function getDirectionLabel(property) {
            if (swiper.isHorizontal()) {
                return property;
            }
            // prettier-ignore

            return {
                'width': 'height',
                'margin-top': 'margin-left',
                'margin-bottom ': 'margin-right',
                'margin-left': 'margin-top',
                'margin-right': 'margin-bottom',
                'padding-left': 'padding-top',
                'padding-right': 'padding-bottom',
                'marginRight': 'marginBottom'
            }[property];
        }

        function getDirectionPropertyValue(node, label) {
            return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);
        }

        const params = swiper.params;
        const {$wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL} = swiper;
        const isVirtual = swiper.virtual && params.virtual.enabled;
        const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;
        const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);
        const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;
        let snapGrid = [];
        const slidesGrid = [];
        const slidesSizesGrid = [];
        let offsetBefore = params.slidesOffsetBefore;

        if (typeof offsetBefore === 'function') {
            offsetBefore = params.slidesOffsetBefore.call(swiper);
        }

        let offsetAfter = params.slidesOffsetAfter;

        if (typeof offsetAfter === 'function') {
            offsetAfter = params.slidesOffsetAfter.call(swiper);
        }

        const previousSnapGridLength = swiper.snapGrid.length;
        const previousSlidesGridLength = swiper.slidesGrid.length;
        let spaceBetween = params.spaceBetween;
        let slidePosition = -offsetBefore;
        let prevSlideSize = 0;
        let index = 0;

        if (typeof swiperSize === 'undefined') {
            return;
        }

        if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {
            spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;
        }

        swiper.virtualSize = -spaceBetween;
        // reset margins

        if (rtl)
            slides.css({
                marginLeft: '',
                marginBottom: '',
                marginTop: ''
            });
        else
            slides.css({
                marginRight: '',
                marginBottom: '',
                marginTop: ''
            });
        // reset cssMode offsets

        if (params.centeredSlides && params.cssMode) {
            setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', '');
            setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-after', '');
        }

        const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;

        if (gridEnabled) {
            swiper.grid.initSlides(slidesLength);
        }
        // Calc slides

        let slideSize;
        const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {
            return typeof params.breakpoints[key].slidesPerView !== 'undefined';
        }
        ).length > 0;

        for (let i = 0; i < slidesLength; i += 1) {
            slideSize = 0;
            const slide = slides.eq(i);

            if (gridEnabled) {
                swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);
            }

            if (slide.css('display') === 'none')
                continue;
            // eslint-disable-line

            if (params.slidesPerView === 'auto') {
                if (shouldResetSlideSize) {
                    slides[i].style[getDirectionLabel('width')] = ``;
                }

                const slideStyles = getComputedStyle(slide[0]);
                const currentTransform = slide[0].style.transform;
                const currentWebKitTransform = slide[0].style.webkitTransform;

                if (currentTransform) {
                    slide[0].style.transform = 'none';
                }

                if (currentWebKitTransform) {
                    slide[0].style.webkitTransform = 'none';
                }

                if (params.roundLengths) {
                    slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);
                } else {
                    // eslint-disable-next-line
                    const width = getDirectionPropertyValue(slideStyles, 'width');
                    const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');
                    const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');
                    const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');
                    const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');
                    const boxSizing = slideStyles.getPropertyValue('box-sizing');

                    if (boxSizing && boxSizing === 'border-box') {
                        slideSize = width + marginLeft + marginRight;
                    } else {
                        const {clientWidth, offsetWidth} = slide[0];
                        slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);
                    }
                }

                if (currentTransform) {
                    slide[0].style.transform = currentTransform;
                }

                if (currentWebKitTransform) {
                    slide[0].style.webkitTransform = currentWebKitTransform;
                }

                if (params.roundLengths)
                    slideSize = Math.floor(slideSize);
            } else {
                slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;
                if (params.roundLengths)
                    slideSize = Math.floor(slideSize);

                slideSize -= 10;

                if (slides[i]) {
                    slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;
                }
            }

            if (slides[i]) {
                slides[i].swiperSlideSize = slideSize;
            }
            slidesSizesGrid.push(slideSize);

            if (params.centeredSlides) {
                slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;
                if (prevSlideSize === 0 && i !== 0)
                    slidePosition = slidePosition - swiperSize / 2 - spaceBetween;
                if (i === 0)
                    slidePosition = slidePosition - swiperSize / 2 - spaceBetween;
                if (Math.abs(slidePosition) < 1 / 1000)
                    slidePosition = 0;
                if (params.roundLengths)
                    slidePosition = Math.floor(slidePosition);
                if (index % params.slidesPerGroup === 0)
                    snapGrid.push(slidePosition);
                slidesGrid.push(slidePosition);
            } else {
                if (params.roundLengths)
                    slidePosition = Math.floor(slidePosition);
                if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0)
                    snapGrid.push(slidePosition);
                slidesGrid.push(slidePosition);
                slidePosition = slidePosition + slideSize + spaceBetween;
            }

            swiper.virtualSize += slideSize + spaceBetween;
            prevSlideSize = slideSize;
            index += 1;
        }

        swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;

        if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {
            $wrapperEl.css({
                width: `${swiper.virtualSize + params.spaceBetween}px`
            });
        }

        if (params.setWrapperSize) {
            $wrapperEl.css({
                [getDirectionLabel('width')]: `${swiper.virtualSize + params.spaceBetween}px`
            });
        }

        if (gridEnabled) {
            swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);
        }
        // Remove last grid elements depending on width

        if (!params.centeredSlides) {
            const newSlidesGrid = [];

            for (let i = 0; i < snapGrid.length; i += 1) {
                let slidesGridItem = snapGrid[i];
                if (params.roundLengths)
                    slidesGridItem = Math.floor(slidesGridItem);

                if (snapGrid[i] <= swiper.virtualSize - swiperSize) {
                    newSlidesGrid.push(slidesGridItem);
                }
            }

            snapGrid = newSlidesGrid;

            if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {
                snapGrid.push(swiper.virtualSize - swiperSize);
            }
        }

        if (snapGrid.length === 0)
            snapGrid = [0];

        if (params.spaceBetween !== 0) {
            const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');
            slides.filter( (_, slideIndex) => {
                if (!params.cssMode)
                    return true;

                if (slideIndex === slides.length - 1) {
                    return false;
                }

                return true;
            }
            ).css({
                [key]: `${spaceBetween}px`
            });
        }

        if (params.centeredSlides && params.centeredSlidesBounds) {
            let allSlidesSize = 0;
            slidesSizesGrid.forEach(slideSizeValue => {
                allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);
            }
            );
            allSlidesSize -= params.spaceBetween;
            const maxSnap = allSlidesSize - swiperSize;
            snapGrid = snapGrid.map(snap => {
                if (snap < 0)
                    return -offsetBefore;
                if (snap > maxSnap)
                    return maxSnap + offsetAfter;
                return snap;
            }
            );
        }

        if (params.centerInsufficientSlides) {
            let allSlidesSize = 0;
            slidesSizesGrid.forEach(slideSizeValue => {
                allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);
            }
            );
            allSlidesSize -= params.spaceBetween;

            if (allSlidesSize < swiperSize) {
                const allSlidesOffset = (swiperSize - allSlidesSize) / 2;
                snapGrid.forEach( (snap, snapIndex) => {
                    snapGrid[snapIndex] = snap - allSlidesOffset;
                }
                );
                slidesGrid.forEach( (snap, snapIndex) => {
                    slidesGrid[snapIndex] = snap + allSlidesOffset;
                }
                );
            }
        }

        Object.assign(swiper, {
            slides,
            snapGrid,
            slidesGrid,
            slidesSizesGrid
        });

        if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {
            setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);
            setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);
            const addToSnapGrid = -swiper.snapGrid[0];
            const addToSlidesGrid = -swiper.slidesGrid[0];
            swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);
            swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);
        }

        if (slidesLength !== previousSlidesLength) {
            swiper.emit('slidesLengthChange');
        }

        if (snapGrid.length !== previousSnapGridLength) {
            if (swiper.params.watchOverflow)
                swiper.checkOverflow();
            swiper.emit('snapGridLengthChange');
        }

        if (slidesGrid.length !== previousSlidesGridLength) {
            swiper.emit('slidesGridLengthChange');
        }

        if (params.watchSlidesProgress) {
            swiper.updateSlidesOffset();
        }

        if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {
            const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;
            const hasClassBackfaceClassAdded = swiper.$el.hasClass(backFaceHiddenClass);

            if (slidesLength <= params.maxBackfaceHiddenSlides) {
                if (!hasClassBackfaceClassAdded)
                    swiper.$el.addClass(backFaceHiddenClass);
            } else if (hasClassBackfaceClassAdded) {
                swiper.$el.removeClass(backFaceHiddenClass);
            }
        }
    }

    function updateAutoHeight(speed) {
        const swiper = this;
        const activeSlides = [];
        const isVirtual = swiper.virtual && swiper.params.virtual.enabled;
        let newHeight = 0;
        let i;

        if (typeof speed === 'number') {
            swiper.setTransition(speed);
        } else if (speed === true) {
            swiper.setTransition(swiper.params.speed);
        }

        const getSlideByIndex = index => {
            if (isVirtual) {
                return swiper.slides.filter(el => parseInt(el.getAttribute('data-swiper-slide-index'), 10) === index)[0];
            }

            return swiper.slides.eq(index)[0];
        }
        ;
        // Find slides currently in view

        if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {
            if (swiper.params.centeredSlides) {
                (swiper.visibleSlides || $([])).each(slide => {
                    activeSlides.push(slide);
                }
                );
            } else {
                for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {
                    const index = swiper.activeIndex + i;
                    if (index > swiper.slides.length && !isVirtual)
                        break;
                    activeSlides.push(getSlideByIndex(index));
                }
            }
        } else {
            activeSlides.push(getSlideByIndex(swiper.activeIndex));
        }
        // Find new height from highest slide in view

        for (i = 0; i < activeSlides.length; i += 1) {
            if (typeof activeSlides[i] !== 'undefined') {
                const height = activeSlides[i].offsetHeight;
                newHeight = height > newHeight ? height : newHeight;
            }
        }
        // Update Height

        if (newHeight || newHeight === 0)
            swiper.$wrapperEl.css('height', `${newHeight}px`);
    }

    function updateSlidesOffset() {
        const swiper = this;
        const slides = swiper.slides;

        for (let i = 0; i < slides.length; i += 1) {
            slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;
        }
    }

    function updateSlidesProgress(translate) {
        if (translate === void 0) {
            translate = this && this.translate || 0;
        }

        const swiper = this;
        const params = swiper.params;
        const {slides, rtlTranslate: rtl, snapGrid} = swiper;
        if (slides.length === 0)
            return;
        if (typeof slides[0].swiperSlideOffset === 'undefined')
            swiper.updateSlidesOffset();
        let offsetCenter = -translate;
        if (rtl)
            offsetCenter = translate;
        // Visible Slides

        slides.removeClass(params.slideVisibleClass);
        swiper.visibleSlidesIndexes = [];
        swiper.visibleSlides = [];

        for (let i = 0; i < slides.length; i += 1) {
            const slide = slides[i];
            let slideOffset = slide.swiperSlideOffset;

            if (params.cssMode && params.centeredSlides) {
                slideOffset -= slides[0].swiperSlideOffset;
            }

            const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);
            const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);
            const slideBefore = -(offsetCenter - slideOffset);
            const slideAfter = slideBefore + swiper.slidesSizesGrid[i];
            const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;

            if (isVisible) {
                swiper.visibleSlides.push(slide);
                swiper.visibleSlidesIndexes.push(i);
                slides.eq(i).addClass(params.slideVisibleClass);
            }

            slide.progress = rtl ? -slideProgress : slideProgress;
            slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;
        }

        swiper.visibleSlides = $(swiper.visibleSlides);
    }

    function updateProgress(translate) {
        const swiper = this;

        if (typeof translate === 'undefined') {
            const multiplier = swiper.rtlTranslate ? -1 : 1;
            // eslint-disable-next-line

            translate = swiper && swiper.translate && swiper.translate * multiplier || 0;
        }

        const params = swiper.params;
        const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();
        let {progress, isBeginning, isEnd} = swiper;
        const wasBeginning = isBeginning;
        const wasEnd = isEnd;

        if (translatesDiff === 0) {
            progress = 0;
            isBeginning = true;
            isEnd = true;
        } else {
            progress = (translate - swiper.minTranslate()) / translatesDiff;
            isBeginning = progress <= 0;
            isEnd = progress >= 1;
        }

        Object.assign(swiper, {
            progress,
            isBeginning,
            isEnd
        });
        if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight)
            swiper.updateSlidesProgress(translate);

        if (isBeginning && !wasBeginning) {
            swiper.emit('reachBeginning toEdge');
        }

        if (isEnd && !wasEnd) {
            swiper.emit('reachEnd toEdge');
        }

        if (wasBeginning && !isBeginning || wasEnd && !isEnd) {
            swiper.emit('fromEdge');
        }

        swiper.emit('progress', progress);
    }

    function updateSlidesClasses() {
        const swiper = this;
        const {slides, params, $wrapperEl, activeIndex, realIndex} = swiper;
        const isVirtual = swiper.virtual && params.virtual.enabled;
        slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);
        let activeSlide;

        if (isVirtual) {
            activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index="${activeIndex}"]`);
        } else {
            activeSlide = slides.eq(activeIndex);
        }
        // Active classes

        activeSlide.addClass(params.slideActiveClass);

        if (params.loop) {
            // Duplicate to all looped slides
            if (activeSlide.hasClass(params.slideDuplicateClass)) {
                $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index="${realIndex}"]`).addClass(params.slideDuplicateActiveClass);
            } else {
                $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index="${realIndex}"]`).addClass(params.slideDuplicateActiveClass);
            }
        }
        // Next Slide

        let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);

        if (params.loop && nextSlide.length === 0) {
            nextSlide = slides.eq(0);
            nextSlide.addClass(params.slideNextClass);
        }
        // Prev Slide

        let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);

        if (params.loop && prevSlide.length === 0) {
            prevSlide = slides.eq(-1);
            prevSlide.addClass(params.slidePrevClass);
        }

        if (params.loop) {
            // Duplicate to all looped slides
            if (nextSlide.hasClass(params.slideDuplicateClass)) {
                $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index="${nextSlide.attr('data-swiper-slide-index')}"]`).addClass(params.slideDuplicateNextClass);
            } else {
                $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index="${nextSlide.attr('data-swiper-slide-index')}"]`).addClass(params.slideDuplicateNextClass);
            }

            if (prevSlide.hasClass(params.slideDuplicateClass)) {
                $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index="${prevSlide.attr('data-swiper-slide-index')}"]`).addClass(params.slideDuplicatePrevClass);
            } else {
                $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index="${prevSlide.attr('data-swiper-slide-index')}"]`).addClass(params.slideDuplicatePrevClass);
            }
        }

        swiper.emitSlidesClasses();
    }

    function updateActiveIndex(newActiveIndex) {
        const swiper = this;
        const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;
        const {slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex} = swiper;
        let activeIndex = newActiveIndex;
        let snapIndex;

        if (typeof activeIndex === 'undefined') {
            for (let i = 0; i < slidesGrid.length; i += 1) {
                if (typeof slidesGrid[i + 1] !== 'undefined') {
                    if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {
                        activeIndex = i;
                    } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {
                        activeIndex = i + 1;
                    }
                } else if (translate >= slidesGrid[i]) {
                    activeIndex = i;
                }
            }
            // Normalize slideIndex

            if (params.normalizeSlideIndex) {
                if (activeIndex < 0 || typeof activeIndex === 'undefined')
                    activeIndex = 0;
            }
        }

        if (snapGrid.indexOf(translate) >= 0) {
            snapIndex = snapGrid.indexOf(translate);
        } else {
            const skip = Math.min(params.slidesPerGroupSkip, activeIndex);
            snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);
        }

        if (snapIndex >= snapGrid.length)
            snapIndex = snapGrid.length - 1;

        if (activeIndex === previousIndex) {
            if (snapIndex !== previousSnapIndex) {
                swiper.snapIndex = snapIndex;
                swiper.emit('snapIndexChange');
            }

            return;
        }
        // Get real index

        const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);
        Object.assign(swiper, {
            snapIndex,
            realIndex,
            previousIndex,
            activeIndex
        });
        swiper.emit('activeIndexChange');
        swiper.emit('snapIndexChange');

        if (previousRealIndex !== realIndex) {
            swiper.emit('realIndexChange');
        }

        if (swiper.initialized || swiper.params.runCallbacksOnInit) {
            swiper.emit('slideChange');
        }
    }

    function updateClickedSlide(e) {
        const swiper = this;
        const params = swiper.params;
        const slide = $(e).closest(`.${params.slideClass}`)[0];
        let slideFound = false;
        let slideIndex;

        if (slide) {
            for (let i = 0; i < swiper.slides.length; i += 1) {
                if (swiper.slides[i] === slide) {
                    slideFound = true;
                    slideIndex = i;
                    break;
                }
            }
        }

        if (slide && slideFound) {
            swiper.clickedSlide = slide;

            if (swiper.virtual && swiper.params.virtual.enabled) {
                swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);
            } else {
                swiper.clickedIndex = slideIndex;
            }
        } else {
            swiper.clickedSlide = undefined;
            swiper.clickedIndex = undefined;
            return;
        }

        if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {
            swiper.slideToClickedSlide();
        }
    }

    var update = {
        updateSize,
        updateSlides,
        updateAutoHeight,
        updateSlidesOffset,
        updateSlidesProgress,
        updateProgress,
        updateSlidesClasses,
        updateActiveIndex,
        updateClickedSlide
    };

    function getSwiperTranslate(axis) {
        if (axis === void 0) {
            axis = this.isHorizontal() ? 'x' : 'y';
        }

        const swiper = this;
        const {params, rtlTranslate: rtl, translate, $wrapperEl} = swiper;

        if (params.virtualTranslate) {
            return rtl ? -translate : translate;
        }

        if (params.cssMode) {
            return translate;
        }

        let currentTranslate = getTranslate($wrapperEl[0], axis);
        if (rtl)
            currentTranslate = -currentTranslate;
        return currentTranslate || 0;
    }

    function setTranslate(translate, byController) {
        const swiper = this;
        const {rtlTranslate: rtl, params, $wrapperEl, wrapperEl, progress} = swiper;
        let x = 0;
        let y = 0;
        const z = 0;

        if (swiper.isHorizontal()) {
            x = rtl ? -translate : translate;
        } else {
            y = translate;
        }

        if (params.roundLengths) {
            x = Math.floor(x);
            y = Math.floor(y);
        }

        if (params.cssMode) {
            wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;
        } else if (!params.virtualTranslate) {
            $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);
        }

        swiper.previousTranslate = swiper.translate;
        swiper.translate = swiper.isHorizontal() ? x : y;
        // Check if we need to update progress

        let newProgress;
        const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();

        if (translatesDiff === 0) {
            newProgress = 0;
        } else {
            newProgress = (translate - swiper.minTranslate()) / translatesDiff;
        }

        if (newProgress !== progress) {
            swiper.updateProgress(translate);
        }

        swiper.emit('setTranslate', swiper.translate, byController);
    }

    function minTranslate() {
        return -this.snapGrid[0];
    }

    function maxTranslate() {
        return -this.snapGrid[this.snapGrid.length - 1];
    }

    function translateTo(translate, speed, runCallbacks, translateBounds, internal) {
        if (translate === void 0) {
            translate = 0;
        }

        if (speed === void 0) {
            speed = this.params.speed;
        }

        if (runCallbacks === void 0) {
            runCallbacks = true;
        }

        if (translateBounds === void 0) {
            translateBounds = true;
        }

        const swiper = this;
        const {params, wrapperEl} = swiper;

        if (swiper.animating && params.preventInteractionOnTransition) {
            return false;
        }

        const minTranslate = swiper.minTranslate();
        const maxTranslate = swiper.maxTranslate();
        let newTranslate;
        if (translateBounds && translate > minTranslate)
            newTranslate = minTranslate;
        else if (translateBounds && translate < maxTranslate)
            newTranslate = maxTranslate;
        else
            newTranslate = translate;
        // Update progress

        swiper.updateProgress(newTranslate);

        if (params.cssMode) {
            const isH = swiper.isHorizontal();

            if (speed === 0) {
                wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;
            } else {
                if (!swiper.support.smoothScroll) {
                    animateCSSModeScroll({
                        swiper,
                        targetPosition: -newTranslate,
                        side: isH ? 'left' : 'top'
                    });
                    return true;
                }

                wrapperEl.scrollTo({
                    [isH ? 'left' : 'top']: -newTranslate,
                    behavior: 'smooth'
                });
            }

            return true;
        }

        if (speed === 0) {
            swiper.setTransition(0);
            swiper.setTranslate(newTranslate);

            if (runCallbacks) {
                swiper.emit('beforeTransitionStart', speed, internal);
                swiper.emit('transitionEnd');
            }
        } else {
            swiper.setTransition(speed);
            swiper.setTranslate(newTranslate);

            if (runCallbacks) {
                swiper.emit('beforeTransitionStart', speed, internal);
                swiper.emit('transitionStart');
            }

            if (!swiper.animating) {
                swiper.animating = true;

                if (!swiper.onTranslateToWrapperTransitionEnd) {
                    swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {
                        if (!swiper || swiper.destroyed)
                            return;
                        if (e.target !== this)
                            return;
                        swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);
                        swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);
                        swiper.onTranslateToWrapperTransitionEnd = null;
                        delete swiper.onTranslateToWrapperTransitionEnd;

                        if (runCallbacks) {
                            swiper.emit('transitionEnd');
                        }
                    }
                    ;
                }

                swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);
                swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);
            }
        }

        return true;
    }

    var translate = {
        getTranslate: getSwiperTranslate,
        setTranslate,
        minTranslate,
        maxTranslate,
        translateTo
    };

    function setTransition(duration, byController) {
        const swiper = this;

        if (!swiper.params.cssMode) {
            swiper.$wrapperEl.transition(duration);
        }

        swiper.emit('setTransition', duration, byController);
    }

    function transitionEmit(_ref) {
        let {swiper, runCallbacks, direction, step} = _ref;
        const {activeIndex, previousIndex} = swiper;
        let dir = direction;

        if (!dir) {
            if (activeIndex > previousIndex)
                dir = 'next';
            else if (activeIndex < previousIndex)
                dir = 'prev';
            else
                dir = 'reset';
        }

        swiper.emit(`transition${step}`);

        if (runCallbacks && activeIndex !== previousIndex) {
            if (dir === 'reset') {
                swiper.emit(`slideResetTransition${step}`);
                return;
            }

            swiper.emit(`slideChangeTransition${step}`);

            if (dir === 'next') {
                swiper.emit(`slideNextTransition${step}`);
            } else {
                swiper.emit(`slidePrevTransition${step}`);
            }
        }
    }

    function transitionStart(runCallbacks, direction) {
        if (runCallbacks === void 0) {
            runCallbacks = true;
        }

        const swiper = this;
        const {params} = swiper;
        if (params.cssMode)
            return;

        if (params.autoHeight) {
            swiper.updateAutoHeight();
        }

        transitionEmit({
            swiper,
            runCallbacks,
            direction,
            step: 'Start'
        });
    }

    function transitionEnd(runCallbacks, direction) {
        if (runCallbacks === void 0) {
            runCallbacks = true;
        }

        const swiper = this;
        const {params} = swiper;
        swiper.animating = false;
        if (params.cssMode)
            return;
        swiper.setTransition(0);
        transitionEmit({
            swiper,
            runCallbacks,
            direction,
            step: 'End'
        });
    }

    var transition = {
        setTransition,
        transitionStart,
        transitionEnd
    };

    function slideTo(index, speed, runCallbacks, internal, initial) {
        if (index === void 0) {
            index = 0;
        }

        if (speed === void 0) {
            speed = this.params.speed;
        }

        if (runCallbacks === void 0) {
            runCallbacks = true;
        }

        if (typeof index !== 'number' && typeof index !== 'string') {
            throw new Error(`The 'index' argument cannot have type other than 'number' or 'string'. [${typeof index}] given.`);
        }

        if (typeof index === 'string') {
            /**
         * The `index` argument converted from `string` to `number`.
         * @type {number}
         */
            const indexAsNumber = parseInt(index, 10);
            /**
         * Determines whether the `index` argument is a valid `number`
         * after being converted from the `string` type.
         * @type {boolean}
         */

            const isValidNumber = isFinite(indexAsNumber);

            if (!isValidNumber) {
                throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${index}] given.`);
            }
            // Knowing that the converted `index` is a valid number,
            // we can update the original argument's value.

            index = indexAsNumber;
        }

        const swiper = this;
        let slideIndex = index;
        if (slideIndex < 0)
            slideIndex = 0;
        const {params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl, wrapperEl, enabled} = swiper;

        if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {
            return false;
        }

        const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);
        let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);
        if (snapIndex >= snapGrid.length)
            snapIndex = snapGrid.length - 1;

        if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {
            swiper.emit('beforeSlideChangeStart');
        }

        const translate = -snapGrid[snapIndex];
        // Update progress

        swiper.updateProgress(translate);
        // Normalize slideIndex

        if (params.normalizeSlideIndex) {
            for (let i = 0; i < slidesGrid.length; i += 1) {
                const normalizedTranslate = -Math.floor(translate * 100);
                const normalizedGrid = Math.floor(slidesGrid[i] * 100);
                const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);

                if (typeof slidesGrid[i + 1] !== 'undefined') {
                    if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {
                        slideIndex = i;
                    } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {
                        slideIndex = i + 1;
                    }
                } else if (normalizedTranslate >= normalizedGrid) {
                    slideIndex = i;
                }
            }
        }
        // Directions locks

        if (swiper.initialized && slideIndex !== activeIndex) {
            if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {
                return false;
            }

            if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {
                if ((activeIndex || 0) !== slideIndex)
                    return false;
            }
        }

        let direction;
        if (slideIndex > activeIndex)
            direction = 'next';
        else if (slideIndex < activeIndex)
            direction = 'prev';
        else
            direction = 'reset';
        // Update Index

        if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {
            swiper.updateActiveIndex(slideIndex);
            // Update Height

            if (params.autoHeight) {
                swiper.updateAutoHeight();
            }

            swiper.updateSlidesClasses();

            if (params.effect !== 'slide') {
                swiper.setTranslate(translate);
            }

            if (direction !== 'reset') {
                swiper.transitionStart(runCallbacks, direction);
                swiper.transitionEnd(runCallbacks, direction);
            }

            return false;
        }

        if (params.cssMode) {
            const isH = swiper.isHorizontal();
            const t = rtl ? translate : -translate;

            if (speed === 0) {
                const isVirtual = swiper.virtual && swiper.params.virtual.enabled;

                if (isVirtual) {
                    swiper.wrapperEl.style.scrollSnapType = 'none';
                    swiper._immediateVirtual = true;
                }

                wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;

                if (isVirtual) {
                    requestAnimationFrame( () => {
                        swiper.wrapperEl.style.scrollSnapType = '';
                        swiper._swiperImmediateVirtual = false;
                    }
                    );
                }
            } else {
                if (!swiper.support.smoothScroll) {
                    animateCSSModeScroll({
                        swiper,
                        targetPosition: t,
                        side: isH ? 'left' : 'top'
                    });
                    return true;
                }

                wrapperEl.scrollTo({
                    [isH ? 'left' : 'top']: t,
                    behavior: 'smooth'
                });
            }

            return true;
        }

        swiper.setTransition(speed);
        swiper.setTranslate(translate);
        swiper.updateActiveIndex(slideIndex);
        swiper.updateSlidesClasses();
        swiper.emit('beforeTransitionStart', speed, internal);
        swiper.transitionStart(runCallbacks, direction);

        if (speed === 0) {
            swiper.transitionEnd(runCallbacks, direction);
        } else if (!swiper.animating) {
            swiper.animating = true;

            if (!swiper.onSlideToWrapperTransitionEnd) {
                swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {
                    if (!swiper || swiper.destroyed)
                        return;
                    if (e.target !== this)
                        return;
                    swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);
                    swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);
                    swiper.onSlideToWrapperTransitionEnd = null;
                    delete swiper.onSlideToWrapperTransitionEnd;
                    swiper.transitionEnd(runCallbacks, direction);
                }
                ;
            }

            swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);
            swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);
        }

        return true;
    }

    function slideToLoop(index, speed, runCallbacks, internal) {
        if (index === void 0) {
            index = 0;
        }

        if (speed === void 0) {
            speed = this.params.speed;
        }

        if (runCallbacks === void 0) {
            runCallbacks = true;
        }

        if (typeof index === 'string') {
            /**
         * The `index` argument converted from `string` to `number`.
         * @type {number}
         */
            const indexAsNumber = parseInt(index, 10);
            /**
         * Determines whether the `index` argument is a valid `number`
         * after being converted from the `string` type.
         * @type {boolean}
         */

            const isValidNumber = isFinite(indexAsNumber);

            if (!isValidNumber) {
                throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${index}] given.`);
            }
            // Knowing that the converted `index` is a valid number,
            // we can update the original argument's value.

            index = indexAsNumber;
        }

        const swiper = this;
        let newIndex = index;

        if (swiper.params.loop) {
            newIndex += swiper.loopedSlides;
        }

        return swiper.slideTo(newIndex, speed, runCallbacks, internal);
    }

    /* eslint no-unused-vars: "off" */
    function slideNext(speed, runCallbacks, internal) {
        if (speed === void 0) {
            speed = this.params.speed;
        }

        if (runCallbacks === void 0) {
            runCallbacks = true;
        }

        const swiper = this;
        const {animating, enabled, params} = swiper;
        if (!enabled)
            return swiper;
        let perGroup = params.slidesPerGroup;

        if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {
            perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);
        }

        const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;

        if (params.loop) {
            if (animating && params.loopPreventsSlide)
                return false;
            swiper.loopFix();
            // eslint-disable-next-line

            swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;
        }

        if (params.rewind && swiper.isEnd) {
            return swiper.slideTo(0, speed, runCallbacks, internal);
        }

        return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);
    }

    /* eslint no-unused-vars: "off" */
    function slidePrev(speed, runCallbacks, internal) {
        if (speed === void 0) {
            speed = this.params.speed;
        }

        if (runCallbacks === void 0) {
            runCallbacks = true;
        }

        const swiper = this;
        const {params, animating, snapGrid, slidesGrid, rtlTranslate, enabled} = swiper;
        if (!enabled)
            return swiper;

        if (params.loop) {
            if (animating && params.loopPreventsSlide)
                return false;
            swiper.loopFix();
            // eslint-disable-next-line

            swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;
        }

        const translate = rtlTranslate ? swiper.translate : -swiper.translate;

        function normalize(val) {
            if (val < 0)
                return -Math.floor(Math.abs(val));
            return Math.floor(val);
        }

        const normalizedTranslate = normalize(translate);
        const normalizedSnapGrid = snapGrid.map(val => normalize(val));
        let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];

        if (typeof prevSnap === 'undefined' && params.cssMode) {
            let prevSnapIndex;
            snapGrid.forEach( (snap, snapIndex) => {
                if (normalizedTranslate >= snap) {
                    // prevSnap = snap;
                    prevSnapIndex = snapIndex;
                }
            }
            );

            if (typeof prevSnapIndex !== 'undefined') {
                prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];
            }
        }

        let prevIndex = 0;

        if (typeof prevSnap !== 'undefined') {
            prevIndex = slidesGrid.indexOf(prevSnap);
            if (prevIndex < 0)
                prevIndex = swiper.activeIndex - 1;

            if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {
                prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;
                prevIndex = Math.max(prevIndex, 0);
            }
        }

        if (params.rewind && swiper.isBeginning) {
            const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;
            return swiper.slideTo(lastIndex, speed, runCallbacks, internal);
        }

        return swiper.slideTo(prevIndex, speed, runCallbacks, internal);
    }

    /* eslint no-unused-vars: "off" */
    function slideReset(speed, runCallbacks, internal) {
        if (speed === void 0) {
            speed = this.params.speed;
        }

        if (runCallbacks === void 0) {
            runCallbacks = true;
        }

        const swiper = this;
        return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);
    }

    /* eslint no-unused-vars: "off" */
    function slideToClosest(speed, runCallbacks, internal, threshold) {
        if (speed === void 0) {
            speed = this.params.speed;
        }

        if (runCallbacks === void 0) {
            runCallbacks = true;
        }

        if (threshold === void 0) {
            threshold = 0.5;
        }

        const swiper = this;
        let index = swiper.activeIndex;
        const skip = Math.min(swiper.params.slidesPerGroupSkip, index);
        const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);
        const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;

        if (translate >= swiper.snapGrid[snapIndex]) {
            // The current translate is on or after the current snap index, so the choice
            // is between the current index and the one after it.
            const currentSnap = swiper.snapGrid[snapIndex];
            const nextSnap = swiper.snapGrid[snapIndex + 1];

            if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {
                index += swiper.params.slidesPerGroup;
            }
        } else {
            // The current translate is before the current snap index, so the choice
            // is between the current index and the one before it.
            const prevSnap = swiper.snapGrid[snapIndex - 1];
            const currentSnap = swiper.snapGrid[snapIndex];

            if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {
                index -= swiper.params.slidesPerGroup;
            }
        }

        index = Math.max(index, 0);
        index = Math.min(index, swiper.slidesGrid.length - 1);
        return swiper.slideTo(index, speed, runCallbacks, internal);
    }

    function slideToClickedSlide() {
        const swiper = this;
        const {params, $wrapperEl} = swiper;
        const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;
        let slideToIndex = swiper.clickedIndex;
        let realIndex;

        if (params.loop) {
            if (swiper.animating)
                return;
            realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);

            if (params.centeredSlides) {
                if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {
                    swiper.loopFix();
                    slideToIndex = $wrapperEl.children(`.${params.slideClass}[data-swiper-slide-index="${realIndex}"]:not(.${params.slideDuplicateClass})`).eq(0).index();
                    nextTick( () => {
                        swiper.slideTo(slideToIndex);
                    }
                    );
                } else {
                    swiper.slideTo(slideToIndex);
                }
            } else if (slideToIndex > swiper.slides.length - slidesPerView) {
                swiper.loopFix();
                slideToIndex = $wrapperEl.children(`.${params.slideClass}[data-swiper-slide-index="${realIndex}"]:not(.${params.slideDuplicateClass})`).eq(0).index();
                nextTick( () => {
                    swiper.slideTo(slideToIndex);
                }
                );
            } else {
                swiper.slideTo(slideToIndex);
            }
        } else {
            swiper.slideTo(slideToIndex);
        }
    }

    var slide = {
        slideTo,
        slideToLoop,
        slideNext,
        slidePrev,
        slideReset,
        slideToClosest,
        slideToClickedSlide
    };

    function loopCreate() {
        const swiper = this;
        const document = getDocument();
        const {params, $wrapperEl} = swiper;
        // Remove duplicated slides

        const $selector = $wrapperEl.children().length > 0 ? $($wrapperEl.children()[0].parentNode) : $wrapperEl;
        $selector.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();
        let slides = $selector.children(`.${params.slideClass}`);

        if (params.loopFillGroupWithBlank) {
            const blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;

            if (blankSlidesNum !== params.slidesPerGroup) {
                for (let i = 0; i < blankSlidesNum; i += 1) {
                    const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);
                    $selector.append(blankNode);
                }

                slides = $selector.children(`.${params.slideClass}`);
            }
        }

        if (params.slidesPerView === 'auto' && !params.loopedSlides)
            params.loopedSlides = slides.length;
        swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));
        swiper.loopedSlides += params.loopAdditionalSlides;

        if (swiper.loopedSlides > slides.length) {
            swiper.loopedSlides = slides.length;
        }

        const prependSlides = [];
        const appendSlides = [];
        slides.each( (el, index) => {
            const slide = $(el);

            if (index < swiper.loopedSlides) {
                appendSlides.push(el);
            }

            if (index < slides.length && index >= slides.length - swiper.loopedSlides) {
                prependSlides.push(el);
            }

            slide.attr('data-swiper-slide-index', index);
        }
        );

        for (let i = 0; i < appendSlides.length; i += 1) {
            $selector.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));
        }

        for (let i = prependSlides.length - 1; i >= 0; i -= 1) {
            $selector.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));
        }
    }

    function loopFix() {
        const swiper = this;
        swiper.emit('beforeLoopFix');
        const {activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl} = swiper;
        let newIndex;
        swiper.allowSlidePrev = true;
        swiper.allowSlideNext = true;
        const snapTranslate = -snapGrid[activeIndex];
        const diff = snapTranslate - swiper.getTranslate();
        // Fix For Negative Oversliding

        if (activeIndex < loopedSlides) {
            newIndex = slides.length - loopedSlides * 3 + activeIndex;
            newIndex += loopedSlides;
            const slideChanged = swiper.slideTo(newIndex, 0, false, true);

            if (slideChanged && diff !== 0) {
                swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);
            }
        } else if (activeIndex >= slides.length - loopedSlides) {
            // Fix For Positive Oversliding
            newIndex = -slides.length + activeIndex + loopedSlides;
            newIndex += loopedSlides;
            const slideChanged = swiper.slideTo(newIndex, 0, false, true);

            if (slideChanged && diff !== 0) {
                swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);
            }
        }

        swiper.allowSlidePrev = allowSlidePrev;
        swiper.allowSlideNext = allowSlideNext;
        swiper.emit('loopFix');
    }

    function loopDestroy() {
        const swiper = this;
        const {$wrapperEl, params, slides} = swiper;
        $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();
        slides.removeAttr('data-swiper-slide-index');
    }

    var loop = {
        loopCreate,
        loopFix,
        loopDestroy
    };

    function setGrabCursor(moving) {
        const swiper = this;
        if (swiper.support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode)
            return;
        const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;
        el.style.cursor = 'move';
        el.style.cursor = moving ? 'grabbing' : 'grab';
    }

    function unsetGrabCursor() {
        const swiper = this;

        if (swiper.support.touch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {
            return;
        }

        swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';
    }

    var grabCursor = {
        setGrabCursor,
        unsetGrabCursor
    };

    function closestElement(selector, base) {
        if (base === void 0) {
            base = this;
        }

        function __closestFrom(el) {
            if (!el || el === getDocument() || el === getWindow())
                return null;
            if (el.assignedSlot)
                el = el.assignedSlot;
            const found = el.closest(selector);

            if (!found && !el.getRootNode) {
                return null;
            }

            return found || __closestFrom(el.getRootNode().host);
        }

        return __closestFrom(base);
    }

    function onTouchStart(event) {
        const swiper = this;
        const document = getDocument();
        const window = getWindow();
        const data = swiper.touchEventsData;
        const {params, touches, enabled} = swiper;
        if (!enabled)
            return;

        if (swiper.animating && params.preventInteractionOnTransition) {
            return;
        }

        if (!swiper.animating && params.cssMode && params.loop) {
            swiper.loopFix();
        }

        let e = event;
        if (e.originalEvent)
            e = e.originalEvent;
        let $targetEl = $(e.target);

        if (params.touchEventsTarget === 'wrapper') {
            if (!$targetEl.closest(swiper.wrapperEl).length)
                return;
        }

        data.isTouchEvent = e.type === 'touchstart';
        if (!data.isTouchEvent && 'which'in e && e.which === 3)
            return;
        if (!data.isTouchEvent && 'button'in e && e.button > 0)
            return;
        if (data.isTouched && data.isMoved)
            return;
        // change target el for shadow root component

        const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';

        if (swipingClassHasValue && e.target && e.target.shadowRoot && event.path && event.path[0]) {
            $targetEl = $(event.path[0]);
        }

        const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;
        const isTargetShadow = !!(e.target && e.target.shadowRoot);
        // use closestElement for shadow root element to get the actual closest for nested shadow root element

        if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, $targetEl[0]) : $targetEl.closest(noSwipingSelector)[0])) {
            swiper.allowClick = true;
            return;
        }

        if (params.swipeHandler) {
            if (!$targetEl.closest(params.swipeHandler)[0])
                return;
        }

        touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;
        touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;
        const startX = touches.currentX;
        const startY = touches.currentY;
        // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore

        const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;
        const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;

        if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {
            if (edgeSwipeDetection === 'prevent') {
                event.preventDefault();
            } else {
                return;
            }
        }

        Object.assign(data, {
            isTouched: true,
            isMoved: false,
            allowTouchCallbacks: true,
            isScrolling: undefined,
            startMoving: undefined
        });
        touches.startX = startX;
        touches.startY = startY;
        data.touchStartTime = now();
        swiper.allowClick = true;
        swiper.updateSize();
        swiper.swipeDirection = undefined;
        if (params.threshold > 0)
            data.allowThresholdMove = false;

        if (e.type !== 'touchstart') {
            let preventDefault = true;

            if ($targetEl.is(data.focusableElements)) {
                preventDefault = false;

                if ($targetEl[0].nodeName === 'SELECT') {
                    data.isTouched = false;
                }
            }

            if (document.activeElement && $(document.activeElement).is(data.focusableElements) && document.activeElement !== $targetEl[0]) {
                document.activeElement.blur();
            }

            const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;

            if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !$targetEl[0].isContentEditable) {
                e.preventDefault();
            }
        }

        if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {
            swiper.freeMode.onTouchStart();
        }

        swiper.emit('touchStart', e);
    }

    function onTouchMove(event) {
        const document = getDocument();
        const swiper = this;
        const data = swiper.touchEventsData;
        const {params, touches, rtlTranslate: rtl, enabled} = swiper;
        if (!enabled)
            return;
        let e = event;
        if (e.originalEvent)
            e = e.originalEvent;

        if (!data.isTouched) {
            if (data.startMoving && data.isScrolling) {
                swiper.emit('touchMoveOpposite', e);
            }

            return;
        }

        if (data.isTouchEvent && e.type !== 'touchmove')
            return;
        const targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);
        const pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;
        const pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;

        if (e.preventedByNestedSwiper) {
            touches.startX = pageX;
            touches.startY = pageY;
            return;
        }

        if (!swiper.allowTouchMove) {
            if (!$(e.target).is(data.focusableElements)) {
                swiper.allowClick = false;
            }

            if (data.isTouched) {
                Object.assign(touches, {
                    startX: pageX,
                    startY: pageY,
                    currentX: pageX,
                    currentY: pageY
                });
                data.touchStartTime = now();
            }

            return;
        }

        if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {
            if (swiper.isVertical()) {
                // Vertical
                if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {
                    data.isTouched = false;
                    data.isMoved = false;
                    return;
                }
            } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {
                return;
            }
        }

        if (data.isTouchEvent && document.activeElement) {
            if (e.target === document.activeElement && $(e.target).is(data.focusableElements)) {
                data.isMoved = true;
                swiper.allowClick = false;
                return;
            }
        }

        if (data.allowTouchCallbacks) {
            swiper.emit('touchMove', e);
        }

        if (e.targetTouches && e.targetTouches.length > 1)
            return;
        touches.currentX = pageX;
        touches.currentY = pageY;
        const diffX = touches.currentX - touches.startX;
        const diffY = touches.currentY - touches.startY;
        if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold)
            return;

        if (typeof data.isScrolling === 'undefined') {
            let touchAngle;

            if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {
                data.isScrolling = false;
            } else {
                // eslint-disable-next-line
                if (diffX * diffX + diffY * diffY >= 25) {
                    touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;
                    data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;
                }
            }
        }

        if (data.isScrolling) {
            swiper.emit('touchMoveOpposite', e);
        }

        if (typeof data.startMoving === 'undefined') {
            if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {
                data.startMoving = true;
            }
        }

        if (data.isScrolling) {
            data.isTouched = false;
            return;
        }

        if (!data.startMoving) {
            return;
        }

        swiper.allowClick = false;

        if (!params.cssMode && e.cancelable) {
            e.preventDefault();
        }

        if (params.touchMoveStopPropagation && !params.nested) {
            e.stopPropagation();
        }

        if (!data.isMoved) {
            if (params.loop && !params.cssMode) {
                swiper.loopFix();
            }

            data.startTranslate = swiper.getTranslate();
            swiper.setTransition(0);

            if (swiper.animating) {
                swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');
            }

            data.allowMomentumBounce = false;
            // Grab Cursor

            if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {
                swiper.setGrabCursor(true);
            }

            swiper.emit('sliderFirstMove', e);
        }

        swiper.emit('sliderMove', e);
        data.isMoved = true;
        let diff = swiper.isHorizontal() ? diffX : diffY;
        touches.diff = diff;
        diff *= params.touchRatio;
        if (rtl)
            diff = -diff;
        swiper.swipeDirection = diff > 0 ? 'prev' : 'next';
        data.currentTranslate = diff + data.startTranslate;
        let disableParentSwiper = true;
        let resistanceRatio = params.resistanceRatio;

        if (params.touchReleaseOnEdges) {
            resistanceRatio = 0;
        }

        if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {
            disableParentSwiper = false;
            if (params.resistance)
                data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;
        } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {
            disableParentSwiper = false;
            if (params.resistance)
                data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;
        }

        if (disableParentSwiper) {
            e.preventedByNestedSwiper = true;
        }
        // Directions locks

        if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {
            data.currentTranslate = data.startTranslate;
        }

        if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {
            data.currentTranslate = data.startTranslate;
        }

        if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {
            data.currentTranslate = data.startTranslate;
        }
        // Threshold

        if (params.threshold > 0) {
            if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {
                if (!data.allowThresholdMove) {
                    data.allowThresholdMove = true;
                    touches.startX = touches.currentX;
                    touches.startY = touches.currentY;
                    data.currentTranslate = data.startTranslate;
                    touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;
                    return;
                }
            } else {
                data.currentTranslate = data.startTranslate;
                return;
            }
        }

        if (!params.followFinger || params.cssMode)
            return;
        // Update active index in free mode

        if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {
            swiper.updateActiveIndex();
            swiper.updateSlidesClasses();
        }

        if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {
            swiper.freeMode.onTouchMove();
        }
        // Update progress

        swiper.updateProgress(data.currentTranslate);
        // Update translate

        swiper.setTranslate(data.currentTranslate);
    }

    function onTouchEnd(event) {
        const swiper = this;
        const data = swiper.touchEventsData;
        const {params, touches, rtlTranslate: rtl, slidesGrid, enabled} = swiper;
        if (!enabled)
            return;
        let e = event;
        if (e.originalEvent)
            e = e.originalEvent;

        if (data.allowTouchCallbacks) {
            swiper.emit('touchEnd', e);
        }

        data.allowTouchCallbacks = false;

        if (!data.isTouched) {
            if (data.isMoved && params.grabCursor) {
                swiper.setGrabCursor(false);
            }

            data.isMoved = false;
            data.startMoving = false;
            return;
        }
        // Return Grab Cursor

        if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {
            swiper.setGrabCursor(false);
        }
        // Time diff

        const touchEndTime = now();
        const timeDiff = touchEndTime - data.touchStartTime;
        // Tap, doubleTap, Click

        if (swiper.allowClick) {
            const pathTree = e.path || e.composedPath && e.composedPath();
            swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);
            swiper.emit('tap click', e);

            if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {
                swiper.emit('doubleTap doubleClick', e);
            }
        }

        data.lastClickTime = now();
        nextTick( () => {
            if (!swiper.destroyed)
                swiper.allowClick = true;
        }
        );

        if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {
            data.isTouched = false;
            data.isMoved = false;
            data.startMoving = false;
            return;
        }

        data.isTouched = false;
        data.isMoved = false;
        data.startMoving = false;
        let currentPos;

        if (params.followFinger) {
            currentPos = rtl ? swiper.translate : -swiper.translate;
        } else {
            currentPos = -data.currentTranslate;
        }

        if (params.cssMode) {
            return;
        }

        if (swiper.params.freeMode && params.freeMode.enabled) {
            swiper.freeMode.onTouchEnd({
                currentPos
            });
            return;
        }
        // Find current slide

        let stopIndex = 0;
        let groupSize = swiper.slidesSizesGrid[0];

        for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {
            const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;

            if (typeof slidesGrid[i + increment] !== 'undefined') {
                if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {
                    stopIndex = i;
                    groupSize = slidesGrid[i + increment] - slidesGrid[i];
                }
            } else if (currentPos >= slidesGrid[i]) {
                stopIndex = i;
                groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];
            }
        }

        let rewindFirstIndex = null;
        let rewindLastIndex = null;

        if (params.rewind) {
            if (swiper.isBeginning) {
                rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;
            } else if (swiper.isEnd) {
                rewindFirstIndex = 0;
            }
        }
        // Find current slide size

        const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;
        const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;

        if (timeDiff > params.longSwipesMs) {
            // Long touches
            if (!params.longSwipes) {
                swiper.slideTo(swiper.activeIndex);
                return;
            }

            if (swiper.swipeDirection === 'next') {
                if (ratio >= params.longSwipesRatio)
                    swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);
                else
                    swiper.slideTo(stopIndex);
            }

            if (swiper.swipeDirection === 'prev') {
                if (ratio > 1 - params.longSwipesRatio) {
                    swiper.slideTo(stopIndex + increment);
                } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {
                    swiper.slideTo(rewindLastIndex);
                } else {
                    swiper.slideTo(stopIndex);
                }
            }
        } else {
            // Short swipes
            if (!params.shortSwipes) {
                swiper.slideTo(swiper.activeIndex);
                return;
            }

            const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);

            if (!isNavButtonTarget) {
                if (swiper.swipeDirection === 'next') {
                    swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);
                }

                if (swiper.swipeDirection === 'prev') {
                    swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);
                }
            } else if (e.target === swiper.navigation.nextEl) {
                swiper.slideTo(stopIndex + increment);
            } else {
                swiper.slideTo(stopIndex);
            }
        }
    }

    function onResize() {
        const swiper = this;
        const {params, el} = swiper;
        if (el && el.offsetWidth === 0)
            return;
        // Breakpoints

        if (params.breakpoints) {
            swiper.setBreakpoint();
        }
        // Save locks

        const {allowSlideNext, allowSlidePrev, snapGrid} = swiper;
        // Disable locks on resize

        swiper.allowSlideNext = true;
        swiper.allowSlidePrev = true;
        swiper.updateSize();
        swiper.updateSlides();
        swiper.updateSlidesClasses();

        if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides) {
            swiper.slideTo(swiper.slides.length - 1, 0, false, true);
        } else {
            swiper.slideTo(swiper.activeIndex, 0, false, true);
        }

        if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {
            swiper.autoplay.run();
        }
        // Return locks after resize

        swiper.allowSlidePrev = allowSlidePrev;
        swiper.allowSlideNext = allowSlideNext;

        if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {
            swiper.checkOverflow();
        }
    }

    function onClick(e) {
        const swiper = this;
        if (!swiper.enabled)
            return;

        if (!swiper.allowClick) {
            if (swiper.params.preventClicks)
                e.preventDefault();

            if (swiper.params.preventClicksPropagation && swiper.animating) {
                e.stopPropagation();
                e.stopImmediatePropagation();
            }
        }
    }

    function onScroll() {
        const swiper = this;
        const {wrapperEl, rtlTranslate, enabled} = swiper;
        if (!enabled)
            return;
        swiper.previousTranslate = swiper.translate;

        if (swiper.isHorizontal()) {
            swiper.translate = -wrapperEl.scrollLeft;
        } else {
            swiper.translate = -wrapperEl.scrollTop;
        }
        // eslint-disable-next-line

        if (swiper.translate === 0)
            swiper.translate = 0;
        swiper.updateActiveIndex();
        swiper.updateSlidesClasses();
        let newProgress;
        const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();

        if (translatesDiff === 0) {
            newProgress = 0;
        } else {
            newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;
        }

        if (newProgress !== swiper.progress) {
            swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);
        }

        swiper.emit('setTranslate', swiper.translate, false);
    }

    let dummyEventAttached = false;

    function dummyEventListener() {}

    const events = (swiper, method) => {
        const document = getDocument();
        const {params, touchEvents, el, wrapperEl, device, support} = swiper;
        const capture = !!params.nested;
        const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';
        const swiperMethod = method;
        // Touch Events

        if (!support.touch) {
            el[domMethod](touchEvents.start, swiper.onTouchStart, false);
            document[domMethod](touchEvents.move, swiper.onTouchMove, capture);
            document[domMethod](touchEvents.end, swiper.onTouchEnd, false);
        } else {
            const passiveListener = touchEvents.start === 'touchstart' && support.passiveListener && params.passiveListeners ? {
                passive: true,
                capture: false
            } : false;
            el[domMethod](touchEvents.start, swiper.onTouchStart, passiveListener);
            el[domMethod](touchEvents.move, swiper.onTouchMove, support.passiveListener ? {
                passive: false,
                capture
            } : capture);
            el[domMethod](touchEvents.end, swiper.onTouchEnd, passiveListener);

            if (touchEvents.cancel) {
                el[domMethod](touchEvents.cancel, swiper.onTouchEnd, passiveListener);
            }
        }
        // Prevent Links Clicks

        if (params.preventClicks || params.preventClicksPropagation) {
            el[domMethod]('click', swiper.onClick, true);
        }

        if (params.cssMode) {
            wrapperEl[domMethod]('scroll', swiper.onScroll);
        }
        // Resize handler

        if (params.updateOnWindowResize) {
            swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);
        } else {
            swiper[swiperMethod]('observerUpdate', onResize, true);
        }
    }
    ;

    function attachEvents() {
        const swiper = this;
        const document = getDocument();
        const {params, support} = swiper;
        swiper.onTouchStart = onTouchStart.bind(swiper);
        swiper.onTouchMove = onTouchMove.bind(swiper);
        swiper.onTouchEnd = onTouchEnd.bind(swiper);

        if (params.cssMode) {
            swiper.onScroll = onScroll.bind(swiper);
        }

        swiper.onClick = onClick.bind(swiper);

        if (support.touch && !dummyEventAttached) {
            document.addEventListener('touchstart', dummyEventListener);
            dummyEventAttached = true;
        }

        events(swiper, 'on');
    }

    function detachEvents() {
        const swiper = this;
        events(swiper, 'off');
    }

    var events$1 = {
        attachEvents,
        detachEvents
    };

    const isGridEnabled = (swiper, params) => {
        return swiper.grid && params.grid && params.grid.rows > 1;
    }
    ;

    function setBreakpoint() {
        const swiper = this;
        const {activeIndex, initialized, loopedSlides=0, params, $el} = swiper;
        const breakpoints = params.breakpoints;
        if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0)
            return;
        // Get breakpoint for window width and update parameters

        const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);
        if (!breakpoint || swiper.currentBreakpoint === breakpoint)
            return;
        const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;
        const breakpointParams = breakpointOnlyParams || swiper.originalParams;
        const wasMultiRow = isGridEnabled(swiper, params);
        const isMultiRow = isGridEnabled(swiper, breakpointParams);
        const wasEnabled = params.enabled;

        if (wasMultiRow && !isMultiRow) {
            $el.removeClass(`${params.containerModifierClass}grid ${params.containerModifierClass}grid-column`);
            swiper.emitContainerClasses();
        } else if (!wasMultiRow && isMultiRow) {
            $el.addClass(`${params.containerModifierClass}grid`);

            if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {
                $el.addClass(`${params.containerModifierClass}grid-column`);
            }

            swiper.emitContainerClasses();
        }
        // Toggle navigation, pagination, scrollbar

        ['navigation', 'pagination', 'scrollbar'].forEach(prop => {
            const wasModuleEnabled = params[prop] && params[prop].enabled;
            const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;

            if (wasModuleEnabled && !isModuleEnabled) {
                swiper[prop].disable();
            }

            if (!wasModuleEnabled && isModuleEnabled) {
                swiper[prop].enable();
            }
        }
        );
        const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;
        const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);

        if (directionChanged && initialized) {
            swiper.changeDirection();
        }

        extend(swiper.params, breakpointParams);
        const isEnabled = swiper.params.enabled;
        Object.assign(swiper, {
            allowTouchMove: swiper.params.allowTouchMove,
            allowSlideNext: swiper.params.allowSlideNext,
            allowSlidePrev: swiper.params.allowSlidePrev
        });

        if (wasEnabled && !isEnabled) {
            swiper.disable();
        } else if (!wasEnabled && isEnabled) {
            swiper.enable();
        }

        swiper.currentBreakpoint = breakpoint;
        swiper.emit('_beforeBreakpoint', breakpointParams);

        if (needsReLoop && initialized) {
            swiper.loopDestroy();
            swiper.loopCreate();
            swiper.updateSlides();
            swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);
        }

        swiper.emit('breakpoint', breakpointParams);
    }

    function getBreakpoint(breakpoints, base, containerEl) {
        if (base === void 0) {
            base = 'window';
        }

        if (!breakpoints || base === 'container' && !containerEl)
            return undefined;
        let breakpoint = false;
        const window = getWindow();
        const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;
        const points = Object.keys(breakpoints).map(point => {
            if (typeof point === 'string' && point.indexOf('@') === 0) {
                const minRatio = parseFloat(point.substr(1));
                const value = currentHeight * minRatio;
                return {
                    value,
                    point
                };
            }

            return {
                value: point,
                point
            };
        }
        );
        points.sort( (a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));

        for (let i = 0; i < points.length; i += 1) {
            const {point, value} = points[i];

            if (base === 'window') {
                if (window.matchMedia(`(min-width: ${value}px)`).matches) {
                    breakpoint = point;
                }
            } else if (value <= containerEl.clientWidth) {
                breakpoint = point;
            }
        }

        return breakpoint || 'max';
    }

    var breakpoints = {
        setBreakpoint,
        getBreakpoint
    };

    function prepareClasses(entries, prefix) {
        const resultClasses = [];
        entries.forEach(item => {
            if (typeof item === 'object') {
                Object.keys(item).forEach(classNames => {
                    if (item[classNames]) {
                        resultClasses.push(prefix + classNames);
                    }
                }
                );
            } else if (typeof item === 'string') {
                resultClasses.push(prefix + item);
            }
        }
        );
        return resultClasses;
    }

    function addClasses() {
        const swiper = this;
        const {classNames, params, rtl, $el, device, support} = swiper;
        // prettier-ignore

        const suffixes = prepareClasses(['initialized', params.direction, {
            'pointer-events': !support.touch
        }, {
            'free-mode': swiper.params.freeMode && params.freeMode.enabled
        }, {
            'autoheight': params.autoHeight
        }, {
            'rtl': rtl
        }, {
            'grid': params.grid && params.grid.rows > 1
        }, {
            'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'
        }, {
            'android': device.android
        }, {
            'ios': device.ios
        }, {
            'css-mode': params.cssMode
        }, {
            'centered': params.cssMode && params.centeredSlides
        }, {
            'watch-progress': params.watchSlidesProgress
        }], params.containerModifierClass);
        classNames.push(...suffixes);
        $el.addClass([...classNames].join(' '));
        swiper.emitContainerClasses();
    }

    function removeClasses() {
        const swiper = this;
        const {$el, classNames} = swiper;
        $el.removeClass(classNames.join(' '));
        swiper.emitContainerClasses();
    }

    var classes = {
        addClasses,
        removeClasses
    };

    function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {
        const window = getWindow();
        let image;

        function onReady() {
            if (callback)
                callback();
        }

        const isPicture = $(imageEl).parent('picture')[0];

        if (!isPicture && (!imageEl.complete || !checkForComplete)) {
            if (src) {
                image = new window.Image();
                image.onload = onReady;
                image.onerror = onReady;

                if (sizes) {
                    image.sizes = sizes;
                }

                if (srcset) {
                    image.srcset = srcset;
                }

                if (src) {
                    image.src = src;
                }
            } else {
                onReady();
            }
        } else {
            // image already loaded...
            onReady();
        }
    }

    function preloadImages() {
        const swiper = this;
        swiper.imagesToLoad = swiper.$el.find('img');

        function onReady() {
            if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed)
                return;
            if (swiper.imagesLoaded !== undefined)
                swiper.imagesLoaded += 1;

            if (swiper.imagesLoaded === swiper.imagesToLoad.length) {
                if (swiper.params.updateOnImagesReady)
                    swiper.update();
                swiper.emit('imagesReady');
            }
        }

        for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {
            const imageEl = swiper.imagesToLoad[i];
            swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute('src'), imageEl.srcset || imageEl.getAttribute('srcset'), imageEl.sizes || imageEl.getAttribute('sizes'), true, onReady);
        }
    }

    var images = {
        loadImage,
        preloadImages
    };

    function checkOverflow() {
        const swiper = this;
        const {isLocked: wasLocked, params} = swiper;
        const {slidesOffsetBefore} = params;

        if (slidesOffsetBefore) {
            const lastSlideIndex = swiper.slides.length - 1;
            const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;
            swiper.isLocked = swiper.size > lastSlideRightEdge;
        } else {
            swiper.isLocked = swiper.snapGrid.length === 1;
        }

        if (params.allowSlideNext === true) {
            swiper.allowSlideNext = !swiper.isLocked;
        }

        if (params.allowSlidePrev === true) {
            swiper.allowSlidePrev = !swiper.isLocked;
        }

        if (wasLocked && wasLocked !== swiper.isLocked) {
            swiper.isEnd = false;
        }

        if (wasLocked !== swiper.isLocked) {
            swiper.emit(swiper.isLocked ? 'lock' : 'unlock');
        }
    }

    var checkOverflow$1 = {
        checkOverflow
    };

    var defaults = {
        init: true,
        direction: 'horizontal',
        touchEventsTarget: 'wrapper',
        initialSlide: 0,
        speed: 300,
        cssMode: false,
        updateOnWindowResize: true,
        resizeObserver: true,
        nested: false,
        createElements: false,
        enabled: true,
        focusableElements: 'input, select, option, textarea, button, video, label',
        // Overrides
        width: null,
        height: null,
        //
        preventInteractionOnTransition: false,
        // ssr
        userAgent: null,
        url: null,
        // To support iOS's swipe-to-go-back gesture (when being used in-app).
        edgeSwipeDetection: false,
        edgeSwipeThreshold: 20,
        // Autoheight
        autoHeight: false,
        // Set wrapper width
        setWrapperSize: false,
        // Virtual Translate
        virtualTranslate: false,
        // Effects
        effect: 'slide',
        // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'
        // Breakpoints
        breakpoints: undefined,
        breakpointsBase: 'window',
        // Slides grid
        spaceBetween: 0,
        slidesPerView: 1,
        slidesPerGroup: 1,
        slidesPerGroupSkip: 0,
        slidesPerGroupAuto: false,
        centeredSlides: false,
        centeredSlidesBounds: false,
        slidesOffsetBefore: 0,
        // in px
        slidesOffsetAfter: 0,
        // in px
        normalizeSlideIndex: true,
        centerInsufficientSlides: false,
        // Disable swiper and hide navigation when container not overflow
        watchOverflow: true,
        // Round length
        roundLengths: false,
        // Touches
        touchRatio: 1,
        touchAngle: 45,
        simulateTouch: true,
        shortSwipes: true,
        longSwipes: true,
        longSwipesRatio: 0.5,
        longSwipesMs: 300,
        followFinger: true,
        allowTouchMove: true,
        threshold: 0,
        touchMoveStopPropagation: false,
        touchStartPreventDefault: true,
        touchStartForcePreventDefault: false,
        touchReleaseOnEdges: false,
        // Unique Navigation Elements
        uniqueNavElements: true,
        // Resistance
        resistance: true,
        resistanceRatio: 0.85,
        // Progress
        watchSlidesProgress: false,
        // Cursor
        grabCursor: false,
        // Clicks
        preventClicks: true,
        preventClicksPropagation: true,
        slideToClickedSlide: false,
        // Images
        preloadImages: true,
        updateOnImagesReady: true,
        // loop
        loop: false,
        loopAdditionalSlides: 0,
        loopedSlides: null,
        loopFillGroupWithBlank: false,
        loopPreventsSlide: true,
        // rewind
        rewind: false,
        // Swiping/no swiping
        allowSlidePrev: true,
        allowSlideNext: true,
        swipeHandler: null,
        // '.swipe-handler',
        noSwiping: true,
        noSwipingClass: 'swiper-no-swiping',
        noSwipingSelector: null,
        // Passive Listeners
        passiveListeners: true,
        maxBackfaceHiddenSlides: 10,
        // NS
        containerModifierClass: 'swiper-',
        // NEW
        slideClass: 'swiper-slide',
        slideBlankClass: 'swiper-slide-invisible-blank',
        slideActiveClass: 'swiper-slide-active',
        slideDuplicateActiveClass: 'swiper-slide-duplicate-active',
        slideVisibleClass: 'swiper-slide-visible',
        slideDuplicateClass: 'swiper-slide-duplicate',
        slideNextClass: 'swiper-slide-next',
        slideDuplicateNextClass: 'swiper-slide-duplicate-next',
        slidePrevClass: 'swiper-slide-prev',
        slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',
        wrapperClass: 'swiper-wrapper',
        // Callbacks
        runCallbacksOnInit: true,
        // Internals
        _emitClasses: false
    };

    function moduleExtendParams(params, allModulesParams) {
        return function extendParams(obj) {
            if (obj === void 0) {
                obj = {};
            }

            const moduleParamName = Object.keys(obj)[0];
            const moduleParams = obj[moduleParamName];

            if (typeof moduleParams !== 'object' || moduleParams === null) {
                extend(allModulesParams, obj);
                return;
            }

            if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {
                params[moduleParamName] = {
                    auto: true
                };
            }

            if (!(moduleParamName in params && 'enabled'in moduleParams)) {
                extend(allModulesParams, obj);
                return;
            }

            if (params[moduleParamName] === true) {
                params[moduleParamName] = {
                    enabled: true
                };
            }

            if (typeof params[moduleParamName] === 'object' && !('enabled'in params[moduleParamName])) {
                params[moduleParamName].enabled = true;
            }

            if (!params[moduleParamName])
                params[moduleParamName] = {
                    enabled: false
                };
            extend(allModulesParams, obj);
        }
        ;
    }

    /* eslint no-param-reassign: "off" */
    const prototypes = {
        eventsEmitter,
        update,
        translate,
        transition,
        slide,
        loop,
        grabCursor,
        events: events$1,
        breakpoints,
        checkOverflow: checkOverflow$1,
        classes,
        images
    };
    const extendedDefaults = {};

    class Swiper {
        constructor() {
            let el;
            let params;

            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {
                params = args[0];
            } else {
                [el,params] = args;
            }

            if (!params)
                params = {};
            params = extend({}, params);
            if (el && !params.el)
                params.el = el;

            if (params.el && $(params.el).length > 1) {
                const swipers = [];
                $(params.el).each(containerEl => {
                    const newParams = extend({}, params, {
                        el: containerEl
                    });
                    swipers.push(new Swiper(newParams));
                }
                );
                return swipers;
            }
            // Swiper Instance

            const swiper = this;
            swiper.__swiper__ = true;
            swiper.support = getSupport();
            swiper.device = getDevice({
                userAgent: params.userAgent
            });
            swiper.browser = getBrowser();
            swiper.eventsListeners = {};
            swiper.eventsAnyListeners = [];
            swiper.modules = [...swiper.__modules__];

            if (params.modules && Array.isArray(params.modules)) {
                swiper.modules.push(...params.modules);
            }

            const allModulesParams = {};
            swiper.modules.forEach(mod => {
                mod({
                    swiper,
                    extendParams: moduleExtendParams(params, allModulesParams),
                    on: swiper.on.bind(swiper),
                    once: swiper.once.bind(swiper),
                    off: swiper.off.bind(swiper),
                    emit: swiper.emit.bind(swiper)
                });
            }
            );
            // Extend defaults with modules params

            const swiperParams = extend({}, defaults, allModulesParams);
            // Extend defaults with passed params

            swiper.params = extend({}, swiperParams, extendedDefaults, params);
            swiper.originalParams = extend({}, swiper.params);
            swiper.passedParams = extend({}, params);
            // add event listeners

            if (swiper.params && swiper.params.on) {
                Object.keys(swiper.params.on).forEach(eventName => {
                    swiper.on(eventName, swiper.params.on[eventName]);
                }
                );
            }

            if (swiper.params && swiper.params.onAny) {
                swiper.onAny(swiper.params.onAny);
            }
            // Save Dom lib

            swiper.$ = $;
            // Extend Swiper

            Object.assign(swiper, {
                enabled: swiper.params.enabled,
                el,
                // Classes
                classNames: [],
                // Slides
                slides: $(),
                slidesGrid: [],
                snapGrid: [],
                slidesSizesGrid: [],

                // isDirection
                isHorizontal() {
                    return swiper.params.direction === 'horizontal';
                },

                isVertical() {
                    return swiper.params.direction === 'vertical';
                },

                // Indexes
                activeIndex: 0,
                realIndex: 0,
                //
                isBeginning: true,
                isEnd: false,
                // Props
                translate: 0,
                previousTranslate: 0,
                progress: 0,
                velocity: 0,
                animating: false,
                // Locks
                allowSlideNext: swiper.params.allowSlideNext,
                allowSlidePrev: swiper.params.allowSlidePrev,
                // Touch Events
                touchEvents: function touchEvents() {
                    const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];
                    const desktop = ['pointerdown', 'pointermove', 'pointerup'];
                    swiper.touchEventsTouch = {
                        start: touch[0],
                        move: touch[1],
                        end: touch[2],
                        cancel: touch[3]
                    };
                    swiper.touchEventsDesktop = {
                        start: desktop[0],
                        move: desktop[1],
                        end: desktop[2]
                    };
                    return swiper.support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;
                }(),
                touchEventsData: {
                    isTouched: undefined,
                    isMoved: undefined,
                    allowTouchCallbacks: undefined,
                    touchStartTime: undefined,
                    isScrolling: undefined,
                    currentTranslate: undefined,
                    startTranslate: undefined,
                    allowThresholdMove: undefined,
                    // Form elements to match
                    focusableElements: swiper.params.focusableElements,
                    // Last click time
                    lastClickTime: now(),
                    clickTimeout: undefined,
                    // Velocities
                    velocities: [],
                    allowMomentumBounce: undefined,
                    isTouchEvent: undefined,
                    startMoving: undefined
                },
                // Clicks
                allowClick: true,
                // Touches
                allowTouchMove: swiper.params.allowTouchMove,
                touches: {
                    startX: 0,
                    startY: 0,
                    currentX: 0,
                    currentY: 0,
                    diff: 0
                },
                // Images
                imagesToLoad: [],
                imagesLoaded: 0
            });
            swiper.emit('_swiper');
            // Init

            if (swiper.params.init) {
                swiper.init();
            }
            // Return app instance

            return swiper;
        }

        enable() {
            const swiper = this;
            if (swiper.enabled)
                return;
            swiper.enabled = true;

            if (swiper.params.grabCursor) {
                swiper.setGrabCursor();
            }

            swiper.emit('enable');
        }

        disable() {
            const swiper = this;
            if (!swiper.enabled)
                return;
            swiper.enabled = false;

            if (swiper.params.grabCursor) {
                swiper.unsetGrabCursor();
            }

            swiper.emit('disable');
        }

        setProgress(progress, speed) {
            const swiper = this;
            progress = Math.min(Math.max(progress, 0), 1);
            const min = swiper.minTranslate();
            const max = swiper.maxTranslate();
            const current = (max - min) * progress + min;
            swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);
            swiper.updateActiveIndex();
            swiper.updateSlidesClasses();
        }

        emitContainerClasses() {
            const swiper = this;
            if (!swiper.params._emitClasses || !swiper.el)
                return;
            const cls = swiper.el.className.split(' ').filter(className => {
                return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;
            }
            );
            swiper.emit('_containerClasses', cls.join(' '));
        }

        getSlideClasses(slideEl) {
            const swiper = this;
            if (swiper.destroyed)
                return '';
            return slideEl.className.split(' ').filter(className => {
                return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;
            }
            ).join(' ');
        }

        emitSlidesClasses() {
            const swiper = this;
            if (!swiper.params._emitClasses || !swiper.el)
                return;
            const updates = [];
            swiper.slides.each(slideEl => {
                const classNames = swiper.getSlideClasses(slideEl);
                updates.push({
                    slideEl,
                    classNames
                });
                swiper.emit('_slideClass', slideEl, classNames);
            }
            );
            swiper.emit('_slideClasses', updates);
        }

        slidesPerViewDynamic(view, exact) {
            if (view === void 0) {
                view = 'current';
            }

            if (exact === void 0) {
                exact = false;
            }

            const swiper = this;
            const {params, slides, slidesGrid, slidesSizesGrid, size: swiperSize, activeIndex} = swiper;
            let spv = 1;

            if (params.centeredSlides) {
                let slideSize = slides[activeIndex].swiperSlideSize;
                let breakLoop;

                for (let i = activeIndex + 1; i < slides.length; i += 1) {
                    if (slides[i] && !breakLoop) {
                        slideSize += slides[i].swiperSlideSize;
                        spv += 1;
                        if (slideSize > swiperSize)
                            breakLoop = true;
                    }
                }

                for (let i = activeIndex - 1; i >= 0; i -= 1) {
                    if (slides[i] && !breakLoop) {
                        slideSize += slides[i].swiperSlideSize;
                        spv += 1;
                        if (slideSize > swiperSize)
                            breakLoop = true;
                    }
                }
            } else {
                // eslint-disable-next-line
                if (view === 'current') {
                    for (let i = activeIndex + 1; i < slides.length; i += 1) {
                        const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;

                        if (slideInView) {
                            spv += 1;
                        }
                    }
                } else {
                    // previous
                    for (let i = activeIndex - 1; i >= 0; i -= 1) {
                        const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;

                        if (slideInView) {
                            spv += 1;
                        }
                    }
                }
            }

            return spv;
        }

        update() {
            const swiper = this;
            if (!swiper || swiper.destroyed)
                return;
            const {snapGrid, params} = swiper;
            // Breakpoints

            if (params.breakpoints) {
                swiper.setBreakpoint();
            }

            swiper.updateSize();
            swiper.updateSlides();
            swiper.updateProgress();
            swiper.updateSlidesClasses();

            function setTranslate() {
                const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;
                const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());
                swiper.setTranslate(newTranslate);
                swiper.updateActiveIndex();
                swiper.updateSlidesClasses();
            }

            let translated;

            if (swiper.params.freeMode && swiper.params.freeMode.enabled) {
                setTranslate();

                if (swiper.params.autoHeight) {
                    swiper.updateAutoHeight();
                }
            } else {
                if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {
                    translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);
                } else {
                    translated = swiper.slideTo(swiper.activeIndex, 0, false, true);
                }

                if (!translated) {
                    setTranslate();
                }
            }

            if (params.watchOverflow && snapGrid !== swiper.snapGrid) {
                swiper.checkOverflow();
            }

            swiper.emit('update');
        }

        changeDirection(newDirection, needUpdate) {
            if (needUpdate === void 0) {
                needUpdate = true;
            }

            const swiper = this;
            const currentDirection = swiper.params.direction;

            if (!newDirection) {
                // eslint-disable-next-line
                newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';
            }

            if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {
                return swiper;
            }

            swiper.$el.removeClass(`${swiper.params.containerModifierClass}${currentDirection}`).addClass(`${swiper.params.containerModifierClass}${newDirection}`);
            swiper.emitContainerClasses();
            swiper.params.direction = newDirection;
            swiper.slides.each(slideEl => {
                if (newDirection === 'vertical') {
                    slideEl.style.width = '';
                } else {
                    slideEl.style.height = '';
                }
            }
            );
            swiper.emit('changeDirection');
            if (needUpdate)
                swiper.update();
            return swiper;
        }

        changeLanguageDirection(direction) {
            const swiper = this;
            if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr')
                return;
            swiper.rtl = direction === 'rtl';
            swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;

            if (swiper.rtl) {
                swiper.$el.addClass(`${swiper.params.containerModifierClass}rtl`);
                swiper.el.dir = 'rtl';
            } else {
                swiper.$el.removeClass(`${swiper.params.containerModifierClass}rtl`);
                swiper.el.dir = 'ltr';
            }

            swiper.update();
        }

        mount(el) {
            const swiper = this;
            if (swiper.mounted)
                return true;
            // Find el

            const $el = $(el || swiper.params.el);
            el = $el[0];

            if (!el) {
                return false;
            }

            el.swiper = swiper;

            const getWrapperSelector = () => {
                return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;
            }
            ;

            const getWrapper = () => {
                if (el && el.shadowRoot && el.shadowRoot.querySelector) {
                    const res = $(el.shadowRoot.querySelector(getWrapperSelector()));
                    // Children needs to return slot items

                    res.children = options => $el.children(options);

                    return res;
                }

                if (!$el.children) {
                    return $($el).children(getWrapperSelector());
                }

                return $el.children(getWrapperSelector());
            }
            ;
            // Find Wrapper

            let $wrapperEl = getWrapper();

            if ($wrapperEl.length === 0 && swiper.params.createElements) {
                const document = getDocument();
                const wrapper = document.createElement('div');
                $wrapperEl = $(wrapper);
                wrapper.className = swiper.params.wrapperClass;
                $el.append(wrapper);
                $el.children(`.${swiper.params.slideClass}`).each(slideEl => {
                    $wrapperEl.append(slideEl);
                }
                );
            }

            Object.assign(swiper, {
                $el,
                el,
                $wrapperEl,
                wrapperEl: $wrapperEl[0],
                mounted: true,
                // RTL
                rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',
                rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),
                wrongRTL: $wrapperEl.css('display') === '-webkit-box'
            });
            return true;
        }

        init(el) {
            const swiper = this;
            if (swiper.initialized)
                return swiper;
            const mounted = swiper.mount(el);
            if (mounted === false)
                return swiper;
            swiper.emit('beforeInit');
            // Set breakpoint

            if (swiper.params.breakpoints) {
                swiper.setBreakpoint();
            }
            // Add Classes

            swiper.addClasses();
            // Create loop

            if (swiper.params.loop) {
                swiper.loopCreate();
            }
            // Update size

            swiper.updateSize();
            // Update slides

            swiper.updateSlides();

            if (swiper.params.watchOverflow) {
                swiper.checkOverflow();
            }
            // Set Grab Cursor

            if (swiper.params.grabCursor && swiper.enabled) {
                swiper.setGrabCursor();
            }

            if (swiper.params.preloadImages) {
                swiper.preloadImages();
            }
            // Slide To Initial Slide

            if (swiper.params.loop) {
                swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit, false, true);
            } else {
                swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);
            }
            // Attach events

            swiper.attachEvents();
            // Init Flag

            swiper.initialized = true;
            // Emit

            swiper.emit('init');
            swiper.emit('afterInit');
            return swiper;
        }

        destroy(deleteInstance, cleanStyles) {
            if (deleteInstance === void 0) {
                deleteInstance = true;
            }

            if (cleanStyles === void 0) {
                cleanStyles = true;
            }

            const swiper = this;
            const {params, $el, $wrapperEl, slides} = swiper;

            if (typeof swiper.params === 'undefined' || swiper.destroyed) {
                return null;
            }

            swiper.emit('beforeDestroy');
            // Init Flag

            swiper.initialized = false;
            // Detach events

            swiper.detachEvents();
            // Destroy loop

            if (params.loop) {
                swiper.loopDestroy();
            }
            // Cleanup styles

            if (cleanStyles) {
                swiper.removeClasses();
                $el.removeAttr('style');
                $wrapperEl.removeAttr('style');

                if (slides && slides.length) {
                    slides.removeClass([params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-slide-index');
                }
            }

            swiper.emit('destroy');
            // Detach emitter events

            Object.keys(swiper.eventsListeners).forEach(eventName => {
                swiper.off(eventName);
            }
            );

            if (deleteInstance !== false) {
                swiper.$el[0].swiper = null;
                deleteProps(swiper);
            }

            swiper.destroyed = true;
            return null;
        }

        static extendDefaults(newDefaults) {
            extend(extendedDefaults, newDefaults);
        }

        static get extendedDefaults() {
            return extendedDefaults;
        }

        static get defaults() {
            return defaults;
        }

        static installModule(mod) {
            if (!Swiper.prototype.__modules__)
                Swiper.prototype.__modules__ = [];
            const modules = Swiper.prototype.__modules__;

            if (typeof mod === 'function' && modules.indexOf(mod) < 0) {
                modules.push(mod);
            }
        }

        static use(module) {
            if (Array.isArray(module)) {
                module.forEach(m => Swiper.installModule(m));
                return Swiper;
            }

            Swiper.installModule(module);
            return Swiper;
        }

    }

    Object.keys(prototypes).forEach(prototypeGroup => {
        Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {
            Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];
        }
        );
    }
    );
    Swiper.use([Resize, Observer]);

    function Virtual(_ref) {
        let {swiper, extendParams, on, emit} = _ref;
        extendParams({
            virtual: {
                enabled: false,
                slides: [],
                cache: true,
                renderSlide: null,
                renderExternal: null,
                renderExternalUpdate: true,
                addSlidesBefore: 0,
                addSlidesAfter: 0
            }
        });
        let cssModeTimeout;
        swiper.virtual = {
            cache: {},
            from: undefined,
            to: undefined,
            slides: [],
            offset: 0,
            slidesGrid: []
        };

        function renderSlide(slide, index) {
            const params = swiper.params.virtual;

            if (params.cache && swiper.virtual.cache[index]) {
                return swiper.virtual.cache[index];
            }

            const $slideEl = params.renderSlide ? $(params.renderSlide.call(swiper, slide, index)) : $(`<div class="${swiper.params.slideClass}" data-swiper-slide-index="${index}">${slide}</div>`);
            if (!$slideEl.attr('data-swiper-slide-index'))
                $slideEl.attr('data-swiper-slide-index', index);
            if (params.cache)
                swiper.virtual.cache[index] = $slideEl;
            return $slideEl;
        }

        function update(force) {
            const {slidesPerView, slidesPerGroup, centeredSlides} = swiper.params;
            const {addSlidesBefore, addSlidesAfter} = swiper.params.virtual;
            const {from: previousFrom, to: previousTo, slides, slidesGrid: previousSlidesGrid, offset: previousOffset} = swiper.virtual;

            if (!swiper.params.cssMode) {
                swiper.updateActiveIndex();
            }

            const activeIndex = swiper.activeIndex || 0;
            let offsetProp;
            if (swiper.rtlTranslate)
                offsetProp = 'right';
            else
                offsetProp = swiper.isHorizontal() ? 'left' : 'top';
            let slidesAfter;
            let slidesBefore;

            if (centeredSlides) {
                slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;
                slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;
            } else {
                slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;
                slidesBefore = slidesPerGroup + addSlidesBefore;
            }

            const from = Math.max((activeIndex || 0) - slidesBefore, 0);
            const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);
            const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);
            Object.assign(swiper.virtual, {
                from,
                to,
                offset,
                slidesGrid: swiper.slidesGrid
            });

            function onRendered() {
                swiper.updateSlides();
                swiper.updateProgress();
                swiper.updateSlidesClasses();

                if (swiper.lazy && swiper.params.lazy.enabled) {
                    swiper.lazy.load();
                }

                emit('virtualUpdate');
            }

            if (previousFrom === from && previousTo === to && !force) {
                if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {
                    swiper.slides.css(offsetProp, `${offset}px`);
                }

                swiper.updateProgress();
                emit('virtualUpdate');
                return;
            }

            if (swiper.params.virtual.renderExternal) {
                swiper.params.virtual.renderExternal.call(swiper, {
                    offset,
                    from,
                    to,
                    slides: function getSlides() {
                        const slidesToRender = [];

                        for (let i = from; i <= to; i += 1) {
                            slidesToRender.push(slides[i]);
                        }

                        return slidesToRender;
                    }()
                });

                if (swiper.params.virtual.renderExternalUpdate) {
                    onRendered();
                } else {
                    emit('virtualUpdate');
                }

                return;
            }

            const prependIndexes = [];
            const appendIndexes = [];

            if (force) {
                swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();
            } else {
                for (let i = previousFrom; i <= previousTo; i += 1) {
                    if (i < from || i > to) {
                        swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index="${i}"]`).remove();
                    }
                }
            }

            for (let i = 0; i < slides.length; i += 1) {
                if (i >= from && i <= to) {
                    if (typeof previousTo === 'undefined' || force) {
                        appendIndexes.push(i);
                    } else {
                        if (i > previousTo)
                            appendIndexes.push(i);
                        if (i < previousFrom)
                            prependIndexes.push(i);
                    }
                }
            }

            appendIndexes.forEach(index => {
                swiper.$wrapperEl.append(renderSlide(slides[index], index));
            }
            );
            prependIndexes.sort( (a, b) => b - a).forEach(index => {
                swiper.$wrapperEl.prepend(renderSlide(slides[index], index));
            }
            );
            swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);
            onRendered();
        }

        function appendSlide(slides) {
            if (typeof slides === 'object' && 'length'in slides) {
                for (let i = 0; i < slides.length; i += 1) {
                    if (slides[i])
                        swiper.virtual.slides.push(slides[i]);
                }
            } else {
                swiper.virtual.slides.push(slides);
            }

            update(true);
        }

        function prependSlide(slides) {
            const activeIndex = swiper.activeIndex;
            let newActiveIndex = activeIndex + 1;
            let numberOfNewSlides = 1;

            if (Array.isArray(slides)) {
                for (let i = 0; i < slides.length; i += 1) {
                    if (slides[i])
                        swiper.virtual.slides.unshift(slides[i]);
                }

                newActiveIndex = activeIndex + slides.length;
                numberOfNewSlides = slides.length;
            } else {
                swiper.virtual.slides.unshift(slides);
            }

            if (swiper.params.virtual.cache) {
                const cache = swiper.virtual.cache;
                const newCache = {};
                Object.keys(cache).forEach(cachedIndex => {
                    const $cachedEl = cache[cachedIndex];
                    const cachedElIndex = $cachedEl.attr('data-swiper-slide-index');

                    if (cachedElIndex) {
                        $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);
                    }

                    newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;
                }
                );
                swiper.virtual.cache = newCache;
            }

            update(true);
            swiper.slideTo(newActiveIndex, 0);
        }

        function removeSlide(slidesIndexes) {
            if (typeof slidesIndexes === 'undefined' || slidesIndexes === null)
                return;
            let activeIndex = swiper.activeIndex;

            if (Array.isArray(slidesIndexes)) {
                for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {
                    swiper.virtual.slides.splice(slidesIndexes[i], 1);

                    if (swiper.params.virtual.cache) {
                        delete swiper.virtual.cache[slidesIndexes[i]];
                    }

                    if (slidesIndexes[i] < activeIndex)
                        activeIndex -= 1;
                    activeIndex = Math.max(activeIndex, 0);
                }
            } else {
                swiper.virtual.slides.splice(slidesIndexes, 1);

                if (swiper.params.virtual.cache) {
                    delete swiper.virtual.cache[slidesIndexes];
                }

                if (slidesIndexes < activeIndex)
                    activeIndex -= 1;
                activeIndex = Math.max(activeIndex, 0);
            }

            update(true);
            swiper.slideTo(activeIndex, 0);
        }

        function removeAllSlides() {
            swiper.virtual.slides = [];

            if (swiper.params.virtual.cache) {
                swiper.virtual.cache = {};
            }

            update(true);
            swiper.slideTo(0, 0);
        }

        on('beforeInit', () => {
            if (!swiper.params.virtual.enabled)
                return;
            swiper.virtual.slides = swiper.params.virtual.slides;
            swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);
            swiper.params.watchSlidesProgress = true;
            swiper.originalParams.watchSlidesProgress = true;

            if (!swiper.params.initialSlide) {
                update();
            }
        }
        );
        on('setTranslate', () => {
            if (!swiper.params.virtual.enabled)
                return;

            if (swiper.params.cssMode && !swiper._immediateVirtual) {
                clearTimeout(cssModeTimeout);
                cssModeTimeout = setTimeout( () => {
                    update();
                }
                , 100);
            } else {
                update();
            }
        }
        );
        on('init update resize', () => {
            if (!swiper.params.virtual.enabled)
                return;

            if (swiper.params.cssMode) {
                setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);
            }
        }
        );
        Object.assign(swiper.virtual, {
            appendSlide,
            prependSlide,
            removeSlide,
            removeAllSlides,
            update
        });
    }

    /* eslint-disable consistent-return */
    function Keyboard(_ref) {
        let {swiper, extendParams, on, emit} = _ref;
        const document = getDocument();
        const window = getWindow();
        swiper.keyboard = {
            enabled: false
        };
        extendParams({
            keyboard: {
                enabled: false,
                onlyInViewport: true,
                pageUpDown: true
            }
        });

        function handle(event) {
            if (!swiper.enabled)
                return;
            const {rtlTranslate: rtl} = swiper;
            let e = event;
            if (e.originalEvent)
                e = e.originalEvent;
            // jquery fix

            const kc = e.keyCode || e.charCode;
            const pageUpDown = swiper.params.keyboard.pageUpDown;
            const isPageUp = pageUpDown && kc === 33;
            const isPageDown = pageUpDown && kc === 34;
            const isArrowLeft = kc === 37;
            const isArrowRight = kc === 39;
            const isArrowUp = kc === 38;
            const isArrowDown = kc === 40;
            // Directions locks

            if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {
                return false;
            }

            if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {
                return false;
            }

            if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {
                return undefined;
            }

            if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {
                return undefined;
            }

            if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {
                let inView = false;
                // Check that swiper should be inside of visible area of window

                if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {
                    return undefined;
                }

                const $el = swiper.$el;
                const swiperWidth = $el[0].clientWidth;
                const swiperHeight = $el[0].clientHeight;
                const windowWidth = window.innerWidth;
                const windowHeight = window.innerHeight;
                const swiperOffset = swiper.$el.offset();
                if (rtl)
                    swiperOffset.left -= swiper.$el[0].scrollLeft;
                const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];

                for (let i = 0; i < swiperCoord.length; i += 1) {
                    const point = swiperCoord[i];

                    if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {
                        if (point[0] === 0 && point[1] === 0)
                            continue;
                        // eslint-disable-line

                        inView = true;
                    }
                }

                if (!inView)
                    return undefined;
            }

            if (swiper.isHorizontal()) {
                if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {
                    if (e.preventDefault)
                        e.preventDefault();
                    else
                        e.returnValue = false;
                }

                if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl)
                    swiper.slideNext();
                if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl)
                    swiper.slidePrev();
            } else {
                if (isPageUp || isPageDown || isArrowUp || isArrowDown) {
                    if (e.preventDefault)
                        e.preventDefault();
                    else
                        e.returnValue = false;
                }

                if (isPageDown || isArrowDown)
                    swiper.slideNext();
                if (isPageUp || isArrowUp)
                    swiper.slidePrev();
            }

            emit('keyPress', kc);
            return undefined;
        }

        function enable() {
            if (swiper.keyboard.enabled)
                return;
            $(document).on('keydown', handle);
            swiper.keyboard.enabled = true;
        }

        function disable() {
            if (!swiper.keyboard.enabled)
                return;
            $(document).off('keydown', handle);
            swiper.keyboard.enabled = false;
        }

        on('init', () => {
            if (swiper.params.keyboard.enabled) {
                enable();
            }
        }
        );
        on('destroy', () => {
            if (swiper.keyboard.enabled) {
                disable();
            }
        }
        );
        Object.assign(swiper.keyboard, {
            enable,
            disable
        });
    }

    /* eslint-disable consistent-return */
    function Mousewheel(_ref) {
        let {swiper, extendParams, on, emit} = _ref;
        const window = getWindow();
        extendParams({
            mousewheel: {
                enabled: false,
                releaseOnEdges: false,
                invert: false,
                forceToAxis: false,
                sensitivity: 1,
                eventsTarget: 'container',
                thresholdDelta: null,
                thresholdTime: null
            }
        });
        swiper.mousewheel = {
            enabled: false
        };
        let timeout;
        let lastScrollTime = now();
        let lastEventBeforeSnap;
        const recentWheelEvents = [];

        function normalize(e) {
            // Reasonable defaults
            const PIXEL_STEP = 10;
            const LINE_HEIGHT = 40;
            const PAGE_HEIGHT = 800;
            let sX = 0;
            let sY = 0;
            // spinX, spinY

            let pX = 0;
            let pY = 0;
            // pixelX, pixelY
            // Legacy

            if ('detail'in e) {
                sY = e.detail;
            }

            if ('wheelDelta'in e) {
                sY = -e.wheelDelta / 120;
            }

            if ('wheelDeltaY'in e) {
                sY = -e.wheelDeltaY / 120;
            }

            if ('wheelDeltaX'in e) {
                sX = -e.wheelDeltaX / 120;
            }
            // side scrolling on FF with DOMMouseScroll

            if ('axis'in e && e.axis === e.HORIZONTAL_AXIS) {
                sX = sY;
                sY = 0;
            }

            pX = sX * PIXEL_STEP;
            pY = sY * PIXEL_STEP;

            if ('deltaY'in e) {
                pY = e.deltaY;
            }

            if ('deltaX'in e) {
                pX = e.deltaX;
            }

            if (e.shiftKey && !pX) {
                // if user scrolls with shift he wants horizontal scroll
                pX = pY;
                pY = 0;
            }

            if ((pX || pY) && e.deltaMode) {
                if (e.deltaMode === 1) {
                    // delta in LINE units
                    pX *= LINE_HEIGHT;
                    pY *= LINE_HEIGHT;
                } else {
                    // delta in PAGE units
                    pX *= PAGE_HEIGHT;
                    pY *= PAGE_HEIGHT;
                }
            }
            // Fall-back if spin cannot be determined

            if (pX && !sX) {
                sX = pX < 1 ? -1 : 1;
            }

            if (pY && !sY) {
                sY = pY < 1 ? -1 : 1;
            }

            return {
                spinX: sX,
                spinY: sY,
                pixelX: pX,
                pixelY: pY
            };
        }

        function handleMouseEnter() {
            if (!swiper.enabled)
                return;
            swiper.mouseEntered = true;
        }

        function handleMouseLeave() {
            if (!swiper.enabled)
                return;
            swiper.mouseEntered = false;
        }

        function animateSlider(newEvent) {
            if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {
                // Prevent if delta of wheel scroll delta is below configured threshold
                return false;
            }

            if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {
                // Prevent if time between scrolls is below configured threshold
                return false;
            }
            // If the movement is NOT big enough and
            // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):
            //   Don't go any further (avoid insignificant scroll movement).

            if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {
                // Return false as a default
                return true;
            }
            // If user is scrolling towards the end:
            //   If the slider hasn't hit the latest slide or
            //   if the slider is a loop and
            //   if the slider isn't moving right now:
            //     Go to next slide and
            //     emit a scroll event.
            // Else (the user is scrolling towards the beginning) and
            // if the slider hasn't hit the first slide or
            // if the slider is a loop and
            // if the slider isn't moving right now:
            //   Go to prev slide and
            //   emit a scroll event.

            if (newEvent.direction < 0) {
                if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {
                    swiper.slideNext();
                    emit('scroll', newEvent.raw);
                }
            } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {
                swiper.slidePrev();
                emit('scroll', newEvent.raw);
            }
            // If you got here is because an animation has been triggered so store the current time

            lastScrollTime = new window.Date().getTime();
            // Return false as a default

            return false;
        }

        function releaseScroll(newEvent) {
            const params = swiper.params.mousewheel;

            if (newEvent.direction < 0) {
                if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {
                    // Return true to animate scroll on edges
                    return true;
                }
            } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {
                // Return true to animate scroll on edges
                return true;
            }

            return false;
        }

        function handle(event) {
            let e = event;
            let disableParentSwiper = true;
            if (!swiper.enabled)
                return;
            const params = swiper.params.mousewheel;

            if (swiper.params.cssMode) {
                e.preventDefault();
            }

            let target = swiper.$el;

            if (swiper.params.mousewheel.eventsTarget !== 'container') {
                target = $(swiper.params.mousewheel.eventsTarget);
            }

            if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges)
                return true;
            if (e.originalEvent)
                e = e.originalEvent;
            // jquery fix

            let delta = 0;
            const rtlFactor = swiper.rtlTranslate ? -1 : 1;
            const data = normalize(e);

            if (params.forceToAxis) {
                if (swiper.isHorizontal()) {
                    if (Math.abs(data.pixelX) > Math.abs(data.pixelY))
                        delta = -data.pixelX * rtlFactor;
                    else
                        return true;
                } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX))
                    delta = -data.pixelY;
                else
                    return true;
            } else {
                delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;
            }

            if (delta === 0)
                return true;
            if (params.invert)
                delta = -delta;
            // Get the scroll positions

            let positions = swiper.getTranslate() + delta * params.sensitivity;
            if (positions >= swiper.minTranslate())
                positions = swiper.minTranslate();
            if (positions <= swiper.maxTranslate())
                positions = swiper.maxTranslate();
            // When loop is true:
            //     the disableParentSwiper will be true.
            // When loop is false:
            //     if the scroll positions is not on edge,
            //     then the disableParentSwiper will be true.
            //     if the scroll on edge positions,
            //     then the disableParentSwiper will be false.

            disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());
            if (disableParentSwiper && swiper.params.nested)
                e.stopPropagation();

            if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {
                // Register the new event in a variable which stores the relevant data
                const newEvent = {
                    time: now(),
                    delta: Math.abs(delta),
                    direction: Math.sign(delta),
                    raw: event
                };
                // Keep the most recent events

                if (recentWheelEvents.length >= 2) {
                    recentWheelEvents.shift();
                    // only store the last N events
                }

                const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;
                recentWheelEvents.push(newEvent);
                // If there is at least one previous recorded event:
                //   If direction has changed or
                //   if the scroll is quicker than the previous one:
                //     Animate the slider.
                // Else (this is the first time the wheel is moved):
                //     Animate the slider.

                if (prevEvent) {
                    if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {
                        animateSlider(newEvent);
                    }
                } else {
                    animateSlider(newEvent);
                }
                // If it's time to release the scroll:
                //   Return now so you don't hit the preventDefault.

                if (releaseScroll(newEvent)) {
                    return true;
                }
            } else {
                // Freemode or scrollContainer:
                // If we recently snapped after a momentum scroll, then ignore wheel events
                // to give time for the deceleration to finish. Stop ignoring after 500 msecs
                // or if it's a new scroll (larger delta or inverse sign as last event before
                // an end-of-momentum snap).
                const newEvent = {
                    time: now(),
                    delta: Math.abs(delta),
                    direction: Math.sign(delta)
                };
                const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;

                if (!ignoreWheelEvents) {
                    lastEventBeforeSnap = undefined;

                    if (swiper.params.loop) {
                        swiper.loopFix();
                    }

                    let position = swiper.getTranslate() + delta * params.sensitivity;
                    const wasBeginning = swiper.isBeginning;
                    const wasEnd = swiper.isEnd;
                    if (position >= swiper.minTranslate())
                        position = swiper.minTranslate();
                    if (position <= swiper.maxTranslate())
                        position = swiper.maxTranslate();
                    swiper.setTransition(0);
                    swiper.setTranslate(position);
                    swiper.updateProgress();
                    swiper.updateActiveIndex();
                    swiper.updateSlidesClasses();

                    if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {
                        swiper.updateSlidesClasses();
                    }

                    if (swiper.params.freeMode.sticky) {
                        // When wheel scrolling starts with sticky (aka snap) enabled, then detect
                        // the end of a momentum scroll by storing recent (N=15?) wheel events.
                        // 1. do all N events have decreasing or same (absolute value) delta?
                        // 2. did all N events arrive in the last M (M=500?) msecs?
                        // 3. does the earliest event have an (absolute value) delta that's
                        //    at least P (P=1?) larger than the most recent event's delta?
                        // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?
                        // If 1-4 are "yes" then we're near the end of a momentum scroll deceleration.
                        // Snap immediately and ignore remaining wheel events in this scroll.
                        // See comment above for "remaining wheel events in this scroll" determination.
                        // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.
                        clearTimeout(timeout);
                        timeout = undefined;

                        if (recentWheelEvents.length >= 15) {
                            recentWheelEvents.shift();
                            // only store the last N events
                        }

                        const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;
                        const firstEvent = recentWheelEvents[0];
                        recentWheelEvents.push(newEvent);

                        if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {
                            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.
                            recentWheelEvents.splice(0);
                        } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {
                            // We're at the end of the deceleration of a momentum scroll, so there's no need
                            // to wait for more events. Snap ASAP on the next tick.
                            // Also, because there's some remaining momentum we'll bias the snap in the
                            // direction of the ongoing scroll because it's better UX for the scroll to snap
                            // in the same direction as the scroll instead of reversing to snap.  Therefore,
                            // if it's already scrolled more than 20% in the current direction, keep going.
                            const snapToThreshold = delta > 0 ? 0.8 : 0.2;
                            lastEventBeforeSnap = newEvent;
                            recentWheelEvents.splice(0);
                            timeout = nextTick( () => {
                                swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);
                            }
                            , 0);
                            // no delay; move on next tick
                        }

                        if (!timeout) {
                            // if we get here, then we haven't detected the end of a momentum scroll, so
                            // we'll consider a scroll "complete" when there haven't been any wheel events
                            // for 500ms.
                            timeout = nextTick( () => {
                                const snapToThreshold = 0.5;
                                lastEventBeforeSnap = newEvent;
                                recentWheelEvents.splice(0);
                                swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);
                            }
                            , 500);
                        }
                    }
                    // Emit event

                    if (!ignoreWheelEvents)
                        emit('scroll', e);
                    // Stop autoplay

                    if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction)
                        swiper.autoplay.stop();
                    // Return page scroll on edge positions

                    if (position === swiper.minTranslate() || position === swiper.maxTranslate())
                        return true;
                }
            }

            if (e.preventDefault)
                e.preventDefault();
            else
                e.returnValue = false;
            return false;
        }

        function events(method) {
            let target = swiper.$el;

            if (swiper.params.mousewheel.eventsTarget !== 'container') {
                target = $(swiper.params.mousewheel.eventsTarget);
            }

            target[method]('mouseenter', handleMouseEnter);
            target[method]('mouseleave', handleMouseLeave);
            target[method]('wheel', handle);
        }

        function enable() {
            if (swiper.params.cssMode) {
                swiper.wrapperEl.removeEventListener('wheel', handle);
                return true;
            }

            if (swiper.mousewheel.enabled)
                return false;
            events('on');
            swiper.mousewheel.enabled = true;
            return true;
        }

        function disable() {
            if (swiper.params.cssMode) {
                swiper.wrapperEl.addEventListener(event, handle);
                return true;
            }

            if (!swiper.mousewheel.enabled)
                return false;
            events('off');
            swiper.mousewheel.enabled = false;
            return true;
        }

        on('init', () => {
            if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {
                disable();
            }

            if (swiper.params.mousewheel.enabled)
                enable();
        }
        );
        on('destroy', () => {
            if (swiper.params.cssMode) {
                enable();
            }

            if (swiper.mousewheel.enabled)
                disable();
        }
        );
        Object.assign(swiper.mousewheel, {
            enable,
            disable
        });
    }

    function createElementIfNotDefined(swiper, originalParams, params, checkProps) {
        const document = getDocument();

        if (swiper.params.createElements) {
            Object.keys(checkProps).forEach(key => {
                if (!params[key] && params.auto === true) {
                    let element = swiper.$el.children(`.${checkProps[key]}`)[0];

                    if (!element) {
                        element = document.createElement('div');
                        element.className = checkProps[key];
                        swiper.$el.append(element);
                    }

                    params[key] = element;
                    originalParams[key] = element;
                }
            }
            );
        }

        return params;
    }

    function Navigation(_ref) {
        let {swiper, extendParams, on, emit} = _ref;
        extendParams({
            navigation: {
                nextEl: null,
                prevEl: null,
                hideOnClick: false,
                disabledClass: 'swiper-button-disabled',
                hiddenClass: 'swiper-button-hidden',
                lockClass: 'swiper-button-lock',
                navigationDisabledClass: 'swiper-navigation-disabled'
            }
        });
        swiper.navigation = {
            nextEl: null,
            $nextEl: null,
            prevEl: null,
            $prevEl: null
        };

        function getEl(el) {
            let $el;

            if (el) {
                $el = $(el);

                if (swiper.params.uniqueNavElements && typeof el === 'string' && $el.length > 1 && swiper.$el.find(el).length === 1) {
                    $el = swiper.$el.find(el);
                }
            }

            return $el;
        }

        function toggleEl($el, disabled) {
            const params = swiper.params.navigation;

            if ($el && $el.length > 0) {
                $el[disabled ? 'addClass' : 'removeClass'](params.disabledClass);
                if ($el[0] && $el[0].tagName === 'BUTTON')
                    $el[0].disabled = disabled;

                if (swiper.params.watchOverflow && swiper.enabled) {
                    $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);
                }
            }
        }

        function update() {
            // Update Navigation Buttons
            if (swiper.params.loop)
                return;
            const {$nextEl, $prevEl} = swiper.navigation;
            toggleEl($prevEl, swiper.isBeginning && !swiper.params.rewind);
            toggleEl($nextEl, swiper.isEnd && !swiper.params.rewind);
        }

        function onPrevClick(e) {
            e.preventDefault();
            if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind)
                return;
            swiper.slidePrev();
            emit('navigationPrev');
        }

        function onNextClick(e) {
            e.preventDefault();
            if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind)
                return;
            swiper.slideNext();
            emit('navigationNext');
        }

        function init() {
            const params = swiper.params.navigation;
            swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {
                nextEl: 'swiper-button-next',
                prevEl: 'swiper-button-prev'
            });
            if (!(params.nextEl || params.prevEl))
                return;
            const $nextEl = getEl(params.nextEl);
            const $prevEl = getEl(params.prevEl);

            if ($nextEl && $nextEl.length > 0) {
                $nextEl.on('click', onNextClick);
            }

            if ($prevEl && $prevEl.length > 0) {
                $prevEl.on('click', onPrevClick);
            }

            Object.assign(swiper.navigation, {
                $nextEl,
                nextEl: $nextEl && $nextEl[0],
                $prevEl,
                prevEl: $prevEl && $prevEl[0]
            });

            if (!swiper.enabled) {
                if ($nextEl)
                    $nextEl.addClass(params.lockClass);
                if ($prevEl)
                    $prevEl.addClass(params.lockClass);
            }
        }

        function destroy() {
            const {$nextEl, $prevEl} = swiper.navigation;

            if ($nextEl && $nextEl.length) {
                $nextEl.off('click', onNextClick);
                $nextEl.removeClass(swiper.params.navigation.disabledClass);
            }

            if ($prevEl && $prevEl.length) {
                $prevEl.off('click', onPrevClick);
                $prevEl.removeClass(swiper.params.navigation.disabledClass);
            }
        }

        on('init', () => {
            if (swiper.params.navigation.enabled === false) {
                // eslint-disable-next-line
                disable();
            } else {
                init();
                update();
            }
        }
        );
        on('toEdge fromEdge lock unlock', () => {
            update();
        }
        );
        on('destroy', () => {
            destroy();
        }
        );
        on('enable disable', () => {
            const {$nextEl, $prevEl} = swiper.navigation;

            if ($nextEl) {
                $nextEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);
            }

            if ($prevEl) {
                $prevEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);
            }
        }
        );
        on('click', (_s, e) => {
            const {$nextEl, $prevEl} = swiper.navigation;
            const targetEl = e.target;

            if (swiper.params.navigation.hideOnClick && !$(targetEl).is($prevEl) && !$(targetEl).is($nextEl)) {
                if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl)))
                    return;
                let isHidden;

                if ($nextEl) {
                    isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);
                } else if ($prevEl) {
                    isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);
                }

                if (isHidden === true) {
                    emit('navigationShow');
                } else {
                    emit('navigationHide');
                }

                if ($nextEl) {
                    $nextEl.toggleClass(swiper.params.navigation.hiddenClass);
                }

                if ($prevEl) {
                    $prevEl.toggleClass(swiper.params.navigation.hiddenClass);
                }
            }
        }
        );

        const enable = () => {
            swiper.$el.removeClass(swiper.params.navigation.navigationDisabledClass);
            init();
            update();
        }
        ;

        const disable = () => {
            swiper.$el.addClass(swiper.params.navigation.navigationDisabledClass);
            destroy();
        }
        ;

        Object.assign(swiper.navigation, {
            enable,
            disable,
            update,
            init,
            destroy
        });
    }

    function classesToSelector(classes) {
        if (classes === void 0) {
            classes = '';
        }

        return `.${classes.trim().replace(/([\.:!\/])/g, '\\$1')// eslint-disable-line
        .replace(/ /g, '.')}`;
    }

    function Pagination(_ref) {
        let {swiper, extendParams, on, emit} = _ref;
        const pfx = 'swiper-pagination';
        extendParams({
            pagination: {
                el: null,
                bulletElement: 'span',
                clickable: false,
                hideOnClick: false,
                renderBullet: null,
                renderProgressbar: null,
                renderFraction: null,
                renderCustom: null,
                progressbarOpposite: false,
                type: 'bullets',
                // 'bullets' or 'progressbar' or 'fraction' or 'custom'
                dynamicBullets: false,
                dynamicMainBullets: 1,
                formatFractionCurrent: number => number,
                formatFractionTotal: number => number,
                bulletClass: `${pfx}-bullet`,
                bulletActiveClass: `${pfx}-bullet-active`,
                modifierClass: `${pfx}-`,
                currentClass: `${pfx}-current`,
                totalClass: `${pfx}-total`,
                hiddenClass: `${pfx}-hidden`,
                progressbarFillClass: `${pfx}-progressbar-fill`,
                progressbarOppositeClass: `${pfx}-progressbar-opposite`,
                clickableClass: `${pfx}-clickable`,
                lockClass: `${pfx}-lock`,
                horizontalClass: `${pfx}-horizontal`,
                verticalClass: `${pfx}-vertical`,
                paginationDisabledClass: `${pfx}-disabled`
            }
        });
        swiper.pagination = {
            el: null,
            $el: null,
            bullets: []
        };
        let bulletSize;
        let dynamicBulletIndex = 0;

        function isPaginationDisabled() {
            return !swiper.params.pagination.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0;
        }

        function setSideBullets($bulletEl, position) {
            const {bulletActiveClass} = swiper.params.pagination;
            $bulletEl[position]().addClass(`${bulletActiveClass}-${position}`)[position]().addClass(`${bulletActiveClass}-${position}-${position}`);
        }

        function update() {
            // Render || Update Pagination bullets/items
            const rtl = swiper.rtl;
            const params = swiper.params.pagination;
            if (isPaginationDisabled())
                return;
            const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;
            const $el = swiper.pagination.$el;
            // Current/Total

            let current;
            const total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;

            if (swiper.params.loop) {
                current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);

                if (current > slidesLength - 1 - swiper.loopedSlides * 2) {
                    current -= slidesLength - swiper.loopedSlides * 2;
                }

                if (current > total - 1)
                    current -= total;
                if (current < 0 && swiper.params.paginationType !== 'bullets')
                    current = total + current;
            } else if (typeof swiper.snapIndex !== 'undefined') {
                current = swiper.snapIndex;
            } else {
                current = swiper.activeIndex || 0;
            }
            // Types

            if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {
                const bullets = swiper.pagination.bullets;
                let firstIndex;
                let lastIndex;
                let midIndex;

                if (params.dynamicBullets) {
                    bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);
                    $el.css(swiper.isHorizontal() ? 'width' : 'height', `${bulletSize * (params.dynamicMainBullets + 4)}px`);

                    if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {
                        dynamicBulletIndex += current - (swiper.previousIndex - swiper.loopedSlides || 0);

                        if (dynamicBulletIndex > params.dynamicMainBullets - 1) {
                            dynamicBulletIndex = params.dynamicMainBullets - 1;
                        } else if (dynamicBulletIndex < 0) {
                            dynamicBulletIndex = 0;
                        }
                    }

                    firstIndex = Math.max(current - dynamicBulletIndex, 0);
                    lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);
                    midIndex = (lastIndex + firstIndex) / 2;
                }

                bullets.removeClass(['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`).join(' '));

                if ($el.length > 1) {
                    bullets.each(bullet => {
                        const $bullet = $(bullet);
                        const bulletIndex = $bullet.index();

                        if (bulletIndex === current) {
                            $bullet.addClass(params.bulletActiveClass);
                        }

                        if (params.dynamicBullets) {
                            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {
                                $bullet.addClass(`${params.bulletActiveClass}-main`);
                            }

                            if (bulletIndex === firstIndex) {
                                setSideBullets($bullet, 'prev');
                            }

                            if (bulletIndex === lastIndex) {
                                setSideBullets($bullet, 'next');
                            }
                        }
                    }
                    );
                } else {
                    const $bullet = bullets.eq(current);
                    const bulletIndex = $bullet.index();
                    $bullet.addClass(params.bulletActiveClass);

                    if (params.dynamicBullets) {
                        const $firstDisplayedBullet = bullets.eq(firstIndex);
                        const $lastDisplayedBullet = bullets.eq(lastIndex);

                        for (let i = firstIndex; i <= lastIndex; i += 1) {
                            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);
                        }

                        if (swiper.params.loop) {
                            if (bulletIndex >= bullets.length) {
                                for (let i = params.dynamicMainBullets; i >= 0; i -= 1) {
                                    bullets.eq(bullets.length - i).addClass(`${params.bulletActiveClass}-main`);
                                }

                                bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(`${params.bulletActiveClass}-prev`);
                            } else {
                                setSideBullets($firstDisplayedBullet, 'prev');
                                setSideBullets($lastDisplayedBullet, 'next');
                            }
                        } else {
                            setSideBullets($firstDisplayedBullet, 'prev');
                            setSideBullets($lastDisplayedBullet, 'next');
                        }
                    }
                }

                if (params.dynamicBullets) {
                    const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);
                    const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;
                    const offsetProp = rtl ? 'right' : 'left';
                    bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);
                }
            }

            if (params.type === 'fraction') {
                $el.find(classesToSelector(params.currentClass)).text(params.formatFractionCurrent(current + 1));
                $el.find(classesToSelector(params.totalClass)).text(params.formatFractionTotal(total));
            }

            if (params.type === 'progressbar') {
                let progressbarDirection;

                if (params.progressbarOpposite) {
                    progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';
                } else {
                    progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';
                }

                const scale = (current + 1) / total;
                let scaleX = 1;
                let scaleY = 1;

                if (progressbarDirection === 'horizontal') {
                    scaleX = scale;
                } else {
                    scaleY = scale;
                }

                $el.find(classesToSelector(params.progressbarFillClass)).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);
            }

            if (params.type === 'custom' && params.renderCustom) {
                $el.html(params.renderCustom(swiper, current + 1, total));
                emit('paginationRender', $el[0]);
            } else {
                emit('paginationUpdate', $el[0]);
            }

            if (swiper.params.watchOverflow && swiper.enabled) {
                $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);
            }
        }

        function render() {
            // Render Container
            const params = swiper.params.pagination;
            if (isPaginationDisabled())
                return;
            const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;
            const $el = swiper.pagination.$el;
            let paginationHTML = '';

            if (params.type === 'bullets') {
                let numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;

                if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.loop && numberOfBullets > slidesLength) {
                    numberOfBullets = slidesLength;
                }

                for (let i = 0; i < numberOfBullets; i += 1) {
                    if (params.renderBullet) {
                        paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);
                    } else {
                        paginationHTML += `<${params.bulletElement} class="${params.bulletClass}"></${params.bulletElement}>`;
                    }
                }

                $el.html(paginationHTML);
                swiper.pagination.bullets = $el.find(classesToSelector(params.bulletClass));
            }

            if (params.type === 'fraction') {
                if (params.renderFraction) {
                    paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);
                } else {
                    paginationHTML = `<span class="${params.currentClass}"></span>` + ' / ' + `<span class="${params.totalClass}"></span>`;
                }

                $el.html(paginationHTML);
            }

            if (params.type === 'progressbar') {
                if (params.renderProgressbar) {
                    paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);
                } else {
                    paginationHTML = `<span class="${params.progressbarFillClass}"></span>`;
                }

                $el.html(paginationHTML);
            }

            if (params.type !== 'custom') {
                emit('paginationRender', swiper.pagination.$el[0]);
            }
        }

        function init() {
            swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {
                el: 'swiper-pagination'
            });
            const params = swiper.params.pagination;
            if (!params.el)
                return;
            let $el = $(params.el);
            if ($el.length === 0)
                return;

            if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1) {
                $el = swiper.$el.find(params.el);
                // check if it belongs to another nested Swiper

                if ($el.length > 1) {
                    $el = $el.filter(el => {
                        if ($(el).parents('.swiper')[0] !== swiper.el)
                            return false;
                        return true;
                    }
                    );
                }
            }

            if (params.type === 'bullets' && params.clickable) {
                $el.addClass(params.clickableClass);
            }

            $el.addClass(params.modifierClass + params.type);
            $el.addClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);

            if (params.type === 'bullets' && params.dynamicBullets) {
                $el.addClass(`${params.modifierClass}${params.type}-dynamic`);
                dynamicBulletIndex = 0;

                if (params.dynamicMainBullets < 1) {
                    params.dynamicMainBullets = 1;
                }
            }

            if (params.type === 'progressbar' && params.progressbarOpposite) {
                $el.addClass(params.progressbarOppositeClass);
            }

            if (params.clickable) {
                $el.on('click', classesToSelector(params.bulletClass), function onClick(e) {
                    e.preventDefault();
                    let index = $(this).index() * swiper.params.slidesPerGroup;
                    if (swiper.params.loop)
                        index += swiper.loopedSlides;
                    swiper.slideTo(index);
                });
            }

            Object.assign(swiper.pagination, {
                $el,
                el: $el[0]
            });

            if (!swiper.enabled) {
                $el.addClass(params.lockClass);
            }
        }

        function destroy() {
            const params = swiper.params.pagination;
            if (isPaginationDisabled())
                return;
            const $el = swiper.pagination.$el;
            $el.removeClass(params.hiddenClass);
            $el.removeClass(params.modifierClass + params.type);
            $el.removeClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);
            if (swiper.pagination.bullets && swiper.pagination.bullets.removeClass)
                swiper.pagination.bullets.removeClass(params.bulletActiveClass);

            if (params.clickable) {
                $el.off('click', classesToSelector(params.bulletClass));
            }
        }

        on('init', () => {
            if (swiper.params.pagination.enabled === false) {
                // eslint-disable-next-line
                disable();
            } else {
                init();
                render();
                update();
            }
        }
        );
        on('activeIndexChange', () => {
            if (swiper.params.loop) {
                update();
            } else if (typeof swiper.snapIndex === 'undefined') {
                update();
            }
        }
        );
        on('snapIndexChange', () => {
            if (!swiper.params.loop) {
                update();
            }
        }
        );
        on('slidesLengthChange', () => {
            if (swiper.params.loop) {
                render();
                update();
            }
        }
        );
        on('snapGridLengthChange', () => {
            if (!swiper.params.loop) {
                render();
                update();
            }
        }
        );
        on('destroy', () => {
            destroy();
        }
        );
        on('enable disable', () => {
            const {$el} = swiper.pagination;

            if ($el) {
                $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.pagination.lockClass);
            }
        }
        );
        on('lock unlock', () => {
            update();
        }
        );
        on('click', (_s, e) => {
            const targetEl = e.target;
            const {$el} = swiper.pagination;

            if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && $el && $el.length > 0 && !$(targetEl).hasClass(swiper.params.pagination.bulletClass)) {
                if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl))
                    return;
                const isHidden = $el.hasClass(swiper.params.pagination.hiddenClass);

                if (isHidden === true) {
                    emit('paginationShow');
                } else {
                    emit('paginationHide');
                }

                $el.toggleClass(swiper.params.pagination.hiddenClass);
            }
        }
        );

        const enable = () => {
            swiper.$el.removeClass(swiper.params.pagination.paginationDisabledClass);

            if (swiper.pagination.$el) {
                swiper.pagination.$el.removeClass(swiper.params.pagination.paginationDisabledClass);
            }

            init();
            render();
            update();
        }
        ;

        const disable = () => {
            swiper.$el.addClass(swiper.params.pagination.paginationDisabledClass);

            if (swiper.pagination.$el) {
                swiper.pagination.$el.addClass(swiper.params.pagination.paginationDisabledClass);
            }

            destroy();
        }
        ;

        Object.assign(swiper.pagination, {
            enable,
            disable,
            render,
            update,
            init,
            destroy
        });
    }

    function Scrollbar(_ref) {
        let {swiper, extendParams, on, emit} = _ref;
        const document = getDocument();
        let isTouched = false;
        let timeout = null;
        let dragTimeout = null;
        let dragStartPos;
        let dragSize;
        let trackSize;
        let divider;
        extendParams({
            scrollbar: {
                el: null,
                dragSize: 'auto',
                hide: false,
                draggable: false,
                snapOnRelease: true,
                lockClass: 'swiper-scrollbar-lock',
                dragClass: 'swiper-scrollbar-drag',
                scrollbarDisabledClass: 'swiper-scrollbar-disabled',
                horizontalClass: `swiper-scrollbar-horizontal`,
                verticalClass: `swiper-scrollbar-vertical`
            }
        });
        swiper.scrollbar = {
            el: null,
            dragEl: null,
            $el: null,
            $dragEl: null
        };

        function setTranslate() {
            if (!swiper.params.scrollbar.el || !swiper.scrollbar.el)
                return;
            const {scrollbar, rtlTranslate: rtl, progress} = swiper;
            const {$dragEl, $el} = scrollbar;
            const params = swiper.params.scrollbar;
            let newSize = dragSize;
            let newPos = (trackSize - dragSize) * progress;

            if (rtl) {
                newPos = -newPos;

                if (newPos > 0) {
                    newSize = dragSize - newPos;
                    newPos = 0;
                } else if (-newPos + dragSize > trackSize) {
                    newSize = trackSize + newPos;
                }
            } else if (newPos < 0) {
                newSize = dragSize + newPos;
                newPos = 0;
            } else if (newPos + dragSize > trackSize) {
                newSize = trackSize - newPos;
            }

            if (swiper.isHorizontal()) {
                $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);
                $dragEl[0].style.width = `${newSize}px`;
            } else {
                $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);
                $dragEl[0].style.height = `${newSize}px`;
            }

            if (params.hide) {
                clearTimeout(timeout);
                $el[0].style.opacity = 1;
                timeout = setTimeout( () => {
                    $el[0].style.opacity = 0;
                    $el.transition(400);
                }
                , 1000);
            }
        }

        function setTransition(duration) {
            if (!swiper.params.scrollbar.el || !swiper.scrollbar.el)
                return;
            swiper.scrollbar.$dragEl.transition(duration);
        }

        function updateSize() {
            if (!swiper.params.scrollbar.el || !swiper.scrollbar.el)
                return;
            const {scrollbar} = swiper;
            const {$dragEl, $el} = scrollbar;
            $dragEl[0].style.width = '';
            $dragEl[0].style.height = '';
            trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;
            divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));

            if (swiper.params.scrollbar.dragSize === 'auto') {
                dragSize = trackSize * divider;
            } else {
                dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);
            }

            if (swiper.isHorizontal()) {
                $dragEl[0].style.width = `${dragSize}px`;
            } else {
                $dragEl[0].style.height = `${dragSize}px`;
            }

            if (divider >= 1) {
                $el[0].style.display = 'none';
            } else {
                $el[0].style.display = '';
            }

            if (swiper.params.scrollbar.hide) {
                $el[0].style.opacity = 0;
            }

            if (swiper.params.watchOverflow && swiper.enabled) {
                scrollbar.$el[swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);
            }
        }

        function getPointerPosition(e) {
            if (swiper.isHorizontal()) {
                return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientX : e.clientX;
            }

            return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientY : e.clientY;
        }

        function setDragPosition(e) {
            const {scrollbar, rtlTranslate: rtl} = swiper;
            const {$el} = scrollbar;
            let positionRatio;
            positionRatio = (getPointerPosition(e) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);
            positionRatio = Math.max(Math.min(positionRatio, 1), 0);

            if (rtl) {
                positionRatio = 1 - positionRatio;
            }

            const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;
            swiper.updateProgress(position);
            swiper.setTranslate(position);
            swiper.updateActiveIndex();
            swiper.updateSlidesClasses();
        }

        function onDragStart(e) {
            const params = swiper.params.scrollbar;
            const {scrollbar, $wrapperEl} = swiper;
            const {$el, $dragEl} = scrollbar;
            isTouched = true;
            dragStartPos = e.target === $dragEl[0] || e.target === $dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;
            e.preventDefault();
            e.stopPropagation();
            $wrapperEl.transition(100);
            $dragEl.transition(100);
            setDragPosition(e);
            clearTimeout(dragTimeout);
            $el.transition(0);

            if (params.hide) {
                $el.css('opacity', 1);
            }

            if (swiper.params.cssMode) {
                swiper.$wrapperEl.css('scroll-snap-type', 'none');
            }

            emit('scrollbarDragStart', e);
        }

        function onDragMove(e) {
            const {scrollbar, $wrapperEl} = swiper;
            const {$el, $dragEl} = scrollbar;
            if (!isTouched)
                return;
            if (e.preventDefault)
                e.preventDefault();
            else
                e.returnValue = false;
            setDragPosition(e);
            $wrapperEl.transition(0);
            $el.transition(0);
            $dragEl.transition(0);
            emit('scrollbarDragMove', e);
        }

        function onDragEnd(e) {
            const params = swiper.params.scrollbar;
            const {scrollbar, $wrapperEl} = swiper;
            const {$el} = scrollbar;
            if (!isTouched)
                return;
            isTouched = false;

            if (swiper.params.cssMode) {
                swiper.$wrapperEl.css('scroll-snap-type', '');
                $wrapperEl.transition('');
            }

            if (params.hide) {
                clearTimeout(dragTimeout);
                dragTimeout = nextTick( () => {
                    $el.css('opacity', 0);
                    $el.transition(400);
                }
                , 1000);
            }

            emit('scrollbarDragEnd', e);

            if (params.snapOnRelease) {
                swiper.slideToClosest();
            }
        }

        function events(method) {
            const {scrollbar, touchEventsTouch, touchEventsDesktop, params, support} = swiper;
            const $el = scrollbar.$el;
            if (!$el)
                return;
            const target = $el[0];
            const activeListener = support.passiveListener && params.passiveListeners ? {
                passive: false,
                capture: false
            } : false;
            const passiveListener = support.passiveListener && params.passiveListeners ? {
                passive: true,
                capture: false
            } : false;
            if (!target)
                return;
            const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';

            if (!support.touch) {
                target[eventMethod](touchEventsDesktop.start, onDragStart, activeListener);
                document[eventMethod](touchEventsDesktop.move, onDragMove, activeListener);
                document[eventMethod](touchEventsDesktop.end, onDragEnd, passiveListener);
            } else {
                target[eventMethod](touchEventsTouch.start, onDragStart, activeListener);
                target[eventMethod](touchEventsTouch.move, onDragMove, activeListener);
                target[eventMethod](touchEventsTouch.end, onDragEnd, passiveListener);
            }
        }

        function enableDraggable() {
            if (!swiper.params.scrollbar.el || !swiper.scrollbar.el)
                return;
            events('on');
        }

        function disableDraggable() {
            if (!swiper.params.scrollbar.el || !swiper.scrollbar.el)
                return;
            events('off');
        }

        function init() {
            const {scrollbar, $el: $swiperEl} = swiper;
            swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {
                el: 'swiper-scrollbar'
            });
            const params = swiper.params.scrollbar;
            if (!params.el)
                return;
            let $el = $(params.el);

            if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {
                $el = $swiperEl.find(params.el);
            }

            $el.addClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);
            let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);

            if ($dragEl.length === 0) {
                $dragEl = $(`<div class="${swiper.params.scrollbar.dragClass}"></div>`);
                $el.append($dragEl);
            }

            Object.assign(scrollbar, {
                $el,
                el: $el[0],
                $dragEl,
                dragEl: $dragEl[0]
            });

            if (params.draggable) {
                enableDraggable();
            }

            if ($el) {
                $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);
            }
        }

        function destroy() {
            const params = swiper.params.scrollbar;
            const $el = swiper.scrollbar.$el;

            if ($el) {
                $el.removeClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);
            }

            disableDraggable();
        }

        on('init', () => {
            if (swiper.params.scrollbar.enabled === false) {
                // eslint-disable-next-line
                disable();
            } else {
                init();
                updateSize();
                setTranslate();
            }
        }
        );
        on('update resize observerUpdate lock unlock', () => {
            updateSize();
        }
        );
        on('setTranslate', () => {
            setTranslate();
        }
        );
        on('setTransition', (_s, duration) => {
            setTransition(duration);
        }
        );
        on('enable disable', () => {
            const {$el} = swiper.scrollbar;

            if ($el) {
                $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);
            }
        }
        );
        on('destroy', () => {
            destroy();
        }
        );

        const enable = () => {
            swiper.$el.removeClass(swiper.params.scrollbar.scrollbarDisabledClass);

            if (swiper.scrollbar.$el) {
                swiper.scrollbar.$el.removeClass(swiper.params.scrollbar.scrollbarDisabledClass);
            }

            init();
            updateSize();
            setTranslate();
        }
        ;

        const disable = () => {
            swiper.$el.addClass(swiper.params.scrollbar.scrollbarDisabledClass);

            if (swiper.scrollbar.$el) {
                swiper.scrollbar.$el.addClass(swiper.params.scrollbar.scrollbarDisabledClass);
            }

            destroy();
        }
        ;

        Object.assign(swiper.scrollbar, {
            enable,
            disable,
            updateSize,
            setTranslate,
            init,
            destroy
        });
    }

    function Parallax(_ref) {
        let {swiper, extendParams, on} = _ref;
        extendParams({
            parallax: {
                enabled: false
            }
        });

        const setTransform = (el, progress) => {
            const {rtl} = swiper;
            const $el = $(el);
            const rtlFactor = rtl ? -1 : 1;
            const p = $el.attr('data-swiper-parallax') || '0';
            let x = $el.attr('data-swiper-parallax-x');
            let y = $el.attr('data-swiper-parallax-y');
            const scale = $el.attr('data-swiper-parallax-scale');
            const opacity = $el.attr('data-swiper-parallax-opacity');

            if (x || y) {
                x = x || '0';
                y = y || '0';
            } else if (swiper.isHorizontal()) {
                x = p;
                y = '0';
            } else {
                y = p;
                x = '0';
            }

            if (x.indexOf('%') >= 0) {
                x = `${parseInt(x, 10) * progress * rtlFactor}%`;
            } else {
                x = `${x * progress * rtlFactor}px`;
            }

            if (y.indexOf('%') >= 0) {
                y = `${parseInt(y, 10) * progress}%`;
            } else {
                y = `${y * progress}px`;
            }

            if (typeof opacity !== 'undefined' && opacity !== null) {
                const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));
                $el[0].style.opacity = currentOpacity;
            }

            if (typeof scale === 'undefined' || scale === null) {
                $el.transform(`translate3d(${x}, ${y}, 0px)`);
            } else {
                const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));
                $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);
            }
        }
        ;

        const setTranslate = () => {
            const {$el, slides, progress, snapGrid} = swiper;
            $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {
                setTransform(el, progress);
            }
            );
            slides.each( (slideEl, slideIndex) => {
                let slideProgress = slideEl.progress;

                if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {
                    slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);
                }

                slideProgress = Math.min(Math.max(slideProgress, -1), 1);
                $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {
                    setTransform(el, slideProgress);
                }
                );
            }
            );
        }
        ;

        const setTransition = function(duration) {
            if (duration === void 0) {
                duration = swiper.params.speed;
            }

            const {$el} = swiper;
            $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(parallaxEl => {
                const $parallaxEl = $(parallaxEl);
                let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;
                if (duration === 0)
                    parallaxDuration = 0;
                $parallaxEl.transition(parallaxDuration);
            }
            );
        };

        on('beforeInit', () => {
            if (!swiper.params.parallax.enabled)
                return;
            swiper.params.watchSlidesProgress = true;
            swiper.originalParams.watchSlidesProgress = true;
        }
        );
        on('init', () => {
            if (!swiper.params.parallax.enabled)
                return;
            setTranslate();
        }
        );
        on('setTranslate', () => {
            if (!swiper.params.parallax.enabled)
                return;
            setTranslate();
        }
        );
        on('setTransition', (_swiper, duration) => {
            if (!swiper.params.parallax.enabled)
                return;
            setTransition(duration);
        }
        );
    }

    function Zoom(_ref) {
        let {swiper, extendParams, on, emit} = _ref;
        const window = getWindow();
        extendParams({
            zoom: {
                enabled: false,
                maxRatio: 3,
                minRatio: 1,
                toggle: true,
                containerClass: 'swiper-zoom-container',
                zoomedSlideClass: 'swiper-slide-zoomed'
            }
        });
        swiper.zoom = {
            enabled: false
        };
        let currentScale = 1;
        let isScaling = false;
        let gesturesEnabled;
        let fakeGestureTouched;
        let fakeGestureMoved;
        const gesture = {
            $slideEl: undefined,
            slideWidth: undefined,
            slideHeight: undefined,
            $imageEl: undefined,
            $imageWrapEl: undefined,
            maxRatio: 3
        };
        const image = {
            isTouched: undefined,
            isMoved: undefined,
            currentX: undefined,
            currentY: undefined,
            minX: undefined,
            minY: undefined,
            maxX: undefined,
            maxY: undefined,
            width: undefined,
            height: undefined,
            startX: undefined,
            startY: undefined,
            touchesStart: {},
            touchesCurrent: {}
        };
        const velocity = {
            x: undefined,
            y: undefined,
            prevPositionX: undefined,
            prevPositionY: undefined,
            prevTime: undefined
        };
        let scale = 1;
        Object.defineProperty(swiper.zoom, 'scale', {
            get() {
                return scale;
            },

            set(value) {
                if (scale !== value) {
                    const imageEl = gesture.$imageEl ? gesture.$imageEl[0] : undefined;
                    const slideEl = gesture.$slideEl ? gesture.$slideEl[0] : undefined;
                    emit('zoomChange', value, imageEl, slideEl);
                }

                scale = value;
            }

        });

        function getDistanceBetweenTouches(e) {
            if (e.targetTouches.length < 2)
                return 1;
            const x1 = e.targetTouches[0].pageX;
            const y1 = e.targetTouches[0].pageY;
            const x2 = e.targetTouches[1].pageX;
            const y2 = e.targetTouches[1].pageY;
            const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);
            return distance;
        }
        // Events

        function onGestureStart(e) {
            const support = swiper.support;
            const params = swiper.params.zoom;
            fakeGestureTouched = false;
            fakeGestureMoved = false;

            if (!support.gestures) {
                if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {
                    return;
                }

                fakeGestureTouched = true;
                gesture.scaleStart = getDistanceBetweenTouches(e);
            }

            if (!gesture.$slideEl || !gesture.$slideEl.length) {
                gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);
                if (gesture.$slideEl.length === 0)
                    gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);
                gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);
                gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);
                gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;

                if (gesture.$imageWrapEl.length === 0) {
                    gesture.$imageEl = undefined;
                    return;
                }
            }

            if (gesture.$imageEl) {
                gesture.$imageEl.transition(0);
            }

            isScaling = true;
        }

        function onGestureChange(e) {
            const support = swiper.support;
            const params = swiper.params.zoom;
            const zoom = swiper.zoom;

            if (!support.gestures) {
                if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {
                    return;
                }

                fakeGestureMoved = true;
                gesture.scaleMove = getDistanceBetweenTouches(e);
            }

            if (!gesture.$imageEl || gesture.$imageEl.length === 0) {
                if (e.type === 'gesturechange')
                    onGestureStart(e);
                return;
            }

            if (support.gestures) {
                zoom.scale = e.scale * currentScale;
            } else {
                zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;
            }

            if (zoom.scale > gesture.maxRatio) {
                zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;
            }

            if (zoom.scale < params.minRatio) {
                zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;
            }

            gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);
        }

        function onGestureEnd(e) {
            const device = swiper.device;
            const support = swiper.support;
            const params = swiper.params.zoom;
            const zoom = swiper.zoom;

            if (!support.gestures) {
                if (!fakeGestureTouched || !fakeGestureMoved) {
                    return;
                }

                if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2 && !device.android) {
                    return;
                }

                fakeGestureTouched = false;
                fakeGestureMoved = false;
            }

            if (!gesture.$imageEl || gesture.$imageEl.length === 0)
                return;
            zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);
            gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);
            currentScale = zoom.scale;
            isScaling = false;
            if (zoom.scale === 1)
                gesture.$slideEl = undefined;
        }

        function onTouchStart(e) {
            const device = swiper.device;
            if (!gesture.$imageEl || gesture.$imageEl.length === 0)
                return;
            if (image.isTouched)
                return;
            if (device.android && e.cancelable)
                e.preventDefault();
            image.isTouched = true;
            image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;
            image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;
        }

        function onTouchMove(e) {
            const zoom = swiper.zoom;
            if (!gesture.$imageEl || gesture.$imageEl.length === 0)
                return;
            swiper.allowClick = false;
            if (!image.isTouched || !gesture.$slideEl)
                return;

            if (!image.isMoved) {
                image.width = gesture.$imageEl[0].offsetWidth;
                image.height = gesture.$imageEl[0].offsetHeight;
                image.startX = getTranslate(gesture.$imageWrapEl[0], 'x') || 0;
                image.startY = getTranslate(gesture.$imageWrapEl[0], 'y') || 0;
                gesture.slideWidth = gesture.$slideEl[0].offsetWidth;
                gesture.slideHeight = gesture.$slideEl[0].offsetHeight;
                gesture.$imageWrapEl.transition(0);
            }
            // Define if we need image drag

            const scaledWidth = image.width * zoom.scale;
            const scaledHeight = image.height * zoom.scale;
            if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight)
                return;
            image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);
            image.maxX = -image.minX;
            image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);
            image.maxY = -image.minY;
            image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;
            image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;

            if (!image.isMoved && !isScaling) {
                if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {
                    image.isTouched = false;
                    return;
                }

                if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {
                    image.isTouched = false;
                    return;
                }
            }

            if (e.cancelable) {
                e.preventDefault();
            }

            e.stopPropagation();
            image.isMoved = true;
            image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;
            image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;

            if (image.currentX < image.minX) {
                image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;
            }

            if (image.currentX > image.maxX) {
                image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;
            }

            if (image.currentY < image.minY) {
                image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;
            }

            if (image.currentY > image.maxY) {
                image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;
            }
            // Velocity

            if (!velocity.prevPositionX)
                velocity.prevPositionX = image.touchesCurrent.x;
            if (!velocity.prevPositionY)
                velocity.prevPositionY = image.touchesCurrent.y;
            if (!velocity.prevTime)
                velocity.prevTime = Date.now();
            velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;
            velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;
            if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2)
                velocity.x = 0;
            if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2)
                velocity.y = 0;
            velocity.prevPositionX = image.touchesCurrent.x;
            velocity.prevPositionY = image.touchesCurrent.y;
            velocity.prevTime = Date.now();
            gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);
        }

        function onTouchEnd() {
            const zoom = swiper.zoom;
            if (!gesture.$imageEl || gesture.$imageEl.length === 0)
                return;

            if (!image.isTouched || !image.isMoved) {
                image.isTouched = false;
                image.isMoved = false;
                return;
            }

            image.isTouched = false;
            image.isMoved = false;
            let momentumDurationX = 300;
            let momentumDurationY = 300;
            const momentumDistanceX = velocity.x * momentumDurationX;
            const newPositionX = image.currentX + momentumDistanceX;
            const momentumDistanceY = velocity.y * momentumDurationY;
            const newPositionY = image.currentY + momentumDistanceY;
            // Fix duration

            if (velocity.x !== 0)
                momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);
            if (velocity.y !== 0)
                momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);
            const momentumDuration = Math.max(momentumDurationX, momentumDurationY);
            image.currentX = newPositionX;
            image.currentY = newPositionY;
            // Define if we need image drag

            const scaledWidth = image.width * zoom.scale;
            const scaledHeight = image.height * zoom.scale;
            image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);
            image.maxX = -image.minX;
            image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);
            image.maxY = -image.minY;
            image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);
            image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);
            gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);
        }

        function onTransitionEnd() {
            const zoom = swiper.zoom;

            if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {
                if (gesture.$imageEl) {
                    gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');
                }

                if (gesture.$imageWrapEl) {
                    gesture.$imageWrapEl.transform('translate3d(0,0,0)');
                }

                zoom.scale = 1;
                currentScale = 1;
                gesture.$slideEl = undefined;
                gesture.$imageEl = undefined;
                gesture.$imageWrapEl = undefined;
            }
        }

        function zoomIn(e) {
            const zoom = swiper.zoom;
            const params = swiper.params.zoom;

            if (!gesture.$slideEl) {
                if (e && e.target) {
                    gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);
                }

                if (!gesture.$slideEl) {
                    if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {
                        gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);
                    } else {
                        gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);
                    }
                }

                gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);
                gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);
            }

            if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0)
                return;

            if (swiper.params.cssMode) {
                swiper.wrapperEl.style.overflow = 'hidden';
                swiper.wrapperEl.style.touchAction = 'none';
            }

            gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);
            let touchX;
            let touchY;
            let offsetX;
            let offsetY;
            let diffX;
            let diffY;
            let translateX;
            let translateY;
            let imageWidth;
            let imageHeight;
            let scaledWidth;
            let scaledHeight;
            let translateMinX;
            let translateMinY;
            let translateMaxX;
            let translateMaxY;
            let slideWidth;
            let slideHeight;

            if (typeof image.touchesStart.x === 'undefined' && e) {
                touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;
                touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;
            } else {
                touchX = image.touchesStart.x;
                touchY = image.touchesStart.y;
            }

            zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;
            currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;

            if (e) {
                slideWidth = gesture.$slideEl[0].offsetWidth;
                slideHeight = gesture.$slideEl[0].offsetHeight;
                offsetX = gesture.$slideEl.offset().left + window.scrollX;
                offsetY = gesture.$slideEl.offset().top + window.scrollY;
                diffX = offsetX + slideWidth / 2 - touchX;
                diffY = offsetY + slideHeight / 2 - touchY;
                imageWidth = gesture.$imageEl[0].offsetWidth;
                imageHeight = gesture.$imageEl[0].offsetHeight;
                scaledWidth = imageWidth * zoom.scale;
                scaledHeight = imageHeight * zoom.scale;
                translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);
                translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);
                translateMaxX = -translateMinX;
                translateMaxY = -translateMinY;
                translateX = diffX * zoom.scale;
                translateY = diffY * zoom.scale;

                if (translateX < translateMinX) {
                    translateX = translateMinX;
                }

                if (translateX > translateMaxX) {
                    translateX = translateMaxX;
                }

                if (translateY < translateMinY) {
                    translateY = translateMinY;
                }

                if (translateY > translateMaxY) {
                    translateY = translateMaxY;
                }
            } else {
                translateX = 0;
                translateY = 0;
            }

            gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);
            gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);
        }

        function zoomOut() {
            const zoom = swiper.zoom;
            const params = swiper.params.zoom;

            if (!gesture.$slideEl) {
                if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {
                    gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);
                } else {
                    gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);
                }

                gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);
                gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);
            }

            if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0)
                return;

            if (swiper.params.cssMode) {
                swiper.wrapperEl.style.overflow = '';
                swiper.wrapperEl.style.touchAction = '';
            }

            zoom.scale = 1;
            currentScale = 1;
            gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');
            gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');
            gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);
            gesture.$slideEl = undefined;
        }
        // Toggle Zoom

        function zoomToggle(e) {
            const zoom = swiper.zoom;

            if (zoom.scale && zoom.scale !== 1) {
                // Zoom Out
                zoomOut();
            } else {
                // Zoom In
                zoomIn(e);
            }
        }

        function getListeners() {
            const support = swiper.support;
            const passiveListener = swiper.touchEvents.start === 'touchstart' && support.passiveListener && swiper.params.passiveListeners ? {
                passive: true,
                capture: false
            } : false;
            const activeListenerWithCapture = support.passiveListener ? {
                passive: false,
                capture: true
            } : true;
            return {
                passiveListener,
                activeListenerWithCapture
            };
        }

        function getSlideSelector() {
            return `.${swiper.params.slideClass}`;
        }

        function toggleGestures(method) {
            const {passiveListener} = getListeners();
            const slideSelector = getSlideSelector();
            swiper.$wrapperEl[method]('gesturestart', slideSelector, onGestureStart, passiveListener);
            swiper.$wrapperEl[method]('gesturechange', slideSelector, onGestureChange, passiveListener);
            swiper.$wrapperEl[method]('gestureend', slideSelector, onGestureEnd, passiveListener);
        }

        function enableGestures() {
            if (gesturesEnabled)
                return;
            gesturesEnabled = true;
            toggleGestures('on');
        }

        function disableGestures() {
            if (!gesturesEnabled)
                return;
            gesturesEnabled = false;
            toggleGestures('off');
        }
        // Attach/Detach Events

        function enable() {
            const zoom = swiper.zoom;
            if (zoom.enabled)
                return;
            zoom.enabled = true;
            const support = swiper.support;
            const {passiveListener, activeListenerWithCapture} = getListeners();
            const slideSelector = getSlideSelector();
            // Scale image

            if (support.gestures) {
                swiper.$wrapperEl.on(swiper.touchEvents.start, enableGestures, passiveListener);
                swiper.$wrapperEl.on(swiper.touchEvents.end, disableGestures, passiveListener);
            } else if (swiper.touchEvents.start === 'touchstart') {
                swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);
                swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);
                swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);

                if (swiper.touchEvents.cancel) {
                    swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);
                }
            }
            // Move image

            swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, onTouchMove, activeListenerWithCapture);
        }

        function disable() {
            const zoom = swiper.zoom;
            if (!zoom.enabled)
                return;
            const support = swiper.support;
            zoom.enabled = false;
            const {passiveListener, activeListenerWithCapture} = getListeners();
            const slideSelector = getSlideSelector();
            // Scale image

            if (support.gestures) {
                swiper.$wrapperEl.off(swiper.touchEvents.start, enableGestures, passiveListener);
                swiper.$wrapperEl.off(swiper.touchEvents.end, disableGestures, passiveListener);
            } else if (swiper.touchEvents.start === 'touchstart') {
                swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);
                swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);
                swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);

                if (swiper.touchEvents.cancel) {
                    swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);
                }
            }
            // Move image

            swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, onTouchMove, activeListenerWithCapture);
        }

        on('init', () => {
            if (swiper.params.zoom.enabled) {
                enable();
            }
        }
        );
        on('destroy', () => {
            disable();
        }
        );
        on('touchStart', (_s, e) => {
            if (!swiper.zoom.enabled)
                return;
            onTouchStart(e);
        }
        );
        on('touchEnd', (_s, e) => {
            if (!swiper.zoom.enabled)
                return;
            onTouchEnd();
        }
        );
        on('doubleTap', (_s, e) => {
            if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {
                zoomToggle(e);
            }
        }
        );
        on('transitionEnd', () => {
            if (swiper.zoom.enabled && swiper.params.zoom.enabled) {
                onTransitionEnd();
            }
        }
        );
        on('slideChange', () => {
            if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {
                onTransitionEnd();
            }
        }
        );
        Object.assign(swiper.zoom, {
            enable,
            disable,
            in: zoomIn,
            out: zoomOut,
            toggle: zoomToggle
        });
    }

    function Lazy(_ref) {
        let {swiper, extendParams, on, emit} = _ref;
        extendParams({
            lazy: {
                checkInView: false,
                enabled: false,
                loadPrevNext: false,
                loadPrevNextAmount: 1,
                loadOnTransitionStart: false,
                scrollingElement: '',
                elementClass: 'swiper-lazy',
                loadingClass: 'swiper-lazy-loading',
                loadedClass: 'swiper-lazy-loaded',
                preloaderClass: 'swiper-lazy-preloader'
            }
        });
        swiper.lazy = {};
        let scrollHandlerAttached = false;
        let initialImageLoaded = false;

        function loadInSlide(index, loadInDuplicate) {
            if (loadInDuplicate === void 0) {
                loadInDuplicate = true;
            }

            const params = swiper.params.lazy;
            if (typeof index === 'undefined')
                return;
            if (swiper.slides.length === 0)
                return;
            const isVirtual = swiper.virtual && swiper.params.virtual.enabled;
            const $slideEl = isVirtual ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index="${index}"]`) : swiper.slides.eq(index);
            const $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);

            if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {
                $images.push($slideEl[0]);
            }

            if ($images.length === 0)
                return;
            $images.each(imageEl => {
                const $imageEl = $(imageEl);
                $imageEl.addClass(params.loadingClass);
                const background = $imageEl.attr('data-background');
                const src = $imageEl.attr('data-src');
                const srcset = $imageEl.attr('data-srcset');
                const sizes = $imageEl.attr('data-sizes');
                const $pictureEl = $imageEl.parent('picture');
                swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, () => {
                    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper && !swiper.params || swiper.destroyed)
                        return;

                    if (background) {
                        $imageEl.css('background-image', `url("${background}")`);
                        $imageEl.removeAttr('data-background');
                    } else {
                        if (srcset) {
                            $imageEl.attr('srcset', srcset);
                            $imageEl.removeAttr('data-srcset');
                        }

                        if (sizes) {
                            $imageEl.attr('sizes', sizes);
                            $imageEl.removeAttr('data-sizes');
                        }

                        if ($pictureEl.length) {
                            $pictureEl.children('source').each(sourceEl => {
                                const $source = $(sourceEl);

                                if ($source.attr('data-srcset')) {
                                    $source.attr('srcset', $source.attr('data-srcset'));
                                    $source.removeAttr('data-srcset');
                                }
                            }
                            );
                        }

                        if (src) {
                            $imageEl.attr('src', src);
                            $imageEl.removeAttr('data-src');
                        }
                    }

                    $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);
                    $slideEl.find(`.${params.preloaderClass}`).remove();

                    if (swiper.params.loop && loadInDuplicate) {
                        const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');

                        if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {
                            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index="${slideOriginalIndex}"]:not(.${swiper.params.slideDuplicateClass})`);
                            loadInSlide(originalSlide.index(), false);
                        } else {
                            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index="${slideOriginalIndex}"]`);
                            loadInSlide(duplicatedSlide.index(), false);
                        }
                    }

                    emit('lazyImageReady', $slideEl[0], $imageEl[0]);

                    if (swiper.params.autoHeight) {
                        swiper.updateAutoHeight();
                    }
                }
                );
                emit('lazyImageLoad', $slideEl[0], $imageEl[0]);
            }
            );
        }

        function load() {
            const {$wrapperEl, params: swiperParams, slides, activeIndex} = swiper;
            const isVirtual = swiper.virtual && swiperParams.virtual.enabled;
            const params = swiperParams.lazy;
            let slidesPerView = swiperParams.slidesPerView;

            if (slidesPerView === 'auto') {
                slidesPerView = 0;
            }

            function slideExist(index) {
                if (isVirtual) {
                    if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index="${index}"]`).length) {
                        return true;
                    }
                } else if (slides[index])
                    return true;

                return false;
            }

            function slideIndex(slideEl) {
                if (isVirtual) {
                    return $(slideEl).attr('data-swiper-slide-index');
                }

                return $(slideEl).index();
            }

            if (!initialImageLoaded)
                initialImageLoaded = true;

            if (swiper.params.watchSlidesProgress) {
                $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each(slideEl => {
                    const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();
                    loadInSlide(index);
                }
                );
            } else if (slidesPerView > 1) {
                for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {
                    if (slideExist(i))
                        loadInSlide(i);
                }
            } else {
                loadInSlide(activeIndex);
            }

            if (params.loadPrevNext) {
                if (slidesPerView > 1 || params.loadPrevNextAmount && params.loadPrevNextAmount > 1) {
                    const amount = params.loadPrevNextAmount;
                    const spv = Math.ceil(slidesPerView);
                    const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);
                    const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);
                    // Next Slides

                    for (let i = activeIndex + spv; i < maxIndex; i += 1) {
                        if (slideExist(i))
                            loadInSlide(i);
                    }
                    // Prev Slides

                    for (let i = minIndex; i < activeIndex; i += 1) {
                        if (slideExist(i))
                            loadInSlide(i);
                    }
                } else {
                    const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);
                    if (nextSlide.length > 0)
                        loadInSlide(slideIndex(nextSlide));
                    const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);
                    if (prevSlide.length > 0)
                        loadInSlide(slideIndex(prevSlide));
                }
            }
        }

        function checkInViewOnLoad() {
            const window = getWindow();
            if (!swiper || swiper.destroyed)
                return;
            const $scrollElement = swiper.params.lazy.scrollingElement ? $(swiper.params.lazy.scrollingElement) : $(window);
            const isWindow = $scrollElement[0] === window;
            const scrollElementWidth = isWindow ? window.innerWidth : $scrollElement[0].offsetWidth;
            const scrollElementHeight = isWindow ? window.innerHeight : $scrollElement[0].offsetHeight;
            const swiperOffset = swiper.$el.offset();
            const {rtlTranslate: rtl} = swiper;
            let inView = false;
            if (rtl)
                swiperOffset.left -= swiper.$el[0].scrollLeft;
            const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiper.width, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiper.height], [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height]];

            for (let i = 0; i < swiperCoord.length; i += 1) {
                const point = swiperCoord[i];

                if (point[0] >= 0 && point[0] <= scrollElementWidth && point[1] >= 0 && point[1] <= scrollElementHeight) {
                    if (point[0] === 0 && point[1] === 0)
                        continue;
                    // eslint-disable-line

                    inView = true;
                }
            }

            const passiveListener = swiper.touchEvents.start === 'touchstart' && swiper.support.passiveListener && swiper.params.passiveListeners ? {
                passive: true,
                capture: false
            } : false;

            if (inView) {
                load();
                $scrollElement.off('scroll', checkInViewOnLoad, passiveListener);
            } else if (!scrollHandlerAttached) {
                scrollHandlerAttached = true;
                $scrollElement.on('scroll', checkInViewOnLoad, passiveListener);
            }
        }

        on('beforeInit', () => {
            if (swiper.params.lazy.enabled && swiper.params.preloadImages) {
                swiper.params.preloadImages = false;
            }
        }
        );
        on('init', () => {
            if (swiper.params.lazy.enabled) {
                if (swiper.params.lazy.checkInView) {
                    checkInViewOnLoad();
                } else {
                    load();
                }
            }
        }
        );
        on('scroll', () => {
            if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.freeMode.sticky) {
                load();
            }
        }
        );
        on('scrollbarDragMove resize _freeModeNoMomentumRelease', () => {
            if (swiper.params.lazy.enabled) {
                if (swiper.params.lazy.checkInView) {
                    checkInViewOnLoad();
                } else {
                    load();
                }
            }
        }
        );
        on('transitionStart', () => {
            if (swiper.params.lazy.enabled) {
                if (swiper.params.lazy.loadOnTransitionStart || !swiper.params.lazy.loadOnTransitionStart && !initialImageLoaded) {
                    if (swiper.params.lazy.checkInView) {
                        checkInViewOnLoad();
                    } else {
                        load();
                    }
                }
            }
        }
        );
        on('transitionEnd', () => {
            if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {
                if (swiper.params.lazy.checkInView) {
                    checkInViewOnLoad();
                } else {
                    load();
                }
            }
        }
        );
        on('slideChange', () => {
            const {lazy, cssMode, watchSlidesProgress, touchReleaseOnEdges, resistanceRatio} = swiper.params;

            if (lazy.enabled && (cssMode || watchSlidesProgress && (touchReleaseOnEdges || resistanceRatio === 0))) {
                load();
            }
        }
        );
        on('destroy', () => {
            if (!swiper.$el)
                return;
            swiper.$el.find(`.${swiper.params.lazy.loadingClass}`).removeClass(swiper.params.lazy.loadingClass);
        }
        );
        Object.assign(swiper.lazy, {
            load,
            loadInSlide
        });
    }

    /* eslint no-bitwise: ["error", { "allow": [">>"] }] */
    function Controller(_ref) {
        let {swiper, extendParams, on} = _ref;
        extendParams({
            controller: {
                control: undefined,
                inverse: false,
                by: 'slide'// or 'container'

            }
        });
        swiper.controller = {
            control: undefined
        };

        function LinearSpline(x, y) {
            const binarySearch = function search() {
                let maxIndex;
                let minIndex;
                let guess;
                return (array, val) => {
                    minIndex = -1;
                    maxIndex = array.length;

                    while (maxIndex - minIndex > 1) {
                        guess = maxIndex + minIndex >> 1;

                        if (array[guess] <= val) {
                            minIndex = guess;
                        } else {
                            maxIndex = guess;
                        }
                    }

                    return maxIndex;
                }
                ;
            }();

            this.x = x;
            this.y = y;
            this.lastIndex = x.length - 1;
            // Given an x value (x2), return the expected y2 value:
            // (x1,y1) is the known point before given value,
            // (x3,y3) is the known point after given value.

            let i1;
            let i3;

            this.interpolate = function interpolate(x2) {
                if (!x2)
                    return 0;
                // Get the indexes of x1 and x3 (the array indexes before and after given x2):

                i3 = binarySearch(this.x, x2);
                i1 = i3 - 1;
                // We have our indexes i1 & i3, so we can calculate already:
                // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1

                return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];
            }
            ;

            return this;
        }
        // xxx: for now i will just save one spline function to to

        function getInterpolateFunction(c) {
            if (!swiper.controller.spline) {
                swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid,c.slidesGrid) : new LinearSpline(swiper.snapGrid,c.snapGrid);
            }
        }

        function setTranslate(_t, byController) {
            const controlled = swiper.controller.control;
            let multiplier;
            let controlledTranslate;
            const Swiper = swiper.constructor;

            function setControlledTranslate(c) {
                // this will create an Interpolate function based on the snapGrids
                // x is the Grid of the scrolled scroller and y will be the controlled scroller
                // it makes sense to create this only once and recall it for the interpolation
                // the function does a lot of value caching for performance
                const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;

                if (swiper.params.controller.by === 'slide') {
                    getInterpolateFunction(c);
                    // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid
                    // but it did not work out

                    controlledTranslate = -swiper.controller.spline.interpolate(-translate);
                }

                if (!controlledTranslate || swiper.params.controller.by === 'container') {
                    multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());
                    controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();
                }

                if (swiper.params.controller.inverse) {
                    controlledTranslate = c.maxTranslate() - controlledTranslate;
                }

                c.updateProgress(controlledTranslate);
                c.setTranslate(controlledTranslate, swiper);
                c.updateActiveIndex();
                c.updateSlidesClasses();
            }

            if (Array.isArray(controlled)) {
                for (let i = 0; i < controlled.length; i += 1) {
                    if (controlled[i] !== byController && controlled[i]instanceof Swiper) {
                        setControlledTranslate(controlled[i]);
                    }
                }
            } else if (controlled instanceof Swiper && byController !== controlled) {
                setControlledTranslate(controlled);
            }
        }

        function setTransition(duration, byController) {
            const Swiper = swiper.constructor;
            const controlled = swiper.controller.control;
            let i;

            function setControlledTransition(c) {
                c.setTransition(duration, swiper);

                if (duration !== 0) {
                    c.transitionStart();

                    if (c.params.autoHeight) {
                        nextTick( () => {
                            c.updateAutoHeight();
                        }
                        );
                    }

                    c.$wrapperEl.transitionEnd( () => {
                        if (!controlled)
                            return;

                        if (c.params.loop && swiper.params.controller.by === 'slide') {
                            c.loopFix();
                        }

                        c.transitionEnd();
                    }
                    );
                }
            }

            if (Array.isArray(controlled)) {
                for (i = 0; i < controlled.length; i += 1) {
                    if (controlled[i] !== byController && controlled[i]instanceof Swiper) {
                        setControlledTransition(controlled[i]);
                    }
                }
            } else if (controlled instanceof Swiper && byController !== controlled) {
                setControlledTransition(controlled);
            }
        }

        function removeSpline() {
            if (!swiper.controller.control)
                return;

            if (swiper.controller.spline) {
                swiper.controller.spline = undefined;
                delete swiper.controller.spline;
            }
        }

        on('beforeInit', () => {
            swiper.controller.control = swiper.params.controller.control;
        }
        );
        on('update', () => {
            removeSpline();
        }
        );
        on('resize', () => {
            removeSpline();
        }
        );
        on('observerUpdate', () => {
            removeSpline();
        }
        );
        on('setTranslate', (_s, translate, byController) => {
            if (!swiper.controller.control)
                return;
            swiper.controller.setTranslate(translate, byController);
        }
        );
        on('setTransition', (_s, duration, byController) => {
            if (!swiper.controller.control)
                return;
            swiper.controller.setTransition(duration, byController);
        }
        );
        Object.assign(swiper.controller, {
            setTranslate,
            setTransition
        });
    }

    function A11y(_ref) {
        let {swiper, extendParams, on} = _ref;
        extendParams({
            a11y: {
                enabled: true,
                notificationClass: 'swiper-notification',
                prevSlideMessage: 'Previous slide',
                nextSlideMessage: 'Next slide',
                firstSlideMessage: 'This is the first slide',
                lastSlideMessage: 'This is the last slide',
                paginationBulletMessage: 'Go to slide {{index}}',
                slideLabelMessage: '{{index}} / {{slidesLength}}',
                containerMessage: null,
                containerRoleDescriptionMessage: null,
                itemRoleDescriptionMessage: null,
                slideRole: 'group',
                id: null
            }
        });
        let liveRegion = null;

        function notify(message) {
            const notification = liveRegion;
            if (notification.length === 0)
                return;
            notification.html('');
            notification.html(message);
        }

        function getRandomNumber(size) {
            if (size === void 0) {
                size = 16;
            }

            const randomChar = () => Math.round(16 * Math.random()).toString(16);

            return 'x'.repeat(size).replace(/x/g, randomChar);
        }

        function makeElFocusable($el) {
            $el.attr('tabIndex', '0');
        }

        function makeElNotFocusable($el) {
            $el.attr('tabIndex', '-1');
        }

        function addElRole($el, role) {
            $el.attr('role', role);
        }

        function addElRoleDescription($el, description) {
            $el.attr('aria-roledescription', description);
        }

        function addElControls($el, controls) {
            $el.attr('aria-controls', controls);
        }

        function addElLabel($el, label) {
            $el.attr('aria-label', label);
        }

        function addElId($el, id) {
            $el.attr('id', id);
        }

        function addElLive($el, live) {
            $el.attr('aria-live', live);
        }

        function disableEl($el) {
            $el.attr('aria-disabled', true);
        }

        function enableEl($el) {
            $el.attr('aria-disabled', false);
        }

        function onEnterOrSpaceKey(e) {
            if (e.keyCode !== 13 && e.keyCode !== 32)
                return;
            const params = swiper.params.a11y;
            const $targetEl = $(e.target);

            if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {
                if (!(swiper.isEnd && !swiper.params.loop)) {
                    swiper.slideNext();
                }

                if (swiper.isEnd) {
                    notify(params.lastSlideMessage);
                } else {
                    notify(params.nextSlideMessage);
                }
            }

            if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {
                if (!(swiper.isBeginning && !swiper.params.loop)) {
                    swiper.slidePrev();
                }

                if (swiper.isBeginning) {
                    notify(params.firstSlideMessage);
                } else {
                    notify(params.prevSlideMessage);
                }
            }

            if (swiper.pagination && $targetEl.is(classesToSelector(swiper.params.pagination.bulletClass))) {
                $targetEl[0].click();
            }
        }

        function updateNavigation() {
            if (swiper.params.loop || swiper.params.rewind || !swiper.navigation)
                return;
            const {$nextEl, $prevEl} = swiper.navigation;

            if ($prevEl && $prevEl.length > 0) {
                if (swiper.isBeginning) {
                    disableEl($prevEl);
                    makeElNotFocusable($prevEl);
                } else {
                    enableEl($prevEl);
                    makeElFocusable($prevEl);
                }
            }

            if ($nextEl && $nextEl.length > 0) {
                if (swiper.isEnd) {
                    disableEl($nextEl);
                    makeElNotFocusable($nextEl);
                } else {
                    enableEl($nextEl);
                    makeElFocusable($nextEl);
                }
            }
        }

        function hasPagination() {
            return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;
        }

        function hasClickablePagination() {
            return hasPagination() && swiper.params.pagination.clickable;
        }

        function updatePagination() {
            const params = swiper.params.a11y;
            if (!hasPagination())
                return;
            swiper.pagination.bullets.each(bulletEl => {
                const $bulletEl = $(bulletEl);

                if (swiper.params.pagination.clickable) {
                    makeElFocusable($bulletEl);

                    if (!swiper.params.pagination.renderBullet) {
                        addElRole($bulletEl, 'button');
                        addElLabel($bulletEl, params.paginationBulletMessage.replace(/\{\{index\}\}/, $bulletEl.index() + 1));
                    }
                }

                if ($bulletEl.is(`.${swiper.params.pagination.bulletActiveClass}`)) {
                    $bulletEl.attr('aria-current', 'true');
                } else {
                    $bulletEl.removeAttr('aria-current');
                }
            }
            );
        }

        const initNavEl = ($el, wrapperId, message) => {
            makeElFocusable($el);

            if ($el[0].tagName !== 'BUTTON') {
                addElRole($el, 'button');
                $el.on('keydown', onEnterOrSpaceKey);
            }

            addElLabel($el, message);
            addElControls($el, wrapperId);
        }
        ;

        const handleFocus = e => {
            const slideEl = e.target.closest(`.${swiper.params.slideClass}`);
            if (!slideEl || !swiper.slides.includes(slideEl))
                return;
            const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;
            const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);
            if (isActive || isVisible)
                return;
            swiper.slideTo(swiper.slides.indexOf(slideEl), 0);
        }
        ;

        const initSlides = () => {
            const params = swiper.params.a11y;

            if (params.itemRoleDescriptionMessage) {
                addElRoleDescription($(swiper.slides), params.itemRoleDescriptionMessage);
            }

            addElRole($(swiper.slides), params.slideRole);
            const slidesLength = swiper.params.loop ? swiper.slides.filter(el => !el.classList.contains(swiper.params.slideDuplicateClass)).length : swiper.slides.length;

            if (params.slideLabelMessage) {
                swiper.slides.each( (slideEl, index) => {
                    const $slideEl = $(slideEl);
                    const slideIndex = swiper.params.loop ? parseInt($slideEl.attr('data-swiper-slide-index'), 10) : index;
                    const ariaLabelMessage = params.slideLabelMessage.replace(/\{\{index\}\}/, slideIndex + 1).replace(/\{\{slidesLength\}\}/, slidesLength);
                    addElLabel($slideEl, ariaLabelMessage);
                }
                );
            }
        }
        ;

        const init = () => {
            const params = swiper.params.a11y;
            swiper.$el.append(liveRegion);
            // Container

            const $containerEl = swiper.$el;

            if (params.containerRoleDescriptionMessage) {
                addElRoleDescription($containerEl, params.containerRoleDescriptionMessage);
            }

            if (params.containerMessage) {
                addElLabel($containerEl, params.containerMessage);
            }
            // Wrapper

            const $wrapperEl = swiper.$wrapperEl;
            const wrapperId = params.id || $wrapperEl.attr('id') || `swiper-wrapper-${getRandomNumber(16)}`;
            const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';
            addElId($wrapperEl, wrapperId);
            addElLive($wrapperEl, live);
            // Slide

            initSlides();
            // Navigation

            let $nextEl;
            let $prevEl;

            if (swiper.navigation && swiper.navigation.$nextEl) {
                $nextEl = swiper.navigation.$nextEl;
            }

            if (swiper.navigation && swiper.navigation.$prevEl) {
                $prevEl = swiper.navigation.$prevEl;
            }

            if ($nextEl && $nextEl.length) {
                initNavEl($nextEl, wrapperId, params.nextSlideMessage);
            }

            if ($prevEl && $prevEl.length) {
                initNavEl($prevEl, wrapperId, params.prevSlideMessage);
            }
            // Pagination

            if (hasClickablePagination()) {
                swiper.pagination.$el.on('keydown', classesToSelector(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);
            }
            // Tab focus

            swiper.$el.on('focus', handleFocus, true);
        }
        ;

        function destroy() {
            if (liveRegion && liveRegion.length > 0)
                liveRegion.remove();
            let $nextEl;
            let $prevEl;

            if (swiper.navigation && swiper.navigation.$nextEl) {
                $nextEl = swiper.navigation.$nextEl;
            }

            if (swiper.navigation && swiper.navigation.$prevEl) {
                $prevEl = swiper.navigation.$prevEl;
            }

            if ($nextEl) {
                $nextEl.off('keydown', onEnterOrSpaceKey);
            }

            if ($prevEl) {
                $prevEl.off('keydown', onEnterOrSpaceKey);
            }
            // Pagination

            if (hasClickablePagination()) {
                swiper.pagination.$el.off('keydown', classesToSelector(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);
            }
            // Tab focus

            swiper.$el.off('focus', handleFocus, true);
        }

        on('beforeInit', () => {
            liveRegion = $(`<span class="${swiper.params.a11y.notificationClass}" aria-live="assertive" aria-atomic="true"></span>`);
        }
        );
        on('afterInit', () => {
            if (!swiper.params.a11y.enabled)
                return;
            init();
        }
        );
        on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {
            if (!swiper.params.a11y.enabled)
                return;
            initSlides();
        }
        );
        on('fromEdge toEdge afterInit lock unlock', () => {
            if (!swiper.params.a11y.enabled)
                return;
            updateNavigation();
        }
        );
        on('paginationUpdate', () => {
            if (!swiper.params.a11y.enabled)
                return;
            updatePagination();
        }
        );
        on('destroy', () => {
            if (!swiper.params.a11y.enabled)
                return;
            destroy();
        }
        );
    }

    function History(_ref) {
        let {swiper, extendParams, on} = _ref;
        extendParams({
            history: {
                enabled: false,
                root: '',
                replaceState: false,
                key: 'slides',
                keepQuery: false
            }
        });
        let initialized = false;
        let paths = {};

        const slugify = text => {
            return text.toString().replace(/\s+/g, '-').replace(/[^\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');
        }
        ;

        const getPathValues = urlOverride => {
            const window = getWindow();
            let location;

            if (urlOverride) {
                location = new URL(urlOverride);
            } else {
                location = window.location;
            }

            const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');
            const total = pathArray.length;
            const key = pathArray[total - 2];
            const value = pathArray[total - 1];
            return {
                key,
                value
            };
        }
        ;

        const setHistory = (key, index) => {
            const window = getWindow();
            if (!initialized || !swiper.params.history.enabled)
                return;
            let location;

            if (swiper.params.url) {
                location = new URL(swiper.params.url);
            } else {
                location = window.location;
            }

            const slide = swiper.slides.eq(index);
            let value = slugify(slide.attr('data-history'));

            if (swiper.params.history.root.length > 0) {
                let root = swiper.params.history.root;
                if (root[root.length - 1] === '/')
                    root = root.slice(0, root.length - 1);
                value = `${root}/${key}/${value}`;
            } else if (!location.pathname.includes(key)) {
                value = `${key}/${value}`;
            }

            if (swiper.params.history.keepQuery) {
                value += location.search;
            }

            const currentState = window.history.state;

            if (currentState && currentState.value === value) {
                return;
            }

            if (swiper.params.history.replaceState) {
                window.history.replaceState({
                    value
                }, null, value);
            } else {
                window.history.pushState({
                    value
                }, null, value);
            }
        }
        ;

        const scrollToSlide = (speed, value, runCallbacks) => {
            if (value) {
                for (let i = 0, length = swiper.slides.length; i < length; i += 1) {
                    const slide = swiper.slides.eq(i);
                    const slideHistory = slugify(slide.attr('data-history'));

                    if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {
                        const index = slide.index();
                        swiper.slideTo(index, speed, runCallbacks);
                    }
                }
            } else {
                swiper.slideTo(0, speed, runCallbacks);
            }
        }
        ;

        const setHistoryPopState = () => {
            paths = getPathValues(swiper.params.url);
            scrollToSlide(swiper.params.speed, paths.value, false);
        }
        ;

        const init = () => {
            const window = getWindow();
            if (!swiper.params.history)
                return;

            if (!window.history || !window.history.pushState) {
                swiper.params.history.enabled = false;
                swiper.params.hashNavigation.enabled = true;
                return;
            }

            initialized = true;
            paths = getPathValues(swiper.params.url);
            if (!paths.key && !paths.value)
                return;
            scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);

            if (!swiper.params.history.replaceState) {
                window.addEventListener('popstate', setHistoryPopState);
            }
        }
        ;

        const destroy = () => {
            const window = getWindow();

            if (!swiper.params.history.replaceState) {
                window.removeEventListener('popstate', setHistoryPopState);
            }
        }
        ;

        on('init', () => {
            if (swiper.params.history.enabled) {
                init();
            }
        }
        );
        on('destroy', () => {
            if (swiper.params.history.enabled) {
                destroy();
            }
        }
        );
        on('transitionEnd _freeModeNoMomentumRelease', () => {
            if (initialized) {
                setHistory(swiper.params.history.key, swiper.activeIndex);
            }
        }
        );
        on('slideChange', () => {
            if (initialized && swiper.params.cssMode) {
                setHistory(swiper.params.history.key, swiper.activeIndex);
            }
        }
        );
    }

    function HashNavigation(_ref) {
        let {swiper, extendParams, emit, on} = _ref;
        let initialized = false;
        const document = getDocument();
        const window = getWindow();
        extendParams({
            hashNavigation: {
                enabled: false,
                replaceState: false,
                watchState: false
            }
        });

        const onHashChange = () => {
            emit('hashChange');
            const newHash = document.location.hash.replace('#', '');
            const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');

            if (newHash !== activeSlideHash) {
                const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash="${newHash}"]`).index();
                if (typeof newIndex === 'undefined')
                    return;
                swiper.slideTo(newIndex);
            }
        }
        ;

        const setHash = () => {
            if (!initialized || !swiper.params.hashNavigation.enabled)
                return;

            if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {
                window.history.replaceState(null, null, `#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || '');
                emit('hashSet');
            } else {
                const slide = swiper.slides.eq(swiper.activeIndex);
                const hash = slide.attr('data-hash') || slide.attr('data-history');
                document.location.hash = hash || '';
                emit('hashSet');
            }
        }
        ;

        const init = () => {
            if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled)
                return;
            initialized = true;
            const hash = document.location.hash.replace('#', '');

            if (hash) {
                const speed = 0;

                for (let i = 0, length = swiper.slides.length; i < length; i += 1) {
                    const slide = swiper.slides.eq(i);
                    const slideHash = slide.attr('data-hash') || slide.attr('data-history');

                    if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {
                        const index = slide.index();
                        swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);
                    }
                }
            }

            if (swiper.params.hashNavigation.watchState) {
                $(window).on('hashchange', onHashChange);
            }
        }
        ;

        const destroy = () => {
            if (swiper.params.hashNavigation.watchState) {
                $(window).off('hashchange', onHashChange);
            }
        }
        ;

        on('init', () => {
            if (swiper.params.hashNavigation.enabled) {
                init();
            }
        }
        );
        on('destroy', () => {
            if (swiper.params.hashNavigation.enabled) {
                destroy();
            }
        }
        );
        on('transitionEnd _freeModeNoMomentumRelease', () => {
            if (initialized) {
                setHash();
            }
        }
        );
        on('slideChange', () => {
            if (initialized && swiper.params.cssMode) {
                setHash();
            }
        }
        );
    }

    /* eslint no-underscore-dangle: "off" */
    function Autoplay(_ref) {
        let {swiper, extendParams, on, emit} = _ref;
        let timeout;
        swiper.autoplay = {
            running: false,
            paused: false
        };
        extendParams({
            autoplay: {
                enabled: false,
                delay: 3000,
                waitForTransition: true,
                disableOnInteraction: true,
                stopOnLastSlide: false,
                reverseDirection: false,
                pauseOnMouseEnter: false
            }
        });

        function run() {
            const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);
            let delay = swiper.params.autoplay.delay;

            if ($activeSlideEl.attr('data-swiper-autoplay')) {
                delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;
            }

            clearTimeout(timeout);
            timeout = nextTick( () => {
                let autoplayResult;

                if (swiper.params.autoplay.reverseDirection) {
                    if (swiper.params.loop) {
                        swiper.loopFix();
                        autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);
                        emit('autoplay');
                    } else if (!swiper.isBeginning) {
                        autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);
                        emit('autoplay');
                    } else if (!swiper.params.autoplay.stopOnLastSlide) {
                        autoplayResult = swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);
                        emit('autoplay');
                    } else {
                        stop();
                    }
                } else if (swiper.params.loop) {
                    swiper.loopFix();
                    autoplayResult = swiper.slideNext(swiper.params.speed, true, true);
                    emit('autoplay');
                } else if (!swiper.isEnd) {
                    autoplayResult = swiper.slideNext(swiper.params.speed, true, true);
                    emit('autoplay');
                } else if (!swiper.params.autoplay.stopOnLastSlide) {
                    autoplayResult = swiper.slideTo(0, swiper.params.speed, true, true);
                    emit('autoplay');
                } else {
                    stop();
                }

                if (swiper.params.cssMode && swiper.autoplay.running)
                    run();
                else if (autoplayResult === false) {
                    run();
                }
            }
            , delay);
        }

        function start() {
            if (typeof timeout !== 'undefined')
                return false;
            if (swiper.autoplay.running)
                return false;
            swiper.autoplay.running = true;
            emit('autoplayStart');
            run();
            return true;
        }

        function stop() {
            if (!swiper.autoplay.running)
                return false;
            if (typeof timeout === 'undefined')
                return false;

            if (timeout) {
                clearTimeout(timeout);
                timeout = undefined;
            }

            swiper.autoplay.running = false;
            emit('autoplayStop');
            return true;
        }

        function pause(speed) {
            if (!swiper.autoplay.running)
                return;
            if (swiper.autoplay.paused)
                return;
            if (timeout)
                clearTimeout(timeout);
            swiper.autoplay.paused = true;

            if (speed === 0 || !swiper.params.autoplay.waitForTransition) {
                swiper.autoplay.paused = false;
                run();
            } else {
                ['transitionend', 'webkitTransitionEnd'].forEach(event => {
                    swiper.$wrapperEl[0].addEventListener(event, onTransitionEnd);
                }
                );
            }
        }

        function onVisibilityChange() {
            const document = getDocument();

            if (document.visibilityState === 'hidden' && swiper.autoplay.running) {
                pause();
            }

            if (document.visibilityState === 'visible' && swiper.autoplay.paused) {
                run();
                swiper.autoplay.paused = false;
            }
        }

        function onTransitionEnd(e) {
            if (!swiper || swiper.destroyed || !swiper.$wrapperEl)
                return;
            if (e.target !== swiper.$wrapperEl[0])
                return;
            ['transitionend', 'webkitTransitionEnd'].forEach(event => {
                swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);
            }
            );
            swiper.autoplay.paused = false;

            if (!swiper.autoplay.running) {
                stop();
            } else {
                run();
            }
        }

        function onMouseEnter() {
            if (swiper.params.autoplay.disableOnInteraction) {
                stop();
            } else {
                emit('autoplayPause');
                pause();
            }

            ['transitionend', 'webkitTransitionEnd'].forEach(event => {
                swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);
            }
            );
        }

        function onMouseLeave() {
            if (swiper.params.autoplay.disableOnInteraction) {
                return;
            }

            swiper.autoplay.paused = false;
            emit('autoplayResume');
            run();
        }

        function attachMouseEvents() {
            if (swiper.params.autoplay.pauseOnMouseEnter) {
                swiper.$el.on('mouseenter', onMouseEnter);
                swiper.$el.on('mouseleave', onMouseLeave);
            }
        }

        function detachMouseEvents() {
            swiper.$el.off('mouseenter', onMouseEnter);
            swiper.$el.off('mouseleave', onMouseLeave);
        }

        on('init', () => {
            if (swiper.params.autoplay.enabled) {
                start();
                const document = getDocument();
                document.addEventListener('visibilitychange', onVisibilityChange);
                attachMouseEvents();
            }
        }
        );
        on('beforeTransitionStart', (_s, speed, internal) => {
            if (swiper.autoplay.running) {
                if (internal || !swiper.params.autoplay.disableOnInteraction) {
                    swiper.autoplay.pause(speed);
                } else {
                    stop();
                }
            }
        }
        );
        on('sliderFirstMove', () => {
            if (swiper.autoplay.running) {
                if (swiper.params.autoplay.disableOnInteraction) {
                    stop();
                } else {
                    pause();
                }
            }
        }
        );
        on('touchEnd', () => {
            if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {
                run();
            }
        }
        );
        on('destroy', () => {
            detachMouseEvents();

            if (swiper.autoplay.running) {
                stop();
            }

            const document = getDocument();
            document.removeEventListener('visibilitychange', onVisibilityChange);
        }
        );
        Object.assign(swiper.autoplay, {
            pause,
            run,
            start,
            stop
        });
    }

    function Thumb(_ref) {
        let {swiper, extendParams, on} = _ref;
        extendParams({
            thumbs: {
                swiper: null,
                multipleActiveThumbs: true,
                autoScrollOffset: 0,
                slideThumbActiveClass: 'swiper-slide-thumb-active',
                thumbsContainerClass: 'swiper-thumbs'
            }
        });
        let initialized = false;
        let swiperCreated = false;
        swiper.thumbs = {
            swiper: null
        };

        function onThumbClick() {
            const thumbsSwiper = swiper.thumbs.swiper;
            if (!thumbsSwiper || thumbsSwiper.destroyed)
                return;
            const clickedIndex = thumbsSwiper.clickedIndex;
            const clickedSlide = thumbsSwiper.clickedSlide;
            if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass))
                return;
            if (typeof clickedIndex === 'undefined' || clickedIndex === null)
                return;
            let slideToIndex;

            if (thumbsSwiper.params.loop) {
                slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);
            } else {
                slideToIndex = clickedIndex;
            }

            if (swiper.params.loop) {
                let currentIndex = swiper.activeIndex;

                if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {
                    swiper.loopFix();
                    // eslint-disable-next-line

                    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;
                    currentIndex = swiper.activeIndex;
                }

                const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index="${slideToIndex}"]`).eq(0).index();
                const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index="${slideToIndex}"]`).eq(0).index();
                if (typeof prevIndex === 'undefined')
                    slideToIndex = nextIndex;
                else if (typeof nextIndex === 'undefined')
                    slideToIndex = prevIndex;
                else if (nextIndex - currentIndex < currentIndex - prevIndex)
                    slideToIndex = nextIndex;
                else
                    slideToIndex = prevIndex;
            }

            swiper.slideTo(slideToIndex);
        }

        function init() {
            const {thumbs: thumbsParams} = swiper.params;
            if (initialized)
                return false;
            initialized = true;
            const SwiperClass = swiper.constructor;

            if (thumbsParams.swiper instanceof SwiperClass) {
                swiper.thumbs.swiper = thumbsParams.swiper;
                Object.assign(swiper.thumbs.swiper.originalParams, {
                    watchSlidesProgress: true,
                    slideToClickedSlide: false
                });
                Object.assign(swiper.thumbs.swiper.params, {
                    watchSlidesProgress: true,
                    slideToClickedSlide: false
                });
            } else if (isObject(thumbsParams.swiper)) {
                const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);
                Object.assign(thumbsSwiperParams, {
                    watchSlidesProgress: true,
                    slideToClickedSlide: false
                });
                swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);
                swiperCreated = true;
            }

            swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);
            swiper.thumbs.swiper.on('tap', onThumbClick);
            return true;
        }

        function update(initial) {
            const thumbsSwiper = swiper.thumbs.swiper;
            if (!thumbsSwiper || thumbsSwiper.destroyed)
                return;
            const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;
            // Activate thumbs

            let thumbsToActivate = 1;
            const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;

            if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {
                thumbsToActivate = swiper.params.slidesPerView;
            }

            if (!swiper.params.thumbs.multipleActiveThumbs) {
                thumbsToActivate = 1;
            }

            thumbsToActivate = Math.floor(thumbsToActivate);
            thumbsSwiper.slides.removeClass(thumbActiveClass);

            if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {
                for (let i = 0; i < thumbsToActivate; i += 1) {
                    thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index="${swiper.realIndex + i}"]`).addClass(thumbActiveClass);
                }
            } else {
                for (let i = 0; i < thumbsToActivate; i += 1) {
                    thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);
                }
            }

            const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;
            const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;

            if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {
                let currentThumbsIndex = thumbsSwiper.activeIndex;
                let newThumbsIndex;
                let direction;

                if (thumbsSwiper.params.loop) {
                    if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {
                        thumbsSwiper.loopFix();
                        // eslint-disable-next-line

                        thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;
                        currentThumbsIndex = thumbsSwiper.activeIndex;
                    }
                    // Find actual thumbs index to slide to

                    const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index="${swiper.realIndex}"]`).eq(0).index();
                    const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index="${swiper.realIndex}"]`).eq(0).index();

                    if (typeof prevThumbsIndex === 'undefined') {
                        newThumbsIndex = nextThumbsIndex;
                    } else if (typeof nextThumbsIndex === 'undefined') {
                        newThumbsIndex = prevThumbsIndex;
                    } else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) {
                        newThumbsIndex = thumbsSwiper.params.slidesPerGroup > 1 ? nextThumbsIndex : currentThumbsIndex;
                    } else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) {
                        newThumbsIndex = nextThumbsIndex;
                    } else {
                        newThumbsIndex = prevThumbsIndex;
                    }

                    direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';
                } else {
                    newThumbsIndex = swiper.realIndex;
                    direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';
                }

                if (useOffset) {
                    newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;
                }

                if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {
                    if (thumbsSwiper.params.centeredSlides) {
                        if (newThumbsIndex > currentThumbsIndex) {
                            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;
                        } else {
                            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;
                        }
                    } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1)
                        ;
                    thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);
                }
            }
        }

        on('beforeInit', () => {
            const {thumbs} = swiper.params;
            if (!thumbs || !thumbs.swiper)
                return;
            init();
            update(true);
        }
        );
        on('slideChange update resize observerUpdate', () => {
            update();
        }
        );
        on('setTransition', (_s, duration) => {
            const thumbsSwiper = swiper.thumbs.swiper;
            if (!thumbsSwiper || thumbsSwiper.destroyed)
                return;
            thumbsSwiper.setTransition(duration);
        }
        );
        on('beforeDestroy', () => {
            const thumbsSwiper = swiper.thumbs.swiper;
            if (!thumbsSwiper || thumbsSwiper.destroyed)
                return;

            if (swiperCreated) {
                thumbsSwiper.destroy();
            }
        }
        );
        Object.assign(swiper.thumbs, {
            init,
            update
        });
    }

    function freeMode(_ref) {
        let {swiper, extendParams, emit, once} = _ref;
        extendParams({
            freeMode: {
                enabled: false,
                momentum: true,
                momentumRatio: 1,
                momentumBounce: true,
                momentumBounceRatio: 1,
                momentumVelocityRatio: 1,
                sticky: false,
                minimumVelocity: 0.02
            }
        });

        function onTouchStart() {
            const translate = swiper.getTranslate();
            swiper.setTranslate(translate);
            swiper.setTransition(0);
            swiper.touchEventsData.velocities.length = 0;
            swiper.freeMode.onTouchEnd({
                currentPos: swiper.rtl ? swiper.translate : -swiper.translate
            });
        }

        function onTouchMove() {
            const {touchEventsData: data, touches} = swiper;
            // Velocity

            if (data.velocities.length === 0) {
                data.velocities.push({
                    position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],
                    time: data.touchStartTime
                });
            }

            data.velocities.push({
                position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],
                time: now()
            });
        }

        function onTouchEnd(_ref2) {
            let {currentPos} = _ref2;
            const {params, $wrapperEl, rtlTranslate: rtl, snapGrid, touchEventsData: data} = swiper;
            // Time diff

            const touchEndTime = now();
            const timeDiff = touchEndTime - data.touchStartTime;

            if (currentPos < -swiper.minTranslate()) {
                swiper.slideTo(swiper.activeIndex);
                return;
            }

            if (currentPos > -swiper.maxTranslate()) {
                if (swiper.slides.length < snapGrid.length) {
                    swiper.slideTo(snapGrid.length - 1);
                } else {
                    swiper.slideTo(swiper.slides.length - 1);
                }

                return;
            }

            if (params.freeMode.momentum) {
                if (data.velocities.length > 1) {
                    const lastMoveEvent = data.velocities.pop();
                    const velocityEvent = data.velocities.pop();
                    const distance = lastMoveEvent.position - velocityEvent.position;
                    const time = lastMoveEvent.time - velocityEvent.time;
                    swiper.velocity = distance / time;
                    swiper.velocity /= 2;

                    if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {
                        swiper.velocity = 0;
                    }
                    // this implies that the user stopped moving a finger then released.
                    // There would be no events with distance zero, so the last event is stale.

                    if (time > 150 || now() - lastMoveEvent.time > 300) {
                        swiper.velocity = 0;
                    }
                } else {
                    swiper.velocity = 0;
                }

                swiper.velocity *= params.freeMode.momentumVelocityRatio;
                data.velocities.length = 0;
                let momentumDuration = 1000 * params.freeMode.momentumRatio;
                const momentumDistance = swiper.velocity * momentumDuration;
                let newPosition = swiper.translate + momentumDistance;
                if (rtl)
                    newPosition = -newPosition;
                let doBounce = false;
                let afterBouncePosition;
                const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;
                let needsLoopFix;

                if (newPosition < swiper.maxTranslate()) {
                    if (params.freeMode.momentumBounce) {
                        if (newPosition + swiper.maxTranslate() < -bounceAmount) {
                            newPosition = swiper.maxTranslate() - bounceAmount;
                        }

                        afterBouncePosition = swiper.maxTranslate();
                        doBounce = true;
                        data.allowMomentumBounce = true;
                    } else {
                        newPosition = swiper.maxTranslate();
                    }

                    if (params.loop && params.centeredSlides)
                        needsLoopFix = true;
                } else if (newPosition > swiper.minTranslate()) {
                    if (params.freeMode.momentumBounce) {
                        if (newPosition - swiper.minTranslate() > bounceAmount) {
                            newPosition = swiper.minTranslate() + bounceAmount;
                        }

                        afterBouncePosition = swiper.minTranslate();
                        doBounce = true;
                        data.allowMomentumBounce = true;
                    } else {
                        newPosition = swiper.minTranslate();
                    }

                    if (params.loop && params.centeredSlides)
                        needsLoopFix = true;
                } else if (params.freeMode.sticky) {
                    let nextSlide;

                    for (let j = 0; j < snapGrid.length; j += 1) {
                        if (snapGrid[j] > -newPosition) {
                            nextSlide = j;
                            break;
                        }
                    }

                    if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {
                        newPosition = snapGrid[nextSlide];
                    } else {
                        newPosition = snapGrid[nextSlide - 1];
                    }

                    newPosition = -newPosition;
                }

                if (needsLoopFix) {
                    once('transitionEnd', () => {
                        swiper.loopFix();
                    }
                    );
                }
                // Fix duration

                if (swiper.velocity !== 0) {
                    if (rtl) {
                        momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);
                    } else {
                        momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);
                    }

                    if (params.freeMode.sticky) {
                        // If freeMode.sticky is active and the user ends a swipe with a slow-velocity
                        // event, then durations can be 20+ seconds to slide one (or zero!) slides.
                        // It's easy to see this when simulating touch with mouse events. To fix this,
                        // limit single-slide swipes to the default slide duration. This also has the
                        // nice side effect of matching slide speed if the user stopped moving before
                        // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.
                        // For faster swipes, also apply limits (albeit higher ones).
                        const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);
                        const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];

                        if (moveDistance < currentSlideSize) {
                            momentumDuration = params.speed;
                        } else if (moveDistance < 2 * currentSlideSize) {
                            momentumDuration = params.speed * 1.5;
                        } else {
                            momentumDuration = params.speed * 2.5;
                        }
                    }
                } else if (params.freeMode.sticky) {
                    swiper.slideToClosest();
                    return;
                }

                if (params.freeMode.momentumBounce && doBounce) {
                    swiper.updateProgress(afterBouncePosition);
                    swiper.setTransition(momentumDuration);
                    swiper.setTranslate(newPosition);
                    swiper.transitionStart(true, swiper.swipeDirection);
                    swiper.animating = true;
                    $wrapperEl.transitionEnd( () => {
                        if (!swiper || swiper.destroyed || !data.allowMomentumBounce)
                            return;
                        emit('momentumBounce');
                        swiper.setTransition(params.speed);
                        setTimeout( () => {
                            swiper.setTranslate(afterBouncePosition);
                            $wrapperEl.transitionEnd( () => {
                                if (!swiper || swiper.destroyed)
                                    return;
                                swiper.transitionEnd();
                            }
                            );
                        }
                        , 0);
                    }
                    );
                } else if (swiper.velocity) {
                    emit('_freeModeNoMomentumRelease');
                    swiper.updateProgress(newPosition);
                    swiper.setTransition(momentumDuration);
                    swiper.setTranslate(newPosition);
                    swiper.transitionStart(true, swiper.swipeDirection);

                    if (!swiper.animating) {
                        swiper.animating = true;
                        $wrapperEl.transitionEnd( () => {
                            if (!swiper || swiper.destroyed)
                                return;
                            swiper.transitionEnd();
                        }
                        );
                    }
                } else {
                    swiper.updateProgress(newPosition);
                }

                swiper.updateActiveIndex();
                swiper.updateSlidesClasses();
            } else if (params.freeMode.sticky) {
                swiper.slideToClosest();
                return;
            } else if (params.freeMode) {
                emit('_freeModeNoMomentumRelease');
            }

            if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {
                swiper.updateProgress();
                swiper.updateActiveIndex();
                swiper.updateSlidesClasses();
            }
        }

        Object.assign(swiper, {
            freeMode: {
                onTouchStart,
                onTouchMove,
                onTouchEnd
            }
        });
    }

    function Grid(_ref) {
        let {swiper, extendParams} = _ref;
        extendParams({
            grid: {
                rows: 1,
                fill: 'column'
            }
        });
        let slidesNumberEvenToRows;
        let slidesPerRow;
        let numFullColumns;

        const initSlides = slidesLength => {
            const {slidesPerView} = swiper.params;
            const {rows, fill} = swiper.params.grid;
            slidesPerRow = slidesNumberEvenToRows / rows;
            numFullColumns = Math.floor(slidesLength / rows);

            if (Math.floor(slidesLength / rows) === slidesLength / rows) {
                slidesNumberEvenToRows = slidesLength;
            } else {
                slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;
            }

            if (slidesPerView !== 'auto' && fill === 'row') {
                slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);
            }
        }
        ;

        const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {
            const {slidesPerGroup, spaceBetween} = swiper.params;
            const {rows, fill} = swiper.params.grid;
            // Set slides order

            let newSlideOrderIndex;
            let column;
            let row;

            if (fill === 'row' && slidesPerGroup > 1) {
                const groupIndex = Math.floor(i / (slidesPerGroup * rows));
                const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;
                const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);
                row = Math.floor(slideIndexInGroup / columnsInGroup);
                column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;
                newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;
                slide.css({
                    '-webkit-order': newSlideOrderIndex,
                    order: newSlideOrderIndex
                });
            } else if (fill === 'column') {
                column = Math.floor(i / rows);
                row = i - column * rows;

                if (column > numFullColumns || column === numFullColumns && row === rows - 1) {
                    row += 1;

                    if (row >= rows) {
                        row = 0;
                        column += 1;
                    }
                }
            } else {
                row = Math.floor(i / slidesPerRow);
                column = i - row * slidesPerRow;
            }

            slide.css(getDirectionLabel('margin-top'), row !== 0 ? spaceBetween && `${spaceBetween}px` : '');
        }
        ;

        const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {
            const {spaceBetween, centeredSlides, roundLengths} = swiper.params;
            const {rows} = swiper.params.grid;
            swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;
            swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;
            swiper.$wrapperEl.css({
                [getDirectionLabel('width')]: `${swiper.virtualSize + spaceBetween}px`
            });

            if (centeredSlides) {
                snapGrid.splice(0, snapGrid.length);
                const newSlidesGrid = [];

                for (let i = 0; i < snapGrid.length; i += 1) {
                    let slidesGridItem = snapGrid[i];
                    if (roundLengths)
                        slidesGridItem = Math.floor(slidesGridItem);
                    if (snapGrid[i] < swiper.virtualSize + snapGrid[0])
                        newSlidesGrid.push(slidesGridItem);
                }

                snapGrid.push(...newSlidesGrid);
            }
        }
        ;

        swiper.grid = {
            initSlides,
            updateSlide,
            updateWrapperSize
        };
    }

    function appendSlide(slides) {
        const swiper = this;
        const {$wrapperEl, params} = swiper;

        if (params.loop) {
            swiper.loopDestroy();
        }

        if (typeof slides === 'object' && 'length'in slides) {
            for (let i = 0; i < slides.length; i += 1) {
                if (slides[i])
                    $wrapperEl.append(slides[i]);
            }
        } else {
            $wrapperEl.append(slides);
        }

        if (params.loop) {
            swiper.loopCreate();
        }

        if (!params.observer) {
            swiper.update();
        }
    }

    function prependSlide(slides) {
        const swiper = this;
        const {params, $wrapperEl, activeIndex} = swiper;

        if (params.loop) {
            swiper.loopDestroy();
        }

        let newActiveIndex = activeIndex + 1;

        if (typeof slides === 'object' && 'length'in slides) {
            for (let i = 0; i < slides.length; i += 1) {
                if (slides[i])
                    $wrapperEl.prepend(slides[i]);
            }

            newActiveIndex = activeIndex + slides.length;
        } else {
            $wrapperEl.prepend(slides);
        }

        if (params.loop) {
            swiper.loopCreate();
        }

        if (!params.observer) {
            swiper.update();
        }

        swiper.slideTo(newActiveIndex, 0, false);
    }

    function addSlide(index, slides) {
        const swiper = this;
        const {$wrapperEl, params, activeIndex} = swiper;
        let activeIndexBuffer = activeIndex;

        if (params.loop) {
            activeIndexBuffer -= swiper.loopedSlides;
            swiper.loopDestroy();
            swiper.slides = $wrapperEl.children(`.${params.slideClass}`);
        }

        const baseLength = swiper.slides.length;

        if (index <= 0) {
            swiper.prependSlide(slides);
            return;
        }

        if (index >= baseLength) {
            swiper.appendSlide(slides);
            return;
        }

        let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;
        const slidesBuffer = [];

        for (let i = baseLength - 1; i >= index; i -= 1) {
            const currentSlide = swiper.slides.eq(i);
            currentSlide.remove();
            slidesBuffer.unshift(currentSlide);
        }

        if (typeof slides === 'object' && 'length'in slides) {
            for (let i = 0; i < slides.length; i += 1) {
                if (slides[i])
                    $wrapperEl.append(slides[i]);
            }

            newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;
        } else {
            $wrapperEl.append(slides);
        }

        for (let i = 0; i < slidesBuffer.length; i += 1) {
            $wrapperEl.append(slidesBuffer[i]);
        }

        if (params.loop) {
            swiper.loopCreate();
        }

        if (!params.observer) {
            swiper.update();
        }

        if (params.loop) {
            swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);
        } else {
            swiper.slideTo(newActiveIndex, 0, false);
        }
    }

    function removeSlide(slidesIndexes) {
        const swiper = this;
        const {params, $wrapperEl, activeIndex} = swiper;
        let activeIndexBuffer = activeIndex;

        if (params.loop) {
            activeIndexBuffer -= swiper.loopedSlides;
            swiper.loopDestroy();
            swiper.slides = $wrapperEl.children(`.${params.slideClass}`);
        }

        let newActiveIndex = activeIndexBuffer;
        let indexToRemove;

        if (typeof slidesIndexes === 'object' && 'length'in slidesIndexes) {
            for (let i = 0; i < slidesIndexes.length; i += 1) {
                indexToRemove = slidesIndexes[i];
                if (swiper.slides[indexToRemove])
                    swiper.slides.eq(indexToRemove).remove();
                if (indexToRemove < newActiveIndex)
                    newActiveIndex -= 1;
            }

            newActiveIndex = Math.max(newActiveIndex, 0);
        } else {
            indexToRemove = slidesIndexes;
            if (swiper.slides[indexToRemove])
                swiper.slides.eq(indexToRemove).remove();
            if (indexToRemove < newActiveIndex)
                newActiveIndex -= 1;
            newActiveIndex = Math.max(newActiveIndex, 0);
        }

        if (params.loop) {
            swiper.loopCreate();
        }

        if (!params.observer) {
            swiper.update();
        }

        if (params.loop) {
            swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);
        } else {
            swiper.slideTo(newActiveIndex, 0, false);
        }
    }

    function removeAllSlides() {
        const swiper = this;
        const slidesIndexes = [];

        for (let i = 0; i < swiper.slides.length; i += 1) {
            slidesIndexes.push(i);
        }

        swiper.removeSlide(slidesIndexes);
    }

    function Manipulation(_ref) {
        let {swiper} = _ref;
        Object.assign(swiper, {
            appendSlide: appendSlide.bind(swiper),
            prependSlide: prependSlide.bind(swiper),
            addSlide: addSlide.bind(swiper),
            removeSlide: removeSlide.bind(swiper),
            removeAllSlides: removeAllSlides.bind(swiper)
        });
    }

    function effectInit(params) {
        const {effect, swiper, on, setTranslate, setTransition, overwriteParams, perspective, recreateShadows, getEffectParams} = params;
        on('beforeInit', () => {
            if (swiper.params.effect !== effect)
                return;
            swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);

            if (perspective && perspective()) {
                swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);
            }

            const overwriteParamsResult = overwriteParams ? overwriteParams() : {};
            Object.assign(swiper.params, overwriteParamsResult);
            Object.assign(swiper.originalParams, overwriteParamsResult);
        }
        );
        on('setTranslate', () => {
            if (swiper.params.effect !== effect)
                return;
            setTranslate();
        }
        );
        on('setTransition', (_s, duration) => {
            if (swiper.params.effect !== effect)
                return;
            setTransition(duration);
        }
        );
        on('transitionEnd', () => {
            if (swiper.params.effect !== effect)
                return;

            if (recreateShadows) {
                if (!getEffectParams || !getEffectParams().slideShadows)
                    return;
                // remove shadows

                swiper.slides.each(slideEl => {
                    const $slideEl = swiper.$(slideEl);
                    $slideEl.find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').remove();
                }
                );
                // create new one

                recreateShadows();
            }
        }
        );
        let requireUpdateOnVirtual;
        on('virtualUpdate', () => {
            if (swiper.params.effect !== effect)
                return;

            if (!swiper.slides.length) {
                requireUpdateOnVirtual = true;
            }

            requestAnimationFrame( () => {
                if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {
                    setTranslate();
                    requireUpdateOnVirtual = false;
                }
            }
            );
        }
        );
    }

    function effectTarget(effectParams, $slideEl) {
        if (effectParams.transformEl) {
            return $slideEl.find(effectParams.transformEl).css({
                'backface-visibility': 'hidden',
                '-webkit-backface-visibility': 'hidden'
            });
        }

        return $slideEl;
    }

    function effectVirtualTransitionEnd(_ref) {
        let {swiper, duration, transformEl, allSlides} = _ref;
        const {slides, activeIndex, $wrapperEl} = swiper;

        if (swiper.params.virtualTranslate && duration !== 0) {
            let eventTriggered = false;
            let $transitionEndTarget;

            if (allSlides) {
                $transitionEndTarget = transformEl ? slides.find(transformEl) : slides;
            } else {
                $transitionEndTarget = transformEl ? slides.eq(activeIndex).find(transformEl) : slides.eq(activeIndex);
            }

            $transitionEndTarget.transitionEnd( () => {
                if (eventTriggered)
                    return;
                if (!swiper || swiper.destroyed)
                    return;
                eventTriggered = true;
                swiper.animating = false;
                const triggerEvents = ['webkitTransitionEnd', 'transitionend'];

                for (let i = 0; i < triggerEvents.length; i += 1) {
                    $wrapperEl.trigger(triggerEvents[i]);
                }
            }
            );
        }
    }

    function EffectFade(_ref) {
        let {swiper, extendParams, on} = _ref;
        extendParams({
            fadeEffect: {
                crossFade: false,
                transformEl: null
            }
        });

        const setTranslate = () => {
            const {slides} = swiper;
            const params = swiper.params.fadeEffect;

            for (let i = 0; i < slides.length; i += 1) {
                const $slideEl = swiper.slides.eq(i);
                const offset = $slideEl[0].swiperSlideOffset;
                let tx = -offset;
                if (!swiper.params.virtualTranslate)
                    tx -= swiper.translate;
                let ty = 0;

                if (!swiper.isHorizontal()) {
                    ty = tx;
                    tx = 0;
                }

                const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);
                const $targetEl = effectTarget(params, $slideEl);
                $targetEl.css({
                    opacity: slideOpacity
                }).transform(`translate3d(${tx}px, ${ty}px, 0px)`);
            }
        }
        ;

        const setTransition = duration => {
            const {transformEl} = swiper.params.fadeEffect;
            const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;
            $transitionElements.transition(duration);
            effectVirtualTransitionEnd({
                swiper,
                duration,
                transformEl,
                allSlides: true
            });
        }
        ;

        effectInit({
            effect: 'fade',
            swiper,
            on,
            setTranslate,
            setTransition,
            overwriteParams: () => ({
                slidesPerView: 1,
                slidesPerGroup: 1,
                watchSlidesProgress: true,
                spaceBetween: 0,
                virtualTranslate: !swiper.params.cssMode
            })
        });
    }

    function EffectCube(_ref) {
        let {swiper, extendParams, on} = _ref;
        extendParams({
            cubeEffect: {
                slideShadows: true,
                shadow: true,
                shadowOffset: 20,
                shadowScale: 0.94
            }
        });

        const createSlideShadows = ($slideEl, progress, isHorizontal) => {
            let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');
            let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');

            if (shadowBefore.length === 0) {
                shadowBefore = $(`<div class="swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}"></div>`);
                $slideEl.append(shadowBefore);
            }

            if (shadowAfter.length === 0) {
                shadowAfter = $(`<div class="swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}"></div>`);
                $slideEl.append(shadowAfter);
            }

            if (shadowBefore.length)
                shadowBefore[0].style.opacity = Math.max(-progress, 0);
            if (shadowAfter.length)
                shadowAfter[0].style.opacity = Math.max(progress, 0);
        }
        ;

        const recreateShadows = () => {
            // create new ones
            const isHorizontal = swiper.isHorizontal();
            swiper.slides.each(slideEl => {
                const progress = Math.max(Math.min(slideEl.progress, 1), -1);
                createSlideShadows($(slideEl), progress, isHorizontal);
            }
            );
        }
        ;

        const setTranslate = () => {
            const {$el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize, browser} = swiper;
            const params = swiper.params.cubeEffect;
            const isHorizontal = swiper.isHorizontal();
            const isVirtual = swiper.virtual && swiper.params.virtual.enabled;
            let wrapperRotate = 0;
            let $cubeShadowEl;

            if (params.shadow) {
                if (isHorizontal) {
                    $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');

                    if ($cubeShadowEl.length === 0) {
                        $cubeShadowEl = $('<div class="swiper-cube-shadow"></div>');
                        $wrapperEl.append($cubeShadowEl);
                    }

                    $cubeShadowEl.css({
                        height: `${swiperWidth}px`
                    });
                } else {
                    $cubeShadowEl = $el.find('.swiper-cube-shadow');

                    if ($cubeShadowEl.length === 0) {
                        $cubeShadowEl = $('<div class="swiper-cube-shadow"></div>');
                        $el.append($cubeShadowEl);
                    }
                }
            }

            for (let i = 0; i < slides.length; i += 1) {
                const $slideEl = slides.eq(i);
                let slideIndex = i;

                if (isVirtual) {
                    slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);
                }

                let slideAngle = slideIndex * 90;
                let round = Math.floor(slideAngle / 360);

                if (rtl) {
                    slideAngle = -slideAngle;
                    round = Math.floor(-slideAngle / 360);
                }

                const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);
                let tx = 0;
                let ty = 0;
                let tz = 0;

                if (slideIndex % 4 === 0) {
                    tx = -round * 4 * swiperSize;
                    tz = 0;
                } else if ((slideIndex - 1) % 4 === 0) {
                    tx = 0;
                    tz = -round * 4 * swiperSize;
                } else if ((slideIndex - 2) % 4 === 0) {
                    tx = swiperSize + round * 4 * swiperSize;
                    tz = swiperSize;
                } else if ((slideIndex - 3) % 4 === 0) {
                    tx = -swiperSize;
                    tz = 3 * swiperSize + swiperSize * 4 * round;
                }

                if (rtl) {
                    tx = -tx;
                }

                if (!isHorizontal) {
                    ty = tx;
                    tx = 0;
                }

                const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;

                if (progress <= 1 && progress > -1) {
                    wrapperRotate = slideIndex * 90 + progress * 90;
                    if (rtl)
                        wrapperRotate = -slideIndex * 90 - progress * 90;
                }

                $slideEl.transform(transform);

                if (params.slideShadows) {
                    createSlideShadows($slideEl, progress, isHorizontal);
                }
            }

            $wrapperEl.css({
                '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,
                'transform-origin': `50% 50% -${swiperSize / 2}px`
            });

            if (params.shadow) {
                if (isHorizontal) {
                    $cubeShadowEl.transform(`translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);
                } else {
                    const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;
                    const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);
                    const scale1 = params.shadowScale;
                    const scale2 = params.shadowScale / multiplier;
                    const offset = params.shadowOffset;
                    $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);
                }
            }

            const zFactor = browser.isSafari || browser.isWebView ? -swiperSize / 2 : 0;
            $wrapperEl.transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);
            $wrapperEl[0].style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);
        }
        ;

        const setTransition = duration => {
            const {$el, slides} = swiper;
            slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);

            if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {
                $el.find('.swiper-cube-shadow').transition(duration);
            }
        }
        ;

        effectInit({
            effect: 'cube',
            swiper,
            on,
            setTranslate,
            setTransition,
            recreateShadows,
            getEffectParams: () => swiper.params.cubeEffect,
            perspective: () => true,
            overwriteParams: () => ({
                slidesPerView: 1,
                slidesPerGroup: 1,
                watchSlidesProgress: true,
                resistanceRatio: 0,
                spaceBetween: 0,
                centeredSlides: false,
                virtualTranslate: true
            })
        });
    }

    function createShadow(params, $slideEl, side) {
        const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;
        const $shadowContainer = params.transformEl ? $slideEl.find(params.transformEl) : $slideEl;
        let $shadowEl = $shadowContainer.children(`.${shadowClass}`);

        if (!$shadowEl.length) {
            $shadowEl = $(`<div class="swiper-slide-shadow${side ? `-${side}` : ''}"></div>`);
            $shadowContainer.append($shadowEl);
        }

        return $shadowEl;
    }

    function EffectFlip(_ref) {
        let {swiper, extendParams, on} = _ref;
        extendParams({
            flipEffect: {
                slideShadows: true,
                limitRotation: true,
                transformEl: null
            }
        });

        const createSlideShadows = ($slideEl, progress, params) => {
            let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');
            let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');

            if (shadowBefore.length === 0) {
                shadowBefore = createShadow(params, $slideEl, swiper.isHorizontal() ? 'left' : 'top');
            }

            if (shadowAfter.length === 0) {
                shadowAfter = createShadow(params, $slideEl, swiper.isHorizontal() ? 'right' : 'bottom');
            }

            if (shadowBefore.length)
                shadowBefore[0].style.opacity = Math.max(-progress, 0);
            if (shadowAfter.length)
                shadowAfter[0].style.opacity = Math.max(progress, 0);
        }
        ;

        const recreateShadows = () => {
            // Set shadows
            const params = swiper.params.flipEffect;
            swiper.slides.each(slideEl => {
                const $slideEl = $(slideEl);
                let progress = $slideEl[0].progress;

                if (swiper.params.flipEffect.limitRotation) {
                    progress = Math.max(Math.min(slideEl.progress, 1), -1);
                }

                createSlideShadows($slideEl, progress, params);
            }
            );
        }
        ;

        const setTranslate = () => {
            const {slides, rtlTranslate: rtl} = swiper;
            const params = swiper.params.flipEffect;

            for (let i = 0; i < slides.length; i += 1) {
                const $slideEl = slides.eq(i);
                let progress = $slideEl[0].progress;

                if (swiper.params.flipEffect.limitRotation) {
                    progress = Math.max(Math.min($slideEl[0].progress, 1), -1);
                }

                const offset = $slideEl[0].swiperSlideOffset;
                const rotate = -180 * progress;
                let rotateY = rotate;
                let rotateX = 0;
                let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;
                let ty = 0;

                if (!swiper.isHorizontal()) {
                    ty = tx;
                    tx = 0;
                    rotateX = -rotateY;
                    rotateY = 0;
                } else if (rtl) {
                    rotateY = -rotateY;
                }

                $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;

                if (params.slideShadows) {
                    createSlideShadows($slideEl, progress, params);
                }

                const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;
                const $targetEl = effectTarget(params, $slideEl);
                $targetEl.transform(transform);
            }
        }
        ;

        const setTransition = duration => {
            const {transformEl} = swiper.params.flipEffect;
            const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;
            $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);
            effectVirtualTransitionEnd({
                swiper,
                duration,
                transformEl
            });
        }
        ;

        effectInit({
            effect: 'flip',
            swiper,
            on,
            setTranslate,
            setTransition,
            recreateShadows,
            getEffectParams: () => swiper.params.flipEffect,
            perspective: () => true,
            overwriteParams: () => ({
                slidesPerView: 1,
                slidesPerGroup: 1,
                watchSlidesProgress: true,
                spaceBetween: 0,
                virtualTranslate: !swiper.params.cssMode
            })
        });
    }

    function EffectCoverflow(_ref) {
        let {swiper, extendParams, on} = _ref;
        extendParams({
            coverflowEffect: {
                rotate: 50,
                stretch: 0,
                depth: 100,
                scale: 1,
                modifier: 1,
                slideShadows: true,
                transformEl: null
            }
        });

        const setTranslate = () => {
            const {width: swiperWidth, height: swiperHeight, slides, slidesSizesGrid} = swiper;
            const params = swiper.params.coverflowEffect;
            const isHorizontal = swiper.isHorizontal();
            const transform = swiper.translate;
            const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;
            const rotate = isHorizontal ? params.rotate : -params.rotate;
            const translate = params.depth;
            // Each slide offset from center

            for (let i = 0, length = slides.length; i < length; i += 1) {
                const $slideEl = slides.eq(i);
                const slideSize = slidesSizesGrid[i];
                const slideOffset = $slideEl[0].swiperSlideOffset;
                const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;
                const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;
                let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;
                let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;
                // var rotateZ = 0

                let translateZ = -translate * Math.abs(offsetMultiplier);
                let stretch = params.stretch;
                // Allow percentage to make a relative stretch for responsive sliders

                if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {
                    stretch = parseFloat(params.stretch) / 100 * slideSize;
                }

                let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;
                let translateX = isHorizontal ? stretch * offsetMultiplier : 0;
                let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);
                // Fix for ultra small values

                if (Math.abs(translateX) < 0.001)
                    translateX = 0;
                if (Math.abs(translateY) < 0.001)
                    translateY = 0;
                if (Math.abs(translateZ) < 0.001)
                    translateZ = 0;
                if (Math.abs(rotateY) < 0.001)
                    rotateY = 0;
                if (Math.abs(rotateX) < 0.001)
                    rotateX = 0;
                if (Math.abs(scale) < 0.001)
                    scale = 0;
                const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;
                const $targetEl = effectTarget(params, $slideEl);
                $targetEl.transform(slideTransform);
                $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;

                if (params.slideShadows) {
                    // Set shadows
                    let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');
                    let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');

                    if ($shadowBeforeEl.length === 0) {
                        $shadowBeforeEl = createShadow(params, $slideEl, isHorizontal ? 'left' : 'top');
                    }

                    if ($shadowAfterEl.length === 0) {
                        $shadowAfterEl = createShadow(params, $slideEl, isHorizontal ? 'right' : 'bottom');
                    }

                    if ($shadowBeforeEl.length)
                        $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;
                    if ($shadowAfterEl.length)
                        $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;
                }
            }
        }
        ;

        const setTransition = duration => {
            const {transformEl} = swiper.params.coverflowEffect;
            const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;
            $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);
        }
        ;

        effectInit({
            effect: 'coverflow',
            swiper,
            on,
            setTranslate,
            setTransition,
            perspective: () => true,
            overwriteParams: () => ({
                watchSlidesProgress: true
            })
        });
    }

    function EffectCreative(_ref) {
        let {swiper, extendParams, on} = _ref;
        extendParams({
            creativeEffect: {
                transformEl: null,
                limitProgress: 1,
                shadowPerProgress: false,
                progressMultiplier: 1,
                perspective: true,
                prev: {
                    translate: [0, 0, 0],
                    rotate: [0, 0, 0],
                    opacity: 1,
                    scale: 1
                },
                next: {
                    translate: [0, 0, 0],
                    rotate: [0, 0, 0],
                    opacity: 1,
                    scale: 1
                }
            }
        });

        const getTranslateValue = value => {
            if (typeof value === 'string')
                return value;
            return `${value}px`;
        }
        ;

        const setTranslate = () => {
            const {slides, $wrapperEl, slidesSizesGrid} = swiper;
            const params = swiper.params.creativeEffect;
            const {progressMultiplier: multiplier} = params;
            const isCenteredSlides = swiper.params.centeredSlides;

            if (isCenteredSlides) {
                const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;
                $wrapperEl.transform(`translateX(calc(50% - ${margin}px))`);
            }

            for (let i = 0; i < slides.length; i += 1) {
                const $slideEl = slides.eq(i);
                const slideProgress = $slideEl[0].progress;
                const progress = Math.min(Math.max($slideEl[0].progress, -params.limitProgress), params.limitProgress);
                let originalProgress = progress;

                if (!isCenteredSlides) {
                    originalProgress = Math.min(Math.max($slideEl[0].originalProgress, -params.limitProgress), params.limitProgress);
                }

                const offset = $slideEl[0].swiperSlideOffset;
                const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];
                const r = [0, 0, 0];
                let custom = false;

                if (!swiper.isHorizontal()) {
                    t[1] = t[0];
                    t[0] = 0;
                }

                let data = {
                    translate: [0, 0, 0],
                    rotate: [0, 0, 0],
                    scale: 1,
                    opacity: 1
                };

                if (progress < 0) {
                    data = params.next;
                    custom = true;
                } else if (progress > 0) {
                    data = params.prev;
                    custom = true;
                }
                // set translate

                t.forEach( (value, index) => {
                    t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;
                }
                );
                // set rotates

                r.forEach( (value, index) => {
                    r[index] = data.rotate[index] * Math.abs(progress * multiplier);
                }
                );
                $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;
                const translateString = t.join(', ');
                const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;
                const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;
                const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;
                const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;
                // Set shadows

                if (custom && data.shadow || !custom) {
                    let $shadowEl = $slideEl.children('.swiper-slide-shadow');

                    if ($shadowEl.length === 0 && data.shadow) {
                        $shadowEl = createShadow(params, $slideEl);
                    }

                    if ($shadowEl.length) {
                        const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;
                        $shadowEl[0].style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);
                    }
                }

                const $targetEl = effectTarget(params, $slideEl);
                $targetEl.transform(transform).css({
                    opacity: opacityString
                });

                if (data.origin) {
                    $targetEl.css('transform-origin', data.origin);
                }
            }
        }
        ;

        const setTransition = duration => {
            const {transformEl} = swiper.params.creativeEffect;
            const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;
            $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);
            effectVirtualTransitionEnd({
                swiper,
                duration,
                transformEl,
                allSlides: true
            });
        }
        ;

        effectInit({
            effect: 'creative',
            swiper,
            on,
            setTranslate,
            setTransition,
            perspective: () => swiper.params.creativeEffect.perspective,
            overwriteParams: () => ({
                watchSlidesProgress: true,
                virtualTranslate: !swiper.params.cssMode
            })
        });
    }

    function EffectCards(_ref) {
        let {swiper, extendParams, on} = _ref;
        extendParams({
            cardsEffect: {
                slideShadows: true,
                transformEl: null,
                rotate: true
            }
        });

        const setTranslate = () => {
            const {slides, activeIndex} = swiper;
            const params = swiper.params.cardsEffect;
            const {startTranslate, isTouched} = swiper.touchEventsData;
            const currentTranslate = swiper.translate;

            for (let i = 0; i < slides.length; i += 1) {
                const $slideEl = slides.eq(i);
                const slideProgress = $slideEl[0].progress;
                const progress = Math.min(Math.max(slideProgress, -4), 4);
                let offset = $slideEl[0].swiperSlideOffset;

                if (swiper.params.centeredSlides && !swiper.params.cssMode) {
                    swiper.$wrapperEl.transform(`translateX(${swiper.minTranslate()}px)`);
                }

                if (swiper.params.centeredSlides && swiper.params.cssMode) {
                    offset -= slides[0].swiperSlideOffset;
                }

                let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;
                let tY = 0;
                const tZ = -100 * Math.abs(progress);
                let scale = 1;
                let rotate = -2 * progress;
                let tXAdd = 8 - Math.abs(progress) * 0.75;
                const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;
                const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;
                const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;

                if (isSwipeToNext || isSwipeToPrev) {
                    const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;
                    rotate += -28 * progress * subProgress;
                    scale += -0.5 * subProgress;
                    tXAdd += 96 * subProgress;
                    tY = `${-25 * subProgress * Math.abs(progress)}%`;
                }

                if (progress < 0) {
                    // next
                    tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;
                } else if (progress > 0) {
                    // prev
                    tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;
                } else {
                    tX = `${tX}px`;
                }

                if (!swiper.isHorizontal()) {
                    const prevY = tY;
                    tY = tX;
                    tX = prevY;
                }

                const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;
                const transform = `
        translate3d(${tX}, ${tY}, ${tZ}px)
        rotateZ(${params.rotate ? rotate : 0}deg)
        scale(${scaleString})
      `;

                if (params.slideShadows) {
                    // Set shadows
                    let $shadowEl = $slideEl.find('.swiper-slide-shadow');

                    if ($shadowEl.length === 0) {
                        $shadowEl = createShadow(params, $slideEl);
                    }

                    if ($shadowEl.length)
                        $shadowEl[0].style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);
                }

                $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;
                const $targetEl = effectTarget(params, $slideEl);
                $targetEl.transform(transform);
            }
        }
        ;

        const setTransition = duration => {
            const {transformEl} = swiper.params.cardsEffect;
            const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;
            $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);
            effectVirtualTransitionEnd({
                swiper,
                duration,
                transformEl
            });
        }
        ;

        effectInit({
            effect: 'cards',
            swiper,
            on,
            setTranslate,
            setTransition,
            perspective: () => true,
            overwriteParams: () => ({
                watchSlidesProgress: true,
                virtualTranslate: !swiper.params.cssMode
            })
        });
    }

    // Swiper Class
    const modules = [Virtual, Keyboard, Mousewheel, Navigation, Pagination, Scrollbar, Parallax, Zoom, Lazy, Controller, A11y, History, HashNavigation, Autoplay, Thumb, freeMode, Grid, Manipulation, EffectFade, EffectCube, EffectFlip, EffectCoverflow, EffectCreative, EffectCards];
    Swiper.use(modules);

    return Swiper;

}
));
//# sourceMappingURL=swiper-bundle.js.map
class Valid {
    validMessages(Validation_Username=null, ValidationLength_UserName=null, Validation_Invalid_Username=null, Validation_EnterEmail=null, ValidationLength_Email=null, Validation_CorrectEmail=null, Validation_Mobile=null, ValidationLength_Mobile=null, Validation_CountryId=null, Validation_ZipCode=null, ValidationLength_ZipCode=null, Validation_Invalid_ZipCode=null, Validation_Province=null, Validation_Address=null, ValidationLength_Address=null, Validation_Code=null, Validation_FirstName=null, ValidationLength_FirstName=null, Validation_Invalid_FirstName=null, Validation_LastName=null, ValidationLength_LastName=null, Validation_Invalid_LastName=null, Validation_Gender=null, Validation_Currency=null, Validation_Password=null, ValidationLength_Password=null, Validation_PasswordConfirm=null, Validation_PasswordMatch=null, Validation_DateOfBirth_Invalid=null, _playerMinAgeDate=null) {
        const $userName = $('#UserName');
        const $userNameError = $('#UserNameError');
        const $mobileNumber = $('#MobileNumber');
        const $email = $('#Email');
        const $emailError = $('#EmailError');
        const $firstName = $('#FirstName');
        const $firstNameError = $('#FirstNameError');
        const $lastName = $('#LastName');
        const $lastNameError = $('#LastNameError');
        const $countryDropDown = $('#CountryCode');
        const $countryError = $('#CountryError');
        const $zipCode = $('#ZipCode');
        const $zipCodeError = $('#ZipError');
        const $genderDropDown = $('#Gender');
        const $genderDropDownError = $('#GenderError');
        const $currencyDropDown = $('#CurrencyId');
        const $currencyDropDownError = $('#CurrencyIdError');
        const $captchaButton = $('.captcha-refresh');
        const $province = $('.province');
        const $provinceState = $('#Province');
        const $provinceError = $('#ProvinceError');
        const $address = $('#Address');
        const $addressError = $('#AddressError');
        const $numDropDown = $('#NumberCode');
        const $numDropDownError = $('#NumberCodeError');
        const $mobile = $('#Mobile');
        const $mobileError = $('#MobileError');
        const $dateOfBirthMonth = $('#Month');
        const $dateOfBirthError = $('#BirthError');
        const $dateOfBirthYear = $('#Year');
        const $dateOfBirthDay = $('#Day');
        const $password = $('#Password');
        const $passwordError = $('#PasswordError');
        const $passwordValidation = $('#PasswordValidation');
        const $passwordValidationError = $('#PasswordValidationError');
        const $container = $('#registerContainer');

        let clicked = '';
        let clickedForKeyUp = '';
        let isValid = true;
        if ($userName.length) {
            $userName.on("click", function(e) {
                clickedForKeyUp = "";
                clicked = "un";
                clickedForKeyUp = "un";
            });
            $userName.on("keydown", function(e) {
                if ($(this).val().length === 0 && e.which === 32) {
                    e.preventDefault();
                    e.stopPropagation();
                }
            });
        }
        if ($email.length) {
            $email.on("click", function(e) {
                clickedForKeyUp = "";
                clicked = "em";
                clickedForKeyUp = "em";
            });

            $email.on("keydown", function(e) {
                if ($(this).val().length === 0 && e.which === 32) {
                    e.preventDefault();
                    e.stopPropagation();
                }
            });
        }
        if ($mobileNumber.length) {
            $mobileNumber.on("click", function(e) {
                clickedForKeyUp = "";
                clicked = "mob";
                clickedForKeyUp = "mob";
            });

            $mobileNumber.on("keydown", function(e) {
                if ($(this).val().length === 0 && e.which === 32) {
                    e.preventDefault();
                    e.stopPropagation();
                }
            });
        }
        if ($countryDropDown.length) {
            $countryDropDown.on("click", function(e) {
                clickedForKeyUp = "";
                clicked = "cdd";
                clickedForKeyUp = "cdd";
            });

            $countryDropDown.on("keydown", function(e) {
                if ($(this).val().length === 0 && e.which === 32) {
                    e.preventDefault();
                    e.stopPropagation();
                }
            });
        }
        if ($zipCode.length) {
            $zipCode.on("click", function(e) {
                clickedForKeyUp = "";
                clicked = "zc";
                clickedForKeyUp = "zc";
            });

            $zipCode.on("keydown", function(e) {
                if ($(this).val().length === 0 && e.which === 32) {
                    e.preventDefault();
                    e.stopPropagation();
                }
            });
        }
        if ($province.length) {
            $province.on("click", function(e) {
                clickedForKeyUp = "";
                clicked = "pr";
                clickedForKeyUp = "pr";
            });

            $province.on("keydown", function(e) {
                if ($(this).val().length === 0 && e.which === 32) {
                    e.preventDefault();
                    e.stopPropagation();
                }
            });
        }
        if ($address.length) {
            $address.on("click", function(e) {
                clickedForKeyUp = "";
                clicked = "ad";
                clickedForKeyUp = "ad";
            });

            $address.on("keydown", function(e) {
                if ($(this).val().length === 0 && e.which === 32) {
                    e.preventDefault();
                    e.stopPropagation();
                }
            });
        }
        if ($numDropDown.length) {
            $numDropDown.on("click", function(e) {
                clickedForKeyUp = "";
                clicked = "ndd";
                clickedForKeyUp = "ndd";
            });

            $numDropDown.on("keydown", function(e) {
                if ($(this).val().length === 0 && e.which === 32) {
                    e.preventDefault();
                    e.stopPropagation();
                }
            });
        }
        if ($mobile.length) {
            $mobile.on("click", function(e) {
                clickedForKeyUp = "";
                clicked = "mob";
                clickedForKeyUp = "mob";
            });

            $mobile.on("keydown", function(e) {
                if ($(this).val().length === 0 && e.which === 32) {
                    e.preventDefault();
                    e.stopPropagation();
                }
            });
        }
        if ($firstName.length) {
            $firstName.on("click", function(e) {
                clickedForKeyUp = "";
                clicked = "fn";
                clickedForKeyUp = "fn";
            });

            $firstName.on("keydown", function(e) {
                if ($(this).val().length === 0 && e.which === 32) {
                    e.preventDefault();
                    e.stopPropagation();
                }
            });
        }
        if ($lastName.length) {
            $lastName.on("click", function(e) {
                clickedForKeyUp = "";
                clicked = "ln";
                clickedForKeyUp = "ln";
            });

            $lastName.on("keydown", function(e) {
                if ($(this).val().length === 0 && e.which === 32) {
                    e.preventDefault();
                    e.stopPropagation();
                }
            });
        }
        if ($genderDropDown.length) {
            $genderDropDown.on("click", function(e) {
                clickedForKeyUp = "";
                clicked = "gdd";
                clickedForKeyUp = "gdd";
            });

            $genderDropDown.on("keydown", function(e) {
                if ($(this).val().length === 0 && e.which === 32) {
                    e.preventDefault();
                    e.stopPropagation();
                }
            });
        }
        if ($currencyDropDown.length) {
            $currencyDropDown.on("click", function(e) {
                clickedForKeyUp = "";
                clicked = "cudd";
                clickedForKeyUp = "cudd";
            });

            $currencyDropDown.on("keydown", function(e) {
                if ($(this).val().length === 0 && e.which === 32) {
                    e.preventDefault();
                    e.stopPropagation();
                }
            });
        }
        if ($password.length) {
            $password.on("click", function(e) {
                clickedForKeyUp = "";
                clicked = "pw";
                clickedForKeyUp = "pw";
            });

            $password.on("keydown", function(e) {
                if ($(this).val().length === 0 && e.which === 32) {
                    e.preventDefault();
                    e.stopPropagation();
                }
            });
        }
        if ($passwordValidation.length) {
            $passwordValidation.on("click", function(e) {
                clickedForKeyUp = "";
                clicked = "pwv";
                clickedForKeyUp = "pwv";
            });

            $passwordValidation.on("keydown", function(e) {
                if ($(this).val().length === 0 && e.which === 32) {
                    e.preventDefault();
                    e.stopPropagation();
                }
            });
        }

        $(document).mouseup(function(e) {
            if ($userName.length) {
                const usernameRGEX = new RegExp($userName.attr("data-val-regex-pattern"));

                if (!$userName.is(e.target) && $userName.has(e.target).length === 0 && !$userName.val().length && clicked === 'un') {
                    clicked = '';
                    $userName.addClass("input-validation-error");
                    $userNameError.removeClass("hidden").html(`<span>${Validation_Username}</span>`);
                } else if ($userName.val().length && ($userName.val().length < 5 || $userName.val().length > 25)) {
                    clicked = '';
                    $userName.addClass("input-validation-error");
                    $userNameError.removeClass("hidden").html(`<span>${ValidationLength_UserName}</span>`);
                } else if ($userName.val().length && !usernameRGEX.test($userName.val())) {
                    clicked = '';
                    $userName.addClass("input-validation-error");
                    $userNameError.removeClass("hidden").html(`<span>${Validation_Invalid_Username}</span>`);
                } else if ($userName.val().length === parseInt($userName.val()).toString().length) {
                    clicked = '';
                    $userName.addClass("input-validation-error");
                    $userNameError.removeClass("hidden").html(`<span>${ValidationLength_UserName}</span>`);
                } else if ($userName.val().length && clicked === 'un' && usernameRGEX.test($userName.val())) {
                    $userName.removeClass("input-validation-error");
                    $userNameError.addClass('hidden').html('');
                }
            }
            if ($email.length) {
                const emailRGEX = new RegExp($email.attr("data-val-regex-pattern"));
                if (!$email.is(e.target) && $email.has(e.target).length === 0 && !$email.val().length && clicked === 'em') {
                    clicked = '';
                    $email.addClass("input-validation-error");
                    $emailError.removeClass("hidden").html(`<span>${Validation_EnterEmail}</span>`);
                } else if ($email.val().length && ($email.val().length < 5 || $email.val().length > 100)) {
                    clicked = '';
                    $email.addClass("input-validation-error");
                    $emailError.removeClass("hidden").html(`<span>${ValidationLength_Email}</span>`);
                } else if ($email.val().length && !emailRGEX.test($email.val())) {
                    clicked = '';
                    $email.addClass("input-validation-error");
                    $emailError.removeClass("hidden").html(`<span>${Validation_CorrectEmail}</span>`);
                } else if ($email.val().length && clicked === 'em' && emailRGEX.test($email.val())) {
                    clicked = '';
                    $email.removeClass("input-validation-error");
                    $emailError.addClass('hidden').html('');
                }
            }
            if ($mobileNumber.length) {
                const mobileRGEX = new RegExp($mobileNumber.attr("data-val-regex-pattern"));
                if (!$mobileNumber.is(e.target) && $mobileNumber.has(e.target).length === 0 && !$mobileNumber.val().length && clicked === 'mob') {
                    clicked = '';
                    $mobileNumber.addClass("input-validation-error");
                    $mobileError.removeClass("hidden").html(`<span>${Validation_Mobile}</span>`);
                } else if ($mobileNumber.val().length && ($mobileNumber.val().length < 5 || $mobileNumber.val().length > 25)) {
                    clicked = '';
                    $mobileNumber.addClass("input-validation-error");
                    $mobileError.removeClass("hidden").html(`<span>${ValidationLength_Mobile}</span>`);
                } else if ($mobileNumber.val().length && !mobileRGEX.test($mobileNumber.val())) {
                    clicked = '';
                    $mobileNumber.addClass("input-validation-error");
                    $mobileError.removeClass("hidden").html(`<span>${ValidationLength_Mobile}</span>`);
                } else if ($mobileNumber.val().length && clicked === 'mob' && mobileRGEX.test($mobileNumber.val())) {
                    clicked = '';
                    $mobileNumber.removeClass("input-validation-error");
                    $mobileError.addClass('hidden').html('');
                }
            }

            /*--------------------------------------------Registration-------------------------------------------*/

            if ($container.length) {
                if ($countryDropDown.length) {
                    if (!$countryDropDown.is(e.target) && $countryDropDown.has(e.target).length === 0 && !$countryDropDown.val().length && clicked === 'cdd') {
                        clicked = '';
                        $countryDropDown.addClass("input-validation-error");
                        $countryError.removeClass("hidden").html(`<span>${Validation_CountryId}</span>`);
                    } else if (!$countryDropDown.val() && clicked === 'cdd') {
                        $countryDropDown.addClass("input-validation-error");
                        $countryError.removeClass("hidden").html(`<span>${Validation_CountryId}</span>`)
                    } else if ($countryDropDown.val().length && clicked === 'cdd') {
                        $countryDropDown.removeClass("input-validation-error");
                        $countryError.addClass('hidden').html('');
                    }
                }
                if ($zipCode.length) {
                    let zipRGEX = new RegExp($zipCode.attr("data-val-regex-pattern"));
                    if (!$zipCode.is(e.target) && $zipCode.has(e.target).length === 0 && !$zipCode.val().length && clicked === 'zc') {
                        clicked = '';
                        $zipCode.addClass("input-validation-error");
                        $zipCodeError.removeClass("hidden").html(`<span>${Validation_ZipCode}</span>`);
                    } else if ($zipCode.val().length && ($zipCode.val().length < 3 || $zipCode.val().length > 15)) {
                        clicked = '';
                        $zipCode.addClass("input-validation-error");
                        $zipCodeError.removeClass("hidden").html(`<span>${ValidationLength_ZipCode}</span>`);
                    } else if ($zipCode.val().length && !zipRGEX.test($zipCode.val())) {
                        clicked = '';
                        $zipCode.addClass("input-validation-error");
                        $zipCodeError.removeClass("hidden").html(`<span>${Validation_Invalid_ZipCode}</span>`);
                    } else if ($zipCode.val().length && clicked === 'zc' && zipRGEX.test($zipCode.val())) {
                        clicked = '';
                        $zipCode.removeClass("input-validation-error");
                        $zipCodeError.addClass('hidden').html('');
                    }
                }
                if ($provinceState.length) {
                    if (!$provinceState.is(e.target) && $provinceState.has(e.target).length === 0 && !$provinceState.val().length && clicked === 'pr') {
                        clicked = '';
                        $provinceState.addClass("input-validation-error");
                        $provinceError.removeClass("hidden").html(`<span>${Validation_Province}</span>`);
                    } else if (!$provinceState.val() && clicked === 'pr') {
                        $provinceState.addClass("input-validation-error");
                        $provinceError.removeClass("hidden").html(`<span>${Validation_Province}</span>`);
                    } else if ($provinceState.val().length && clicked === 'pr') {
                        $provinceState.removeClass("input-validation-error");
                        $provinceError.addClass('hidden').html('');
                    }
                }
                if ($address.length) {
                    var addressRGEX = new RegExp($address.attr("data-val-regex-pattern"));
                    if (!$address.is(e.target) && $address.has(e.target).length === 0 && !$address.val().length && clicked === 'ad') {
                        clicked = '';
                        $address.addClass("input-validation-error");
                        $addressError.removeClass("hidden").html(`<span>${Validation_Address}</span>`);
                    } else if ($address.val().length && ($address.val().length < 3 || $address.val().length > 250)) {
                        clicked = '';
                        $address.addClass("input-validation-error");
                        $addressError.removeClass("hidden").html(`<span>${ValidationLength_Address}</span>`);
                    } else if ($address.val().length && !addressRGEX.test($address.val())) {
                        clicked = '';
                        $address.addClass("input-validation-error");
                        $addressError.removeClass("hidden").html(`<span>${ValidationLength_Address}</span>`);
                    } else if ($address.val().length && clicked === 'ad' && addressRGEX.test($address.val())) {
                        clicked = '';
                        $address.removeClass("input-validation-error");
                        $addressError.addClass('hidden').html('');
                    }
                }
                if ($numDropDown.length) {
                    if (!$numDropDown.is(e.target) && $numDropDown.has(e.target).length === 0 && !$numDropDown.val().length && clicked === 'ndd') {
                        clicked = '';
                        $numDropDown.addClass("input-validation-error");
                        $numDropDownError.removeClass("hidden").html(`<span>${Validation_Code}</span>`);
                    } else if (!$numDropDown.val() && clicked === 'ndd') {
                        $numDropDown.addClass("input-validation-error");
                        $numDropDownError.removeClass("hidden").html(`<span>${Validation_Code}</span>`);
                    } else if ($numDropDown.val().length && clicked === 'ndd') {
                        $numDropDown.removeClass("input-validation-error");
                        $numDropDownError.addClass('hidden').html('');
                    }
                }
                if ($mobile.length) {
                    let mobileRGEX = new RegExp($mobile.attr("data-val-regex-pattern"));
                    if (!$mobile.is(e.target) && $mobile.has(e.target).length === 0 && !$mobile.val().length && clicked === 'mob') {
                        clicked = '';
                        $mobile.addClass("input-validation-error");
                        $mobileError.removeClass("hidden").html(`<span>${Validation_Mobile}</span>`);
                    } else if ($mobile.val().length && ($mobile.val().length < 5 || $mobile.val().length > 25)) {
                        clicked = '';
                        $mobile.addClass("input-validation-error");
                        $mobileError.removeClass("hidden").html(`<span>${ValidationLength_Mobile}</span>`);
                    } else if ($mobile.val().length && !mobileRGEX.test($mobile.val())) {
                        clicked = '';
                        $mobile.addClass("input-validation-error");
                        $mobileError.removeClass("hidden").html(`<span>${ValidationLength_Mobile}</span>`);
                    } else if ($mobile.val().length && clicked === 'mob' && mobileRGEX.test($mobile.val())) {
                        clicked = '';
                        $mobile.removeClass("input-validation-error");
                        $mobileError.addClass('hidden').html('');
                    }
                }
                if ($firstName.length) {
                    let firstNameRGEX = new RegExp($firstName.attr("data-val-regex-pattern"));
                    if (!$firstName.is(e.target) && $firstName.has(e.target).length === 0 && !$firstName.val().length && clicked === 'fn') {
                        clicked = '';
                        $firstName.addClass("input-validation-error");
                        $firstNameError.removeClass("hidden").html(`<span>${Validation_FirstName}</span>`);
                    } else if ($firstName.val().length && ($firstName.val().length < 2 || $firstName.val().length > 55)) {
                        clicked = '';
                        $firstName.addClass("input-validation-error");
                        $firstNameError.removeClass("hidden").html(`<span>${ValidationLength_FirstName}</span>`);
                    } else if ($firstName.val().length && !firstNameRGEX.test($firstName.val())) {
                        clicked = '';
                        $firstName.addClass("input-validation-error");
                        $firstNameError.removeClass("hidden").html(`<span>${Validation_Invalid_FirstName}</span>`);
                    } else if ($firstName.val().length && clicked === 'fn' && firstNameRGEX.test($firstName.val())) {
                        clicked = '';
                        $firstName.removeClass("input-validation-error");
                        $firstNameError.addClass('hidden').html('');
                    }
                }
                if ($lastName.length) {
                    let lastNameRGEX = new RegExp($lastName.attr("data-val-regex-pattern"));
                    if (!$lastName.is(e.target) && $lastName.has(e.target).length === 0 && !$lastName.val().length && clicked === 'ln') {
                        clicked = '';
                        $lastName.addClass("input-validation-error");
                        $lastNameError.removeClass("hidden").html(`<span>${Validation_LastName}</span>`);
                    } else if ($lastName.val().length && ($lastName.val().length < 2 || $lastName.val().length > 55)) {
                        clicked = '';
                        $lastName.addClass("input-validation-error");
                        $lastNameError.removeClass("hidden").html(`<span>${ValidationLength_LastName}</span>`);
                    } else if ($lastName.val().length && !lastNameRGEX.test($lastName.val())) {
                        clicked = '';
                        $lastName.addClass("input-validation-error");
                        $lastNameError.removeClass("hidden").html(`<span>${Validation_Invalid_LastName}</span>`);
                    } else if ($lastName.val().length && clicked === 'ln' && lastNameRGEX.test($lastName.val())) {
                        clicked = '';
                        $lastName.removeClass("input-validation-error");
                        $lastNameError.addClass('hidden').html('');
                    }
                }
                if ($genderDropDown.length) {
                    if (!$genderDropDown.is(e.target) && $genderDropDown.has(e.target).length === 0 && !$genderDropDown.val().length && clicked === 'gdd') {
                        clicked = '';
                        $genderDropDown.addClass("input-validation-error");
                        $genderDropDownError.removeClass("hidden").html(`<span>${Validation_Gender}</span>`);
                    } else if (!$genderDropDown.val() && clicked === 'gdd') {
                        $genderDropDown.addClass("input-validation-error");
                        $genderDropDownError.removeClass("hidden").html(`<span>${Validation_Gender}</span>`);
                    } else if ($genderDropDown.val().length && clicked === 'gdd') {
                        $genderDropDown.removeClass("input-validation-error");
                        $genderDropDownError.addClass('hidden').html('');
                    }
                }
                if ($currencyDropDown.length) {
                    if (!$currencyDropDown.is(e.target) && $currencyDropDown.has(e.target).length === 0 && !$currencyDropDown.val().length && clicked === 'cudd') {
                        clicked = '';
                        $currencyDropDown.addClass("input-validation-error");
                        $currencyDropDownError.removeClass("hidden").html(`<span>${Validation_Currency}</span>`);
                    } else if (!$currencyDropDown.val() && clicked === 'cudd') {
                        $currencyDropDown.addClass("input-validation-error");
                        $currencyDropDownError.removeClass("hidden").html(`<span>${Validation_Currency}</span>`);
                    } else if ($currencyDropDown.val().length && clicked === 'cudd') {
                        $currencyDropDown.removeClass("input-validation-error");
                        $currencyDropDownError.addClass('hidden').html('');
                    }
                }

                if ($password.length) {
                    var passwordRGEX = new RegExp($password.attr("data-val-regex-pattern"));
                    if (!$password.is(e.target) && $password.has(e.target).length === 0 && !$password.val().length && clicked === 'pw') {
                        clicked = '';
                        $password.addClass("input-validation-error");
                        $passwordError.removeClass("hidden").html(`<span>${Validation_Password}</span>`);
                    } else if ($password.val().length && ($password.val().length < 8 || $password.val().length > 20)) {
                        clicked = '';
                        $password.addClass("input-validation-error");
                        $passwordError.removeClass("hidden").html(`<span>${ValidationLength_Password}</span>`);
                    } else if ($password.val().length && !passwordRGEX.test($password.val())) {
                        clicked = '';
                        $password.addClass("input-validation-error");
                        $passwordError.removeClass("hidden").html(`<span>${ValidationLength_Password}</span>`);
                    } else if ($password.val().length && clicked === 'pw' && passwordRGEX.test($password.val())) {
                        clicked = '';
                        $password.removeClass("input-validation-error");
                        $passwordError.addClass('hidden').html('');
                    }
                }
                if ($passwordValidation.length) {
                    var passwordValidationRGEX = new RegExp($passwordValidation.attr("data-val-regex-pattern"));
                    if (!$passwordValidation.is(e.target) && $passwordValidation.has(e.target).length === 0 && !$passwordValidation.val().length && clicked === 'pwv') {
                        clicked = '';
                        $passwordValidation.addClass("input-validation-error");
                        $passwordValidationError.removeClass("hidden").html(`<span>${Validation_PasswordConfirm}</span>`);
                    } else if ($passwordValidation.val().length && ($passwordValidation.val().length < 8 || $passwordValidation.val().length > 20)) {
                        clicked = '';
                        $passwordValidation.addClass("input-validation-error");
                        $passwordValidationError.removeClass("hidden").html(`<span>${ValidationLength_Password}</span>`);
                    } else if ($passwordValidation.val().length && !passwordValidationRGEX.test($passwordValidation.val())) {
                        clicked = '';
                        $passwordValidation.addClass("input-validation-error");
                        $passwordValidationError.removeClass("hidden").html(`<span>${ValidationLength_Password}</span>`);
                    } else if ($passwordValidation.val().length && clicked === 'pwv' && passwordValidationRGEX.test($passwordValidation.val())) {
                        clicked = '';
                        $passwordValidation.removeClass("input-validation-error");
                        $passwordValidationError.addClass('hidden').html('');
                    }

                    if ($passwordValidation.val().length && ($passwordValidation.val() !== $password.val())) {
                        $passwordValidation.addClass("input-validation-error");
                        $passwordValidationError.removeClass("hidden").html(`<span>${Validation_PasswordMatch}</span>`);
                    }
                }
                if ($dateOfBirthYear.length) {
                    let dateOfBirth = ($dateOfBirthYear.val() + "-" + $dateOfBirthMonth.val() + "-" + $dateOfBirthDay.val()).replace(/-/g, "/")
                    if ((new Date(dateOfBirth).getTime() > (new Date(`${_playerMinAgeDate}`)).getTime())) {
                        $dateOfBirthMonth.addClass("input-validation-error");
                        $dateOfBirthError.removeClass("hidden").html(`<span>${Validation_DateOfBirth_Invalid}</span>`);

                        isValid = false;
                    } else if (new Date(dateOfBirth).getTime() <= new Date(`${_playerMinAgeDate}`).getTime()) {
                        $dateOfBirthMonth.removeClass("input-validation-error");
                        $dateOfBirthError.addClass('hidden').html('');
                    }
                }
            }
        });

        // $(document).on('keyup', function (e) {
        // 	if ($userName.length) {
        // 		const usernameRGEX = new RegExp($userName.attr("data-val-regex-pattern"));
        // 		if ($userName.val().length && ($userName.val().length < 5 || $userName.val().length > 25) && clickedForKeyUp === 'un') {
        // 			$userName.addClass("input-validation-error");
        // 			$userNameError.removeClass("hidden").html(`<span>${ValidationLength_UserName}</span>`);
        // 		} else if ($userName.val().length && !usernameRGEX.test($userName.val()) && clickedForKeyUp === 'un') {
        // 			$userName.addClass("input-validation-error");
        // 			$userNameError.removeClass("hidden").html(`<span>${Validation_Invalid_Username}</span>`);
        // 		} else if (!$userName.val().length && clickedForKeyUp === 'un') {
        // 			$userName.addClass("input-validation-error");
        // 			$userNameError.removeClass("hidden").html(`<span>${Validation_Username}</span>`);
        // 		} else if ($userName.val().length === parseInt($userName.val()).toString().length && clickedForKeyUp === 'un') {
        // 			$userName.addClass("input-validation-error");
        // 			$userNameError.removeClass("hidden").html(`<span>${ValidationLength_UserName}</span>`);
        // 		} else if ($userName.val().length && usernameRGEX.test($userName.val()) && clickedForKeyUp === 'un') {
        // 			$userName.removeClass("input-validation-error");
        // 			$userNameError.addClass('hidden').html('');
        // 		}
        // 	}
        // 	if ($email.length) {
        // 		const emailRGEX = new RegExp($email.attr("data-val-regex-pattern"));
        // 		if (!$email.is(e.target) && $email.has(e.target).length === 0 && !$email.val().length && clickedForKeyUp === 'em') {
        // 			$email.addClass("input-validation-error");
        // 			$emailError.removeClass("hidden").html(`<span>${Validation_EnterEmail}</span>`);
        // 		} else if ($email.val().length && ($email.val().length < 5 || $email.val().length > 100) && clickedForKeyUp === 'em') {
        // 			$email.addClass("input-validation-error");
        // 			$emailError.removeClass("hidden").html(`<span>${ValidationLength_Email}</span>`);
        // 		} else if ($email.val().length && !emailRGEX.test($email.val()) && clickedForKeyUp === 'em') {
        // 			$email.addClass("input-validation-error");
        // 			$emailError.removeClass("hidden").html(`<span>${Validation_CorrectEmail}</span>`);
        // 		} else if (!$email.val().length && clickedForKeyUp === 'em') {
        // 			$email.addClass("input-validation-error");
        // 			$emailError.removeClass("hidden").html(`<span>${Validation_EnterEmail}</span>`);
        // 		} else if ($email.val().length && emailRGEX.test($email.val()) && clickedForKeyUp === 'em') {
        // 			$email.removeClass("input-validation-error");
        // 			$emailError.addClass('hidden').html('');
        // 		}
        // 	}
        // 	if ($mobileNumber.length) {
        // 		const mobileRGEX = new RegExp($mobileNumber.attr("data-val-regex-pattern"));
        // 		if (!$mobileNumber.is(e.target) && $mobileNumber.has(e.target).length === 0 && !$mobileNumber.val().length && clickedForKeyUp === 'mob') {
        // 			$mobileNumber.addClass("input-validation-error");
        // 			$mobileError.removeClass("hidden").html(`<span>${Validation_Mobile}</span>`);
        // 		} else if ($mobileNumber.val().length && ($mobileNumber.val().length < 5 || $mobileNumber.val().length > 25) && clickedForKeyUp === 'mob') {
        // 			$mobileNumber.addClass("input-validation-error");
        // 			$mobileError.removeClass("hidden").html(`<span>${ValidationLength_Mobile}</span>`);
        // 		} else if ($mobileNumber.val().length && !mobileRGEX.test($mobileNumber.val()) && clickedForKeyUp === 'mob') {
        // 			$mobileNumber.addClass("input-validation-error");
        // 			$mobileError.removeClass("hidden").html(`<span>${ValidationLength_Mobile}</span>`);
        // 		} else if (!$mobileNumber.val().length && clickedForKeyUp === 'mob') {
        // 			$mobileNumber.addClass("input-validation-error");
        // 			$mobileError.removeClass("hidden").html(`<span>${Validation_Mobile}</span>`);
        // 		} else if ($mobileNumber.val().length && mobileRGEX.test($mobileNumber.val()) && clickedForKeyUp === 'mob') {
        // 			$mobileNumber.removeClass("input-validation-error");
        // 			$mobileError.addClass('hidden').html('');
        // 		}
        // 	}
        // 	/*-------------------------------------------------Registration-------------------------------------------*/

        // 	if ($zipCode.length && $container.length) {
        // 		const zipRGEX = new RegExp($zipCode.attr("data-val-regex-pattern"));
        // 		if (!$zipCode.is(e.target) && $zipCode.has(e.target).length === 0 && !$zipCode.val().length && clickedForKeyUp === 'zc') {
        // 			$zipCode.addClass("input-validation-error");
        // 			$zipCodeError.removeClass("hidden").html(`<span>${Validation_ZipCode}</span>`);
        // 		} else if ($zipCode.val().length && ($zipCode.val().length < 3 || $zipCode.val().length > 15) && clickedForKeyUp === 'zc') {
        // 			$zipCode.addClass("input-validation-error");
        // 			$zipCodeError.removeClass("hidden").html(`<span>${ValidationLength_ZipCode}</span>`);
        // 		} else if ($zipCode.val().length && !zipRGEX.test($zipCode.val()) && clickedForKeyUp === 'zc') {
        // 			$zipCode.addClass("input-validation-error");
        // 			$zipCodeError.removeClass("hidden").html(`<span>${Validation_Invalid_ZipCode}</span>`);
        // 		} else if (!$zipCode.val().length && clickedForKeyUp === 'zc') {
        // 			$zipCode.addClass("input-validation-error");
        // 			$zipCodeError.removeClass("hidden").html(`<span>${Validation_ZipCode}</span>`);
        // 		} else if ($zipCode.val().length && zipRGEX.test($zipCode.val()) && clickedForKeyUp === 'zc') {
        // 			$zipCode.removeClass("input-validation-error");
        // 			$zipCodeError.addClass('hidden').html('');
        // 		}
        // 	}
        // 	if ($address.length && $container.length) {
        // 		const addressRGEX = new RegExp($address.attr("data-val-regex-pattern"));
        // 		if (!$address.is(e.target) && $address.has(e.target).length === 0 && !$address.val().length && clickedForKeyUp === 'ad') {
        // 			$address.addClass("input-validation-error");
        // 			$addressError.removeClass("hidden").html(`<span>${Validation_Address}</span>`);
        // 		} else if ($address.val().length && ($address.val().length < 3 || $address.val().length > 250) && clickedForKeyUp === 'ad') {
        // 			$address.addClass("input-validation-error");
        // 			$addressError.removeClass("hidden").html(`<span>${ValidationLength_Address}</span>`);
        // 		} else if ($address.val().length && !addressRGEX.test($address.val()) && clickedForKeyUp === 'ad') {
        // 			$address.addClass("input-validation-error");
        // 			$addressError.removeClass("hidden").html(`<span>${ValidationLength_Address}</span>`);
        // 		} else if (!$address.val().length && clickedForKeyUp === 'ad') {
        // 			$address.addClass("input-validation-error");
        // 			$addressError.removeClass("hidden").html(`<span>${Validation_Address}</span>`);
        // 		} else if ($address.val().length && addressRGEX.test($address.val()) && clickedForKeyUp === 'ad') {
        // 			$address.removeClass("input-validation-error");
        // 			$addressError.addClass('hidden').html('');
        // 		}
        // 	}
        // 	if ($mobile.length && $container.length) {
        // 		const mobileRGEX = new RegExp($mobile.attr("data-val-regex-pattern"));
        // 		if (!$mobile.is(e.target) && $mobile.has(e.target).length === 0 && !$mobile.val().length && clickedForKeyUp === 'mob') {
        // 			$mobile.addClass("input-validation-error");
        // 			$mobileError.removeClass("hidden").html(`<span>${Validation_Mobile}</span>`);
        // 		} else if ($mobile.val().length && ($mobile.val().length < 5 || $mobile.val().length > 25) && clickedForKeyUp === 'mob') {
        // 			$mobile.addClass("input-validation-error");
        // 			$mobileError.removeClass("hidden").html(`<span>${ValidationLength_Mobile}</span>`);
        // 		} else if ($mobile.val().length && !mobileRGEX.test($mobile.val()) && clickedForKeyUp === 'mob') {
        // 			$mobile.addClass("input-validation-error");
        // 			$mobileError.removeClass("hidden").html(`<span>${ValidationLength_Mobile}</span>`);
        // 		} else if (!$mobile.val().length && clickedForKeyUp === 'mob') {
        // 			$mobile.addClass("input-validation-error");
        // 			$mobileError.removeClass("hidden").html(`<span>${Validation_Mobile}</span>`);
        // 		} else if ($mobile.val().length && mobileRGEX.test($mobile.val()) && clickedForKeyUp === 'mob') {
        // 			$mobile.removeClass("input-validation-error");
        // 			$mobileError.addClass('hidden').html('');
        // 		}
        // 	}
        // 	if ($firstName.length && $container.length) {
        // 		const firstNameRGEX = new RegExp($firstName.attr("data-val-regex-pattern"));

        // 		if (!$firstName.is(e.target) && $firstName.has(e.target).length === 0 && !$firstName.val().length && clickedForKeyUp === 'fn') {
        // 			$firstName.addClass("input-validation-error");
        // 			$firstNameError.removeClass("hidden").html(`<span>${Validation_FirstName}</span>`);
        // 		} else if ($firstName.val().length && ($firstName.val().length < 2 || $firstName.val().length > 55) && clickedForKeyUp === 'fn') {
        // 			$firstName.addClass("input-validation-error");
        // 			$firstNameError.removeClass("hidden").html(`<span>${ValidationLength_FirstName}</span>`);
        // 		} else if ($firstName.val().length && !firstNameRGEX.test($firstName.val()) && clickedForKeyUp === 'fn') {
        // 			$firstName.addClass("input-validation-error");
        // 			$firstNameError.removeClass("hidden").html(`<span>${Validation_Invalid_FirstName}</span>`);
        // 		} else if (!$firstName.val().length && clickedForKeyUp === 'fn') {
        // 			$firstName.addClass("input-validation-error");
        // 			$firstNameError.removeClass("hidden").html(`<span>${Validation_FirstName}</span>`);
        // 		} else if ($firstName.val().length && firstNameRGEX.test($firstName.val()) && clickedForKeyUp === 'fn') {
        // 			$firstName.removeClass("input-validation-error");
        // 			$firstNameError.addClass('hidden').html('');
        // 		}
        // 	}
        // 	if ($lastName.length && $container.length) {
        // 		const lastNameRGEX = new RegExp($lastName.attr("data-val-regex-pattern"));
        // 		if (!$lastName.is(e.target) && $lastName.has(e.target).length === 0 && !$lastName.val().length && clickedForKeyUp === 'ln') {
        // 			$lastName.addClass("input-validation-error");
        // 			$lastNameError.removeClass("hidden").html(`<span>${Validation_LastName}</span>`);
        // 		} else if ($lastName.val().length && ($lastName.val().length < 2 || $lastName.val().length > 55) && clickedForKeyUp === 'ln') {
        // 			$lastName.addClass("input-validation-error");
        // 			$lastNameError.removeClass("hidden").html(`<span>${ValidationLength_LastName}</span>`);
        // 		} else if ($lastName.val().length && !lastNameRGEX.test($lastName.val()) && clickedForKeyUp === 'ln') {
        // 			$lastName.addClass("input-validation-error");
        // 			$lastNameError.removeClass("hidden").html(`<span>${Validation_Invalid_LastName}</span>`);
        // 		} else if (!$lastName.val().length && clickedForKeyUp === 'ln') {
        // 			$lastName.addClass("input-validation-error");
        // 			$lastNameError.removeClass("hidden").html(`<span>${Validation_LastName}</span>`);
        // 		} else if ($lastName.val().length && lastNameRGEX.test($lastName.val()) && clickedForKeyUp === 'ln') {
        // 			$lastName.removeClass("input-validation-error");
        // 			$lastNameError.addClass('hidden').html('');
        // 		}
        // 	}
        // 	if ($password.length && $container.length) {
        // 		const passwordRGEX = new RegExp($password.attr("data-val-regex-pattern"));
        // 		if (!$password.is(e.target) && $password.has(e.target).length === 0 && !$password.val().length && clickedForKeyUp === 'pw') {
        // 			$password.addClass("input-validation-error");
        // 			$passwordError.removeClass("hidden").html(`<span>${Validation_Password}</span>`);
        // 		} else if ($password.val().length && ($password.val().length < 2 || $password.val().length > 55) && clickedForKeyUp === 'pw') {
        // 			$password.addClass("input-validation-error");
        // 			$passwordError.removeClass("hidden").html(`<span>${ValidationLength_Password}</span>`);
        // 		} else if ($password.val().length && !passwordRGEX.test($password.val()) && clickedForKeyUp === 'pw') {
        // 			$password.addClass("input-validation-error");
        // 			$passwordError.removeClass("hidden").html(`<span>${ValidationLength_Password}</span>`);
        // 		} else if (!$password.val().length && clickedForKeyUp === 'pw') {
        // 			$password.addClass("input-validation-error");
        // 			$passwordError.removeClass("hidden").html(`<span>${Validation_Password}</span>`);
        // 		} else if ($password.val().length && passwordRGEX.test($password.val()) && clickedForKeyUp === 'pw') {
        // 			$password.removeClass("input-validation-error");
        // 			$passwordError.addClass('hidden').html('');
        // 		}
        // 	}
        // 	if ($passwordValidation.length && $container.length) {
        // 		const passwordValidationRGEX = new RegExp($passwordValidation.attr("data-val-regex-pattern"));
        // 		if (!$passwordValidation.is(e.target) && $passwordValidation.has(e.target).length === 0 && !$passwordValidation.val().length && clickedForKeyUp === 'pwv') {
        // 			$passwordValidation.addClass("input-validation-error");
        // 			$passwordValidationError.removeClass("hidden").html(`<span>${Validation_PasswordConfirm}</span>`);
        // 		} else if ($passwordValidation.val().length && ($passwordValidation.val().length < 2 || $passwordValidation.val().length > 55) && clickedForKeyUp === 'pwv') {
        // 			$passwordValidation.addClass("input-validation-error");
        // 			$passwordValidationError.removeClass("hidden").html(`<span>${ValidationLength_Password}</span>`);
        // 		} else if ($passwordValidation.val().length && !passwordValidationRGEX.test($passwordValidation.val()) && clickedForKeyUp === 'pwv') {
        // 			$passwordValidation.addClass("input-validation-error");
        // 			$passwordValidationError.removeClass("hidden").html(`<span>${ValidationLength_Password}</span>`);
        // 		} else if (!$passwordValidation.val().length && clickedForKeyUp === 'pwv') {
        // 			$passwordValidation.addClass("input-validation-error");
        // 			$passwordValidationError.removeClass("hidden").html(`<span>${Validation_PasswordConfirm}</span>`);
        // 		} else if ($passwordValidation.val().length && passwordValidationRGEX.test($passwordValidation.val()) && clickedForKeyUp === 'pwv') {
        // 			$passwordValidation.removeClass("input-validation-error");
        // 			$passwordValidationError.addClass('hidden').html('');
        // 		}
        // 	}
        // });
        if ($container.length) {
            $(document).on('change', function(e) {

                if ($countryDropDown.is(e.target) && $countryDropDown.has(e.target).length === 0 && !$countryDropDown.val().length && clicked === 'cdd') {
                    $countryDropDown.addClass("input-validation-error");
                    $countryError.removeClass("hidden").html(`<span>${Validation_CountryId}</span>`);
                } else if ($countryDropDown.val().length && clicked === 'cdd') {
                    $countryDropDown.removeClass("input-validation-error");
                    $countryError.addClass('hidden').html('');
                }

                if ($provinceState.is(e.target) && $provinceState.has(e.target).length === 0 && !$provinceState.val().length && clicked === 'pr') {
                    $provinceState.addClass("input-validation-error");
                    $provinceError.removeClass("hidden").html(`<span>${Validation_Province}</span>`);
                } else if ($provinceState.val().length && clicked === 'pr') {
                    $provinceState.removeClass("input-validation-error");
                    $provinceError.addClass('hidden').html('');
                }

                if ($numDropDown.is(e.target) && $numDropDown.has(e.target).length === 0 && !$numDropDown.val().length && clicked === 'ndd') {
                    $numDropDown.addClass("input-validation-error");
                    $numDropDownError.removeClass("hidden").html(`<span>${Validation_Code}</span>`);
                } else if ($numDropDown.val().length && clicked === 'ndd') {
                    $numDropDown.removeClass("input-validation-error");
                    $numDropDownError.addClass('hidden').html('');
                }

                if ($genderDropDown.is(e.target) && $genderDropDown.has(e.target).length === 0 && !$genderDropDown.val().length && clicked === 'gdd') {
                    $genderDropDown.addClass("input-validation-error");
                    $genderDropDownError.removeClass("hidden").html(`<span>${Validation_Gender}</span>`);
                } else if ($genderDropDown.val().length && clicked === 'gdd') {
                    $genderDropDown.removeClass("input-validation-error");
                    $genderDropDownError.addClass('hidden').html('');
                }

                if ($currencyDropDown.is(e.target) && $currencyDropDown.has(e.target).length === 0 && !$currencyDropDown.val().length && clicked === 'cudd') {
                    $currencyDropDown.addClass("input-validation-error");
                    $currencyDropDownError.removeClass("hidden").html(`<span>${Validation_Currency}</span>`);
                } else if ($currencyDropDown.val().length && clicked === 'cudd') {
                    $currencyDropDown.removeClass("input-validation-error");
                    $currencyDropDownError.addClass('hidden').html('');
                }

                let dateOfBirth = ($dateOfBirthYear.val() + "-" + $dateOfBirthMonth.val() + "-" + $dateOfBirthDay.val()).replace(/-/g, "/")

                if (new Date(dateOfBirth).getTime() > new Date(`${_playerMinAgeDate}`).getTime()) {
                    $dateOfBirthMonth.addClass("input-validation-error");
                    $dateOfBirthError.removeClass("hidden").html(`<span>${Validation_DateOfBirth_Invalid}</span>`);

                    isValid = false;
                } else if (new Date(dateOfBirth).getTime() <= new Date(`${_playerMinAgeDate}`).getTime()) {
                    $dateOfBirthMonth.removeClass("input-validation-error");
                    $dateOfBirthError.addClass('hidden').html('');
                }
            });
        }

    }
    /*------------------------------------------------------------------------------------------------------------------------------------------------*/
}

(function webpackUniversalModuleDefinition(root, factory) {
    if (typeof exports === 'object' && typeof module === 'object')
        module.exports = factory();
    else if (typeof define === 'function' && define.amd)
        define([], factory);
    else if (typeof exports === 'object')
        exports["signalR"] = factory();
    else
        root["signalR"] = factory();
}
)(self, function() {
    return /******/
    ( () => {
        // webpackBootstrap
        /******/
        "use strict";
        /******/
        // The require scope
        /******/
        var __webpack_require__ = {};
        /******/
        /************************************************************************/
        /******/
        /* webpack/runtime/define property getters */
        /******/
        ( () => {
            /******/
            // define getter functions for harmony exports
            /******/
            __webpack_require__.d = (exports, definition) => {
                /******/
                for (var key in definition) {
                    /******/
                    if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
                        /******/
                        Object.defineProperty(exports, key, {
                            enumerable: true,
                            get: definition[key]
                        });
                        /******/
                    }
                    /******/
                }
                /******/
            }
            ;
            /******/
        }
        )();
        /******/
        /******/
        /* webpack/runtime/global */
        /******/
        ( () => {
            /******/
            __webpack_require__.g = (function() {
                /******/
                if (typeof globalThis === 'object')
                    return globalThis;
                /******/
                try {
                    /******/
                    return this || new Function('return this')();
                    /******/
                } catch (e) {
                    /******/
                    if (typeof window === 'object')
                        return window;
                    /******/
                }
                /******/
            }
            )();
            /******/
        }
        )();
        /******/
        /******/
        /* webpack/runtime/hasOwnProperty shorthand */
        /******/
        ( () => {
            /******/
            __webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
            /******/
        }
        )();
        /******/
        /******/
        /* webpack/runtime/make namespace object */
        /******/
        ( () => {
            /******/
            // define __esModule on exports
            /******/
            __webpack_require__.r = (exports) => {
                /******/
                if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {
                    /******/
                    Object.defineProperty(exports, Symbol.toStringTag, {
                        value: 'Module'
                    });
                    /******/
                }
                /******/
                Object.defineProperty(exports, '__esModule', {
                    value: true
                });
                /******/
            }
            ;
            /******/
        }
        )();
        /******/
        /************************************************************************/
        var __webpack_exports__ = {};
        // ESM COMPAT FLAG
        __webpack_require__.r(__webpack_exports__);

        // EXPORTS
        __webpack_require__.d(__webpack_exports__, {
            "AbortError": () => (/* reexport */
            AbortError),
            "DefaultHttpClient": () => (/* reexport */
            DefaultHttpClient),
            "HttpClient": () => (/* reexport */
            HttpClient),
            "HttpError": () => (/* reexport */
            HttpError),
            "HttpResponse": () => (/* reexport */
            HttpResponse),
            "HttpTransportType": () => (/* reexport */
            HttpTransportType),
            "HubConnection": () => (/* reexport */
            HubConnection),
            "HubConnectionBuilder": () => (/* reexport */
            HubConnectionBuilder),
            "HubConnectionState": () => (/* reexport */
            HubConnectionState),
            "JsonHubProtocol": () => (/* reexport */
            JsonHubProtocol),
            "LogLevel": () => (/* reexport */
            LogLevel),
            "MessageType": () => (/* reexport */
            MessageType),
            "NullLogger": () => (/* reexport */
            NullLogger),
            "Subject": () => (/* reexport */
            Subject),
            "TimeoutError": () => (/* reexport */
            TimeoutError),
            "TransferFormat": () => (/* reexport */
            TransferFormat),
            "VERSION": () => (/* reexport */
            VERSION)
        });

        ;// CONCATENATED MODULE: ./src/Errors.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.
        /** Error thrown when an HTTP request fails. */
        class HttpError extends Error {
            /** Constructs a new instance of {@link @microsoft/signalr.HttpError}.
     *
     * @param {string} errorMessage A descriptive error message.
     * @param {number} statusCode The HTTP status code represented by this error.
     */
            constructor(errorMessage, statusCode) {
                const trueProto = new.target.prototype;
                super(`${errorMessage}: Status code '${statusCode}'`);
                this.statusCode = statusCode;
                // Workaround issue in Typescript compiler
                // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200
                this.__proto__ = trueProto;
            }
        }
        /** Error thrown when a timeout elapses. */
        class TimeoutError extends Error {
            /** Constructs a new instance of {@link @microsoft/signalr.TimeoutError}.
     *
     * @param {string} errorMessage A descriptive error message.
     */
            constructor(errorMessage="A timeout occurred.") {
                const trueProto = new.target.prototype;
                super(errorMessage);
                // Workaround issue in Typescript compiler
                // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200
                this.__proto__ = trueProto;
            }
        }
        /** Error thrown when an action is aborted. */
        class AbortError extends Error {
            /** Constructs a new instance of {@link AbortError}.
     *
     * @param {string} errorMessage A descriptive error message.
     */
            constructor(errorMessage="An abort occurred.") {
                const trueProto = new.target.prototype;
                super(errorMessage);
                // Workaround issue in Typescript compiler
                // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200
                this.__proto__ = trueProto;
            }
        }
        /** Error thrown when the selected transport is unsupported by the browser. */
        /** @private */
        class UnsupportedTransportError extends Error {
            /** Constructs a new instance of {@link @microsoft/signalr.UnsupportedTransportError}.
     *
     * @param {string} message A descriptive error message.
     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occured on.
     */
            constructor(message, transport) {
                const trueProto = new.target.prototype;
                super(message);
                this.transport = transport;
                this.errorType = 'UnsupportedTransportError';
                // Workaround issue in Typescript compiler
                // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200
                this.__proto__ = trueProto;
            }
        }
        /** Error thrown when the selected transport is disabled by the browser. */
        /** @private */
        class DisabledTransportError extends Error {
            /** Constructs a new instance of {@link @microsoft/signalr.DisabledTransportError}.
     *
     * @param {string} message A descriptive error message.
     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occured on.
     */
            constructor(message, transport) {
                const trueProto = new.target.prototype;
                super(message);
                this.transport = transport;
                this.errorType = 'DisabledTransportError';
                // Workaround issue in Typescript compiler
                // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200
                this.__proto__ = trueProto;
            }
        }
        /** Error thrown when the selected transport cannot be started. */
        /** @private */
        class FailedToStartTransportError extends Error {
            /** Constructs a new instance of {@link @microsoft/signalr.FailedToStartTransportError}.
     *
     * @param {string} message A descriptive error message.
     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occured on.
     */
            constructor(message, transport) {
                const trueProto = new.target.prototype;
                super(message);
                this.transport = transport;
                this.errorType = 'FailedToStartTransportError';
                // Workaround issue in Typescript compiler
                // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200
                this.__proto__ = trueProto;
            }
        }
        /** Error thrown when the negotiation with the server failed to complete. */
        /** @private */
        class FailedToNegotiateWithServerError extends Error {
            /** Constructs a new instance of {@link @microsoft/signalr.FailedToNegotiateWithServerError}.
     *
     * @param {string} message A descriptive error message.
     */
            constructor(message) {
                const trueProto = new.target.prototype;
                super(message);
                this.errorType = 'FailedToNegotiateWithServerError';
                // Workaround issue in Typescript compiler
                // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200
                this.__proto__ = trueProto;
            }
        }
        /** Error thrown when multiple errors have occured. */
        /** @private */
        class AggregateErrors extends Error {
            /** Constructs a new instance of {@link @microsoft/signalr.AggregateErrors}.
     *
     * @param {string} message A descriptive error message.
     * @param {Error[]} innerErrors The collection of errors this error is aggregating.
     */
            constructor(message, innerErrors) {
                const trueProto = new.target.prototype;
                super(message);
                this.innerErrors = innerErrors;
                // Workaround issue in Typescript compiler
                // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200
                this.__proto__ = trueProto;
            }
        }

        ;// CONCATENATED MODULE: ./src/HttpClient.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.
        /** Represents an HTTP response. */
        class HttpResponse {
            constructor(statusCode, statusText, content) {
                this.statusCode = statusCode;
                this.statusText = statusText;
                this.content = content;
            }
        }
        /** Abstraction over an HTTP client.
 *
 * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.
 */
        class HttpClient {
            get(url, options) {
                return this.send({
                    ...options,
                    method: "GET",
                    url,
                });
            }
            post(url, options) {
                return this.send({
                    ...options,
                    method: "POST",
                    url,
                });
            }
            delete(url, options) {
                return this.send({
                    ...options,
                    method: "DELETE",
                    url,
                });
            }
            /** Gets all cookies that apply to the specified URL.
     *
     * @param url The URL that the cookies are valid for.
     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.
     */
            // @ts-ignore
            getCookieString(url) {
                return "";
            }
        }

        ;// CONCATENATED MODULE: ./src/ILogger.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.
        // These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.
        /** Indicates the severity of a log message.
 *
 * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.
 */
        var LogLevel;
        (function(LogLevel) {
            /** Log level for very low severity diagnostic messages. */
            LogLevel[LogLevel["Trace"] = 0] = "Trace";
            /** Log level for low severity diagnostic messages. */
            LogLevel[LogLevel["Debug"] = 1] = "Debug";
            /** Log level for informational diagnostic messages. */
            LogLevel[LogLevel["Information"] = 2] = "Information";
            /** Log level for diagnostic messages that indicate a non-fatal problem. */
            LogLevel[LogLevel["Warning"] = 3] = "Warning";
            /** Log level for diagnostic messages that indicate a failure in the current operation. */
            LogLevel[LogLevel["Error"] = 4] = "Error";
            /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */
            LogLevel[LogLevel["Critical"] = 5] = "Critical";
            /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */
            LogLevel[LogLevel["None"] = 6] = "None";
        }
        )(LogLevel || (LogLevel = {}));

        ;// CONCATENATED MODULE: ./src/Loggers.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.
        /** A logger that does nothing when log messages are sent to it. */
        class NullLogger {
            constructor() {}
            /** @inheritDoc */
            // eslint-disable-next-line
            log(_logLevel, _message) {}
        }
        /** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */
        NullLogger.instance = new NullLogger();

        ;// CONCATENATED MODULE: ./src/Utils.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.

        // Version token that will be replaced by the prepack command
        /** The version of the SignalR client. */
        const VERSION = "6.0.9";
        /** @private */
        class Arg {
            static isRequired(val, name) {
                if (val === null || val === undefined) {
                    throw new Error(`The '${name}' argument is required.`);
                }
            }
            static isNotEmpty(val, name) {
                if (!val || val.match(/^\s*$/)) {
                    throw new Error(`The '${name}' argument should not be empty.`);
                }
            }
            static isIn(val, values, name) {
                // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.
                if (!(val in values)) {
                    throw new Error(`Unknown ${name} value: ${val}.`);
                }
            }
        }
        /** @private */
        class Platform {
            // react-native has a window but no document so we should check both
            static get isBrowser() {
                return typeof window === "object" && typeof window.document === "object";
            }
            // WebWorkers don't have a window object so the isBrowser check would fail
            static get isWebWorker() {
                return typeof self === "object" && "importScripts"in self;
            }
            // react-native has a window but no document
            static get isReactNative() {
                return typeof window === "object" && typeof window.document === "undefined";
            }
            // Node apps shouldn't have a window object, but WebWorkers don't either
            // so we need to check for both WebWorker and window
            static get isNode() {
                return !this.isBrowser && !this.isWebWorker && !this.isReactNative;
            }
        }
        /** @private */
        function getDataDetail(data, includeContent) {
            let detail = "";
            if (isArrayBuffer(data)) {
                detail = `Binary data of length ${data.byteLength}`;
                if (includeContent) {
                    detail += `. Content: '${formatArrayBuffer(data)}'`;
                }
            } else if (typeof data === "string") {
                detail = `String data of length ${data.length}`;
                if (includeContent) {
                    detail += `. Content: '${data}'`;
                }
            }
            return detail;
        }
        /** @private */
        function formatArrayBuffer(data) {
            const view = new Uint8Array(data);
            // Uint8Array.map only supports returning another Uint8Array?
            let str = "";
            view.forEach( (num) => {
                const pad = num < 16 ? "0" : "";
                str += `0x${pad}${num.toString(16)} `;
            }
            );
            // Trim of trailing space.
            return str.substr(0, str.length - 1);
        }
        // Also in signalr-protocol-msgpack/Utils.ts
        /** @private */
        function isArrayBuffer(val) {
            return val && typeof ArrayBuffer !== "undefined" && (val instanceof ArrayBuffer || // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof
            (val.constructor && val.constructor.name === "ArrayBuffer"));
        }
        /** @private */
        async function sendMessage(logger, transportName, httpClient, url, accessTokenFactory, content, options) {
            let headers = {};
            if (accessTokenFactory) {
                const token = await accessTokenFactory();
                if (token) {
                    headers = {
                        ["Authorization"]: `Bearer ${token}`,
                    };
                }
            }
            const [name,value] = getUserAgentHeader();
            headers[name] = value;
            logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, options.logMessageContent)}.`);
            const responseType = isArrayBuffer(content) ? "arraybuffer" : "text";
            const response = await httpClient.post(url, {
                content,
                headers: {
                    ...headers,
                    ...options.headers
                },
                responseType,
                timeout: options.timeout,
                withCredentials: options.withCredentials,
            });
            logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);
        }
        /** @private */
        function createLogger(logger) {
            if (logger === undefined) {
                return new ConsoleLogger(LogLevel.Information);
            }
            if (logger === null) {
                return NullLogger.instance;
            }
            if (logger.log !== undefined) {
                return logger;
            }
            return new ConsoleLogger(logger);
        }
        /** @private */
        class SubjectSubscription {
            constructor(subject, observer) {
                this._subject = subject;
                this._observer = observer;
            }
            dispose() {
                const index = this._subject.observers.indexOf(this._observer);
                if (index > -1) {
                    this._subject.observers.splice(index, 1);
                }
                if (this._subject.observers.length === 0 && this._subject.cancelCallback) {
                    this._subject.cancelCallback().catch( (_) => {}
                    );
                }
            }
        }
        /** @private */
        class ConsoleLogger {
            constructor(minimumLogLevel) {
                this._minLevel = minimumLogLevel;
                this.out = console;
            }
            log(logLevel, message) {
                if (logLevel >= this._minLevel) {
                    const msg = `[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`;
                    switch (logLevel) {
                    case LogLevel.Critical:
                    case LogLevel.Error:
                        this.out.error(msg);
                        break;
                    case LogLevel.Warning:
                        this.out.warn(msg);
                        break;
                    case LogLevel.Information:
                        this.out.info(msg);
                        break;
                    default:
                        // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug
                        this.out.log(msg);
                        break;
                    }
                }
            }
        }
        /** @private */
        function getUserAgentHeader() {
            let userAgentHeaderName = "X-SignalR-User-Agent";
            if (Platform.isNode) {
                userAgentHeaderName = "User-Agent";
            }
            return [userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion())];
        }
        /** @private */
        function constructUserAgent(version, os, runtime, runtimeVersion) {
            // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])
            let userAgent = "Microsoft SignalR/";
            const majorAndMinor = version.split(".");
            userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;
            userAgent += ` (${version}; `;
            if (os && os !== "") {
                userAgent += `${os}; `;
            } else {
                userAgent += "Unknown OS; ";
            }
            userAgent += `${runtime}`;
            if (runtimeVersion) {
                userAgent += `; ${runtimeVersion}`;
            } else {
                userAgent += "; Unknown Runtime Version";
            }
            userAgent += ")";
            return userAgent;
        }
        // eslint-disable-next-line spaced-comment
        /*#__PURE__*/
        function getOsName() {
            if (Platform.isNode) {
                switch (process.platform) {
                case "win32":
                    return "Windows NT";
                case "darwin":
                    return "macOS";
                case "linux":
                    return "Linux";
                default:
                    return process.platform;
                }
            } else {
                return "";
            }
        }
        // eslint-disable-next-line spaced-comment
        /*#__PURE__*/
        function getRuntimeVersion() {
            if (Platform.isNode) {
                return process.versions.node;
            }
            return undefined;
        }
        function getRuntime() {
            if (Platform.isNode) {
                return "NodeJS";
            } else {
                return "Browser";
            }
        }
        /** @private */
        function getErrorString(e) {
            if (e.stack) {
                return e.stack;
            } else if (e.message) {
                return e.message;
            }
            return `${e}`;
        }
        /** @private */
        function getGlobalThis() {
            // globalThis is semi-new and not available in Node until v12
            if (typeof globalThis !== "undefined") {
                return globalThis;
            }
            if (typeof self !== "undefined") {
                return self;
            }
            if (typeof window !== "undefined") {
                return window;
            }
            if (typeof __webpack_require__.g !== "undefined") {
                return __webpack_require__.g;
            }
            throw new Error("could not find global");
        }

        ;// CONCATENATED MODULE: ./src/FetchHttpClient.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.

        class FetchHttpClient extends HttpClient {
            constructor(logger) {
                super();
                this._logger = logger;
                if (typeof fetch === "undefined") {
                    // In order to ignore the dynamic require in webpack builds we need to do this magic
                    // @ts-ignore: TS doesn't know about these names
                    const requireFunc = true ? require : 0;
                    // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests
                    this._jar = new (requireFunc("tough-cookie")).CookieJar();
                    this._fetchType = requireFunc("node-fetch");
                    // node-fetch doesn't have a nice API for getting and setting cookies
                    // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one
                    this._fetchType = requireFunc("fetch-cookie")(this._fetchType, this._jar);
                } else {
                    this._fetchType = fetch.bind(getGlobalThis());
                }
                if (typeof AbortController === "undefined") {
                    // In order to ignore the dynamic require in webpack builds we need to do this magic
                    // @ts-ignore: TS doesn't know about these names
                    const requireFunc = true ? require : 0;
                    // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide
                    this._abortControllerType = requireFunc("abort-controller");
                } else {
                    this._abortControllerType = AbortController;
                }
            }
            /** @inheritDoc */
            async send(request) {
                // Check that abort was not signaled before calling send
                if (request.abortSignal && request.abortSignal.aborted) {
                    throw new AbortError();
                }
                if (!request.method) {
                    throw new Error("No method defined.");
                }
                if (!request.url) {
                    throw new Error("No url defined.");
                }
                const abortController = new this._abortControllerType();
                let error;
                // Hook our abortSignal into the abort controller
                if (request.abortSignal) {
                    request.abortSignal.onabort = () => {
                        abortController.abort();
                        error = new AbortError();
                    }
                    ;
                }
                // If a timeout has been passed in, setup a timeout to call abort
                // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout
                let timeoutId = null;
                if (request.timeout) {
                    const msTimeout = request.timeout;
                    timeoutId = setTimeout( () => {
                        abortController.abort();
                        this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);
                        error = new TimeoutError();
                    }
                    , msTimeout);
                }
                let response;
                try {
                    response = await this._fetchType(request.url, {
                        body: request.content,
                        cache: "no-cache",
                        credentials: request.withCredentials === true ? "include" : "same-origin",
                        headers: {
                            "Content-Type": "text/plain;charset=UTF-8",
                            "X-Requested-With": "XMLHttpRequest",
                            ...request.headers,
                        },
                        method: request.method,
                        mode: "cors",
                        redirect: "follow",
                        signal: abortController.signal,
                    });
                } catch (e) {
                    if (error) {
                        throw error;
                    }
                    this._logger.log(LogLevel.Warning, `Error from HTTP request. ${e}.`);
                    throw e;
                } finally {
                    if (timeoutId) {
                        clearTimeout(timeoutId);
                    }
                    if (request.abortSignal) {
                        request.abortSignal.onabort = null;
                    }
                }
                if (!response.ok) {
                    const errorMessage = await deserializeContent(response, "text");
                    throw new HttpError(errorMessage || response.statusText,response.status);
                }
                const content = deserializeContent(response, request.responseType);
                const payload = await content;
                return new HttpResponse(response.status,response.statusText,payload);
            }
            getCookieString(url) {
                let cookies = "";
                if (Platform.isNode && this._jar) {
                    // @ts-ignore: unused variable
                    this._jar.getCookies(url, (e, c) => cookies = c.join("; "));
                }
                return cookies;
            }
        }
        function deserializeContent(response, responseType) {
            let content;
            switch (responseType) {
            case "arraybuffer":
                content = response.arrayBuffer();
                break;
            case "text":
                content = response.text();
                break;
            case "blob":
            case "document":
            case "json":
                throw new Error(`${responseType} is not supported.`);
            default:
                content = response.text();
                break;
            }
            return content;
        }

        ;// CONCATENATED MODULE: ./src/XhrHttpClient.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.

        class XhrHttpClient extends HttpClient {
            constructor(logger) {
                super();
                this._logger = logger;
            }
            /** @inheritDoc */
            send(request) {
                // Check that abort was not signaled before calling send
                if (request.abortSignal && request.abortSignal.aborted) {
                    return Promise.reject(new AbortError());
                }
                if (!request.method) {
                    return Promise.reject(new Error("No method defined."));
                }
                if (!request.url) {
                    return Promise.reject(new Error("No url defined."));
                }
                return new Promise( (resolve, reject) => {
                    const xhr = new XMLHttpRequest();
                    xhr.open(request.method, request.url, true);
                    xhr.withCredentials = request.withCredentials === undefined ? true : request.withCredentials;
                    xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");
                    // Explicitly setting the Content-Type header for React Native on Android platform.
                    xhr.setRequestHeader("Content-Type", "text/plain;charset=UTF-8");
                    const headers = request.headers;
                    if (headers) {
                        Object.keys(headers).forEach( (header) => {
                            xhr.setRequestHeader(header, headers[header]);
                        }
                        );
                    }
                    if (request.responseType) {
                        xhr.responseType = request.responseType;
                    }
                    if (request.abortSignal) {
                        request.abortSignal.onabort = () => {
                            xhr.abort();
                            reject(new AbortError());
                        }
                        ;
                    }
                    if (request.timeout) {
                        xhr.timeout = request.timeout;
                    }
                    xhr.onload = () => {
                        if (request.abortSignal) {
                            request.abortSignal.onabort = null;
                        }
                        if (xhr.status >= 200 && xhr.status < 300) {
                            resolve(new HttpResponse(xhr.status,xhr.statusText,xhr.response || xhr.responseText));
                        } else {
                            reject(new HttpError(xhr.response || xhr.responseText || xhr.statusText,xhr.status));
                        }
                    }
                    ;
                    xhr.onerror = () => {
                        this._logger.log(LogLevel.Warning, `Error from HTTP request. ${xhr.status}: ${xhr.statusText}.`);
                        reject(new HttpError(xhr.statusText,xhr.status));
                    }
                    ;
                    xhr.ontimeout = () => {
                        this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);
                        reject(new TimeoutError());
                    }
                    ;
                    xhr.send(request.content || "");
                }
                );
            }
        }

        ;// CONCATENATED MODULE: ./src/DefaultHttpClient.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.

        /** Default implementation of {@link @microsoft/signalr.HttpClient}. */
        class DefaultHttpClient extends HttpClient {
            /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */
            constructor(logger) {
                super();
                if (typeof fetch !== "undefined" || Platform.isNode) {
                    this._httpClient = new FetchHttpClient(logger);
                } else if (typeof XMLHttpRequest !== "undefined") {
                    this._httpClient = new XhrHttpClient(logger);
                } else {
                    throw new Error("No usable HttpClient found.");
                }
            }
            /** @inheritDoc */
            send(request) {
                // Check that abort was not signaled before calling send
                if (request.abortSignal && request.abortSignal.aborted) {
                    return Promise.reject(new AbortError());
                }
                if (!request.method) {
                    return Promise.reject(new Error("No method defined."));
                }
                if (!request.url) {
                    return Promise.reject(new Error("No url defined."));
                }
                return this._httpClient.send(request);
            }
            getCookieString(url) {
                return this._httpClient.getCookieString(url);
            }
        }

        ;// CONCATENATED MODULE: ./src/TextMessageFormat.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.
        // Not exported from index
        /** @private */
        class TextMessageFormat {
            static write(output) {
                return `${output}${TextMessageFormat.RecordSeparator}`;
            }
            static parse(input) {
                if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {
                    throw new Error("Message is incomplete.");
                }
                const messages = input.split(TextMessageFormat.RecordSeparator);
                messages.pop();
                return messages;
            }
        }
        TextMessageFormat.RecordSeparatorCode = 0x1e;
        TextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);

        ;// CONCATENATED MODULE: ./src/HandshakeProtocol.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.

        /** @private */
        class HandshakeProtocol {
            // Handshake request is always JSON
            writeHandshakeRequest(handshakeRequest) {
                return TextMessageFormat.write(JSON.stringify(handshakeRequest));
            }
            parseHandshakeResponse(data) {
                let messageData;
                let remainingData;
                if (isArrayBuffer(data)) {
                    // Format is binary but still need to read JSON text from handshake response
                    const binaryData = new Uint8Array(data);
                    const separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);
                    if (separatorIndex === -1) {
                        throw new Error("Message is incomplete.");
                    }
                    // content before separator is handshake response
                    // optional content after is additional messages
                    const responseLength = separatorIndex + 1;
                    messageData = String.fromCharCode.apply(null, Array.prototype.slice.call(binaryData.slice(0, responseLength)));
                    remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;
                } else {
                    const textData = data;
                    const separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);
                    if (separatorIndex === -1) {
                        throw new Error("Message is incomplete.");
                    }
                    // content before separator is handshake response
                    // optional content after is additional messages
                    const responseLength = separatorIndex + 1;
                    messageData = textData.substring(0, responseLength);
                    remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;
                }
                // At this point we should have just the single handshake message
                const messages = TextMessageFormat.parse(messageData);
                const response = JSON.parse(messages[0]);
                if (response.type) {
                    throw new Error("Expected a handshake response from the server.");
                }
                const responseMessage = response;
                // multiple messages could have arrived with handshake
                // return additional data to be parsed as usual, or null if all parsed
                return [remainingData, responseMessage];
            }
        }

        ;// CONCATENATED MODULE: ./src/IHubProtocol.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.
        /** Defines the type of a Hub Message. */
        var MessageType;
        (function(MessageType) {
            /** Indicates the message is an Invocation message and implements the {@link @microsoft/signalr.InvocationMessage} interface. */
            MessageType[MessageType["Invocation"] = 1] = "Invocation";
            /** Indicates the message is a StreamItem message and implements the {@link @microsoft/signalr.StreamItemMessage} interface. */
            MessageType[MessageType["StreamItem"] = 2] = "StreamItem";
            /** Indicates the message is a Completion message and implements the {@link @microsoft/signalr.CompletionMessage} interface. */
            MessageType[MessageType["Completion"] = 3] = "Completion";
            /** Indicates the message is a Stream Invocation message and implements the {@link @microsoft/signalr.StreamInvocationMessage} interface. */
            MessageType[MessageType["StreamInvocation"] = 4] = "StreamInvocation";
            /** Indicates the message is a Cancel Invocation message and implements the {@link @microsoft/signalr.CancelInvocationMessage} interface. */
            MessageType[MessageType["CancelInvocation"] = 5] = "CancelInvocation";
            /** Indicates the message is a Ping message and implements the {@link @microsoft/signalr.PingMessage} interface. */
            MessageType[MessageType["Ping"] = 6] = "Ping";
            /** Indicates the message is a Close message and implements the {@link @microsoft/signalr.CloseMessage} interface. */
            MessageType[MessageType["Close"] = 7] = "Close";
        }
        )(MessageType || (MessageType = {}));

        ;// CONCATENATED MODULE: ./src/Subject.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.

        /** Stream implementation to stream items to the server. */
        class Subject {
            constructor() {
                this.observers = [];
            }
            next(item) {
                for (const observer of this.observers) {
                    observer.next(item);
                }
            }
            error(err) {
                for (const observer of this.observers) {
                    if (observer.error) {
                        observer.error(err);
                    }
                }
            }
            complete() {
                for (const observer of this.observers) {
                    if (observer.complete) {
                        observer.complete();
                    }
                }
            }
            subscribe(observer) {
                this.observers.push(observer);
                return new SubjectSubscription(this,observer);
            }
        }

        ;// CONCATENATED MODULE: ./src/HubConnection.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.

        const DEFAULT_TIMEOUT_IN_MS = 30 * 1000;
        const DEFAULT_PING_INTERVAL_IN_MS = 15 * 1000;
        /** Describes the current state of the {@link HubConnection} to the server. */
        var HubConnectionState;
        (function(HubConnectionState) {
            /** The hub connection is disconnected. */
            HubConnectionState["Disconnected"] = "Disconnected";
            /** The hub connection is connecting. */
            HubConnectionState["Connecting"] = "Connecting";
            /** The hub connection is connected. */
            HubConnectionState["Connected"] = "Connected";
            /** The hub connection is disconnecting. */
            HubConnectionState["Disconnecting"] = "Disconnecting";
            /** The hub connection is reconnecting. */
            HubConnectionState["Reconnecting"] = "Reconnecting";
        }
        )(HubConnectionState || (HubConnectionState = {}));
        /** Represents a connection to a SignalR Hub. */
        class HubConnection {
            constructor(connection, logger, protocol, reconnectPolicy) {
                this._nextKeepAlive = 0;
                this._freezeEventListener = () => {
                    this._logger.log(LogLevel.Warning, "The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://docs.microsoft.com/aspnet/core/signalr/javascript-client#bsleep");
                }
                ;
                Arg.isRequired(connection, "connection");
                Arg.isRequired(logger, "logger");
                Arg.isRequired(protocol, "protocol");
                this.serverTimeoutInMilliseconds = DEFAULT_TIMEOUT_IN_MS;
                this.keepAliveIntervalInMilliseconds = DEFAULT_PING_INTERVAL_IN_MS;
                this._logger = logger;
                this._protocol = protocol;
                this.connection = connection;
                this._reconnectPolicy = reconnectPolicy;
                this._handshakeProtocol = new HandshakeProtocol();
                this.connection.onreceive = (data) => this._processIncomingData(data);
                this.connection.onclose = (error) => this._connectionClosed(error);
                this._callbacks = {};
                this._methods = {};
                this._closedCallbacks = [];
                this._reconnectingCallbacks = [];
                this._reconnectedCallbacks = [];
                this._invocationId = 0;
                this._receivedHandshakeResponse = false;
                this._connectionState = HubConnectionState.Disconnected;
                this._connectionStarted = false;
                this._cachedPingMessage = this._protocol.writeMessage({
                    type: MessageType.Ping
                });
            }
            /** @internal */
            // Using a public static factory method means we can have a private constructor and an _internal_
            // create method that can be used by HubConnectionBuilder. An "internal" constructor would just
            // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a
            // public parameter-less constructor.
            static create(connection, logger, protocol, reconnectPolicy) {
                return new HubConnection(connection,logger,protocol,reconnectPolicy);
            }
            /** Indicates the state of the {@link HubConnection} to the server. */
            get state() {
                return this._connectionState;
            }
            /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either
     *  in the disconnected state or if the negotiation step was skipped.
     */
            get connectionId() {
                return this.connection ? (this.connection.connectionId || null) : null;
            }
            /** Indicates the url of the {@link HubConnection} to the server. */
            get baseUrl() {
                return this.connection.baseUrl || "";
            }
            /**
     * Sets a new url for the HubConnection. Note that the url can only be changed when the connection is in either the Disconnected or
     * Reconnecting states.
     * @param {string} url The url to connect to.
     */
            set baseUrl(url) {
                if (this._connectionState !== HubConnectionState.Disconnected && this._connectionState !== HubConnectionState.Reconnecting) {
                    throw new Error("The HubConnection must be in the Disconnected or Reconnecting state to change the url.");
                }
                if (!url) {
                    throw new Error("The HubConnection url must be a valid url.");
                }
                this.connection.baseUrl = url;
            }
            /** Starts the connection.
     *
     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.
     */
            start() {
                this._startPromise = this._startWithStateTransitions();
                return this._startPromise;
            }
            async _startWithStateTransitions() {
                if (this._connectionState !== HubConnectionState.Disconnected) {
                    return Promise.reject(new Error("Cannot start a HubConnection that is not in the 'Disconnected' state."));
                }
                this._connectionState = HubConnectionState.Connecting;
                this._logger.log(LogLevel.Debug, "Starting HubConnection.");
                try {
                    await this._startInternal();
                    if (Platform.isBrowser) {
                        // Log when the browser freezes the tab so users know why their connection unexpectedly stopped working
                        window.document.addEventListener("freeze", this._freezeEventListener);
                    }
                    this._connectionState = HubConnectionState.Connected;
                    this._connectionStarted = true;
                    this._logger.log(LogLevel.Debug, "HubConnection connected successfully.");
                } catch (e) {
                    this._connectionState = HubConnectionState.Disconnected;
                    this._logger.log(LogLevel.Debug, `HubConnection failed to start successfully because of error '${e}'.`);
                    return Promise.reject(e);
                }
            }
            async _startInternal() {
                this._stopDuringStartError = undefined;
                this._receivedHandshakeResponse = false;
                // Set up the promise before any connection is (re)started otherwise it could race with received messages
                const handshakePromise = new Promise( (resolve, reject) => {
                    this._handshakeResolver = resolve;
                    this._handshakeRejecter = reject;
                }
                );
                await this.connection.start(this._protocol.transferFormat);
                try {
                    const handshakeRequest = {
                        protocol: this._protocol.name,
                        version: this._protocol.version,
                    };
                    this._logger.log(LogLevel.Debug, "Sending handshake request.");
                    await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(handshakeRequest));
                    this._logger.log(LogLevel.Information, `Using HubProtocol '${this._protocol.name}'.`);
                    // defensively cleanup timeout in case we receive a message from the server before we finish start
                    this._cleanupTimeout();
                    this._resetTimeoutPeriod();
                    this._resetKeepAliveInterval();
                    await handshakePromise;
                    // It's important to check the stopDuringStartError instead of just relying on the handshakePromise
                    // being rejected on close, because this continuation can run after both the handshake completed successfully
                    // and the connection was closed.
                    if (this._stopDuringStartError) {
                        // It's important to throw instead of returning a rejected promise, because we don't want to allow any state
                        // transitions to occur between now and the calling code observing the exceptions. Returning a rejected promise
                        // will cause the calling continuation to get scheduled to run later.
                        // eslint-disable-next-line @typescript-eslint/no-throw-literal
                        throw this._stopDuringStartError;
                    }
                } catch (e) {
                    this._logger.log(LogLevel.Debug, `Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`);
                    this._cleanupTimeout();
                    this._cleanupPingTimer();
                    // HttpConnection.stop() should not complete until after the onclose callback is invoked.
                    // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.
                    await this.connection.stop(e);
                    throw e;
                }
            }
            /** Stops the connection.
     *
     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.
     */
            async stop() {
                // Capture the start promise before the connection might be restarted in an onclose callback.
                const startPromise = this._startPromise;
                this._stopPromise = this._stopInternal();
                await this._stopPromise;
                try {
                    // Awaiting undefined continues immediately
                    await startPromise;
                } catch (e) {// This exception is returned to the user as a rejected Promise from the start method.
                }
            }
            _stopInternal(error) {
                if (this._connectionState === HubConnectionState.Disconnected) {
                    this._logger.log(LogLevel.Debug, `Call to HubConnection.stop(${error}) ignored because it is already in the disconnected state.`);
                    return Promise.resolve();
                }
                if (this._connectionState === HubConnectionState.Disconnecting) {
                    this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);
                    return this._stopPromise;
                }
                this._connectionState = HubConnectionState.Disconnecting;
                this._logger.log(LogLevel.Debug, "Stopping HubConnection.");
                if (this._reconnectDelayHandle) {
                    // We're in a reconnect delay which means the underlying connection is currently already stopped.
                    // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and
                    // fire the onclose callbacks.
                    this._logger.log(LogLevel.Debug, "Connection stopped during reconnect delay. Done reconnecting.");
                    clearTimeout(this._reconnectDelayHandle);
                    this._reconnectDelayHandle = undefined;
                    this._completeClose();
                    return Promise.resolve();
                }
                this._cleanupTimeout();
                this._cleanupPingTimer();
                this._stopDuringStartError = error || new Error("The connection was stopped before the hub handshake could complete.");
                // HttpConnection.stop() should not complete until after either HttpConnection.start() fails
                // or the onclose callback is invoked. The onclose callback will transition the HubConnection
                // to the disconnected state if need be before HttpConnection.stop() completes.
                return this.connection.stop(error);
            }
            /** Invokes a streaming hub method on the server using the specified name and arguments.
     *
     * @typeparam T The type of the items returned by the server.
     * @param {string} methodName The name of the server method to invoke.
     * @param {any[]} args The arguments used to invoke the server method.
     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.
     */
            stream(methodName, ...args) {
                const [streams,streamIds] = this._replaceStreamingParams(args);
                const invocationDescriptor = this._createStreamInvocation(methodName, args, streamIds);
                // eslint-disable-next-line prefer-const
                let promiseQueue;
                const subject = new Subject();
                subject.cancelCallback = () => {
                    const cancelInvocation = this._createCancelInvocation(invocationDescriptor.invocationId);
                    delete this._callbacks[invocationDescriptor.invocationId];
                    return promiseQueue.then( () => {
                        return this._sendWithProtocol(cancelInvocation);
                    }
                    );
                }
                ;
                this._callbacks[invocationDescriptor.invocationId] = (invocationEvent, error) => {
                    if (error) {
                        subject.error(error);
                        return;
                    } else if (invocationEvent) {
                        // invocationEvent will not be null when an error is not passed to the callback
                        if (invocationEvent.type === MessageType.Completion) {
                            if (invocationEvent.error) {
                                subject.error(new Error(invocationEvent.error));
                            } else {
                                subject.complete();
                            }
                        } else {
                            subject.next((invocationEvent.item));
                        }
                    }
                }
                ;
                promiseQueue = this._sendWithProtocol(invocationDescriptor).catch( (e) => {
                    subject.error(e);
                    delete this._callbacks[invocationDescriptor.invocationId];
                }
                );
                this._launchStreams(streams, promiseQueue);
                return subject;
            }
            _sendMessage(message) {
                this._resetKeepAliveInterval();
                return this.connection.send(message);
            }
            /**
     * Sends a js object to the server.
     * @param message The js object to serialize and send.
     */
            _sendWithProtocol(message) {
                return this._sendMessage(this._protocol.writeMessage(message));
            }
            /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.
     *
     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still
     * be processing the invocation.
     *
     * @param {string} methodName The name of the server method to invoke.
     * @param {any[]} args The arguments used to invoke the server method.
     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.
     */
            send(methodName, ...args) {
                const [streams,streamIds] = this._replaceStreamingParams(args);
                const sendPromise = this._sendWithProtocol(this._createInvocation(methodName, args, true, streamIds));
                this._launchStreams(streams, sendPromise);
                return sendPromise;
            }
            /** Invokes a hub method on the server using the specified name and arguments.
     *
     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise
     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of
     * resolving the Promise.
     *
     * @typeparam T The expected return type.
     * @param {string} methodName The name of the server method to invoke.
     * @param {any[]} args The arguments used to invoke the server method.
     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.
     */
            invoke(methodName, ...args) {
                const [streams,streamIds] = this._replaceStreamingParams(args);
                const invocationDescriptor = this._createInvocation(methodName, args, false, streamIds);
                const p = new Promise( (resolve, reject) => {
                    // invocationId will always have a value for a non-blocking invocation
                    this._callbacks[invocationDescriptor.invocationId] = (invocationEvent, error) => {
                        if (error) {
                            reject(error);
                            return;
                        } else if (invocationEvent) {
                            // invocationEvent will not be null when an error is not passed to the callback
                            if (invocationEvent.type === MessageType.Completion) {
                                if (invocationEvent.error) {
                                    reject(new Error(invocationEvent.error));
                                } else {
                                    resolve(invocationEvent.result);
                                }
                            } else {
                                reject(new Error(`Unexpected message type: ${invocationEvent.type}`));
                            }
                        }
                    }
                    ;
                    const promiseQueue = this._sendWithProtocol(invocationDescriptor).catch( (e) => {
                        reject(e);
                        // invocationId will always have a value for a non-blocking invocation
                        delete this._callbacks[invocationDescriptor.invocationId];
                    }
                    );
                    this._launchStreams(streams, promiseQueue);
                }
                );
                return p;
            }
            /** Registers a handler that will be invoked when the hub method with the specified method name is invoked.
     *
     * @param {string} methodName The name of the hub method to define.
     * @param {Function} newMethod The handler that will be raised when the hub method is invoked.
     */
            on(methodName, newMethod) {
                if (!methodName || !newMethod) {
                    return;
                }
                methodName = methodName.toLowerCase();
                if (!this._methods[methodName]) {
                    this._methods[methodName] = [];
                }
                // Preventing adding the same handler multiple times.
                if (this._methods[methodName].indexOf(newMethod) !== -1) {
                    return;
                }
                this._methods[methodName].push(newMethod);
            }
            off(methodName, method) {
                if (!methodName) {
                    return;
                }
                methodName = methodName.toLowerCase();
                const handlers = this._methods[methodName];
                if (!handlers) {
                    return;
                }
                if (method) {
                    const removeIdx = handlers.indexOf(method);
                    if (removeIdx !== -1) {
                        handlers.splice(removeIdx, 1);
                        if (handlers.length === 0) {
                            delete this._methods[methodName];
                        }
                    }
                } else {
                    delete this._methods[methodName];
                }
            }
            /** Registers a handler that will be invoked when the connection is closed.
     *
     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).
     */
            onclose(callback) {
                if (callback) {
                    this._closedCallbacks.push(callback);
                }
            }
            /** Registers a handler that will be invoked when the connection starts reconnecting.
     *
     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).
     */
            onreconnecting(callback) {
                if (callback) {
                    this._reconnectingCallbacks.push(callback);
                }
            }
            /** Registers a handler that will be invoked when the connection successfully reconnects.
     *
     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.
     */
            onreconnected(callback) {
                if (callback) {
                    this._reconnectedCallbacks.push(callback);
                }
            }
            _processIncomingData(data) {
                this._cleanupTimeout();
                if (!this._receivedHandshakeResponse) {
                    data = this._processHandshakeResponse(data);
                    this._receivedHandshakeResponse = true;
                }
                // Data may have all been read when processing handshake response
                if (data) {
                    // Parse the messages
                    const messages = this._protocol.parseMessages(data, this._logger);
                    for (const message of messages) {
                        switch (message.type) {
                        case MessageType.Invocation:
                            this._invokeClientMethod(message);
                            break;
                        case MessageType.StreamItem:
                        case MessageType.Completion:
                            {
                                const callback = this._callbacks[message.invocationId];
                                if (callback) {
                                    if (message.type === MessageType.Completion) {
                                        delete this._callbacks[message.invocationId];
                                    }
                                    try {
                                        callback(message);
                                    } catch (e) {
                                        this._logger.log(LogLevel.Error, `Stream callback threw error: ${getErrorString(e)}`);
                                    }
                                }
                                break;
                            }
                        case MessageType.Ping:
                            // Don't care about pings
                            break;
                        case MessageType.Close:
                            {
                                this._logger.log(LogLevel.Information, "Close message received from server.");
                                const error = message.error ? new Error("Server returned an error on close: " + message.error) : undefined;
                                if (message.allowReconnect === true) {
                                    // It feels wrong not to await connection.stop() here, but processIncomingData is called as part of an onreceive callback which is not async,
                                    // this is already the behavior for serverTimeout(), and HttpConnection.Stop() should catch and log all possible exceptions.
                                    // eslint-disable-next-line @typescript-eslint/no-floating-promises
                                    this.connection.stop(error);
                                } else {
                                    // We cannot await stopInternal() here, but subsequent calls to stop() will await this if stopInternal() is still ongoing.
                                    this._stopPromise = this._stopInternal(error);
                                }
                                break;
                            }
                        default:
                            this._logger.log(LogLevel.Warning, `Invalid message type: ${message.type}.`);
                            break;
                        }
                    }
                }
                this._resetTimeoutPeriod();
            }
            _processHandshakeResponse(data) {
                let responseMessage;
                let remainingData;
                try {
                    [remainingData,responseMessage] = this._handshakeProtocol.parseHandshakeResponse(data);
                } catch (e) {
                    const message = "Error parsing handshake response: " + e;
                    this._logger.log(LogLevel.Error, message);
                    const error = new Error(message);
                    this._handshakeRejecter(error);
                    throw error;
                }
                if (responseMessage.error) {
                    const message = "Server returned handshake error: " + responseMessage.error;
                    this._logger.log(LogLevel.Error, message);
                    const error = new Error(message);
                    this._handshakeRejecter(error);
                    throw error;
                } else {
                    this._logger.log(LogLevel.Debug, "Server handshake complete.");
                }
                this._handshakeResolver();
                return remainingData;
            }
            _resetKeepAliveInterval() {
                if (this.connection.features.inherentKeepAlive) {
                    return;
                }
                // Set the time we want the next keep alive to be sent
                // Timer will be setup on next message receive
                this._nextKeepAlive = new Date().getTime() + this.keepAliveIntervalInMilliseconds;
                this._cleanupPingTimer();
            }
            _resetTimeoutPeriod() {
                if (!this.connection.features || !this.connection.features.inherentKeepAlive) {
                    // Set the timeout timer
                    this._timeoutHandle = setTimeout( () => this.serverTimeout(), this.serverTimeoutInMilliseconds);
                    // Set keepAlive timer if there isn't one
                    if (this._pingServerHandle === undefined) {
                        let nextPing = this._nextKeepAlive - new Date().getTime();
                        if (nextPing < 0) {
                            nextPing = 0;
                        }
                        // The timer needs to be set from a networking callback to avoid Chrome timer throttling from causing timers to run once a minute
                        this._pingServerHandle = setTimeout(async () => {
                            if (this._connectionState === HubConnectionState.Connected) {
                                try {
                                    await this._sendMessage(this._cachedPingMessage);
                                } catch {
                                    // We don't care about the error. It should be seen elsewhere in the client.
                                    // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering
                                    this._cleanupPingTimer();
                                }
                            }
                        }
                        , nextPing);
                    }
                }
            }
            // eslint-disable-next-line @typescript-eslint/naming-convention
            serverTimeout() {
                // The server hasn't talked to us in a while. It doesn't like us anymore ... :(
                // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.
                // eslint-disable-next-line @typescript-eslint/no-floating-promises
                this.connection.stop(new Error("Server timeout elapsed without receiving a message from the server."));
            }
            _invokeClientMethod(invocationMessage) {
                const methods = this._methods[invocationMessage.target.toLowerCase()];
                if (methods) {
                    try {
                        methods.forEach( (m) => m.apply(this, invocationMessage.arguments));
                    } catch (e) {
                        this._logger.log(LogLevel.Error, `A callback for the method ${invocationMessage.target.toLowerCase()} threw error '${e}'.`);
                    }
                    if (invocationMessage.invocationId) {
                        // This is not supported in v1. So we return an error to avoid blocking the server waiting for the response.
                        const message = "Server requested a response, which is not supported in this version of the client.";
                        this._logger.log(LogLevel.Error, message);
                        // We don't want to wait on the stop itself.
                        this._stopPromise = this._stopInternal(new Error(message));
                    }
                } else {
                    this._logger.log(LogLevel.Warning, `No client method with the name '${invocationMessage.target}' found.`);
                }
            }
            _connectionClosed(error) {
                this._logger.log(LogLevel.Debug, `HubConnection.connectionClosed(${error}) called while in state ${this._connectionState}.`);
                // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.
                this._stopDuringStartError = this._stopDuringStartError || error || new Error("The underlying connection was closed before the hub handshake could complete.");
                // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.
                // If it has already completed, this should just noop.
                if (this._handshakeResolver) {
                    this._handshakeResolver();
                }
                this._cancelCallbacksWithError(error || new Error("Invocation canceled due to the underlying connection being closed."));
                this._cleanupTimeout();
                this._cleanupPingTimer();
                if (this._connectionState === HubConnectionState.Disconnecting) {
                    this._completeClose(error);
                } else if (this._connectionState === HubConnectionState.Connected && this._reconnectPolicy) {
                    // eslint-disable-next-line @typescript-eslint/no-floating-promises
                    this._reconnect(error);
                } else if (this._connectionState === HubConnectionState.Connected) {
                    this._completeClose(error);
                }
                // If none of the above if conditions were true were called the HubConnection must be in either:
                // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.
                // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt
                //    and potentially continue the reconnect() loop.
                // 3. The Disconnected state in which case we're already done.
            }
            _completeClose(error) {
                if (this._connectionStarted) {
                    this._connectionState = HubConnectionState.Disconnected;
                    this._connectionStarted = false;
                    if (Platform.isBrowser) {
                        window.document.removeEventListener("freeze", this._freezeEventListener);
                    }
                    try {
                        this._closedCallbacks.forEach( (c) => c.apply(this, [error]));
                    } catch (e) {
                        this._logger.log(LogLevel.Error, `An onclose callback called with error '${error}' threw error '${e}'.`);
                    }
                }
            }
            async _reconnect(error) {
                const reconnectStartTime = Date.now();
                let previousReconnectAttempts = 0;
                let retryError = error !== undefined ? error : new Error("Attempting to reconnect due to a unknown error.");
                let nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, 0, retryError);
                if (nextRetryDelay === null) {
                    this._logger.log(LogLevel.Debug, "Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt.");
                    this._completeClose(error);
                    return;
                }
                this._connectionState = HubConnectionState.Reconnecting;
                if (error) {
                    this._logger.log(LogLevel.Information, `Connection reconnecting because of error '${error}'.`);
                } else {
                    this._logger.log(LogLevel.Information, "Connection reconnecting.");
                }
                if (this._reconnectingCallbacks.length !== 0) {
                    try {
                        this._reconnectingCallbacks.forEach( (c) => c.apply(this, [error]));
                    } catch (e) {
                        this._logger.log(LogLevel.Error, `An onreconnecting callback called with error '${error}' threw error '${e}'.`);
                    }
                    // Exit early if an onreconnecting callback called connection.stop().
                    if (this._connectionState !== HubConnectionState.Reconnecting) {
                        this._logger.log(LogLevel.Debug, "Connection left the reconnecting state in onreconnecting callback. Done reconnecting.");
                        return;
                    }
                }
                while (nextRetryDelay !== null) {
                    this._logger.log(LogLevel.Information, `Reconnect attempt number ${previousReconnectAttempts} will start in ${nextRetryDelay} ms.`);
                    await new Promise( (resolve) => {
                        this._reconnectDelayHandle = setTimeout(resolve, nextRetryDelay);
                    }
                    );
                    this._reconnectDelayHandle = undefined;
                    if (this._connectionState !== HubConnectionState.Reconnecting) {
                        this._logger.log(LogLevel.Debug, "Connection left the reconnecting state during reconnect delay. Done reconnecting.");
                        return;
                    }
                    try {
                        await this._startInternal();
                        this._connectionState = HubConnectionState.Connected;
                        this._logger.log(LogLevel.Information, "HubConnection reconnected successfully.");
                        if (this._reconnectedCallbacks.length !== 0) {
                            try {
                                this._reconnectedCallbacks.forEach( (c) => c.apply(this, [this.connection.connectionId]));
                            } catch (e) {
                                this._logger.log(LogLevel.Error, `An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`);
                            }
                        }
                        return;
                    } catch (e) {
                        this._logger.log(LogLevel.Information, `Reconnect attempt failed because of error '${e}'.`);
                        if (this._connectionState !== HubConnectionState.Reconnecting) {
                            this._logger.log(LogLevel.Debug, `Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`);
                            // The TypeScript compiler thinks that connectionState must be Connected here. The TypeScript compiler is wrong.
                            if (this._connectionState === HubConnectionState.Disconnecting) {
                                this._completeClose();
                            }
                            return;
                        }
                        retryError = e instanceof Error ? e : new Error(e.toString());
                        nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime, retryError);
                    }
                }
                this._logger.log(LogLevel.Information, `Reconnect retries have been exhausted after ${Date.now() - reconnectStartTime} ms and ${previousReconnectAttempts} failed attempts. Connection disconnecting.`);
                this._completeClose();
            }
            _getNextRetryDelay(previousRetryCount, elapsedMilliseconds, retryReason) {
                try {
                    return this._reconnectPolicy.nextRetryDelayInMilliseconds({
                        elapsedMilliseconds,
                        previousRetryCount,
                        retryReason,
                    });
                } catch (e) {
                    this._logger.log(LogLevel.Error, `IRetryPolicy.nextRetryDelayInMilliseconds(${previousRetryCount}, ${elapsedMilliseconds}) threw error '${e}'.`);
                    return null;
                }
            }
            _cancelCallbacksWithError(error) {
                const callbacks = this._callbacks;
                this._callbacks = {};
                Object.keys(callbacks).forEach( (key) => {
                    const callback = callbacks[key];
                    try {
                        callback(null, error);
                    } catch (e) {
                        this._logger.log(LogLevel.Error, `Stream 'error' callback called with '${error}' threw error: ${getErrorString(e)}`);
                    }
                }
                );
            }
            _cleanupPingTimer() {
                if (this._pingServerHandle) {
                    clearTimeout(this._pingServerHandle);
                    this._pingServerHandle = undefined;
                }
            }
            _cleanupTimeout() {
                if (this._timeoutHandle) {
                    clearTimeout(this._timeoutHandle);
                }
            }
            _createInvocation(methodName, args, nonblocking, streamIds) {
                if (nonblocking) {
                    if (streamIds.length !== 0) {
                        return {
                            arguments: args,
                            streamIds,
                            target: methodName,
                            type: MessageType.Invocation,
                        };
                    } else {
                        return {
                            arguments: args,
                            target: methodName,
                            type: MessageType.Invocation,
                        };
                    }
                } else {
                    const invocationId = this._invocationId;
                    this._invocationId++;
                    if (streamIds.length !== 0) {
                        return {
                            arguments: args,
                            invocationId: invocationId.toString(),
                            streamIds,
                            target: methodName,
                            type: MessageType.Invocation,
                        };
                    } else {
                        return {
                            arguments: args,
                            invocationId: invocationId.toString(),
                            target: methodName,
                            type: MessageType.Invocation,
                        };
                    }
                }
            }
            _launchStreams(streams, promiseQueue) {
                if (streams.length === 0) {
                    return;
                }
                // Synchronize stream data so they arrive in-order on the server
                if (!promiseQueue) {
                    promiseQueue = Promise.resolve();
                }
                // We want to iterate over the keys, since the keys are the stream ids
                // eslint-disable-next-line guard-for-in
                for (const streamId in streams) {
                    streams[streamId].subscribe({
                        complete: () => {
                            promiseQueue = promiseQueue.then( () => this._sendWithProtocol(this._createCompletionMessage(streamId)));
                        }
                        ,
                        error: (err) => {
                            let message;
                            if (err instanceof Error) {
                                message = err.message;
                            } else if (err && err.toString) {
                                message = err.toString();
                            } else {
                                message = "Unknown error";
                            }
                            promiseQueue = promiseQueue.then( () => this._sendWithProtocol(this._createCompletionMessage(streamId, message)));
                        }
                        ,
                        next: (item) => {
                            promiseQueue = promiseQueue.then( () => this._sendWithProtocol(this._createStreamItemMessage(streamId, item)));
                        }
                        ,
                    });
                }
            }
            _replaceStreamingParams(args) {
                const streams = [];
                const streamIds = [];
                for (let i = 0; i < args.length; i++) {
                    const argument = args[i];
                    if (this._isObservable(argument)) {
                        const streamId = this._invocationId;
                        this._invocationId++;
                        // Store the stream for later use
                        streams[streamId] = argument;
                        streamIds.push(streamId.toString());
                        // remove stream from args
                        args.splice(i, 1);
                    }
                }
                return [streams, streamIds];
            }
            _isObservable(arg) {
                // This allows other stream implementations to just work (like rxjs)
                return arg && arg.subscribe && typeof arg.subscribe === "function";
            }
            _createStreamInvocation(methodName, args, streamIds) {
                const invocationId = this._invocationId;
                this._invocationId++;
                if (streamIds.length !== 0) {
                    return {
                        arguments: args,
                        invocationId: invocationId.toString(),
                        streamIds,
                        target: methodName,
                        type: MessageType.StreamInvocation,
                    };
                } else {
                    return {
                        arguments: args,
                        invocationId: invocationId.toString(),
                        target: methodName,
                        type: MessageType.StreamInvocation,
                    };
                }
            }
            _createCancelInvocation(id) {
                return {
                    invocationId: id,
                    type: MessageType.CancelInvocation,
                };
            }
            _createStreamItemMessage(id, item) {
                return {
                    invocationId: id,
                    item,
                    type: MessageType.StreamItem,
                };
            }
            _createCompletionMessage(id, error, result) {
                if (error) {
                    return {
                        error,
                        invocationId: id,
                        type: MessageType.Completion,
                    };
                }
                return {
                    invocationId: id,
                    result,
                    type: MessageType.Completion,
                };
            }
        }

        ;// CONCATENATED MODULE: ./src/DefaultReconnectPolicy.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.
        // 0, 2, 10, 30 second delays before reconnect attempts.
        const DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];
        /** @private */
        class DefaultReconnectPolicy {
            constructor(retryDelays) {
                this._retryDelays = retryDelays !== undefined ? [...retryDelays, null] : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;
            }
            nextRetryDelayInMilliseconds(retryContext) {
                return this._retryDelays[retryContext.previousRetryCount];
            }
        }

        ;// CONCATENATED MODULE: ./src/HeaderNames.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.
        class HeaderNames {
        }
        HeaderNames.Authorization = "Authorization";
        HeaderNames.Cookie = "Cookie";

        ;// CONCATENATED MODULE: ./src/ITransport.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.
        // This will be treated as a bit flag in the future, so we keep it using power-of-two values.
        /** Specifies a specific HTTP transport type. */
        var HttpTransportType;
        (function(HttpTransportType) {
            /** Specifies no transport preference. */
            HttpTransportType[HttpTransportType["None"] = 0] = "None";
            /** Specifies the WebSockets transport. */
            HttpTransportType[HttpTransportType["WebSockets"] = 1] = "WebSockets";
            /** Specifies the Server-Sent Events transport. */
            HttpTransportType[HttpTransportType["ServerSentEvents"] = 2] = "ServerSentEvents";
            /** Specifies the Long Polling transport. */
            HttpTransportType[HttpTransportType["LongPolling"] = 4] = "LongPolling";
        }
        )(HttpTransportType || (HttpTransportType = {}));
        /** Specifies the transfer format for a connection. */
        var TransferFormat;
        (function(TransferFormat) {
            /** Specifies that only text data will be transmitted over the connection. */
            TransferFormat[TransferFormat["Text"] = 1] = "Text";
            /** Specifies that binary data will be transmitted over the connection. */
            TransferFormat[TransferFormat["Binary"] = 2] = "Binary";
        }
        )(TransferFormat || (TransferFormat = {}));

        ;// CONCATENATED MODULE: ./src/AbortController.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.
        // Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController
        // We don't actually ever use the API being polyfilled, we always use the polyfill because
        // it's a very new API right now.
        // Not exported from index.
        /** @private */
        class AbortController_AbortController {
            constructor() {
                this._isAborted = false;
                this.onabort = null;
            }
            abort() {
                if (!this._isAborted) {
                    this._isAborted = true;
                    if (this.onabort) {
                        this.onabort();
                    }
                }
            }
            get signal() {
                return this;
            }
            get aborted() {
                return this._isAborted;
            }
        }

        ;// CONCATENATED MODULE: ./src/LongPollingTransport.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.

        // Not exported from 'index', this type is internal.
        /** @private */
        class LongPollingTransport {
            constructor(httpClient, accessTokenFactory, logger, options) {
                this._httpClient = httpClient;
                this._accessTokenFactory = accessTokenFactory;
                this._logger = logger;
                this._pollAbort = new AbortController_AbortController();
                this._options = options;
                this._running = false;
                this.onreceive = null;
                this.onclose = null;
            }
            // This is an internal type, not exported from 'index' so this is really just internal.
            get pollAborted() {
                return this._pollAbort.aborted;
            }
            async connect(url, transferFormat) {
                Arg.isRequired(url, "url");
                Arg.isRequired(transferFormat, "transferFormat");
                Arg.isIn(transferFormat, TransferFormat, "transferFormat");
                this._url = url;
                this._logger.log(LogLevel.Trace, "(LongPolling transport) Connecting.");
                // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)
                if (transferFormat === TransferFormat.Binary && (typeof XMLHttpRequest !== "undefined" && typeof new XMLHttpRequest().responseType !== "string")) {
                    throw new Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");
                }
                const [name,value] = getUserAgentHeader();
                const headers = {
                    [name]: value,
                    ...this._options.headers
                };
                const pollOptions = {
                    abortSignal: this._pollAbort.signal,
                    headers,
                    timeout: 100000,
                    withCredentials: this._options.withCredentials,
                };
                if (transferFormat === TransferFormat.Binary) {
                    pollOptions.responseType = "arraybuffer";
                }
                const token = await this._getAccessToken();
                this._updateHeaderToken(pollOptions, token);
                // Make initial long polling request
                // Server uses first long polling request to finish initializing connection and it returns without data
                const pollUrl = `${url}&_=${Date.now()}`;
                this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);
                const response = await this._httpClient.get(pollUrl, pollOptions);
                if (response.statusCode !== 200) {
                    this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);
                    // Mark running as false so that the poll immediately ends and runs the close logic
                    this._closeError = new HttpError(response.statusText || "",response.statusCode);
                    this._running = false;
                } else {
                    this._running = true;
                }
                this._receiving = this._poll(this._url, pollOptions);
            }
            async _getAccessToken() {
                if (this._accessTokenFactory) {
                    return await this._accessTokenFactory();
                }
                return null;
            }
            _updateHeaderToken(request, token) {
                if (!request.headers) {
                    request.headers = {};
                }
                if (token) {
                    request.headers[HeaderNames.Authorization] = `Bearer ${token}`;
                    return;
                }
                if (request.headers[HeaderNames.Authorization]) {
                    delete request.headers[HeaderNames.Authorization];
                }
            }
            async _poll(url, pollOptions) {
                try {
                    while (this._running) {
                        // We have to get the access token on each poll, in case it changes
                        const token = await this._getAccessToken();
                        this._updateHeaderToken(pollOptions, token);
                        try {
                            const pollUrl = `${url}&_=${Date.now()}`;
                            this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);
                            const response = await this._httpClient.get(pollUrl, pollOptions);
                            if (response.statusCode === 204) {
                                this._logger.log(LogLevel.Information, "(LongPolling transport) Poll terminated by server.");
                                this._running = false;
                            } else if (response.statusCode !== 200) {
                                this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);
                                // Unexpected status code
                                this._closeError = new HttpError(response.statusText || "",response.statusCode);
                                this._running = false;
                            } else {
                                // Process the response
                                if (response.content) {
                                    this._logger.log(LogLevel.Trace, `(LongPolling transport) data received. ${getDataDetail(response.content, this._options.logMessageContent)}.`);
                                    if (this.onreceive) {
                                        this.onreceive(response.content);
                                    }
                                } else {
                                    // This is another way timeout manifest.
                                    this._logger.log(LogLevel.Trace, "(LongPolling transport) Poll timed out, reissuing.");
                                }
                            }
                        } catch (e) {
                            if (!this._running) {
                                // Log but disregard errors that occur after stopping
                                this._logger.log(LogLevel.Trace, `(LongPolling transport) Poll errored after shutdown: ${e.message}`);
                            } else {
                                if (e instanceof TimeoutError) {
                                    // Ignore timeouts and reissue the poll.
                                    this._logger.log(LogLevel.Trace, "(LongPolling transport) Poll timed out, reissuing.");
                                } else {
                                    // Close the connection with the error as the result.
                                    this._closeError = e;
                                    this._running = false;
                                }
                            }
                        }
                    }
                } finally {
                    this._logger.log(LogLevel.Trace, "(LongPolling transport) Polling complete.");
                    // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.
                    // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.
                    if (!this.pollAborted) {
                        this._raiseOnClose();
                    }
                }
            }
            async send(data) {
                if (!this._running) {
                    return Promise.reject(new Error("Cannot send until the transport is connected"));
                }
                return sendMessage(this._logger, "LongPolling", this._httpClient, this._url, this._accessTokenFactory, data, this._options);
            }
            async stop() {
                this._logger.log(LogLevel.Trace, "(LongPolling transport) Stopping polling.");
                // Tell receiving loop to stop, abort any current request, and then wait for it to finish
                this._running = false;
                this._pollAbort.abort();
                try {
                    await this._receiving;
                    // Send DELETE to clean up long polling on the server
                    this._logger.log(LogLevel.Trace, `(LongPolling transport) sending DELETE request to ${this._url}.`);
                    const headers = {};
                    const [name,value] = getUserAgentHeader();
                    headers[name] = value;
                    const deleteOptions = {
                        headers: {
                            ...headers,
                            ...this._options.headers
                        },
                        timeout: this._options.timeout,
                        withCredentials: this._options.withCredentials,
                    };
                    const token = await this._getAccessToken();
                    this._updateHeaderToken(deleteOptions, token);
                    await this._httpClient.delete(this._url, deleteOptions);
                    this._logger.log(LogLevel.Trace, "(LongPolling transport) DELETE request sent.");
                } finally {
                    this._logger.log(LogLevel.Trace, "(LongPolling transport) Stop finished.");
                    // Raise close event here instead of in polling
                    // It needs to happen after the DELETE request is sent
                    this._raiseOnClose();
                }
            }
            _raiseOnClose() {
                if (this.onclose) {
                    let logMessage = "(LongPolling transport) Firing onclose event.";
                    if (this._closeError) {
                        logMessage += " Error: " + this._closeError;
                    }
                    this._logger.log(LogLevel.Trace, logMessage);
                    this.onclose(this._closeError);
                }
            }
        }

        ;// CONCATENATED MODULE: ./src/ServerSentEventsTransport.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.

        /** @private */
        class ServerSentEventsTransport {
            constructor(httpClient, accessTokenFactory, logger, options) {
                this._httpClient = httpClient;
                this._accessTokenFactory = accessTokenFactory;
                this._logger = logger;
                this._options = options;
                this.onreceive = null;
                this.onclose = null;
            }
            async connect(url, transferFormat) {
                Arg.isRequired(url, "url");
                Arg.isRequired(transferFormat, "transferFormat");
                Arg.isIn(transferFormat, TransferFormat, "transferFormat");
                this._logger.log(LogLevel.Trace, "(SSE transport) Connecting.");
                // set url before accessTokenFactory because this.url is only for send and we set the auth header instead of the query string for send
                this._url = url;
                if (this._accessTokenFactory) {
                    const token = await this._accessTokenFactory();
                    if (token) {
                        url += (url.indexOf("?") < 0 ? "?" : "&") + `access_token=${encodeURIComponent(token)}`;
                    }
                }
                return new Promise( (resolve, reject) => {
                    let opened = false;
                    if (transferFormat !== TransferFormat.Text) {
                        reject(new Error("The Server-Sent Events transport only supports the 'Text' transfer format"));
                        return;
                    }
                    let eventSource;
                    if (Platform.isBrowser || Platform.isWebWorker) {
                        eventSource = new this._options.EventSource(url,{
                            withCredentials: this._options.withCredentials
                        });
                    } else {
                        // Non-browser passes cookies via the dictionary
                        const cookies = this._httpClient.getCookieString(url);
                        const headers = {};
                        headers.Cookie = cookies;
                        const [name,value] = getUserAgentHeader();
                        headers[name] = value;
                        eventSource = new this._options.EventSource(url,{
                            withCredentials: this._options.withCredentials,
                            headers: {
                                ...headers,
                                ...this._options.headers
                            }
                        });
                    }
                    try {
                        eventSource.onmessage = (e) => {
                            if (this.onreceive) {
                                try {
                                    this._logger.log(LogLevel.Trace, `(SSE transport) data received. ${getDataDetail(e.data, this._options.logMessageContent)}.`);
                                    this.onreceive(e.data);
                                } catch (error) {
                                    this._close(error);
                                    return;
                                }
                            }
                        }
                        ;
                        // @ts-ignore: not using event on purpose
                        eventSource.onerror = (e) => {
                            // EventSource doesn't give any useful information about server side closes.
                            if (opened) {
                                this._close();
                            } else {
                                reject(new Error("EventSource failed to connect. The connection could not be found on the server," + " either the connection ID is not present on the server, or a proxy is refusing/buffering the connection." + " If you have multiple servers check that sticky sessions are enabled."));
                            }
                        }
                        ;
                        eventSource.onopen = () => {
                            this._logger.log(LogLevel.Information, `SSE connected to ${this._url}`);
                            this._eventSource = eventSource;
                            opened = true;
                            resolve();
                        }
                        ;
                    } catch (e) {
                        reject(e);
                        return;
                    }
                }
                );
            }
            async send(data) {
                if (!this._eventSource) {
                    return Promise.reject(new Error("Cannot send until the transport is connected"));
                }
                return sendMessage(this._logger, "SSE", this._httpClient, this._url, this._accessTokenFactory, data, this._options);
            }
            stop() {
                this._close();
                return Promise.resolve();
            }
            _close(e) {
                if (this._eventSource) {
                    this._eventSource.close();
                    this._eventSource = undefined;
                    if (this.onclose) {
                        this.onclose(e);
                    }
                }
            }
        }

        ;// CONCATENATED MODULE: ./src/WebSocketTransport.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.

        /** @private */
        class WebSocketTransport {
            constructor(httpClient, accessTokenFactory, logger, logMessageContent, webSocketConstructor, headers) {
                this._logger = logger;
                this._accessTokenFactory = accessTokenFactory;
                this._logMessageContent = logMessageContent;
                this._webSocketConstructor = webSocketConstructor;
                this._httpClient = httpClient;
                this.onreceive = null;
                this.onclose = null;
                this._headers = headers;
            }
            async connect(url, transferFormat) {
                Arg.isRequired(url, "url");
                Arg.isRequired(transferFormat, "transferFormat");
                Arg.isIn(transferFormat, TransferFormat, "transferFormat");
                this._logger.log(LogLevel.Trace, "(WebSockets transport) Connecting.");
                if (this._accessTokenFactory) {
                    const token = await this._accessTokenFactory();
                    if (token) {
                        url += (url.indexOf("?") < 0 ? "?" : "&") + `access_token=${encodeURIComponent(token)}`;
                    }
                }
                return new Promise( (resolve, reject) => {
                    url = url.replace(/^http/, "ws");
                    let webSocket;
                    const cookies = this._httpClient.getCookieString(url);
                    let opened = false;
                    if (Platform.isNode) {
                        const headers = {};
                        const [name,value] = getUserAgentHeader();
                        headers[name] = value;
                        if (cookies) {
                            headers[HeaderNames.Cookie] = `${cookies}`;
                        }
                        // Only pass headers when in non-browser environments
                        webSocket = new this._webSocketConstructor(url,undefined,{
                            headers: {
                                ...headers,
                                ...this._headers
                            },
                        });
                    }
                    if (!webSocket) {
                        // Chrome is not happy with passing 'undefined' as protocol
                        webSocket = new this._webSocketConstructor(url);
                    }
                    if (transferFormat === TransferFormat.Binary) {
                        webSocket.binaryType = "arraybuffer";
                    }
                    webSocket.onopen = (_event) => {
                        this._logger.log(LogLevel.Information, `WebSocket connected to ${url}.`);
                        this._webSocket = webSocket;
                        opened = true;
                        resolve();
                    }
                    ;
                    webSocket.onerror = (event) => {
                        let error = null;
                        // ErrorEvent is a browser only type we need to check if the type exists before using it
                        if (typeof ErrorEvent !== "undefined" && event instanceof ErrorEvent) {
                            error = event.error;
                        } else {
                            error = "There was an error with the transport";
                        }
                        this._logger.log(LogLevel.Information, `(WebSockets transport) ${error}.`);
                    }
                    ;
                    webSocket.onmessage = (message) => {
                        this._logger.log(LogLevel.Trace, `(WebSockets transport) data received. ${getDataDetail(message.data, this._logMessageContent)}.`);
                        if (this.onreceive) {
                            try {
                                this.onreceive(message.data);
                            } catch (error) {
                                this._close(error);
                                return;
                            }
                        }
                    }
                    ;
                    webSocket.onclose = (event) => {
                        // Don't call close handler if connection was never established
                        // We'll reject the connect call instead
                        if (opened) {
                            this._close(event);
                        } else {
                            let error = null;
                            // ErrorEvent is a browser only type we need to check if the type exists before using it
                            if (typeof ErrorEvent !== "undefined" && event instanceof ErrorEvent) {
                                error = event.error;
                            } else {
                                error = "WebSocket failed to connect. The connection could not be found on the server," + " either the endpoint may not be a SignalR endpoint," + " the connection ID is not present on the server, or there is a proxy blocking WebSockets." + " If you have multiple servers check that sticky sessions are enabled.";
                            }
                            reject(new Error(error));
                        }
                    }
                    ;
                }
                );
            }
            send(data) {
                if (this._webSocket && this._webSocket.readyState === this._webSocketConstructor.OPEN) {
                    this._logger.log(LogLevel.Trace, `(WebSockets transport) sending data. ${getDataDetail(data, this._logMessageContent)}.`);
                    this._webSocket.send(data);
                    return Promise.resolve();
                }
                return Promise.reject("WebSocket is not in the OPEN state");
            }
            stop() {
                if (this._webSocket) {
                    // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning
                    // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects
                    this._close(undefined);
                }
                return Promise.resolve();
            }
            _close(event) {
                // webSocket will be null if the transport did not start successfully
                if (this._webSocket) {
                    // Clear websocket handlers because we are considering the socket closed now
                    this._webSocket.onclose = () => {}
                    ;
                    this._webSocket.onmessage = () => {}
                    ;
                    this._webSocket.onerror = () => {}
                    ;
                    this._webSocket.close();
                    this._webSocket = undefined;
                }
                this._logger.log(LogLevel.Trace, "(WebSockets transport) socket closed.");
                if (this.onclose) {
                    if (this._isCloseEvent(event) && (event.wasClean === false || event.code !== 1000)) {
                        this.onclose(new Error(`WebSocket closed with status code: ${event.code} (${event.reason || "no reason given"}).`));
                    } else if (event instanceof Error) {
                        this.onclose(event);
                    } else {
                        this.onclose();
                    }
                }
            }
            _isCloseEvent(event) {
                return event && typeof event.wasClean === "boolean" && typeof event.code === "number";
            }
        }

        ;// CONCATENATED MODULE: ./src/HttpConnection.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.

        const MAX_REDIRECTS = 100;
        /** @private */
        class HttpConnection {
            constructor(url, options={}) {
                this._stopPromiseResolver = () => {}
                ;
                this.features = {};
                this._negotiateVersion = 1;
                Arg.isRequired(url, "url");
                this._logger = createLogger(options.logger);
                this.baseUrl = this._resolveUrl(url);
                options = options || {};
                options.logMessageContent = options.logMessageContent === undefined ? false : options.logMessageContent;
                if (typeof options.withCredentials === "boolean" || options.withCredentials === undefined) {
                    options.withCredentials = options.withCredentials === undefined ? true : options.withCredentials;
                } else {
                    throw new Error("withCredentials option was not a 'boolean' or 'undefined' value");
                }
                options.timeout = options.timeout === undefined ? 100 * 1000 : options.timeout;
                let webSocketModule = null;
                let eventSourceModule = null;
                if (Platform.isNode && "function" !== "undefined") {
                    // In order to ignore the dynamic require in webpack builds we need to do this magic
                    // @ts-ignore: TS doesn't know about these names
                    const requireFunc = true ? require : 0;
                    webSocketModule = requireFunc("ws");
                    eventSourceModule = requireFunc("eventsource");
                }
                if (!Platform.isNode && typeof WebSocket !== "undefined" && !options.WebSocket) {
                    options.WebSocket = WebSocket;
                } else if (Platform.isNode && !options.WebSocket) {
                    if (webSocketModule) {
                        options.WebSocket = webSocketModule;
                    }
                }
                if (!Platform.isNode && typeof EventSource !== "undefined" && !options.EventSource) {
                    options.EventSource = EventSource;
                } else if (Platform.isNode && !options.EventSource) {
                    if (typeof eventSourceModule !== "undefined") {
                        options.EventSource = eventSourceModule;
                    }
                }
                this._httpClient = options.httpClient || new DefaultHttpClient(this._logger);
                this._connectionState = "Disconnected"/* Disconnected */
                ;
                this._connectionStarted = false;
                this._options = options;
                this.onreceive = null;
                this.onclose = null;
            }
            async start(transferFormat) {
                transferFormat = transferFormat || TransferFormat.Binary;
                Arg.isIn(transferFormat, TransferFormat, "transferFormat");
                this._logger.log(LogLevel.Debug, `Starting connection with transfer format '${TransferFormat[transferFormat]}'.`);
                if (this._connectionState !== "Disconnected"/* Disconnected */
                ) {
                    return Promise.reject(new Error("Cannot start an HttpConnection that is not in the 'Disconnected' state."));
                }
                this._connectionState = "Connecting"/* Connecting */
                ;
                this._startInternalPromise = this._startInternal(transferFormat);
                await this._startInternalPromise;
                // The TypeScript compiler thinks that connectionState must be Connecting here. The TypeScript compiler is wrong.
                if (this._connectionState === "Disconnecting"/* Disconnecting */
                ) {
                    // stop() was called and transitioned the client into the Disconnecting state.
                    const message = "Failed to start the HttpConnection before stop() was called.";
                    this._logger.log(LogLevel.Error, message);
                    // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.
                    await this._stopPromise;
                    return Promise.reject(new Error(message));
                } else if (this._connectionState !== "Connected"/* Connected */
                ) {
                    // stop() was called and transitioned the client into the Disconnecting state.
                    const message = "HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!";
                    this._logger.log(LogLevel.Error, message);
                    return Promise.reject(new Error(message));
                }
                this._connectionStarted = true;
            }
            send(data) {
                if (this._connectionState !== "Connected"/* Connected */
                ) {
                    return Promise.reject(new Error("Cannot send data if the connection is not in the 'Connected' State."));
                }
                if (!this._sendQueue) {
                    this._sendQueue = new TransportSendQueue(this.transport);
                }
                // Transport will not be null if state is connected
                return this._sendQueue.send(data);
            }
            async stop(error) {
                if (this._connectionState === "Disconnected"/* Disconnected */
                ) {
                    this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnected state.`);
                    return Promise.resolve();
                }
                if (this._connectionState === "Disconnecting"/* Disconnecting */
                ) {
                    this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);
                    return this._stopPromise;
                }
                this._connectionState = "Disconnecting"/* Disconnecting */
                ;
                this._stopPromise = new Promise( (resolve) => {
                    // Don't complete stop() until stopConnection() completes.
                    this._stopPromiseResolver = resolve;
                }
                );
                // stopInternal should never throw so just observe it.
                await this._stopInternal(error);
                await this._stopPromise;
            }
            async _stopInternal(error) {
                // Set error as soon as possible otherwise there is a race between
                // the transport closing and providing an error and the error from a close message
                // We would prefer the close message error.
                this._stopError = error;
                try {
                    await this._startInternalPromise;
                } catch (e) {// This exception is returned to the user as a rejected Promise from the start method.
                }
                // The transport's onclose will trigger stopConnection which will run our onclose event.
                // The transport should always be set if currently connected. If it wasn't set, it's likely because
                // stop was called during start() and start() failed.
                if (this.transport) {
                    try {
                        await this.transport.stop();
                    } catch (e) {
                        this._logger.log(LogLevel.Error, `HttpConnection.transport.stop() threw error '${e}'.`);
                        this._stopConnection();
                    }
                    this.transport = undefined;
                } else {
                    this._logger.log(LogLevel.Debug, "HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.");
                }
            }
            async _startInternal(transferFormat) {
                // Store the original base url and the access token factory since they may change
                // as part of negotiating
                let url = this.baseUrl;
                this._accessTokenFactory = this._options.accessTokenFactory;
                try {
                    if (this._options.skipNegotiation) {
                        if (this._options.transport === HttpTransportType.WebSockets) {
                            // No need to add a connection ID in this case
                            this.transport = this._constructTransport(HttpTransportType.WebSockets);
                            // We should just call connect directly in this case.
                            // No fallback or negotiate in this case.
                            await this._startTransport(url, transferFormat);
                        } else {
                            throw new Error("Negotiation can only be skipped when using the WebSocket transport directly.");
                        }
                    } else {
                        let negotiateResponse = null;
                        let redirects = 0;
                        do {
                            negotiateResponse = await this._getNegotiationResponse(url);
                            // the user tries to stop the connection when it is being started
                            if (this._connectionState === "Disconnecting"/* Disconnecting */
                            || this._connectionState === "Disconnected"/* Disconnected */
                            ) {
                                throw new Error("The connection was stopped during negotiation.");
                            }
                            if (negotiateResponse.error) {
                                throw new Error(negotiateResponse.error);
                            }
                            if (negotiateResponse.ProtocolVersion) {
                                throw new Error("Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.");
                            }
                            if (negotiateResponse.url) {
                                url = negotiateResponse.url;
                            }
                            if (negotiateResponse.accessToken) {
                                // Replace the current access token factory with one that uses
                                // the returned access token
                                const accessToken = negotiateResponse.accessToken;
                                this._accessTokenFactory = () => accessToken;
                            }
                            redirects++;
                        } while (negotiateResponse.url && redirects < MAX_REDIRECTS);
                        if (redirects === MAX_REDIRECTS && negotiateResponse.url) {
                            throw new Error("Negotiate redirection limit exceeded.");
                        }
                        await this._createTransport(url, this._options.transport, negotiateResponse, transferFormat);
                    }
                    if (this.transport instanceof LongPollingTransport) {
                        this.features.inherentKeepAlive = true;
                    }
                    if (this._connectionState === "Connecting"/* Connecting */
                    ) {
                        // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.
                        // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.
                        this._logger.log(LogLevel.Debug, "The HttpConnection connected successfully.");
                        this._connectionState = "Connected"/* Connected */
                        ;
                    }
                    // stop() is waiting on us via this.startInternalPromise so keep this.transport around so it can clean up.
                    // This is the only case startInternal can exit in neither the connected nor disconnected state because stopConnection()
                    // will transition to the disconnected state. start() will wait for the transition using the stopPromise.
                } catch (e) {
                    this._logger.log(LogLevel.Error, "Failed to start the connection: " + e);
                    this._connectionState = "Disconnected"/* Disconnected */
                    ;
                    this.transport = undefined;
                    // if start fails, any active calls to stop assume that start will complete the stop promise
                    this._stopPromiseResolver();
                    return Promise.reject(e);
                }
            }
            async _getNegotiationResponse(url) {
                const headers = {};
                if (this._accessTokenFactory) {
                    const token = await this._accessTokenFactory();
                    if (token) {
                        headers[HeaderNames.Authorization] = `Bearer ${token}`;
                    }
                }
                const [name,value] = getUserAgentHeader();
                headers[name] = value;
                const negotiateUrl = this._resolveNegotiateUrl(url);
                this._logger.log(LogLevel.Debug, `Sending negotiation request: ${negotiateUrl}.`);
                try {
                    const response = await this._httpClient.post(negotiateUrl, {
                        content: "",
                        headers: {
                            ...headers,
                            ...this._options.headers
                        },
                        timeout: this._options.timeout,
                        withCredentials: this._options.withCredentials,
                    });
                    if (response.statusCode !== 200) {
                        return Promise.reject(new Error(`Unexpected status code returned from negotiate '${response.statusCode}'`));
                    }
                    const negotiateResponse = JSON.parse(response.content);
                    if (!negotiateResponse.negotiateVersion || negotiateResponse.negotiateVersion < 1) {
                        // Negotiate version 0 doesn't use connectionToken
                        // So we set it equal to connectionId so all our logic can use connectionToken without being aware of the negotiate version
                        negotiateResponse.connectionToken = negotiateResponse.connectionId;
                    }
                    return negotiateResponse;
                } catch (e) {
                    let errorMessage = "Failed to complete negotiation with the server: " + e;
                    if (e instanceof HttpError) {
                        if (e.statusCode === 404) {
                            errorMessage = errorMessage + " Either this is not a SignalR endpoint or there is a proxy blocking the connection.";
                        }
                    }
                    this._logger.log(LogLevel.Error, errorMessage);
                    return Promise.reject(new FailedToNegotiateWithServerError(errorMessage));
                }
            }
            _createConnectUrl(url, connectionToken) {
                if (!connectionToken) {
                    return url;
                }
                return url + (url.indexOf("?") === -1 ? "?" : "&") + `id=${connectionToken}`;
            }
            async _createTransport(url, requestedTransport, negotiateResponse, requestedTransferFormat) {
                let connectUrl = this._createConnectUrl(url, negotiateResponse.connectionToken);
                if (this._isITransport(requestedTransport)) {
                    this._logger.log(LogLevel.Debug, "Connection was provided an instance of ITransport, using that directly.");
                    this.transport = requestedTransport;
                    await this._startTransport(connectUrl, requestedTransferFormat);
                    this.connectionId = negotiateResponse.connectionId;
                    return;
                }
                const transportExceptions = [];
                const transports = negotiateResponse.availableTransports || [];
                let negotiate = negotiateResponse;
                for (const endpoint of transports) {
                    const transportOrError = this._resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat);
                    if (transportOrError instanceof Error) {
                        // Store the error and continue, we don't want to cause a re-negotiate in these cases
                        transportExceptions.push(`${endpoint.transport} failed:`);
                        transportExceptions.push(transportOrError);
                    } else if (this._isITransport(transportOrError)) {
                        this.transport = transportOrError;
                        if (!negotiate) {
                            try {
                                negotiate = await this._getNegotiationResponse(url);
                            } catch (ex) {
                                return Promise.reject(ex);
                            }
                            connectUrl = this._createConnectUrl(url, negotiate.connectionToken);
                        }
                        try {
                            await this._startTransport(connectUrl, requestedTransferFormat);
                            this.connectionId = negotiate.connectionId;
                            return;
                        } catch (ex) {
                            this._logger.log(LogLevel.Error, `Failed to start the transport '${endpoint.transport}': ${ex}`);
                            negotiate = undefined;
                            transportExceptions.push(new FailedToStartTransportError(`${endpoint.transport} failed: ${ex}`,HttpTransportType[endpoint.transport]));
                            if (this._connectionState !== "Connecting"/* Connecting */
                            ) {
                                const message = "Failed to select transport before stop() was called.";
                                this._logger.log(LogLevel.Debug, message);
                                return Promise.reject(new Error(message));
                            }
                        }
                    }
                }
                if (transportExceptions.length > 0) {
                    return Promise.reject(new AggregateErrors(`Unable to connect to the server with any of the available transports. ${transportExceptions.join(" ")}`,transportExceptions));
                }
                return Promise.reject(new Error("None of the transports supported by the client are supported by the server."));
            }
            _constructTransport(transport) {
                switch (transport) {
                case HttpTransportType.WebSockets:
                    if (!this._options.WebSocket) {
                        throw new Error("'WebSocket' is not supported in your environment.");
                    }
                    return new WebSocketTransport(this._httpClient,this._accessTokenFactory,this._logger,this._options.logMessageContent,this._options.WebSocket,this._options.headers || {});
                case HttpTransportType.ServerSentEvents:
                    if (!this._options.EventSource) {
                        throw new Error("'EventSource' is not supported in your environment.");
                    }
                    return new ServerSentEventsTransport(this._httpClient,this._accessTokenFactory,this._logger,this._options);
                case HttpTransportType.LongPolling:
                    return new LongPollingTransport(this._httpClient,this._accessTokenFactory,this._logger,this._options);
                default:
                    throw new Error(`Unknown transport: ${transport}.`);
                }
            }
            _startTransport(url, transferFormat) {
                this.transport.onreceive = this.onreceive;
                this.transport.onclose = (e) => this._stopConnection(e);
                return this.transport.connect(url, transferFormat);
            }
            _resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat) {
                const transport = HttpTransportType[endpoint.transport];
                if (transport === null || transport === undefined) {
                    this._logger.log(LogLevel.Debug, `Skipping transport '${endpoint.transport}' because it is not supported by this client.`);
                    return new Error(`Skipping transport '${endpoint.transport}' because it is not supported by this client.`);
                } else {
                    if (transportMatches(requestedTransport, transport)) {
                        const transferFormats = endpoint.transferFormats.map( (s) => TransferFormat[s]);
                        if (transferFormats.indexOf(requestedTransferFormat) >= 0) {
                            if ((transport === HttpTransportType.WebSockets && !this._options.WebSocket) || (transport === HttpTransportType.ServerSentEvents && !this._options.EventSource)) {
                                this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it is not supported in your environment.'`);
                                return new UnsupportedTransportError(`'${HttpTransportType[transport]}' is not supported in your environment.`,transport);
                            } else {
                                this._logger.log(LogLevel.Debug, `Selecting transport '${HttpTransportType[transport]}'.`);
                                try {
                                    return this._constructTransport(transport);
                                } catch (ex) {
                                    return ex;
                                }
                            }
                        } else {
                            this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it does not support the requested transfer format '${TransferFormat[requestedTransferFormat]}'.`);
                            return new Error(`'${HttpTransportType[transport]}' does not support ${TransferFormat[requestedTransferFormat]}.`);
                        }
                    } else {
                        this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it was disabled by the client.`);
                        return new DisabledTransportError(`'${HttpTransportType[transport]}' is disabled by the client.`,transport);
                    }
                }
            }
            _isITransport(transport) {
                return transport && typeof (transport) === "object" && "connect"in transport;
            }
            _stopConnection(error) {
                this._logger.log(LogLevel.Debug, `HttpConnection.stopConnection(${error}) called while in state ${this._connectionState}.`);
                this.transport = undefined;
                // If we have a stopError, it takes precedence over the error from the transport
                error = this._stopError || error;
                this._stopError = undefined;
                if (this._connectionState === "Disconnected"/* Disconnected */
                ) {
                    this._logger.log(LogLevel.Debug, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is already in the disconnected state.`);
                    return;
                }
                if (this._connectionState === "Connecting"/* Connecting */
                ) {
                    this._logger.log(LogLevel.Warning, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is still in the connecting state.`);
                    throw new Error(`HttpConnection.stopConnection(${error}) was called while the connection is still in the connecting state.`);
                }
                if (this._connectionState === "Disconnecting"/* Disconnecting */
                ) {
                    // A call to stop() induced this call to stopConnection and needs to be completed.
                    // Any stop() awaiters will be scheduled to continue after the onclose callback fires.
                    this._stopPromiseResolver();
                }
                if (error) {
                    this._logger.log(LogLevel.Error, `Connection disconnected with error '${error}'.`);
                } else {
                    this._logger.log(LogLevel.Information, "Connection disconnected.");
                }
                if (this._sendQueue) {
                    this._sendQueue.stop().catch( (e) => {
                        this._logger.log(LogLevel.Error, `TransportSendQueue.stop() threw error '${e}'.`);
                    }
                    );
                    this._sendQueue = undefined;
                }
                this.connectionId = undefined;
                this._connectionState = "Disconnected"/* Disconnected */
                ;
                if (this._connectionStarted) {
                    this._connectionStarted = false;
                    try {
                        if (this.onclose) {
                            this.onclose(error);
                        }
                    } catch (e) {
                        this._logger.log(LogLevel.Error, `HttpConnection.onclose(${error}) threw error '${e}'.`);
                    }
                }
            }
            _resolveUrl(url) {
                // startsWith is not supported in IE
                if (url.lastIndexOf("https://", 0) === 0 || url.lastIndexOf("http://", 0) === 0) {
                    return url;
                }
                if (!Platform.isBrowser) {
                    throw new Error(`Cannot resolve '${url}'.`);
                }
                // Setting the url to the href propery of an anchor tag handles normalization
                // for us. There are 3 main cases.
                // 1. Relative path normalization e.g "b" -> "http://localhost:5000/a/b"
                // 2. Absolute path normalization e.g "/a/b" -> "http://localhost:5000/a/b"
                // 3. Networkpath reference normalization e.g "//localhost:5000/a/b" -> "http://localhost:5000/a/b"
                const aTag = window.document.createElement("a");
                aTag.href = url;
                this._logger.log(LogLevel.Information, `Normalizing '${url}' to '${aTag.href}'.`);
                return aTag.href;
            }
            _resolveNegotiateUrl(url) {
                const index = url.indexOf("?");
                let negotiateUrl = url.substring(0, index === -1 ? url.length : index);
                if (negotiateUrl[negotiateUrl.length - 1] !== "/") {
                    negotiateUrl += "/";
                }
                negotiateUrl += "negotiate";
                negotiateUrl += index === -1 ? "" : url.substring(index);
                if (negotiateUrl.indexOf("negotiateVersion") === -1) {
                    negotiateUrl += index === -1 ? "?" : "&";
                    negotiateUrl += "negotiateVersion=" + this._negotiateVersion;
                }
                return negotiateUrl;
            }
        }
        function transportMatches(requestedTransport, actualTransport) {
            return !requestedTransport || ((actualTransport & requestedTransport) !== 0);
        }
        /** @private */
        class TransportSendQueue {
            constructor(_transport) {
                this._transport = _transport;
                this._buffer = [];
                this._executing = true;
                this._sendBufferedData = new PromiseSource();
                this._transportResult = new PromiseSource();
                this._sendLoopPromise = this._sendLoop();
            }
            send(data) {
                this._bufferData(data);
                if (!this._transportResult) {
                    this._transportResult = new PromiseSource();
                }
                return this._transportResult.promise;
            }
            stop() {
                this._executing = false;
                this._sendBufferedData.resolve();
                return this._sendLoopPromise;
            }
            _bufferData(data) {
                if (this._buffer.length && typeof (this._buffer[0]) !== typeof (data)) {
                    throw new Error(`Expected data to be of type ${typeof (this._buffer)} but was of type ${typeof (data)}`);
                }
                this._buffer.push(data);
                this._sendBufferedData.resolve();
            }
            async _sendLoop() {
                while (true) {
                    await this._sendBufferedData.promise;
                    if (!this._executing) {
                        if (this._transportResult) {
                            this._transportResult.reject("Connection stopped.");
                        }
                        break;
                    }
                    this._sendBufferedData = new PromiseSource();
                    const transportResult = this._transportResult;
                    this._transportResult = undefined;
                    const data = typeof (this._buffer[0]) === "string" ? this._buffer.join("") : TransportSendQueue._concatBuffers(this._buffer);
                    this._buffer.length = 0;
                    try {
                        await this._transport.send(data);
                        transportResult.resolve();
                    } catch (error) {
                        transportResult.reject(error);
                    }
                }
            }
            static _concatBuffers(arrayBuffers) {
                const totalLength = arrayBuffers.map( (b) => b.byteLength).reduce( (a, b) => a + b);
                const result = new Uint8Array(totalLength);
                let offset = 0;
                for (const item of arrayBuffers) {
                    result.set(new Uint8Array(item), offset);
                    offset += item.byteLength;
                }
                return result.buffer;
            }
        }
        class PromiseSource {
            constructor() {
                this.promise = new Promise( (resolve, reject) => [this._resolver,this._rejecter] = [resolve, reject]);
            }
            resolve() {
                this._resolver();
            }
            reject(reason) {
                this._rejecter(reason);
            }
        }

        ;// CONCATENATED MODULE: ./src/JsonHubProtocol.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.

        const JSON_HUB_PROTOCOL_NAME = "json";
        /** Implements the JSON Hub Protocol. */
        class JsonHubProtocol {
            constructor() {
                /** @inheritDoc */
                this.name = JSON_HUB_PROTOCOL_NAME;
                /** @inheritDoc */
                this.version = 1;
                /** @inheritDoc */
                this.transferFormat = TransferFormat.Text;
            }
            /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.
     *
     * @param {string} input A string containing the serialized representation.
     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.
     */
            parseMessages(input, logger) {
                // The interface does allow "ArrayBuffer" to be passed in, but this implementation does not. So let's throw a useful error.
                if (typeof input !== "string") {
                    throw new Error("Invalid input for JSON hub protocol. Expected a string.");
                }
                if (!input) {
                    return [];
                }
                if (logger === null) {
                    logger = NullLogger.instance;
                }
                // Parse the messages
                const messages = TextMessageFormat.parse(input);
                const hubMessages = [];
                for (const message of messages) {
                    const parsedMessage = JSON.parse(message);
                    if (typeof parsedMessage.type !== "number") {
                        throw new Error("Invalid payload.");
                    }
                    switch (parsedMessage.type) {
                    case MessageType.Invocation:
                        this._isInvocationMessage(parsedMessage);
                        break;
                    case MessageType.StreamItem:
                        this._isStreamItemMessage(parsedMessage);
                        break;
                    case MessageType.Completion:
                        this._isCompletionMessage(parsedMessage);
                        break;
                    case MessageType.Ping:
                        // Single value, no need to validate
                        break;
                    case MessageType.Close:
                        // All optional values, no need to validate
                        break;
                    default:
                        // Future protocol changes can add message types, old clients can ignore them
                        logger.log(LogLevel.Information, "Unknown message type '" + parsedMessage.type + "' ignored.");
                        continue;
                    }
                    hubMessages.push(parsedMessage);
                }
                return hubMessages;
            }
            /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string and returns it.
     *
     * @param {HubMessage} message The message to write.
     * @returns {string} A string containing the serialized representation of the message.
     */
            writeMessage(message) {
                return TextMessageFormat.write(JSON.stringify(message));
            }
            _isInvocationMessage(message) {
                this._assertNotEmptyString(message.target, "Invalid payload for Invocation message.");
                if (message.invocationId !== undefined) {
                    this._assertNotEmptyString(message.invocationId, "Invalid payload for Invocation message.");
                }
            }
            _isStreamItemMessage(message) {
                this._assertNotEmptyString(message.invocationId, "Invalid payload for StreamItem message.");
                if (message.item === undefined) {
                    throw new Error("Invalid payload for StreamItem message.");
                }
            }
            _isCompletionMessage(message) {
                if (message.result && message.error) {
                    throw new Error("Invalid payload for Completion message.");
                }
                if (!message.result && message.error) {
                    this._assertNotEmptyString(message.error, "Invalid payload for Completion message.");
                }
                this._assertNotEmptyString(message.invocationId, "Invalid payload for Completion message.");
            }
            _assertNotEmptyString(value, errorMessage) {
                if (typeof value !== "string" || value === "") {
                    throw new Error(errorMessage);
                }
            }
        }

        ;// CONCATENATED MODULE: ./src/HubConnectionBuilder.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.

        const LogLevelNameMapping = {
            trace: LogLevel.Trace,
            debug: LogLevel.Debug,
            info: LogLevel.Information,
            information: LogLevel.Information,
            warn: LogLevel.Warning,
            warning: LogLevel.Warning,
            error: LogLevel.Error,
            critical: LogLevel.Critical,
            none: LogLevel.None,
        };
        function parseLogLevel(name) {
            // Case-insensitive matching via lower-casing
            // Yes, I know case-folding is a complicated problem in Unicode, but we only support
            // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.
            const mapping = LogLevelNameMapping[name.toLowerCase()];
            if (typeof mapping !== "undefined") {
                return mapping;
            } else {
                throw new Error(`Unknown log level: ${name}`);
            }
        }
        /** A builder for configuring {@link @microsoft/signalr.HubConnection} instances. */
        class HubConnectionBuilder {
            configureLogging(logging) {
                Arg.isRequired(logging, "logging");
                if (isLogger(logging)) {
                    this.logger = logging;
                } else if (typeof logging === "string") {
                    const logLevel = parseLogLevel(logging);
                    this.logger = new ConsoleLogger(logLevel);
                } else {
                    this.logger = new ConsoleLogger(logging);
                }
                return this;
            }
            withUrl(url, transportTypeOrOptions) {
                Arg.isRequired(url, "url");
                Arg.isNotEmpty(url, "url");
                this.url = url;
                // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed
                // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.
                if (typeof transportTypeOrOptions === "object") {
                    this.httpConnectionOptions = {
                        ...this.httpConnectionOptions,
                        ...transportTypeOrOptions
                    };
                } else {
                    this.httpConnectionOptions = {
                        ...this.httpConnectionOptions,
                        transport: transportTypeOrOptions,
                    };
                }
                return this;
            }
            /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified Hub Protocol.
     *
     * @param {IHubProtocol} protocol The {@link @microsoft/signalr.IHubProtocol} implementation to use.
     */
            withHubProtocol(protocol) {
                Arg.isRequired(protocol, "protocol");
                this.protocol = protocol;
                return this;
            }
            withAutomaticReconnect(retryDelaysOrReconnectPolicy) {
                if (this.reconnectPolicy) {
                    throw new Error("A reconnectPolicy has already been set.");
                }
                if (!retryDelaysOrReconnectPolicy) {
                    this.reconnectPolicy = new DefaultReconnectPolicy();
                } else if (Array.isArray(retryDelaysOrReconnectPolicy)) {
                    this.reconnectPolicy = new DefaultReconnectPolicy(retryDelaysOrReconnectPolicy);
                } else {
                    this.reconnectPolicy = retryDelaysOrReconnectPolicy;
                }
                return this;
            }
            /** Creates a {@link @microsoft/signalr.HubConnection} from the configuration options specified in this builder.
     *
     * @returns {HubConnection} The configured {@link @microsoft/signalr.HubConnection}.
     */
            build() {
                // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one
                // provided to configureLogger
                const httpConnectionOptions = this.httpConnectionOptions || {};
                // If it's 'null', the user **explicitly** asked for null, don't mess with it.
                if (httpConnectionOptions.logger === undefined) {
                    // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.
                    httpConnectionOptions.logger = this.logger;
                }
                // Now create the connection
                if (!this.url) {
                    throw new Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");
                }
                const connection = new HttpConnection(this.url,httpConnectionOptions);
                return HubConnection.create(connection, this.logger || NullLogger.instance, this.protocol || new JsonHubProtocol(), this.reconnectPolicy);
            }
        }
        function isLogger(logger) {
            return logger.log !== undefined;
        }

        ;// CONCATENATED MODULE: ./src/index.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.

        ;// CONCATENATED MODULE: ./src/browser-index.ts
        // Licensed to the .NET Foundation under one or more agreements.
        // The .NET Foundation licenses this file to you under the MIT license.
        // This is where we add any polyfills we'll need for the browser. It is the entry module for browser-specific builds.
        // Copy from Array.prototype into Uint8Array to polyfill on IE. It's OK because the implementations of indexOf and slice use properties
        // that exist on Uint8Array with the same name, and JavaScript is magic.
        // We make them 'writable' because the Buffer polyfill messes with it as well.
        if (!Uint8Array.prototype.indexOf) {
            Object.defineProperty(Uint8Array.prototype, "indexOf", {
                value: Array.prototype.indexOf,
                writable: true,
            });
        }
        if (!Uint8Array.prototype.slice) {
            Object.defineProperty(Uint8Array.prototype, "slice", {
                // wrap the slice in Uint8Array so it looks like a Uint8Array.slice call
                // eslint-disable-next-line object-shorthand
                value: function(start, end) {
                    return new Uint8Array(Array.prototype.slice.call(this, start, end));
                },
                writable: true,
            });
        }
        if (!Uint8Array.prototype.forEach) {
            Object.defineProperty(Uint8Array.prototype, "forEach", {
                value: Array.prototype.forEach,
                writable: true,
            });
        }

        /******/
        return __webpack_exports__;
        /******/
    }
    )();
});
//# sourceMappingURL=signalr.js.map
window.am5geodata_worldLow = (function() {
    const map = {
        "type": "FeatureCollection",
        "features": [{
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[179.2223, -8.554], [179.2023, -8.4653], [179.2312, -8.5048], [179.2223, -8.554]]]
            },
            "properties": {
                "name": "Tuvalu",
                "id": "TV"
            },
            "id": "TV"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[3.4624, -54.4471], [3.3461, -54.4511], [3.3669, -54.3997], [3.4814, -54.4001], [3.4624, -54.4471]]]
            },
            "properties": {
                "name": "Bouvet Island",
                "id": "BV"
            },
            "id": "BV"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-5.3345, 36.1623], [-5.3382, 36.1122], [-5.3562, 36.1264], [-5.3551, 36.1455], [-5.3345, 36.1623]]]
            },
            "properties": {
                "name": "Gibraltar",
                "id": "GI"
            },
            "id": "GI"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[47.3029, -11.5752], [47.282, -11.5747], [47.2789, -11.5574], [47.2971, -11.5543], [47.3029, -11.5752]]]
            },
            "properties": {
                "name": "Glorioso Islands",
                "id": "GO"
            },
            "id": "GO"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[42.7579, -17.075], [42.7415, -17.0741], [42.7379, -17.0519], [42.761, -17.0652], [42.7579, -17.075]]]
            },
            "properties": {
                "name": "Juan De Nova Island",
                "id": "JU"
            },
            "id": "JU"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-160.0213, -0.398], [-160.0453, -0.3802], [-160.0178, -0.3744], [-160.0213, -0.398]]]
            },
            "properties": {
                "name": "Jarvis Island",
                "id": "UM-DQ"
            },
            "id": "UM-DQ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-176.456, 0.2226], [-176.4615, 0.215], [-176.4675, 0.2195], [-176.456, 0.2226]]]
            },
            "properties": {
                "name": "Baker Island",
                "id": "UM-FQ"
            },
            "id": "UM-FQ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-176.6311, 0.7952], [-176.6433, 0.7934], [-176.6429, 0.8081], [-176.6329, 0.8085], [-176.6311, 0.7952]]]
            },
            "properties": {
                "name": "Howland Island",
                "id": "UM-HQ"
            },
            "id": "UM-HQ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-169.5237, 16.7305], [-169.5388, 16.7243], [-169.5388, 16.7296], [-169.5237, 16.7305]]]
            },
            "properties": {
                "name": "Johnston Atoll",
                "id": "UM-JQ"
            },
            "id": "UM-JQ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-177.3881, 28.1865], [-177.3879, 28.2144], [-177.3646, 28.2042], [-177.3881, 28.1865]]]
            },
            "properties": {
                "name": "Midway Islands",
                "id": "UM-MQ"
            },
            "id": "UM-MQ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[166.6588, 19.2829], [166.6087, 19.3073], [166.6277, 19.3246], [166.6588, 19.3117], [166.6588, 19.2829]]]
            },
            "properties": {
                "name": "Wake Island",
                "id": "UM-WQ"
            },
            "id": "UM-WQ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-68.2058, 12.1446], [-68.2873, 12.1717], [-68.3711, 12.2574], [-68.3694, 12.3018], [-68.2196, 12.2312], [-68.2058, 12.1446]]]
            },
            "properties": {
                "name": "Bonair, Saint Eustachius and Saba",
                "id": "BQ"
            },
            "id": "BQ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[4.2263, 51.3865], [3.9023, 51.2076], [3.35, 51.3776], [4.2263, 51.3865]]], [[[4.2263, 51.3865], [3.5871, 51.454], [4.4829, 52.3091], [4.7687, 52.9412], [5.1203, 52.3881], [5.5611, 52.5948], [5.3755, 53.0957], [6.0622, 53.4071], [6.8164, 53.4413], [7.1973, 53.2823], [7.0352, 52.3801], [6.7418, 51.9109], [5.9486, 51.7625], [6.1932, 51.4888], [5.8949, 50.9843], [5.9939, 50.7504], [5.7972, 50.7546], [5.6938, 50.7748], [5.827, 51.1257], [4.5033, 51.4746], [4.2263, 51.3865]]]]
            },
            "properties": {
                "name": "Netherlands",
                "id": "NL"
            },
            "id": "NL"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[31.2877, -22.4021], [30.4603, -22.3289], [29.6631, -22.1465], [29.3648, -22.194], [29.0372, -21.8113], [28.0455, -21.5729], [27.6696, -21.0642], [27.6997, -20.5307], [27.2807, -20.4788], [27.2217, -20.1458], [26.6784, -19.8928], [26.1683, -19.5381], [25.7613, -18.6495], [25.2242, -17.9153], [25.2588, -17.7936], [25.8634, -17.9521], [27.0206, -17.9583], [27.9323, -16.8961], [28.7606, -16.5321], [28.9129, -15.9879], [29.7297, -15.6448], [30.3959, -15.643], [30.4377, -15.9954], [31.2362, -16.0239], [31.9398, -16.4287], [32.2434, -16.4487], [32.9479, -16.7123], [32.9932, -18.3596], [32.7166, -19.0019], [33.0069, -19.8737], [32.4778, -20.7131], [32.3713, -21.335], [31.2877, -22.4021]]]
            },
            "properties": {
                "name": "Zimbabwe",
                "id": "ZW"
            },
            "id": "ZW"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[32.9199, -9.4072], [33.3509, -9.8622], [33.659, -10.5906], [33.2613, -10.8934], [33.3798, -11.1579], [33.2262, -11.5348], [33.2524, -12.1127], [33.398, -12.49], [33.0216, -12.6303], [32.9679, -13.2251], [32.6722, -13.6104], [32.9812, -14.0095], [33.2018, -14.0135], [31.729, -14.496], [30.2317, -14.9905], [30.3959, -15.643], [29.7297, -15.6448], [28.9129, -15.9879], [28.7606, -16.5321], [27.9323, -16.8961], [27.0206, -17.9583], [25.8634, -17.9521], [25.2588, -17.7936], [24.9325, -17.5433], [24.2751, -17.4812], [23.3807, -17.6405], [22.1507, -16.5974], [21.9798, -15.9555], [21.9789, -13.0009], [23.8432, -13.0009], [23.9915, -12.4221], [23.9666, -10.8716], [24.32, -11.0718], [24.5184, -11.4384], [25.1847, -11.2431], [25.3493, -11.6231], [26.0258, -11.8903], [26.5962, -11.972], [26.9496, -11.8988], [27.0459, -11.616], [27.5333, -12.1953], [28.3576, -12.482], [29.0141, -13.3689], [29.5543, -13.2491], [29.7954, -13.3929], [29.7954, -12.1553], [29.4274, -12.4314], [29.0643, -12.3489], [28.4823, -11.8122], [28.3572, -11.4828], [28.639, -10.6692], [28.6301, -9.8311], [28.4007, -9.2248], [28.9178, -8.7005], [28.9724, -8.4648], [30.7511, -8.1936], [31.0764, -8.6117], [31.3508, -8.6069], [31.9425, -9.0539], [32.4334, -9.1564], [32.9199, -9.4072]]]
            },
            "properties": {
                "name": "Zambia",
                "id": "ZM"
            },
            "id": "ZM"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[31.2877, -22.4021], [31.5456, -23.4821], [31.7995, -23.8923], [31.986, -24.4605], [31.9482, -25.9577], [31.4151, -25.7464], [31.2074, -25.8432], [30.8034, -26.4136], [30.7941, -26.7643], [31.0636, -27.1123], [31.4697, -27.2956], [31.9584, -27.3058], [32.1129, -26.8393], [32.8862, -26.8495], [32.5346, -28.1998], [32.2856, -28.6215], [31.7782, -28.9371], [31.3352, -29.3779], [30.2885, -30.9701], [28.8561, -32.2943], [27.8604, -33.0538], [27.0774, -33.5212], [26.4293, -33.7596], [25.9894, -33.7112], [25.6383, -34.0112], [25.0031, -33.9735], [24.8273, -34.1688], [23.5858, -33.9851], [23.2684, -34.0814], [22.2456, -34.0694], [21.7889, -34.3726], [21.06, -34.3646], [20.53, -34.4631], [20.0204, -34.7858], [19.6351, -34.7534], [18.8086, -34.108], [18.3545, -33.9389], [18.4331, -33.7174], [17.8782, -32.9614], [18.2511, -32.652], [18.3105, -32.1225], [18.2107, -31.7425], [17.6776, -31.019], [17.1893, -30.0997], [16.95, -29.4036], [16.4475, -28.6175], [16.7556, -28.4524], [17.0561, -28.0311], [17.3855, -28.3534], [17.4481, -28.6983], [18.1028, -28.8719], [19.2458, -28.9016], [19.6715, -28.5039], [19.9805, -28.4515], [19.9805, -26.5312], [19.9805, -24.777], [20.3453, -25.03], [20.7932, -25.9155], [20.6268, -26.4438], [20.74, -26.849], [21.6464, -26.8544], [22.0907, -26.5801], [22.6403, -26.0714], [22.8786, -25.4579], [23.2662, -25.2666], [23.8938, -25.6008], [24.7483, -25.8174], [25.5837, -25.6062], [25.9122, -24.7477], [26.3974, -24.6136], [26.835, -24.2407], [27.1462, -23.5243], [27.8906, -23.0737], [28.2102, -22.6938], [28.8397, -22.4807], [29.3648, -22.194], [29.6631, -22.1465], [30.4603, -22.3289], [31.2877, -22.4021]], [[27.8303, -28.9091], [27.2945, -29.5195], [27.0517, -29.6642], [27.3886, -30.3158], [28.018, -30.6421], [28.3922, -30.1476], [29.098, -29.919], [29.3905, -29.2696], [29.3013, -29.0898], [28.6257, -28.5816], [27.8303, -28.9091]]]
            },
            "properties": {
                "name": "South Africa",
                "id": "ZA"
            },
            "id": "ZA"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[53.0855, 16.6484], [52.3278, 16.2937], [52.2177, 15.6554], [51.6038, 15.3367], [50.5269, 15.0384], [50.1669, 14.8511], [49.3497, 14.638], [48.6683, 14.0503], [47.9901, 14.0481], [47.4077, 13.6614], [46.7889, 13.4657], [45.6574, 13.3387], [45.0386, 12.8158], [44.6178, 12.8171], [43.9298, 12.6165], [43.4752, 12.8389], [43.232, 13.2672], [43.2826, 13.6397], [43.089, 14.0108], [43.0211, 14.555], [42.7171, 15.6545], [42.7992, 16.3718], [43.1649, 16.6892], [43.1911, 17.3595], [43.418, 17.5162], [43.9169, 17.3249], [44.1557, 17.3986], [45.1483, 17.4274], [45.4066, 17.32], [46.3104, 17.2312], [46.6819, 17.2685], [46.9758, 16.9533], [47.4418, 17.1118], [47.5795, 17.4483], [48.172, 18.1567], [49.0421, 18.582], [51.9775, 18.9961], [52.729, 17.3005], [53.0855, 16.6484]]]
            },
            "properties": {
                "name": "Yemen",
                "id": "YE"
            },
            "id": "YE"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-172.3335, -13.4653], [-172.225, -13.8044], [-172.5357, -13.7915], [-172.7441, -13.5789], [-172.3335, -13.4653]]]
            },
            "properties": {
                "name": "Samoa",
                "id": "WS"
            },
            "id": "WS"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-178.0467, -14.3184], [-178.1585, -14.3118], [-178.1423, -14.2425], [-178.0467, -14.3184]]]
            },
            "properties": {
                "name": "Wallis and Futuna",
                "id": "WF"
            },
            "id": "WF"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[34.2454, 31.2085], [34.1983, 31.3226], [34.4775, 31.5849], [34.2454, 31.2085]]], [[[35.4505, 31.4793], [34.9507, 31.6022], [34.9561, 32.1611], [35.1931, 32.5344], [35.5513, 32.3955], [35.5589, 31.7656], [35.4505, 31.4793]]]]
            },
            "properties": {
                "name": "Palestinian Territories",
                "id": "PS"
            },
            "id": "PS"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[166.7458, -14.8267], [166.8102, -15.1574], [167.1316, -15.1352], [167.1995, -15.4859], [166.8257, -15.635], [166.6313, -15.406], [166.5274, -14.8502], [166.7458, -14.8267]]], [[[167.4125, -16.0958], [167.8365, -16.4495], [167.4494, -16.5552], [167.4125, -16.0958]]]]
            },
            "properties": {
                "name": "Vanuatu",
                "id": "VU"
            },
            "id": "VU"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[107.9727, 21.5081], [107.4099, 21.2848], [107.3544, 21.0553], [106.6757, 20.9603], [106.7534, 20.7348], [106.5181, 20.2887], [105.9841, 19.9389], [105.6219, 18.9664], [105.8882, 18.5025], [106.499, 17.9463], [106.479, 17.7195], [107.1804, 16.8978], [108.0296, 16.331], [108.8215, 15.378], [109.0847, 14.7161], [109.3035, 13.8563], [109.272, 13.2792], [109.4238, 12.9561], [109.2187, 12.6458], [109.1988, 11.7247], [108.8206, 11.3155], [108.2715, 10.9342], [107.2616, 10.3984], [106.8128, 10.4334], [106.5723, 9.6411], [105.5011, 9.0933], [105.3223, 8.8013], [104.8921, 8.5833], [104.8184, 8.8017], [104.8451, 9.606], [105.028, 10.0672], [104.6635, 10.1698], [104.4265, 10.4112], [104.8504, 10.5347], [105.3866, 10.9399], [106.1679, 11.0123], [105.8558, 11.2941], [105.8514, 11.6351], [106.3401, 11.6817], [106.4138, 11.9484], [106.9305, 12.0776], [107.5062, 12.3644], [107.4756, 13.0302], [107.6056, 13.4377], [107.3313, 14.1266], [107.5195, 14.705], [107.6531, 15.255], [107.1897, 15.7473], [107.3966, 16.0429], [106.6961, 16.4588], [106.5021, 16.9542], [105.6916, 17.7377], [105.4581, 18.1545], [105.0857, 18.4501], [105.115, 18.6787], [104.7163, 18.8035], [103.8965, 19.3401], [104.0319, 19.6753], [104.5463, 19.6105], [104.9281, 20.018], [104.6187, 20.3744], [104.5832, 20.6465], [104.0518, 20.9413], [103.635, 20.6971], [103.1046, 20.8915], [102.8511, 21.2657], [102.9488, 21.5698], [102.1276, 22.379], [102.5173, 22.7408], [103.0051, 22.4532], [103.3008, 22.7643], [104.3719, 22.704], [104.7958, 22.9112], [104.8646, 23.1363], [105.2752, 23.3454], [105.8429, 22.9228], [106.5421, 22.9081], [106.7804, 22.779], [106.5363, 22.3954], [106.7294, 22.0004], [107.3513, 21.6089], [107.9727, 21.5081]]]
            },
            "properties": {
                "name": "Vietnam",
                "id": "VN"
            },
            "id": "VN"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-64.7656, 17.7945], [-64.6862, 17.7062], [-64.889, 17.7017], [-64.8848, 17.7723], [-64.7656, 17.7945]]]
            },
            "properties": {
                "name": "US Virgin Islands",
                "id": "VI"
            },
            "id": "VI"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-64.3952, 18.4648], [-64.4261, 18.5132], [-64.3246, 18.5176], [-64.3952, 18.4648]]]
            },
            "properties": {
                "name": "British Virgin Islands",
                "id": "VG"
            },
            "id": "VG"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-60.0175, 8.5491], [-59.8315, 8.3059], [-60.0324, 8.0537], [-60.5136, 7.8131], [-60.7191, 7.4989], [-60.3951, 6.9453], [-61.1457, 6.6945], [-61.1286, 6.2142], [-61.3767, 5.9071], [-60.7422, 5.2022], [-60.6046, 4.9944], [-61.0028, 4.5354], [-62.1531, 4.0982], [-62.7122, 4.0179], [-62.9685, 3.594], [-63.2948, 3.9224], [-64.0214, 3.9291], [-64.2556, 4.1404], [-64.5679, 3.8998], [-64.2212, 3.5873], [-64.2188, 3.2047], [-63.9242, 2.4523], [-63.3893, 2.4119], [-63.394, 2.2223], [-64.0354, 1.9045], [-64.1149, 1.6191], [-65.1037, 1.1082], [-65.3609, 0.8685], [-65.6814, 0.9834], [-66.06, 0.7854], [-66.4293, 0.8218], [-66.8761, 1.2231], [-67.2108, 2.3901], [-67.8347, 2.8926], [-67.3111, 3.416], [-67.6616, 3.8643], [-67.8553, 4.507], [-67.8249, 5.2705], [-67.4394, 6.0256], [-67.8591, 6.2897], [-68.4717, 6.1565], [-69.4392, 6.1348], [-70.095, 6.9378], [-70.6552, 7.0829], [-71.0134, 6.9946], [-72.0843, 7.0967], [-72.443, 7.4549], [-72.4166, 8.3818], [-72.6654, 8.6277], [-72.7963, 9.1089], [-73.3563, 9.2269], [-73.0065, 9.7894], [-72.8693, 10.4911], [-72.6902, 10.8361], [-72.2485, 11.1965], [-71.958, 11.6666], [-71.3197, 11.8619], [-71.8686, 11.6275], [-71.9469, 11.4144], [-71.5942, 10.6572], [-72.1129, 9.8155], [-71.6868, 9.0725], [-71.2979, 9.1257], [-71.0858, 9.3481], [-71.0527, 9.7059], [-71.3867, 10.2639], [-71.5445, 10.7788], [-71.4695, 10.9643], [-70.2326, 11.3732], [-70.2865, 11.8859], [-70.004, 12.1779], [-69.6316, 11.4801], [-68.8279, 11.4318], [-68.3987, 11.161], [-68.234, 10.5693], [-67.8715, 10.4721], [-66.9891, 10.6106], [-66.2471, 10.6323], [-65.8518, 10.2577], [-65.1292, 10.0699], [-64.8504, 10.0979], [-63.8734, 10.6638], [-62.7024, 10.7499], [-62.8429, 10.4179], [-62.5151, 10.176], [-60.7923, 9.3606], [-61.0531, 9.0951], [-61.3039, 8.4102], [-60.801, 8.5922], [-60.0175, 8.5491]]]
            },
            "properties": {
                "name": "Venezuela",
                "id": "VE"
            },
            "id": "VE"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-61.1745, 13.1581], [-61.2773, 13.2095], [-61.1821, 13.356], [-61.1239, 13.2939], [-61.1745, 13.1581]]]
            },
            "properties": {
                "name": "Saint Vincent and the Grenadines",
                "id": "VC"
            },
            "id": "VC"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[12.4392, 41.8983], [12.4307, 41.8974], [12.4307, 41.9054], [12.4383, 41.9063], [12.4392, 41.8983]]]
            },
            "properties": {
                "name": "Vatican City",
                "id": "VA"
            },
            "id": "VA"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[70.9468, 42.2485], [70.8421, 42.0195], [70.1811, 41.5716], [70.7826, 41.2626], [71.4085, 41.1361], [71.7924, 41.4131], [72.6585, 40.8698], [73.113, 40.7859], [71.6926, 40.1525], [70.9579, 40.239], [70.3826, 40.4534], [70.7511, 40.7397], [70.4417, 41.0234], [69.7128, 40.6572], [69.2063, 40.5666], [69.2281, 40.1875], [68.6528, 40.1827], [68.4632, 39.5368], [67.7193, 39.6216], [67.3495, 39.242], [67.6767, 39.0086], [68.1037, 38.9619], [68.0478, 38.6694], [68.2941, 38.0329], [67.8143, 37.4869], [67.7592, 37.1722], [67.069, 37.3346], [66.5221, 37.3484], [66.5745, 38.0107], [65.8572, 38.2686], [65.613, 38.2384], [64.1628, 38.9535], [62.6505, 39.8586], [61.903, 41.0935], [60.455, 41.2218], [60.0897, 41.3994], [60.107, 41.9076], [59.8584, 42.2951], [59.4509, 42.2996], [58.5889, 42.7785], [58.2595, 42.688], [57.8143, 42.1899], [57.3819, 42.1562], [56.9642, 41.8566], [57.0179, 41.2635], [55.9774, 41.3221], [55.9766, 42.929], [55.9757, 44.9949], [58.5551, 45.5555], [61.0081, 44.3939], [61.1608, 44.1688], [61.9904, 43.4923], [63.2071, 43.6281], [64.4434, 43.5513], [64.9054, 43.7147], [65.4963, 43.3108], [65.803, 42.8771], [66.1004, 42.9907], [66.0094, 42.0048], [66.4986, 41.9951], [66.6686, 41.2706], [66.8142, 41.1423], [67.9359, 41.1965], [68.2919, 40.6563], [69.0652, 41.367], [70.0954, 41.8206], [70.4159, 42.0785], [70.9468, 42.2485]]]
            },
            "properties": {
                "name": "Uzbekistan",
                "id": "UZ"
            },
            "id": "UZ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[-166.1355, 60.3835], [-165.7298, 60.3143], [-165.5917, 59.9132], [-166.1876, 59.7738], [-167.1389, 60.0086], [-166.1355, 60.3835]]], [[[-171.4631, 63.6401], [-170.4304, 63.6989], [-169.7778, 63.0937], [-171.4631, 63.6401]]], [[[-141.0021, 69.6509], [-141.0021, 68.4819], [-141.0021, 65.56], [-141.0021, 63.2222], [-141.0021, 60.3003], [-139.1852, 60.0837], [-137.5932, 59.2263], [-137.4385, 58.9031], [-136.5787, 59.1522], [-136.3219, 59.6049], [-135.4759, 59.7934], [-134.9439, 59.2882], [-133.8208, 58.7049], [-131.8661, 56.7929], [-131.5752, 56.5989], [-130.4772, 56.2307], [-130.0251, 55.8882], [-130.0366, 55.2978], [-130.2142, 55.026], [-130.5753, 54.7696], [-131.0478, 55.1576], [-130.9186, 55.736], [-131.8439, 56.1601], [-132.8143, 57.0408], [-133.4659, 57.1722], [-133.5543, 57.6951], [-134.0634, 58.2111], [-134.7761, 58.4539], [-135.3025, 58.2559], [-135.8618, 58.5771], [-136.5827, 58.2453], [-137.544, 58.5811], [-138.3525, 59.0873], [-140.2168, 59.7266], [-140.8432, 59.749], [-141.6702, 59.9698], [-142.9457, 60.097], [-143.8051, 60.0129], [-144.9012, 60.3351], [-145.8989, 60.4783], [-146.8741, 61.005], [-148.3445, 60.8536], [-148.1976, 60.1678], [-148.4306, 59.9891], [-149.4323, 60.0011], [-150.9608, 59.244], [-151.7383, 59.1886], [-151.7345, 59.9882], [-151.4515, 60.2026], [-151.3217, 60.7428], [-150.4412, 61.0236], [-150.6124, 61.3013], [-151.7341, 60.9106], [-151.7505, 60.7548], [-153.1061, 59.875], [-154.0883, 59.3632], [-154.1298, 59.12], [-153.327, 58.8843], [-154.0199, 58.493], [-154.2469, 58.1594], [-155.0069, 58.016], [-156.4784, 57.328], [-156.4751, 57.1051], [-157.5784, 56.6344], [-158.4144, 56.4358], [-158.2757, 56.1963], [-159.5233, 55.8101], [-159.9623, 55.7948], [-161.0995, 55.4057], [-161.7416, 55.3911], [-162.0741, 55.1394], [-162.8651, 54.9545], [-162.9621, 55.1838], [-162.1571, 55.7195], [-161.2156, 56.0214], [-160.8514, 55.7719], [-160.3021, 56.3141], [-159.2831, 56.6886], [-158.321, 57.2978], [-157.6077, 57.6014], [-157.5235, 58.4213], [-158.5032, 58.8503], [-159.0827, 58.4697], [-159.6702, 58.9111], [-160.3631, 59.0512], [-161.7554, 58.6119], [-161.8286, 59.5887], [-162.2425, 60.1782], [-163.2193, 59.8455], [-163.9069, 59.8067], [-164.6622, 60.3038], [-165.3538, 60.5413], [-164.8051, 60.892], [-165.566, 61.1024], [-166.0789, 61.8031], [-165.1944, 62.4736], [-164.409, 63.2151], [-163.3589, 63.0458], [-161.974, 63.453], [-161.0997, 63.558], [-160.7786, 63.819], [-160.932, 64.5792], [-161.7594, 64.8162], [-162.807, 64.3743], [-163.7132, 64.5883], [-164.8995, 64.4607], [-166.1428, 64.5827], [-167.4039, 65.4221], [-168.0884, 65.6578], [-164.6742, 66.5549], [-163.7755, 66.5312], [-163.6954, 66.0838], [-161.8164, 66.0536], [-161.557, 66.2504], [-160.2317, 66.4202], [-160.864, 66.6708], [-161.8566, 66.7003], [-161.9653, 67.0497], [-163.0016, 67.0272], [-163.7205, 67.1955], [-164.1251, 67.6067], [-166.3805, 68.4251], [-166.2092, 68.8854], [-164.3024, 68.9364], [-163.1614, 69.3879], [-162.9521, 69.7581], [-161.881, 70.3318], [-160.9963, 70.3045], [-159.3144, 70.8785], [-157.9985, 70.8454], [-156.7833, 71.319], [-155.1669, 71.0993], [-154.1952, 70.801], [-153.2329, 70.9326], [-152.233, 70.8103], [-151.9447, 70.4521], [-149.2694, 70.5007], [-147.7053, 70.2173], [-145.8232, 70.16], [-145.1973, 70.0086], [-143.2184, 70.1163], [-141.4078, 69.6533], [-141.0021, 69.6509]]], [[[-155.5813, 19.0121], [-155.8814, 19.0707], [-156.0487, 19.7498], [-155.8316, 20.2759], [-155.1989, 19.9944], [-154.8043, 19.5244], [-155.5813, 19.0121]]], [[[-72.5098, 40.9861], [-73.1943, 40.6541], [-73.5738, 40.9195], [-72.5098, 40.9861]]], [[[-93.3778, 48.6166], [-92.9963, 48.6117], [-91.5183, 48.0582], [-90.8403, 48.2007], [-89.4556, 47.996], [-88.3782, 48.3032], [-84.8759, 46.9001], [-84.5617, 46.4575], [-84.1921, 46.5494], [-83.9777, 46.0851], [-83.5926, 45.817], [-82.5511, 45.3473], [-82.1378, 43.5709], [-82.5453, 42.6245], [-83.0731, 42.3005], [-83.1419, 41.976], [-82.439, 41.675], [-81.2778, 42.209], [-80.2475, 42.3662], [-79.0368, 42.8025], [-79.1719, 43.4666], [-78.7205, 43.625], [-76.82, 43.6286], [-76.4646, 44.0574], [-75.1793, 44.8994], [-74.7088, 45.0038], [-71.5175, 45.0078], [-71.3272, 45.2901], [-70.898, 45.2626], [-70.2963, 45.9062], [-70.0078, 46.7088], [-69.243, 47.4629], [-68.8288, 47.2032], [-68.311, 47.3546], [-67.8067, 47.083], [-67.7845, 45.7016], [-67.4328, 45.603], [-67.4725, 45.2759], [-67.1249, 45.1693], [-67.1067, 44.8852], [-67.9071, 44.4538], [-68.2775, 44.5075], [-69.7916, 43.8053], [-70.1789, 43.7662], [-70.829, 42.8251], [-71.0463, 42.3311], [-70.7382, 42.229], [-70.4046, 41.6271], [-70.6572, 41.5343], [-71.4265, 41.6333], [-71.5228, 41.3789], [-72.8471, 41.2657], [-73.5831, 41.022], [-74.2267, 40.6079], [-73.9575, 40.3282], [-74.1761, 39.7268], [-74.4289, 39.3872], [-74.897, 39.1453], [-75.3922, 39.0929], [-75.036, 38.5034], [-75.6592, 37.9539], [-76.2948, 38.4945], [-76.2635, 37.3568], [-75.8905, 36.6568], [-76.4788, 36.0283], [-75.7722, 35.9], [-75.7739, 35.647], [-76.513, 35.2705], [-76.7449, 34.9412], [-77.7508, 34.2851], [-78.0134, 33.9118], [-78.5778, 33.8732], [-78.9202, 33.6588], [-79.276, 33.1354], [-80.8492, 32.114], [-81.5203, 30.8747], [-81.2496, 29.7938], [-80.9, 29.0498], [-80.524, 28.4861], [-80.6501, 28.1811], [-80.2262, 27.2072], [-80.0413, 26.5685], [-80.1263, 25.8334], [-80.3669, 25.3313], [-80.7366, 25.1565], [-81.0978, 25.3194], [-81.365, 25.8312], [-81.7154, 25.983], [-81.8666, 26.4349], [-82.4414, 27.0599], [-82.6609, 27.7186], [-82.8436, 27.846], [-82.6607, 28.4857], [-82.6516, 28.8874], [-83.2906, 29.452], [-83.6943, 29.9261], [-84.0443, 30.1036], [-84.3828, 29.9074], [-85.3189, 29.6802], [-85.3536, 29.8759], [-86.2573, 30.4929], [-87.7903, 30.2918], [-88.9051, 30.4152], [-89.5885, 30.1658], [-90.2253, 30.3793], [-90.4131, 30.1405], [-89.5894, 29.915], [-90.1014, 29.1817], [-90.3793, 29.2953], [-90.7511, 29.1311], [-91.2902, 29.2891], [-91.331, 29.5137], [-91.8932, 29.836], [-92.2608, 29.5568], [-93.1756, 29.7792], [-93.6947, 29.7698], [-94.8884, 29.3708], [-95.2734, 28.9637], [-95.8534, 28.6401], [-96.4487, 28.5944], [-96.5616, 28.3671], [-97.1564, 28.1443], [-97.1715, 27.8797], [-97.5546, 26.9675], [-97.4024, 26.3967], [-97.1462, 25.9617], [-97.3582, 25.8707], [-98.0828, 26.0642], [-99.1078, 26.4469], [-99.4436, 27.0368], [-99.5053, 27.5482], [-100.2961, 28.3276], [-100.6587, 29.0685], [-101.4404, 29.7769], [-102.269, 29.871], [-102.7342, 29.6438], [-102.892, 29.2163], [-103.2577, 29.001], [-104.1107, 29.3863], [-104.504, 29.6775], [-104.9179, 30.5835], [-106.2558, 31.5445], [-106.4533, 31.77], [-108.2118, 31.7793], [-108.2145, 31.3292], [-111.042, 31.3243], [-112.939, 31.916], [-114.836, 32.5082], [-114.7248, 32.7155], [-117.1282, 32.5335], [-117.4674, 33.2957], [-118.5063, 34.0174], [-119.1437, 34.112], [-119.6061, 34.4178], [-120.4812, 34.4715], [-120.6448, 34.5798], [-120.6337, 35.0766], [-120.8603, 35.3655], [-121.8774, 36.331], [-121.79, 36.7323], [-122.3948, 37.2077], [-122.4669, 37.838], [-122.9681, 38.0968], [-122.9865, 38.277], [-123.7012, 38.9073], [-123.8845, 39.8608], [-124.324, 40.2519], [-124.3717, 40.4912], [-124.0685, 41.3843], [-124.5397, 42.8127], [-124.1486, 43.6916], [-123.9293, 45.5768], [-124.0716, 46.7447], [-124.3761, 47.6587], [-124.6211, 47.9042], [-124.6327, 48.3751], [-123.9757, 48.1683], [-122.2421, 48.0107], [-122.7888, 48.993], [-120.1281, 48.993], [-118.4226, 48.993], [-115.8643, 48.993], [-112.4532, 48.993], [-109.895, 48.993], [-106.4839, 48.993], [-103.9256, 48.993], [-102.2201, 48.993], [-99.2354, 48.993], [-97.5297, 48.9932], [-95.162, 48.9917], [-94.6209, 48.7427], [-93.7078, 48.5256], [-93.3778, 48.6166]]], [[[-163.4761, 54.9807], [-163.3581, 54.7357], [-164.5907, 54.4043], [-164.8877, 54.6078], [-164.5297, 54.8808], [-163.4761, 54.9807]]], [[[-130.9792, 55.4892], [-131.0827, 55.2668], [-131.8111, 55.223], [-131.6249, 55.8316], [-130.9792, 55.4892]]], [[[-133.566, 56.3392], [-133.2029, 56.3199], [-131.9764, 55.2086], [-131.9809, 54.8049], [-132.7823, 55.0484], [-133.4471, 55.797], [-133.566, 56.3392]]], [[[-133.3663, 57.0035], [-132.9541, 56.8803], [-133.2127, 56.4646], [-133.6029, 56.4642], [-133.8661, 57.0687], [-133.3663, 57.0035]]], [[[-134.9698, 57.3515], [-134.6207, 56.7183], [-135.787, 57.3173], [-134.9698, 57.3515]]], [[[-152.898, 57.8238], [-152.4121, 57.4547], [-153.7933, 56.9895], [-154.3391, 56.9209], [-154.7059, 57.3353], [-154.2813, 57.638], [-153.8184, 57.5956], [-152.898, 57.8238]]], [[[-135.7304, 58.2442], [-135.002, 58.0511], [-135.0848, 57.5111], [-136.0767, 57.6747], [-136.5123, 58.0959], [-135.7304, 58.2442]]], [[[-134.6802, 58.1616], [-133.9611, 57.6143], [-133.9253, 57.3369], [-134.4354, 57.057], [-134.66, 57.638], [-134.6802, 58.1616]]]]
            },
            "properties": {
                "name": "United States",
                "id": "US"
            },
            "id": "US"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-53.3707, -33.7422], [-53.7853, -34.3806], [-54.1686, -34.6709], [-54.9023, -34.9328], [-55.6732, -34.7756], [-56.1179, -34.9079], [-56.8552, -34.6766], [-57.1706, -34.4525], [-57.8291, -34.4773], [-58.4002, -33.9123], [-58.3534, -33.2602], [-58.0824, -32.8935], [-58.2011, -32.4718], [-58.1889, -31.9241], [-57.8105, -30.8587], [-57.8724, -30.5911], [-57.609, -30.188], [-57.2144, -30.2834], [-56.8328, -30.1072], [-56.1761, -30.6283], [-55.8736, -31.0696], [-55.5573, -30.876], [-55.2546, -31.2258], [-54.5876, -31.4851], [-54.2205, -31.8553], [-53.7618, -32.0568], [-53.6017, -32.403], [-53.1254, -32.7368], [-53.5314, -33.171], [-53.3707, -33.7422]]]
            },
            "properties": {
                "name": "Uruguay",
                "id": "UY"
            },
            "id": "UY"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[38.2142, 47.0914], [37.5435, 47.0745], [37.3398, 46.9169], [36.2793, 46.6586], [35.827, 46.6244], [34.8495, 46.1898], [35.0231, 45.7011], [35.558, 45.3109], [36.1705, 45.453], [36.3934, 45.0655], [35.5695, 45.1192], [35.0879, 44.8027], [34.7168, 44.8071], [33.9098, 44.3876], [33.4508, 44.5537], [33.5551, 45.0979], [32.508, 45.4037], [33.6648, 45.947], [33.2022, 46.1756], [32.4769, 46.0838], [32.0357, 46.2609], [31.9744, 46.7088], [30.7963, 46.5521], [30.2193, 45.8667], [29.6018, 45.6825], [29.7061, 45.2599], [29.2236, 45.4028], [28.7606, 45.2341], [28.2124, 45.4503], [28.9475, 46.05], [29.1464, 46.5268], [29.838, 46.3505], [29.8779, 46.829], [29.5494, 47.2467], [29.1597, 47.4558], [29.1948, 47.8824], [27.5493, 48.4777], [26.6189, 48.2597], [26.1625, 47.9925], [24.8935, 47.7177], [23.2027, 48.0844], [22.8764, 47.9472], [22.132, 48.4053], [22.5386, 49.0727], [22.6496, 49.539], [23.7118, 50.3773], [24.1056, 50.8449], [23.6053, 51.5179], [24.3617, 51.8674], [25.9251, 51.9136], [27.1422, 51.752], [27.2701, 51.6135], [28.5991, 51.5427], [29.1357, 51.6173], [29.3466, 51.3825], [30.5331, 51.5964], [30.9806, 52.0461], [31.7636, 52.1012], [32.508, 52.3084], [33.7353, 52.3448], [34.3976, 51.7804], [34.2809, 51.3117], [35.3121, 51.0438], [35.4115, 50.5398], [36.3059, 50.2805], [37.4228, 50.4115], [38.0469, 49.9201], [38.2586, 50.0524], [39.1748, 49.8559], [39.7807, 49.5721], [40.0701, 49.2003], [39.6866, 49.0079], [39.9609, 48.238], [39.7359, 47.8447], [38.9005, 47.8553], [38.2875, 47.5592], [38.2142, 47.0914]]]
            },
            "properties": {
                "name": "Ukraine",
                "id": "UA"
            },
            "id": "UA"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[33.9031, -1.0021], [32.1942, -1.0021], [30.8447, -1.0021], [30.51, -1.0674], [30.1016, -1.3688], [29.577, -1.3878], [29.5619, -0.9772], [29.7177, 0.0983], [29.9343, 0.4991], [29.9427, 0.8192], [30.9424, 1.683], [31.2527, 2.0448], [31.1763, 2.2703], [30.7284, 2.4554], [30.8385, 3.4905], [31.1523, 3.7857], [31.4799, 3.6805], [31.7982, 3.8026], [32.0996, 3.5291], [32.3358, 3.7063], [32.8382, 3.7986], [33.4894, 3.7551], [33.9759, 4.2203], [34.165, 3.8128], [34.3928, 3.6916], [34.4478, 3.1634], [34.7425, 2.818], [34.964, 2.0625], [34.9654, 1.6435], [34.7874, 1.2307], [34.4815, 1.042], [33.9431, 0.1738], [33.9031, -1.0021]]]
            },
            "properties": {
                "name": "Uganda",
                "id": "UG"
            },
            "id": "UG"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[33.9031, -1.0021], [34.7709, -1.4416], [36.2633, -2.2747], [37.6438, -3.0453], [37.6087, -3.4604], [37.7974, -3.6743], [39.2219, -4.6922], [38.8192, -5.8778], [38.8738, -6.3315], [39.4722, -6.8788], [39.5193, -7.1243], [39.2884, -7.518], [39.4411, -8.0116], [39.304, -8.444], [39.7838, -9.9146], [40.4634, -10.4641], [39.9889, -10.821], [39.3217, -11.1224], [38.7948, -11.2289], [38.4917, -11.4131], [37.9204, -11.2946], [37.5417, -11.675], [36.9789, -11.5667], [36.5185, -11.7163], [35.7852, -11.4531], [35.6312, -11.5818], [34.9596, -11.5783], [34.608, -11.0807], [34.6617, -10.71], [34.5241, -10.03], [34.3208, -9.7317], [32.9199, -9.4072], [32.4334, -9.1564], [31.9425, -9.0539], [31.3508, -8.6069], [31.0764, -8.6117], [30.7511, -8.1936], [30.3134, -7.2037], [29.7097, -6.6169], [29.4802, -6.0252], [29.5943, -5.651], [29.3426, -4.9829], [29.4034, -4.4494], [29.7177, -4.456], [30.1469, -4.0854], [30.4252, -3.5891], [30.7901, -3.2744], [30.5149, -2.9175], [30.5535, -2.3999], [30.8287, -2.3387], [30.8128, -1.5632], [30.51, -1.0674], [30.8447, -1.0021], [32.1942, -1.0021], [33.9031, -1.0021]]]
            },
            "properties": {
                "name": "Tanzania",
                "id": "TZ"
            },
            "id": "TZ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[121.009, 22.6205], [120.5815, 22.3564], [120.3258, 22.5424], [120.0723, 23.1496], [120.1589, 23.7089], [121.0405, 25.0326], [121.5936, 25.2754], [121.9291, 24.9736], [121.2957, 22.9667], [121.009, 22.6205]]]
            },
            "properties": {
                "name": "Taiwan",
                "id": "TW"
            },
            "id": "TW"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[41.5101, 41.5174], [42.4663, 41.4398], [42.7876, 41.5636], [43.4393, 41.1073], [43.7225, 40.7193], [43.5693, 40.4823], [43.7917, 40.0703], [44.2893, 40.0406], [44.7683, 39.7037], [44.8171, 39.6504], [44.023, 39.3774], [44.4309, 38.3569], [44.2112, 37.9081], [44.5614, 37.7448], [44.7652, 37.1424], [44.2818, 36.9782], [44.1562, 37.2831], [43.5161, 37.2445], [42.7748, 37.3719], [42.3588, 37.1087], [42.2683, 37.2765], [41.5154, 37.0892], [40.7058, 37.0976], [40.0164, 36.8259], [39.3568, 36.6817], [38.7669, 36.6932], [38.1916, 36.9014], [37.4365, 36.6435], [36.6584, 36.8024], [36.1275, 35.8316], [35.8927, 35.9164], [35.811, 36.3097], [36.1883, 36.659], [36.0489, 36.9107], [35.5375, 36.5969], [34.6014, 36.7847], [33.6945, 36.1819], [32.7947, 36.0358], [32.3775, 36.1836], [32.0219, 36.5352], [31.3525, 36.8011], [30.6441, 36.8654], [30.4838, 36.3106], [29.6893, 36.1565], [29.1433, 36.3971], [29.0381, 36.6937], [28.4837, 36.8037], [28.1339, 37.0297], [27.3491, 37.0195], [27.0779, 37.6875], [27.2323, 37.9787], [26.6828, 38.1985], [26.7636, 38.7098], [27.0135, 38.8869], [26.6819, 39.2922], [26.1133, 39.4675], [26.1812, 39.99], [26.7378, 40.4002], [27.4756, 40.3198], [28.2892, 40.4033], [29.3648, 40.8094], [29.3222, 41.2276], [31.2549, 41.1077], [31.4582, 41.3199], [32.3065, 41.7296], [33.3816, 42.0177], [34.7505, 41.9569], [35.2978, 41.7287], [36.0516, 41.6826], [36.5097, 41.2626], [38.3811, 40.9244], [39.4265, 41.1064], [40.2654, 40.9612], [40.9597, 41.2116], [41.5101, 41.5174]]], [[[28.0145, 41.9689], [28.3465, 41.4664], [29.0572, 41.2298], [28.7802, 40.9741], [28.172, 41.0806], [27.4996, 40.9732], [27.2581, 40.6874], [26.1053, 40.6114], [26.0391, 40.7269], [26.6246, 41.4016], [26.321, 41.7167], [26.6153, 41.9649], [27.2949, 42.0794], [28.0145, 41.9689]]]]
            },
            "properties": {
                "name": "Türkiye",
                "id": "TR"
            },
            "id": "TR"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[11.5043, 33.182], [11.5048, 32.4137], [10.8265, 32.0807], [10.115, 31.4637], [10.2162, 30.7832], [9.8952, 30.3873], [9.5188, 30.2293], [9.0439, 32.0723], [8.3332, 32.5437], [8.2111, 32.9268], [7.7628, 33.2331], [7.5, 33.8323], [7.5138, 34.0805], [8.2457, 34.7339], [8.3944, 35.204], [8.2457, 35.8707], [8.2306, 36.5454], [8.5764, 36.9374], [9.6879, 37.3404], [10.1962, 37.2059], [10.5713, 36.8796], [11.1266, 36.8739], [10.5256, 36.3235], [10.5908, 35.8871], [11.0045, 35.6336], [11.1199, 35.2404], [10.5349, 34.5448], [10.0648, 34.2119], [10.1589, 33.8501], [10.7227, 33.5145], [11.0844, 33.5629], [11.2025, 33.2491], [11.5043, 33.182]]]
            },
            "properties": {
                "name": "Tunisia",
                "id": "TN"
            },
            "id": "TN"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-61.0121, 10.1343], [-61.5967, 10.0646], [-61.4648, 10.5391], [-61.0338, 10.67], [-61.0121, 10.1343]]]
            },
            "properties": {
                "name": "Trinidad and Tobago",
                "id": "TT"
            },
            "id": "TT"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-175.162, -21.1695], [-175.1567, -21.2636], [-175.3354, -21.1579], [-175.2255, -21.1188], [-175.162, -21.1695]]]
            },
            "properties": {
                "name": "Tonga",
                "id": "TO"
            },
            "id": "TO"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[125.0679, -9.512], [124.9223, -8.9424], [125.178, -8.6477], [125.8043, -8.4923], [126.6198, -8.4595], [126.9149, -8.7152], [126.3823, -8.9575], [125.4079, -9.2758], [125.0679, -9.512]]]
            },
            "properties": {
                "name": "Timor-Leste",
                "id": "TL"
            },
            "id": "TL"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[66.5221, 37.3484], [65.7648, 37.569], [65.5549, 37.2512], [64.8162, 37.1322], [64.5108, 36.3408], [63.8623, 36.0123], [63.1086, 35.8187], [63.0566, 35.4459], [62.6105, 35.2333], [61.262, 35.6194], [61.1195, 36.6426], [60.3413, 36.6377], [60.0626, 36.9631], [59.5623, 37.1788], [59.2409, 37.5206], [58.8157, 37.6835], [58.4357, 37.6387], [57.4236, 37.9477], [57.1937, 38.2162], [56.4409, 38.2495], [56.2287, 38.0733], [55.5784, 38.0999], [55.0755, 37.9024], [54.7452, 37.502], [53.9142, 37.3435], [53.8237, 37.9281], [53.8685, 38.9491], [53.6177, 39.2159], [53.125, 39.432], [53.4721, 39.6686], [53.4042, 39.9603], [52.9874, 39.9878], [52.7335, 40.3988], [53.1454, 40.825], [53.8698, 40.6487], [54.7101, 40.8911], [54.5921, 41.1934], [54.0949, 41.5192], [53.8463, 42.0914], [52.9701, 41.9764], [52.4938, 41.7802], [53.2502, 42.2059], [54.1211, 42.3351], [54.9037, 41.9192], [55.5451, 41.2626], [55.9774, 41.3221], [57.0179, 41.2635], [56.9642, 41.8566], [57.3819, 42.1562], [57.8143, 42.1899], [58.2595, 42.688], [58.5889, 42.7785], [59.4509, 42.2996], [59.8584, 42.2951], [60.107, 41.9076], [60.0897, 41.3994], [60.455, 41.2218], [61.903, 41.0935], [62.6505, 39.8586], [64.1628, 38.9535], [65.613, 38.2384], [65.8572, 38.2686], [66.5745, 38.0107], [66.5221, 37.3484]]]
            },
            "properties": {
                "name": "Turkmenistan",
                "id": "TM"
            },
            "id": "TM"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-172.4791, -8.5807], [-172.4836, -8.5829], [-172.4987, -8.5478], [-172.4874, -8.5563], [-172.4791, -8.5807]]]
            },
            "properties": {
                "name": "Tokelau",
                "id": "TK"
            },
            "id": "TK"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[70.9579, 40.239], [70.4514, 40.049], [69.9667, 40.2022], [69.5304, 40.0974], [69.229, 39.761], [69.5987, 39.5736], [70.6077, 39.5643], [70.7333, 39.4134], [71.4045, 39.598], [71.8062, 39.2758], [72.0428, 39.3521], [73.2351, 39.3743], [73.6315, 39.4489], [73.8015, 38.6068], [74.2773, 38.6597], [74.7452, 38.5101], [74.8912, 37.2317], [74.2596, 37.4154], [73.7496, 37.2317], [73.4814, 37.4718], [72.8955, 37.2676], [71.8022, 36.6941], [71.4329, 37.1273], [71.5518, 37.933], [71.2558, 38.3068], [70.8789, 38.4564], [70.2148, 37.9246], [70.2512, 37.664], [69.4922, 37.553], [69.2649, 37.1083], [68.9604, 37.3249], [68.0677, 36.9498], [67.7592, 37.1722], [67.8143, 37.4869], [68.2941, 38.0329], [68.0478, 38.6694], [68.1037, 38.9619], [67.6767, 39.0086], [67.3495, 39.242], [67.7193, 39.6216], [68.4632, 39.5368], [68.6528, 40.1827], [69.2281, 40.1875], [69.2063, 40.5666], [69.7128, 40.6572], [70.4417, 41.0234], [70.7511, 40.7397], [70.3826, 40.4534], [70.9579, 40.239]]]
            },
            "properties": {
                "name": "Tajikistan",
                "id": "TJ"
            },
            "id": "TJ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[100.1225, 20.3167], [100.5429, 20.0885], [100.3977, 19.7561], [100.6254, 19.4999], [101.1546, 19.5794], [101.2864, 18.977], [101.0507, 18.4071], [101.1133, 18.0333], [100.9086, 17.5837], [101.1053, 17.4793], [102.1014, 18.2104], [102.7175, 17.8922], [103.0913, 18.1381], [103.3669, 18.4235], [103.9497, 18.3192], [104.8162, 17.3005], [104.7505, 16.6475], [105.047, 16.1601], [105.4062, 15.9874], [105.6223, 15.6998], [105.5131, 15.3606], [105.4754, 14.5301], [105.1833, 14.3464], [104.7789, 14.428], [103.1996, 14.3326], [102.729, 13.8421], [102.3198, 13.5398], [102.4995, 12.6698], [102.7557, 12.4261], [102.7366, 12.0896], [102.9341, 11.7065], [102.7628, 12.0124], [101.7236, 12.6893], [101.4449, 12.6187], [100.8634, 12.7146], [100.9628, 13.4319], [100.6561, 13.5212], [100.0173, 13.3534], [100.0901, 13.0457], [99.964, 12.6902], [99.9889, 12.1708], [99.6271, 11.4628], [99.4869, 10.8898], [99.165, 10.3198], [99.1606, 9.7339], [99.3936, 9.2136], [99.7239, 9.3144], [99.9046, 9.1129], [99.9605, 8.6712], [100.2792, 8.2686], [100.4537, 7.4425], [100.5864, 7.1762], [101.0178, 6.861], [101.4977, 6.8654], [102.1009, 6.2422], [101.8737, 5.8254], [101.5563, 5.908], [101.2571, 5.7894], [101.0533, 6.2427], [100.3453, 6.5498], [100.119, 6.442], [99.6959, 6.8765], [99.7203, 7.106], [99.051, 7.8877], [98.5791, 8.3445], [98.2382, 8.4231], [98.3714, 9.2904], [98.7025, 10.1902], [98.7571, 10.6612], [99.1903, 11.1051], [99.6147, 11.7811], [99.4052, 12.5477], [99.2196, 12.7399], [99.1366, 13.7165], [98.2462, 14.8147], [98.1911, 15.204], [98.5653, 15.4037], [98.6892, 16.3052], [98.4388, 16.9755], [97.793, 17.6813], [97.4849, 18.4941], [97.7539, 18.621], [97.8169, 19.46], [98.1112, 19.7623], [98.9169, 19.7729], [99.0208, 20.0419], [99.3382, 20.0788], [99.8904, 20.4246], [100.1225, 20.3167]]]
            },
            "properties": {
                "name": "Thailand",
                "id": "TH"
            },
            "id": "TH"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[0.9007, 10.9932], [0.7799, 10.3598], [1.3299, 9.9971], [1.4244, 9.2851], [1.6002, 9.0498], [1.6224, 6.2169], [1.1874, 6.0895], [0.7369, 6.4526], [0.5256, 6.8508], [0.6348, 7.3537], [0.5837, 8.1456], [0.688, 8.3041], [0.4153, 8.6525], [0.5291, 9.3583], [0.2619, 9.4955], [0.3627, 10.2364], [-0.0577, 10.6305], [-0.0686, 11.1157], [0.9007, 10.9932]]]
            },
            "properties": {
                "name": "Togo",
                "id": "TG"
            },
            "id": "TG"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[22.86, 10.9195], [22.4938, 10.9963], [21.7063, 10.5746], [21.7258, 10.3664], [21.2638, 9.9745], [20.7733, 9.4058], [20.3422, 9.1271], [19.1455, 9.0161], [19.1087, 8.6561], [18.4553, 8.032], [17.6496, 7.9836], [16.7849, 7.5508], [16.3787, 7.6835], [15.8452, 7.4753], [15.4803, 7.5237], [15.443, 7.8518], [15.1163, 8.5571], [14.3324, 9.2034], [13.9773, 9.6917], [14.2432, 9.9798], [15.5411, 9.9603], [15.1323, 10.6483], [15.0297, 11.1135], [15.0812, 11.8455], [14.7612, 12.6556], [14.5162, 12.9796], [14.0638, 13.0786], [13.6062, 13.7045], [13.4481, 14.3805], [14.3679, 15.7499], [15.4745, 16.9085], [15.7351, 19.9039], [15.949, 20.3034], [15.5873, 20.7335], [15.6072, 20.9546], [15.182, 21.5232], [15.1722, 21.9223], [14.9791, 22.996], [15.9841, 23.4452], [17.7521, 22.5721], [19.6684, 21.6257], [21.5847, 20.6794], [23.9804, 19.4968], [23.9822, 17.2663], [23.9835, 15.7801], [23.105, 15.7024], [22.9323, 15.1622], [22.6709, 14.7223], [22.3815, 14.5505], [22.5098, 14.1275], [22.1076, 13.7302], [22.2283, 13.3294], [21.8253, 12.7905], [22.3522, 12.6604], [22.5564, 11.6697], [22.9226, 11.3448], [22.86, 10.9195]]]
            },
            "properties": {
                "name": "Chad",
                "id": "TD"
            },
            "id": "TD"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-71.6615, 21.7651], [-71.8304, 21.7904], [-71.8062, 21.8521], [-71.6684, 21.8335], [-71.6615, 21.7651]]]
            },
            "properties": {
                "name": "Turks and Caicos Islands",
                "id": "TC"
            },
            "id": "TC"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[42.3588, 37.1087], [41.7884, 36.5973], [41.4169, 36.5148], [41.2456, 36.0735], [41.3543, 35.6403], [41.1945, 34.7689], [40.9872, 34.4289], [40.6894, 34.3322], [38.7735, 33.372], [36.8182, 32.3173], [36.3721, 32.387], [35.7875, 32.735], [35.8691, 33.4319], [35.9424, 33.6676], [36.5851, 34.2212], [36.4329, 34.6136], [35.9761, 34.6291], [35.9433, 35.2239], [35.7644, 35.5715], [35.8927, 35.9164], [36.1275, 35.8316], [36.6584, 36.8024], [37.4365, 36.6435], [38.1916, 36.9014], [38.7669, 36.6932], [39.3568, 36.6817], [40.0164, 36.8259], [40.7058, 37.0976], [41.5154, 37.0892], [42.2683, 37.2765], [42.3588, 37.1087]]]
            },
            "properties": {
                "name": "Syria",
                "id": "SY"
            },
            "id": "SY"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[55.5402, -4.6931], [55.3835, -4.6092], [55.4559, -4.5586], [55.5402, -4.6931]]]
            },
            "properties": {
                "name": "Seychelles",
                "id": "SC"
            },
            "id": "SC"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-63.123, 18.0688], [-63.0111, 18.0688], [-63.0231, 18.0191], [-63.123, 18.0688]]]
            },
            "properties": {
                "name": "Sint Maarten",
                "id": "SX"
            },
            "id": "SX"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[31.9482, -25.9577], [32.1129, -26.8393], [31.9584, -27.3058], [31.4697, -27.2956], [31.0636, -27.1123], [30.7941, -26.7643], [30.8034, -26.4136], [31.2074, -25.8432], [31.4151, -25.7464], [31.9482, -25.9577]]]
            },
            "properties": {
                "name": "Eswatini",
                "id": "SZ"
            },
            "id": "SZ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[24.1557, 65.8052], [23.1024, 65.7353], [21.5656, 65.4081], [21.1381, 64.8087], [21.4653, 64.3796], [20.7626, 63.8678], [19.0345, 63.2377], [18.4632, 62.8959], [17.8955, 62.8305], [17.4174, 61.7407], [17.1307, 61.5758], [17.251, 60.7009], [17.9559, 60.5897], [18.5573, 60.2537], [18.9706, 59.7572], [17.876, 59.2709], [17.4569, 58.8585], [16.6522, 58.4344], [16.5279, 57.0681], [15.9965, 56.2227], [14.782, 56.1619], [14.2152, 55.8325], [14.3417, 55.5278], [13.3212, 55.3464], [12.5923, 56.1377], [12.8835, 56.6178], [12.4214, 56.9063], [11.4493, 58.1183], [11.147, 58.9886], [11.3885, 59.0365], [11.7982, 59.29], [11.6806, 59.5923], [12.4862, 60.1067], [12.5888, 60.4508], [12.294, 61.0027], [12.8809, 61.3523], [12.1555, 61.7207], [12.3034, 62.2856], [12.2181, 63.0007], [11.9997, 63.2917], [12.6625, 63.9404], [13.9604, 64.0141], [14.0776, 64.464], [13.6501, 64.5816], [14.4798, 65.3014], [14.5432, 66.1292], [15.423, 66.4899], [16.4036, 67.055], [16.1275, 67.4259], [17.3247, 68.1039], [17.9168, 67.965], [18.3785, 68.5624], [19.9698, 68.3565], [20.6223, 69.037], [21.9975, 68.5207], [22.7823, 68.3911], [23.639, 67.9543], [23.4681, 67.45], [23.9884, 66.8106], [23.7012, 66.4808], [24.1557, 65.8052]]], [[[19.0767, 57.836], [18.6998, 57.2428], [18.1365, 57.5566], [18.5374, 57.8305], [19.0767, 57.836]]]]
            },
            "properties": {
                "name": "Sweden",
                "id": "SE"
            },
            "id": "SE"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[16.5163, 46.4997], [15.6361, 46.2005], [15.6246, 45.8338], [15.3396, 45.4672], [13.8787, 45.4286], [13.5778, 45.5169], [13.7198, 45.5875], [13.3993, 46.3177], [13.6998, 46.5201], [14.5037, 46.4171], [15.0009, 46.6262], [15.9575, 46.6777], [16.0929, 46.8632], [16.5163, 46.4997]]]
            },
            "properties": {
                "name": "Slovenia",
                "id": "SI"
            },
            "id": "SI"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[22.5386, 49.0727], [22.132, 48.4053], [21.4515, 48.5522], [20.4901, 48.5269], [19.8988, 48.1314], [18.7917, 48.0005], [18.7242, 47.787], [17.7619, 47.7701], [17.1475, 48.0058], [16.9531, 48.5988], [17.1884, 48.861], [17.7583, 48.888], [18.161, 49.2574], [18.8321, 49.5108], [19.4416, 49.5976], [19.802, 49.1923], [20.6161, 49.3916], [21.6397, 49.4121], [22.5386, 49.0727]]]
            },
            "properties": {
                "name": "Slovakia",
                "id": "SK"
            },
            "id": "SK"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-54.1559, 5.3589], [-54.4522, 5.0135], [-54.3508, 4.0543], [-53.9904, 3.5895], [-54.2032, 3.1381], [-54.1954, 2.818], [-54.6163, 2.3266], [-55.0058, 2.593], [-56.1295, 2.2996], [-56.0198, 1.8424], [-56.4828, 1.9422], [-56.7043, 2.0363], [-57.2097, 2.8828], [-57.3036, 3.3769], [-57.5497, 3.3529], [-57.8327, 3.6761], [-58.0544, 4.1719], [-57.7111, 4.9909], [-57.3309, 5.0202], [-57.1948, 5.5484], [-56.9698, 5.9927], [-55.9395, 5.7957], [-55.8283, 5.9617], [-54.8338, 5.9883], [-54.0543, 5.8081], [-54.1559, 5.3589]]]
            },
            "properties": {
                "name": "Suriname",
                "id": "SR"
            },
            "id": "SR"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[6.6602, 0.1205], [6.5243, 0.3402], [6.6868, 0.4041], [6.7498, 0.2435], [6.6602, 0.1205]]]
            },
            "properties": {
                "name": "Sao Tome and Principe",
                "id": "ST"
            },
            "id": "ST"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[20.2419, 46.1086], [20.775, 45.7499], [20.7741, 45.4845], [21.4919, 45.1223], [21.3845, 44.8701], [22.7051, 44.2376], [22.421, 44.0077], [22.5546, 43.4546], [22.9767, 43.1878], [22.4667, 42.8425], [22.3442, 42.3138], [21.5625, 42.2476], [21.7529, 42.6698], [21.3907, 42.7515], [21.0569, 43.0915], [20.3445, 42.8278], [19.5517, 43.2122], [19.1943, 43.5331], [19.4882, 43.7036], [19.1517, 44.3024], [19.3568, 44.8586], [19.007, 44.8693], [19.0549, 45.5271], [18.9054, 45.9315], [19.5308, 46.1552], [20.2419, 46.1086]]]
            },
            "properties": {
                "name": "Serbia",
                "id": "RS"
            },
            "id": "RS"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-56.2671, 46.8384], [-56.3869, 47.0679], [-56.2873, 47.071], [-56.3148, 46.9538], [-56.2671, 46.8384]]]
            },
            "properties": {
                "name": "Saint Pierre and Miquelon",
                "id": "PM"
            },
            "id": "PM"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[41.5328, -1.6955], [40.9788, -0.8703], [40.9699, 1.378], [40.9646, 2.8145], [41.3419, 3.2016], [41.8839, 3.9779], [42.0241, 4.1377], [42.7916, 4.2922], [43.0158, 4.5634], [43.5383, 4.8404], [44.0283, 4.9509], [44.9405, 4.9119], [45.9348, 5.9972], [47.9781, 7.9969], [46.9784, 7.9969], [44.023, 8.9859], [43.4828, 9.3796], [43.1818, 9.8799], [42.8418, 10.2031], [42.6594, 10.6212], [42.9226, 10.9994], [43.2462, 11.4997], [43.853, 10.7841], [44.3865, 10.4303], [44.9427, 10.4365], [45.8168, 10.8361], [46.5652, 10.7459], [47.405, 11.1739], [48.0193, 11.1392], [48.6745, 11.3226], [48.9031, 11.2546], [50.1101, 11.5294], [50.7923, 11.9835], [51.2549, 11.8308], [51.0844, 11.3354], [51.1408, 10.6567], [50.8984, 10.2532], [50.8247, 9.428], [50.4297, 8.8452], [50.103, 8.1998], [49.3484, 6.9906], [49.0492, 6.1739], [48.6492, 5.4943], [47.9754, 4.4968], [46.879, 3.2854], [46.0511, 2.4753], [44.9201, 1.81], [44.3328, 1.3909], [43.4677, 0.6217], [41.9798, -0.9728], [41.5328, -1.6955]]]
            },
            "properties": {
                "name": "Somalia",
                "id": "SO"
            },
            "id": "SO"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[12.4853, 43.9016], [12.397, 43.9344], [12.441, 43.9824], [12.5146, 43.9531], [12.4853, 43.9016]]]
            },
            "properties": {
                "name": "San Marino",
                "id": "SM"
            },
            "id": "SM"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-89.3626, 14.416], [-89.0572, 14.329], [-88.4491, 13.851], [-88.151, 13.9872], [-87.7153, 13.8128], [-87.8143, 13.3991], [-87.9308, 13.1807], [-88.5121, 13.1838], [-89.2776, 13.4781], [-89.8043, 13.5602], [-90.0952, 13.7364], [-89.8726, 14.0454], [-89.3626, 14.416]]]
            },
            "properties": {
                "name": "El Salvador",
                "id": "SV"
            },
            "id": "SV"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-10.2832, 8.4852], [-10.6474, 7.7594], [-11.2678, 7.2325], [-11.5075, 6.9067], [-11.7334, 7.0887], [-12.4856, 7.3861], [-12.5104, 7.6658], [-12.8809, 7.8566], [-13.2284, 8.696], [-13.2928, 9.0494], [-12.7559, 9.3734], [-12.5016, 9.8622], [-11.911, 9.9931], [-11.2056, 9.9776], [-10.6905, 9.3144], [-10.5005, 8.6876], [-10.2832, 8.4852]]]
            },
            "properties": {
                "name": "Sierra Leone",
                "id": "SL"
            },
            "id": "SL"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[161.7152, -10.3873], [162.1054, -10.4539], [162.1236, -10.8245], [161.5381, -10.5666], [161.7152, -10.3873]]], [[[159.7505, -9.2727], [159.9707, -9.4334], [160.3547, -9.4214], [160.6254, -9.5888], [160.6494, -9.9288], [159.8535, -9.7916], [159.6218, -9.5319], [159.7505, -9.2727]]], [[[160.7493, -8.3139], [160.9979, -8.6122], [161.2584, -9.3171], [160.8736, -9.1568], [160.5904, -8.3729], [160.7493, -8.3139]]], [[[159.8793, -8.5341], [158.944, -8.0409], [159.1095, -7.9037], [159.8433, -8.3272], [159.8793, -8.5341]]]]
            },
            "properties": {
                "name": "Solomon Islands",
                "id": "SB"
            },
            "id": "SB"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-5.6923, -15.9977], [-5.775, -15.9568], [-5.7078, -15.9062], [-5.6923, -15.9977]]]
            },
            "properties": {
                "name": "Saint Helena",
                "id": "SH"
            },
            "id": "SH"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-37.1034, -54.0658], [-36.3264, -54.2509], [-35.7986, -54.7636], [-36.0855, -54.8666], [-37.1034, -54.0658]]]
            },
            "properties": {
                "name": "South Georgia and South Sandwich Islands",
                "id": "GS"
            },
            "id": "GS"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[103.9697, 1.3314], [103.8201, 1.2653], [103.6501, 1.3257], [103.8179, 1.4473], [103.9697, 1.3314]]]
            },
            "properties": {
                "name": "Singapore",
                "id": "SG"
            },
            "id": "SG"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-12.2807, 14.8089], [-12.0193, 14.2065], [-12.0543, 13.633], [-11.6349, 13.3698], [-11.3903, 12.9419], [-11.3894, 12.4043], [-12.2912, 12.328], [-13.0828, 12.6334], [-13.7294, 12.6738], [-15.1962, 12.68], [-15.5748, 12.4904], [-16.7119, 12.3551], [-16.7634, 13.064], [-16.6488, 13.1541], [-15.8343, 13.1563], [-15.5096, 13.5864], [-16.5623, 13.5873], [-17.168, 14.6407], [-17.1471, 14.9221], [-16.5352, 15.8383], [-16.4411, 16.2045], [-16.1683, 16.5472], [-15.6208, 16.5068], [-15.1128, 16.6448], [-14.3, 16.5805], [-13.8685, 16.1481], [-13.4095, 16.0593], [-13.2579, 15.7002], [-12.8584, 15.2426], [-12.2807, 14.8089]]]
            },
            "properties": {
                "name": "Senegal",
                "id": "SN"
            },
            "id": "SN"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[34.078, 9.4613], [34.0945, 8.5824], [33.9533, 8.4435], [33.2342, 8.3964], [33.0127, 7.9516], [33.2262, 7.7608], [33.6661, 7.6711], [34.0643, 7.2259], [34.7106, 6.6604], [35.0821, 5.6731], [35.2681, 5.4925], [33.9759, 4.2203], [33.4894, 3.7551], [32.8382, 3.7986], [32.3358, 3.7063], [32.0996, 3.5291], [31.7982, 3.8026], [31.4799, 3.6805], [31.1523, 3.7857], [30.8385, 3.4905], [30.5083, 3.8359], [30.1949, 3.9819], [29.6768, 4.5869], [29.1513, 4.3881], [28.7269, 4.5048], [28.192, 4.3503], [27.7881, 4.6446], [27.4032, 5.1094], [27.0836, 5.777], [26.5141, 6.0691], [26.3619, 6.6355], [25.8891, 7.0647], [25.3809, 7.3333], [25.2472, 7.7244], [24.8535, 8.1376], [24.2915, 8.2912], [24.1473, 8.6654], [24.5321, 8.8869], [24.7852, 9.7747], [25.067, 10.2936], [25.7981, 10.4206], [25.8913, 10.2026], [26.5514, 9.5257], [27.0743, 9.614], [27.8857, 9.5998], [28.0491, 9.3286], [28.8445, 9.3259], [28.9995, 9.61], [29.4731, 9.7685], [29.6054, 10.065], [30.0031, 10.2772], [30.7395, 9.7427], [31.2247, 9.7991], [31.6548, 10.2213], [31.9331, 10.6625], [32.4041, 11.0576], [32.3353, 11.7158], [32.0721, 12.0066], [32.7366, 12.0097], [33.1991, 12.2174], [33.0731, 11.5916], [33.172, 10.8503], [33.892, 10.1991], [34.078, 9.4613]]]
            },
            "properties": {
                "name": "South Sudan",
                "id": "SS"
            },
            "id": "SS"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[36.8714, 21.9968], [36.9269, 21.5867], [37.1507, 21.1037], [37.2274, 20.5568], [37.2483, 19.5821], [37.4711, 18.8203], [37.9217, 18.5558], [38.6093, 18.0049], [38.2537, 17.5845], [37.7823, 17.458], [37.4112, 17.0616], [37.0091, 17.059], [36.9136, 16.2964], [36.4267, 15.132], [36.5243, 14.2567], [36.3907, 13.6259], [36.2123, 13.2712], [36.1075, 12.7266], [35.5961, 12.5375], [35.1123, 11.8166], [34.9312, 10.8649], [34.5716, 10.88], [34.2756, 10.528], [34.2915, 10.1249], [34.078, 9.4613], [33.892, 10.1991], [33.172, 10.8503], [33.0731, 11.5916], [33.1991, 12.2174], [32.7366, 12.0097], [32.0721, 12.0066], [32.3353, 11.7158], [32.4041, 11.0576], [31.9331, 10.6625], [31.6548, 10.2213], [31.2247, 9.7991], [30.7395, 9.7427], [30.0031, 10.2772], [29.6054, 10.065], [29.4731, 9.7685], [28.9995, 9.61], [28.8445, 9.3259], [28.0491, 9.3286], [27.8857, 9.5998], [27.0743, 9.614], [26.5514, 9.5257], [25.8913, 10.2026], [25.7981, 10.4206], [25.067, 10.2936], [24.7852, 9.7747], [24.5321, 8.8869], [24.1473, 8.6654], [23.5374, 8.8159], [23.6461, 9.8231], [23.2559, 10.4579], [22.86, 10.9195], [22.9226, 11.3448], [22.5564, 11.6697], [22.3522, 12.6604], [21.8253, 12.7905], [22.2283, 13.3294], [22.1076, 13.7302], [22.5098, 14.1275], [22.3815, 14.5505], [22.6709, 14.7223], [22.9323, 15.1622], [23.105, 15.7024], [23.9835, 15.7801], [23.9822, 17.2663], [23.9804, 19.4968], [23.9804, 19.9958], [24.9796, 20.0024], [24.9805, 21.9959], [27.2723, 21.9955], [30.3285, 21.9951], [32.6061, 21.9959], [34.2467, 21.9964], [36.8714, 21.9968]]]
            },
            "properties": {
                "name": "Sudan",
                "id": "SD"
            },
            "id": "SD"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[46.5314, 29.0964], [47.4334, 28.9895], [47.6713, 28.5331], [48.4424, 28.5429], [48.9067, 27.6289], [49.4052, 27.1811], [49.9862, 26.829], [50.214, 26.3084], [50.0315, 26.1108], [50.558, 25.0868], [50.8043, 24.7894], [51.2682, 24.6074], [51.5683, 24.286], [51.5927, 24.0787], [52.555, 22.933], [55.1043, 22.6214], [55.186, 22.704], [55.641, 22.0017], [54.9774, 19.9958], [53.667, 19.559], [51.9775, 18.9961], [49.0421, 18.582], [48.172, 18.1567], [47.5795, 17.4483], [47.4418, 17.1118], [46.9758, 16.9533], [46.6819, 17.2685], [46.3104, 17.2312], [45.4066, 17.32], [45.1483, 17.4274], [44.1557, 17.3986], [43.9169, 17.3249], [43.418, 17.5162], [43.1911, 17.3595], [43.1649, 16.6892], [42.7992, 16.3718], [42.6989, 16.7372], [42.3833, 17.1225], [42.294, 17.435], [41.7498, 17.8855], [41.2296, 18.6783], [41.1159, 19.0822], [40.7591, 19.7556], [40.0808, 20.2661], [39.6138, 20.5178], [39.0936, 21.3101], [38.9879, 21.8819], [39.0958, 22.3928], [38.9413, 22.882], [38.4641, 23.712], [37.9195, 24.1852], [37.5431, 24.2918], [37.1808, 24.82], [37.1489, 25.291], [36.7627, 25.7513], [36.2496, 26.5947], [35.5815, 27.4323], [35.1807, 28.0347], [34.616, 28.1483], [34.7798, 28.5074], [34.9507, 29.3535], [36.0156, 29.1906], [36.4759, 29.4951], [36.7551, 29.8662], [37.4694, 29.9949], [37.6336, 30.3132], [37.9803, 30.5], [36.9584, 31.4917], [38.9622, 31.9951], [39.1455, 32.1247], [40.3693, 31.9391], [42.0743, 31.0802], [42.8578, 30.4952], [44.7163, 29.1937], [46.3565, 29.0636], [46.5314, 29.0964]]]
            },
            "properties": {
                "name": "Saudi Arabia",
                "id": "SA"
            },
            "id": "SA"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-8.6834, 27.6565], [-8.6834, 27.2858], [-8.6821, 25.9954], [-10.5624, 25.9954], [-12.0164, 25.9954], [-12.0235, 23.4674], [-12.6203, 23.2712], [-13.0316, 23], [-13.0944, 22.4958], [-13.0163, 21.3341], [-15.0018, 21.3314], [-16.9647, 21.3292], [-17.0481, 20.8063], [-16.9309, 21.9001], [-16.5143, 22.3333], [-16.2103, 23.0981], [-15.5864, 24.0729], [-15.0388, 24.5488], [-14.856, 24.8715], [-14.7949, 25.4041], [-14.4138, 26.2538], [-13.5758, 26.7349], [-13.1774, 27.652], [-8.6834, 27.6565]]]
            },
            "properties": {
                "name": "Western Sahara",
                "id": "EH"
            },
            "id": "EH"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[30.51, -1.0674], [30.8128, -1.5632], [30.8287, -2.3387], [30.5535, -2.3999], [29.9303, -2.3396], [29.8682, -2.7164], [29.3901, -2.8087], [29.0146, -2.7204], [28.8765, -2.4004], [29.1064, -2.2335], [29.1295, -1.8601], [29.577, -1.3878], [30.1016, -1.3688], [30.51, -1.0674]]]
            },
            "properties": {
                "name": "Rwanda",
                "id": "RW"
            },
            "id": "RW"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[-178.8765, 71.5769], [-177.5322, 71.2631], [-177.8218, 71.0675], [-179.5066, 70.9235], [-180, 70.993], [-180, 71.1843], [-180, 71.3998], [-180, 71.5379], [-178.8765, 71.5769]]], [[[178.8614, 70.8265], [178.8911, 71.2311], [180, 71.5379], [180, 70.993], [178.8614, 70.8265]]], [[[60.4505, 69.935], [59.5783, 69.7385], [58.473, 70.2668], [59.0052, 70.4652], [60.4505, 69.935]]], [[[169.201, 69.5805], [167.789, 69.8369], [168.358, 70.0157], [169.375, 69.8826], [169.201, 69.5805]]], [[[50.265, 69.1857], [49.6262, 68.8596], [48.667, 68.7331], [48.279, 69.0403], [48.6315, 69.436], [49.225, 69.5113], [50.265, 69.1857]]], [[[-179.7985, 68.9404], [-178.8739, 68.7542], [-177.4075, 68.2451], [-175.3451, 67.678], [-174.4476, 67.1031], [-173.6797, 67.1449], [-172.6405, 66.9249], [-171.7956, 66.9318], [-170.192, 66.2014], [-170.6663, 65.6214], [-172.2115, 65.4252], [-172.2133, 65.0482], [-172.9239, 64.705], [-173.0092, 64.2975], [-173.7298, 64.3646], [-174.318, 64.6376], [-175.3951, 64.8025], [-175.8538, 65.0109], [-176.0933, 65.471], [-177.0563, 65.6137], [-178.3103, 65.4849], [-178.8794, 65.9364], [-179.7283, 65.8039], [-179.3521, 65.5167], [-180, 65.0672], [-180, 65.312], [-180, 65.5569], [-180, 65.8014], [-180, 66.0462], [-180, 66.291], [-180, 66.5359], [-180, 66.7807], [-180, 67.0252], [-180, 67.2701], [-180, 67.5149], [-180, 67.7597], [-180, 68.0045], [-180, 68.2491], [-180, 68.4939], [-180, 68.7387], [-180, 68.9835], [-179.7985, 68.9404]]], [[[163.635, 58.6033], [163.7611, 59.015], [164.6156, 58.8856], [163.635, 58.6033]]], [[[21.2358, 55.2641], [22.8311, 54.8384], [22.7663, 54.3568], [19.6045, 54.4591], [19.9747, 54.9212], [20.5202, 54.9949], [20.8998, 55.2867], [20.9579, 55.279], [21.2358, 55.2641]]], [[[142.761, 54.3939], [142.9181, 53.7942], [143.2235, 53.2961], [143.3234, 52.6136], [143.1556, 52.0838], [143.4552, 51.4715], [143.8161, 50.2825], [144.272, 49.3113], [143.105, 49.1988], [142.5741, 48.0719], [142.5568, 47.7381], [143.0056, 47.2228], [143.2821, 46.5592], [142.5781, 46.7008], [142.2088, 46.0891], [141.8302, 46.4508], [142.0388, 47.1402], [141.9642, 47.5872], [142.1817, 48.0133], [141.8661, 48.75], [142.1422, 49.5692], [142.0712, 50.5149], [142.2066, 51.2225], [141.7223, 51.7363], [141.8235, 53.3394], [142.5262, 53.4475], [142.761, 54.3939]]], [[[148.5995, 45.3176], [147.9137, 44.9904], [147.7694, 45.1906], [148.5995, 45.3176]]], [[[96.5265, 81.0755], [97.8316, 80.7983], [97.1751, 80.241], [94.565, 80.1261], [93.8725, 80.0102], [91.5239, 80.3584], [93.2626, 80.7912], [93.0651, 80.9885], [95.8008, 81.2804], [96.5265, 81.0755]]], [[[54.719, 81.1159], [57.694, 80.7923], [55.7124, 80.6372], [54.0665, 80.8136], [54.719, 81.1159]]], [[[62.168, 80.8347], [61.0511, 80.4186], [59.3044, 80.5216], [59.5921, 80.8165], [62.168, 80.8347]]], [[[97.6744, 80.1582], [100.0613, 79.7772], [99.4394, 78.8341], [97.5555, 78.8266], [94.6524, 79.1275], [93.0708, 79.4953], [94.9871, 80.0968], [97.6744, 80.1582]]], [[[102.8848, 79.254], [105.146, 78.8188], [105.3125, 78.4999], [103.7194, 78.2582], [101.2043, 78.192], [100.2841, 78.6792], [101.5905, 79.3504], [102.8848, 79.254]]], [[[130.6871, 42.3027], [130.5269, 42.5353], [130.5771, 42.8118], [131.0684, 42.9024], [131.262, 43.4333], [131.2553, 44.0716], [131.0822, 44.9101], [131.9775, 45.2439], [132.9359, 45.03], [133.1858, 45.4947], [133.8614, 46.2475], [134.1677, 47.3022], [134.7523, 47.7155], [134.5636, 48.3219], [134.2933, 48.3733], [133.4686, 48.0972], [133.1441, 48.1057], [132.5617, 47.7683], [131.0027, 47.6915], [130.712, 48.1279], [130.8043, 48.3414], [130.1962, 48.8916], [129.5339, 49.3235], [128.5267, 49.5943], [127.9998, 49.5685], [127.5027, 49.8735], [127.5901, 50.2091], [126.9247, 51.1002], [126.313, 52.3997], [125.649, 53.0422], [124.8122, 53.1339], [123.6079, 53.5465], [122.338, 53.485], [120.704, 53.1718], [120.0945, 52.7872], [120.6561, 52.5666], [120.7497, 52.0965], [120.067, 51.6007], [119.1921, 50.3797], [119.26, 50.0664], [118.4517, 49.8444], [117.8733, 49.5135], [116.6832, 49.8238], [116.1346, 50.0109], [115.2743, 49.9489], [114.743, 50.2337], [114.2969, 50.2743], [113.1641, 49.7971], [113.0557, 49.6162], [111.3366, 49.3559], [110.8279, 49.1661], [110.1997, 49.1704], [109.2365, 49.3348], [108.6137, 49.3228], [108.034, 49.594], [107.9479, 49.9247], [107.2332, 49.9893], [106.7112, 50.3125], [106.218, 50.3045], [105.3835, 50.4736], [103.6328, 50.1387], [102.6833, 50.3871], [102.2883, 50.585], [102.1116, 51.3534], [101.3814, 51.4526], [100.4687, 51.7261], [98.8485, 52.0701], [97.947, 51.3483], [97.8254, 50.9852], [98.2795, 50.5333], [98.1032, 50.0779], [97.2088, 49.7308], [96.986, 49.8828], [95.8518, 50.0129], [95.5229, 49.9112], [94.6147, 50.0237], [94.2511, 50.5564], [91.8044, 50.6936], [89.644, 49.903], [89.6542, 49.7175], [88.8317, 49.4485], [88.1925, 49.4518], [87.8143, 49.1624], [87.3229, 49.0858], [86.6144, 49.6098], [86.1807, 49.4993], [85.21, 49.6648], [84.9893, 50.0615], [84.2578, 50.2883], [83.9453, 50.7746], [83.3571, 50.9945], [82.4938, 50.7275], [81.4657, 50.7397], [80.8771, 51.2815], [79.9862, 50.7746], [79.4687, 51.493], [78.4757, 52.6385], [77.7042, 53.3791], [76.5758, 53.9424], [76.2664, 54.312], [74.4518, 53.6472], [73.2857, 53.5984], [73.3993, 53.8115], [72.9141, 54.1073], [71.0933, 54.2123], [71.1856, 54.5994], [70.7382, 55.3052], [70.1824, 55.1625], [68.9773, 55.3895], [68.2062, 55.1609], [68.0739, 54.9596], [66.2225, 54.6673], [65.4767, 54.6233], [65.1576, 54.3643], [64.4611, 54.3841], [63.0739, 54.1053], [61.9287, 53.9464], [61.3339, 54.0492], [60.9797, 53.6217], [61.1994, 53.2872], [62.0148, 53.1079], [61.974, 52.9437], [61.0476, 52.9725], [60.8021, 52.7448], [60.9375, 52.2805], [60.0657, 51.9764], [60.4647, 51.6513], [61.3632, 51.442], [61.5851, 51.2298], [61.3894, 50.8609], [60.6379, 50.6638], [59.9552, 50.7992], [59.8122, 50.5819], [58.8836, 50.6945], [58.3594, 51.0638], [57.8387, 51.0917], [57.4423, 50.8889], [57.0117, 51.0651], [56.4915, 51.0196], [55.7977, 50.6021], [55.5424, 50.6017], [54.727, 50.9981], [54.4216, 50.7804], [54.0416, 51.1153], [53.3381, 51.4824], [52.571, 51.4817], [52.3309, 51.6812], [51.6091, 51.4839], [50.7941, 51.7292], [50.2468, 51.2895], [49.498, 51.0835], [48.8086, 50.6012], [48.8432, 50.0131], [48.4344, 49.8284], [47.706, 50.378], [47.3264, 50.2734], [46.8022, 49.367], [47.0144, 49.0984], [46.7028, 48.8055], [46.661, 48.4124], [47.0042, 48.2846], [47.0934, 47.9477], [48.1099, 47.7452], [48.9595, 46.7744], [48.6102, 46.5663], [49.2321, 46.3372], [48.1592, 45.7371], [47.5244, 45.6017], [46.7529, 44.4205], [47.2301, 44.1923], [47.5089, 43.5096], [47.4632, 43.0351], [48.5729, 41.8446], [47.8609, 41.2129], [47.2612, 41.315], [46.7494, 41.8126], [46.4298, 41.8907], [45.6388, 42.205], [45.7275, 42.4749], [45.1602, 42.6751], [44.5059, 42.7488], [43.9573, 42.5664], [43.7824, 42.747], [42.4192, 43.2242], [41.5807, 43.2193], [40.6481, 43.534], [39.9782, 43.42], [38.7171, 44.2882], [38.1814, 44.4196], [37.8516, 44.6988], [37.4112, 44.7352], [36.9411, 45.2896], [37.6474, 45.3771], [37.9332, 46.0016], [38.1836, 46.0948], [37.9679, 46.6182], [39.2933, 47.1056], [38.2142, 47.0914], [38.2875, 47.5592], [38.9005, 47.8553], [39.7359, 47.8447], [39.9609, 48.238], [39.6866, 49.0079], [40.0701, 49.2003], [39.7807, 49.5721], [39.1748, 49.8559], [38.2586, 50.0524], [38.0469, 49.9201], [37.4228, 50.4115], [36.3059, 50.2805], [35.4115, 50.5398], [35.3121, 51.0438], [34.2809, 51.3117], [34.3976, 51.7804], [33.7353, 52.3448], [32.508, 52.3084], [31.7636, 52.1012], [31.5771, 52.3122], [31.4178, 53.196], [32.1422, 53.0913], [32.7042, 53.3363], [31.792, 54.0558], [31.4036, 54.1959], [31.1213, 54.6484], [30.9069, 55.5699], [30.2335, 55.8452], [29.4824, 55.6845], [29.375, 55.9386], [28.7948, 55.9426], [28.1481, 56.143], [27.8063, 56.867], [27.797, 57.3169], [27.3517, 57.5282], [27.753, 57.8411], [27.4272, 58.7331], [28.0127, 59.4842], [28.014, 59.7248], [28.9471, 59.8289], [29.0692, 60.1915], [28.6506, 60.611], [27.7978, 60.5362], [29.6902, 61.5461], [31.2855, 62.5679], [31.5341, 62.8855], [31.1807, 63.2082], [30.0555, 63.689], [30.5038, 64.0205], [30.1083, 64.3661], [30.0728, 64.7649], [29.604, 64.9685], [29.9032, 66.0911], [29.0869, 66.9709], [29.9414, 67.5475], [29.3439, 68.062], [28.4708, 68.4883], [28.9657, 69.0219], [30.8696, 69.7834], [31.9846, 69.9536], [32.9417, 69.7519], [32.3775, 69.4791], [33.6843, 69.3102], [35.858, 69.1917], [40.3809, 67.8318], [40.9663, 67.7135], [41.1887, 66.8262], [40.5216, 66.4466], [39.2889, 66.1321], [38.3975, 66.0644], [35.5136, 66.3958], [34.8247, 66.6111], [32.4636, 66.9163], [33.5667, 66.321], [34.7865, 65.8645], [34.4065, 65.3957], [34.8034, 64.986], [34.8695, 64.5601], [35.6472, 64.3783], [36.365, 64.0028], [37.4423, 63.8135], [38.0708, 64.0259], [37.9537, 64.3202], [37.1835, 64.4085], [36.5283, 64.8473], [36.883, 65.1724], [38.0096, 64.8788], [39.7581, 64.577], [40.281, 64.998], [39.8167, 65.5979], [41.4759, 66.1235], [42.2106, 66.5197], [44.0971, 66.2351], [44.4886, 66.6719], [44.292, 67.0996], [43.7824, 67.2545], [44.2254, 67.9956], [44.0483, 68.5489], [45.8922, 68.4797], [46.6903, 67.8489], [45.5287, 67.7577], [44.9396, 67.4776], [45.9859, 66.853], [46.6908, 66.8255], [47.7091, 67.045], [47.8746, 67.5841], [48.8778, 67.7315], [50.839, 68.3498], [52.5502, 68.5924], [53.8019, 68.9959], [53.9679, 68.2273], [54.5614, 68.273], [56.0436, 68.649], [57.1267, 68.554], [58.9191, 69.0039], [59.8975, 68.422], [60.9335, 68.9868], [60.1704, 69.5909], [61.0161, 69.8515], [63.3616, 69.6753], [68.5041, 68.3485], [69.1406, 68.9506], [68.5427, 68.9671], [68.006, 69.48], [67.0645, 69.6937], [66.9265, 70.0142], [67.2847, 70.7386], [66.6664, 70.9006], [66.9176, 71.2824], [68.2693, 71.6828], [69.039, 72.67], [69.6449, 72.8975], [71.5003, 72.9137], [72.8121, 72.6915], [72.6243, 72.0794], [71.9118, 71.5478], [72.7317, 70.823], [72.5297, 70.1724], [72.5275, 69.0805], [73.548, 68.5744], [73.1521, 67.8651], [72.5945, 67.587], [71.5514, 66.7605], [70.9393, 66.5481], [69.877, 66.8455], [69.1943, 66.5787], [70.3396, 66.3423], [71.9172, 66.2467], [72.4174, 66.5607], [73.7922, 66.9953], [74.0745, 67.4141], [74.7696, 67.7663], [74.3914, 68.4206], [74.5796, 68.7511], [76.4591, 68.9784], [77.2385, 68.4697], [77.6509, 68.9029], [76.001, 69.2349], [74.8149, 69.0907], [73.7757, 69.1983], [73.56, 69.7072], [74.3111, 70.6536], [73.0864, 71.4449], [73.6719, 71.845], [75.7413, 72.2962], [76.0325, 71.9103], [78.4828, 72.395], [79.422, 72.3808], [80.7626, 72.0892], [81.511, 71.7463], [82.9861, 71.7487], [82.1835, 72.2376], [80.827, 72.4882], [80.5096, 73.0861], [80.5833, 73.5684], [83.5449, 73.6665], [86.5913, 73.8943], [86.6513, 74.6824], [87.6713, 75.1296], [90.1851, 75.591], [93.5498, 75.854], [94.5756, 76.1517], [96.879, 75.9311], [100.3223, 76.479], [100.9899, 76.9904], [103.1312, 77.6265], [104.0146, 77.7304], [105.8944, 77.4889], [104.9121, 77.1748], [107.4299, 76.9265], [108.0278, 76.7185], [111.1151, 76.723], [112.6194, 76.3836], [113.8712, 75.856], [113.6137, 75.293], [111.8683, 74.7401], [109.8402, 74.3219], [108.1996, 73.6941], [107.2709, 73.621], [106.4782, 73.1394], [107.7503, 73.1731], [109.8553, 73.4726], [110.2614, 74.0174], [112.1471, 73.7089], [114.0607, 73.5846], [115.3378, 73.7025], [118.4504, 73.5897], [118.4304, 73.2466], [119.7505, 72.9792], [123.1605, 72.955], [123.6222, 73.1933], [123.3052, 73.5329], [124.3883, 73.7549], [125.617, 73.5207], [127.7406, 73.4817], [128.8885, 73.1902], [129.4118, 72.3156], [128.3589, 72.0883], [129.7621, 71.1195], [131.1572, 70.7422], [131.562, 70.9011], [132.5621, 71.8952], [134.1029, 71.3789], [135.8847, 71.6306], [137.3153, 71.3594], [138.1183, 71.5663], [139.695, 71.7003], [139.6014, 72.496], [142.0614, 72.7208], [145.4856, 72.5422], [146.594, 72.3025], [148.402, 72.312], [149.5015, 72.1644], [150.5997, 71.5201], [151.5825, 71.2871], [152.5089, 70.8345], [153.7944, 70.88], [155.8953, 71.0955], [158.0371, 71.0394], [159.3506, 70.7908], [160.0062, 70.3096], [159.8326, 69.7849], [161.5367, 69.3796], [162.3757, 69.6491], [164.1597, 69.7192], [164.5135, 69.6091], [166.8204, 69.4995], [167.6283, 69.7403], [168.303, 69.2716], [169.3106, 69.0796], [169.6098, 68.7862], [170.5375, 68.8254], [170.9952, 69.0454], [170.5824, 69.5834], [170.4869, 70.1076], [172.5595, 69.9682], [173.2772, 69.8238], [176.1075, 69.8604], [176.9243, 69.646], [178.8485, 69.3872], [180, 68.9835], [180, 65.0672], [178.5196, 64.6029], [177.4671, 64.7368], [177.433, 64.4445], [178.6501, 63.9653], [178.7065, 63.5216], [179.3324, 63.1902], [179.5703, 62.6875], [179.1206, 62.3204], [177.3513, 62.5874], [175.2681, 62.1025], [174.5144, 61.8237], [173.6235, 61.7161], [172.8564, 61.4693], [172.3926, 61.0618], [170.6081, 60.435], [169.9827, 60.067], [169.2267, 60.5959], [168.1374, 60.5739], [166.9642, 60.3069], [166.3521, 60.4847], [165.0843, 60.0985], [163.7802, 60.041], [163.41, 59.8349], [163.2728, 59.3026], [162.1418, 58.4475], [161.9602, 58.0768], [162.4671, 57.7661], [163.2138, 57.6869], [162.7792, 57.3577], [162.8027, 56.8115], [163.2564, 56.6881], [163.3354, 56.2325], [162.5284, 56.2606], [162.085, 56.0897], [161.7294, 55.358], [162.1058, 54.7521], [161.7258, 54.533], [160.7728, 54.5414], [160.0746, 54.1892], [159.8437, 53.7837], [159.8975, 53.3807], [158.6088, 52.8735], [158.4637, 52.3049], [158.1037, 51.8095], [156.7476, 50.9692], [156.5003, 51.475], [156.3645, 52.5093], [156.0986, 53.0065], [155.6201, 54.8646], [155.5549, 55.3484], [155.9828, 56.6952], [156.7285, 57.1522], [157.4503, 57.7994], [158.2102, 58.0253], [159.0367, 58.4239], [159.8473, 59.1271], [161.7534, 60.1522], [162.0037, 60.4201], [162.9732, 60.7828], [163.71, 60.9168], [164.0052, 61.3439], [164.2556, 62.6966], [163.3318, 62.5508], [163.0091, 61.7915], [162.3926, 61.6621], [160.7666, 60.7533], [159.8832, 61.2917], [160.3174, 61.7933], [159.5525, 61.7194], [159.0767, 61.9223], [158.07, 61.7536], [157.4694, 61.7989], [156.6801, 61.4806], [156.63, 61.2724], [155.8532, 60.7772], [154.9707, 60.3766], [154.2929, 59.8333], [154.5827, 59.5401], [155.1669, 59.3601], [154.011, 59.0756], [153.3611, 59.2147], [152.8822, 58.9391], [151.99, 59.1601], [151.4857, 59.5241], [150.4572, 59.5907], [149.6427, 59.7705], [149.205, 59.4882], [147.8746, 59.3881], [147.5146, 59.2687], [146.4444, 59.4305], [145.9317, 59.1983], [145.5544, 59.4136], [143.192, 59.3701], [142.0255, 58.9997], [141.7547, 58.7453], [140.6849, 58.2122], [140.447, 57.8136], [140.0022, 57.6875], [138.6621, 56.9655], [137.6913, 56.1395], [136.175, 55.3522], [135.2623, 54.9434], [135.8514, 54.5838], [136.7973, 54.6209], [136.6828, 53.9313], [137.1555, 53.8217], [137.3282, 53.5389], [138.2923, 53.5924], [138.6608, 53.7449], [138.6958, 54.3199], [139.7075, 54.2771], [140.3471, 53.8126], [141.4022, 53.184], [141.1696, 52.3684], [141.4853, 52.1786], [140.6876, 51.2322], [140.4763, 50.546], [140.5171, 49.596], [140.1704, 48.5238], [139.3728, 47.8873], [139.0012, 47.3835], [138.5866, 47.0572], [138.3367, 46.5432], [137.6855, 45.8183], [136.8035, 45.1711], [136.1421, 44.4893], [135.8745, 44.3734], [135.1309, 43.5256], [133.7092, 42.83], [133.1601, 42.6969], [132.4813, 42.9099], [132.3344, 43.2388], [131.7946, 43.2553], [131.1586, 42.6258], [130.6871, 42.3027]]], [[[67.7654, 76.2376], [66.2824, 75.9837], [61.3561, 75.3149], [60.2224, 74.7965], [58.5347, 74.4988], [58.4415, 74.1288], [56.9638, 73.3665], [55.0067, 73.4539], [53.7629, 73.7662], [54.6427, 73.9595], [57.0876, 75.3837], [58.8814, 75.8547], [62.9714, 76.2367], [65.8629, 76.6133], [67.5351, 77.0077], [68.4859, 76.9338], [68.9, 76.5729], [67.7654, 76.2376]]], [[[140.0488, 75.829], [140.9442, 75.7004], [142.4605, 75.9035], [143.6856, 75.8636], [145.2552, 75.5857], [144.0199, 75.0446], [141.9873, 74.9913], [139.0993, 74.6566], [138.0921, 74.7974], [137.0064, 75.235], [137.5013, 75.9097], [138.8139, 76.1996], [140.0488, 75.829]]], [[[146.7951, 75.3709], [150.1039, 75.2193], [150.6463, 74.9445], [149.5969, 74.7725], [148.0926, 74.8258], [146.1483, 75.1984], [146.7951, 75.3709]]], [[[113.3873, 74.4005], [112.7823, 74.0951], [111.6428, 74.2729], [112.0845, 74.549], [113.3873, 74.4005]]], [[[142.1848, 73.8958], [143.3438, 73.5687], [143.1934, 73.2206], [140.6627, 73.4519], [141.0849, 73.8658], [142.1848, 73.8958]]], [[[55.32, 73.3083], [56.4293, 73.2011], [55.356, 72.4651], [55.2978, 71.9354], [57.1458, 70.589], [54.6009, 70.68], [53.7225, 70.8145], [53.3638, 71.5416], [51.8124, 71.4912], [51.5825, 72.0712], [52.6221, 72.3009], [53.7531, 73.2932], [55.32, 73.3083]]]]
            },
            "properties": {
                "name": "Russia",
                "id": "RU"
            },
            "id": "RU"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[28.2124, 45.4503], [28.7606, 45.2341], [29.2236, 45.4028], [29.7061, 45.2599], [29.5574, 44.8435], [29.0483, 44.7574], [28.6452, 44.2958], [28.5853, 43.7422], [27.0867, 44.1675], [26.2158, 44.0072], [25.4972, 43.6708], [23.2244, 43.8741], [22.7051, 44.2376], [21.3845, 44.8701], [21.4919, 45.1223], [20.7741, 45.4845], [20.775, 45.7499], [20.2419, 46.1086], [21.1519, 46.3044], [22.2905, 47.7279], [22.8764, 47.9472], [23.2027, 48.0844], [24.8935, 47.7177], [26.1625, 47.9925], [26.6189, 48.2597], [26.9806, 48.155], [27.3366, 47.6396], [28.0717, 46.9786], [28.2444, 46.4513], [28.0997, 45.9728], [28.2124, 45.4503]]]
            },
            "properties": {
                "name": "Romania",
                "id": "RO"
            },
            "id": "RO"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[55.7972, -21.3395], [55.3627, -21.2738], [55.3112, -20.904], [55.6618, -20.9062], [55.7972, -21.3395]]]
            },
            "properties": {
                "name": "Reunion",
                "id": "RE"
            },
            "id": "RE"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[51.2682, 24.6074], [50.8043, 24.7894], [50.763, 25.4445], [51.0032, 25.9816], [51.2624, 26.1534], [51.543, 25.9022], [51.4853, 25.5249], [51.602, 25.148], [51.2682, 24.6074]]]
            },
            "properties": {
                "name": "Qatar",
                "id": "QA"
            },
            "id": "QA"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-149.3215, -17.6902], [-149.579, -17.7351], [-149.6114, -17.5318], [-149.3792, -17.5224], [-149.3215, -17.6902]]]
            },
            "properties": {
                "name": "French Polynesia",
                "id": "PF"
            },
            "id": "PF"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-58.1598, -20.1645], [-57.8303, -20.9981], [-57.9856, -22.0461], [-56.9374, -22.2712], [-56.5239, -22.1025], [-55.8492, -22.3076], [-55.6541, -22.8105], [-55.3662, -23.9913], [-54.6254, -23.8124], [-54.2418, -24.0472], [-54.4731, -25.2204], [-54.6158, -25.576], [-54.7552, -26.533], [-55.1358, -26.9312], [-55.4266, -27.0093], [-55.7147, -27.415], [-56.0673, -27.3076], [-56.3705, -27.5375], [-57.1118, -27.4701], [-58.6186, -27.1323], [-58.1914, -26.6302], [-58.2031, -26.3816], [-57.8906, -26.0065], [-57.5872, -25.4051], [-57.8216, -25.1365], [-58.3654, -24.9594], [-59.373, -24.4538], [-59.8924, -24.0934], [-61.0329, -23.7556], [-61.7984, -23.1821], [-62.3726, -22.439], [-62.6509, -22.2339], [-62.2767, -21.066], [-62.2763, -20.5627], [-61.917, -20.0553], [-61.7569, -19.6451], [-60.0073, -19.2976], [-59.0905, -19.286], [-58.1803, -19.8178], [-58.1598, -20.1645]]]
            },
            "properties": {
                "name": "Paraguay",
                "id": "PY"
            },
            "id": "PY"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-7.4061, 37.1793], [-7.8343, 37.0057], [-8.5977, 37.1211], [-8.8141, 37.431], [-8.9147, 38.5123], [-9.4742, 38.7307], [-9.3748, 39.3384], [-9.1482, 39.5426], [-8.8867, 40.1795], [-8.6557, 41.0296], [-8.7771, 41.9409], [-8.2131, 42.1336], [-7.9208, 41.8836], [-7.4037, 41.8335], [-6.6182, 41.9422], [-6.2125, 41.5321], [-6.9285, 41.0092], [-6.8102, 40.3429], [-7.0146, 40.2084], [-7.0368, 39.7139], [-7.4452, 39.5363], [-7.0461, 38.9069], [-7.3431, 38.4572], [-7.1855, 38.0062], [-7.5036, 37.5854], [-7.4061, 37.1793]]]
            },
            "properties": {
                "name": "Portugal",
                "id": "PT"
            },
            "id": "PT"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[130.5269, 42.5353], [130.6871, 42.3027], [130.4576, 42.3018], [129.7563, 41.7123], [129.7088, 40.8574], [128.3043, 40.0362], [127.5684, 39.7818], [127.3943, 39.2079], [127.7863, 39.084], [128.3745, 38.6233], [128.0389, 38.3085], [127.1697, 38.3045], [126.634, 37.7816], [125.9419, 37.8735], [125.4492, 37.7301], [125.1931, 38.0378], [124.691, 38.1292], [125.0675, 38.5567], [125.4097, 39.2882], [125.3609, 39.5266], [124.5574, 39.7907], [124.3621, 40.0042], [124.8895, 40.4596], [125.989, 40.9049], [126.9034, 41.7811], [127.1795, 41.5312], [128.1112, 41.3891], [128.291, 41.5627], [128.0451, 41.9875], [128.9236, 42.0381], [129.3137, 42.4137], [129.7199, 42.4749], [129.8983, 42.9983], [130.2406, 42.8917], [130.5269, 42.5353]]]
            },
            "properties": {
                "name": "North Korea",
                "id": "KP"
            },
            "id": "KP"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-66.1295, 18.4448], [-65.6288, 18.3813], [-65.9708, 17.9743], [-67.1968, 17.9943], [-67.1587, 18.4994], [-66.1295, 18.4448]]]
            },
            "properties": {
                "name": "Puerto Rico",
                "id": "PR"
            },
            "id": "PR"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[19.6045, 54.4591], [22.7663, 54.3568], [23.37, 54.2005], [23.4845, 53.9398], [23.8872, 53.0276], [23.8445, 52.6642], [23.1969, 52.257], [23.6523, 52.0403], [23.6053, 51.5179], [24.1056, 50.8449], [23.7118, 50.3773], [22.6496, 49.539], [22.5386, 49.0727], [21.6397, 49.4121], [20.6161, 49.3916], [19.802, 49.1923], [19.4416, 49.5976], [18.8321, 49.5108], [18.5622, 49.8792], [17.8746, 49.9722], [17.152, 50.3784], [16.6792, 50.0974], [16.0072, 50.6117], [14.8096, 50.8589], [15.0164, 51.2527], [14.6018, 51.8324], [14.7527, 52.0818], [14.6196, 52.5284], [14.1286, 52.8782], [14.4145, 53.2835], [14.2587, 53.7296], [14.2139, 53.8707], [14.2112, 53.9504], [16.1865, 54.2904], [16.5598, 54.5539], [17.2621, 54.7294], [18.3234, 54.8382], [18.6697, 54.4309], [19.6045, 54.4591]]]
            },
            "properties": {
                "name": "Poland",
                "id": "PL"
            },
            "id": "PL"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[152.9656, -4.7565], [152.6807, -4.4986], [152.5985, -3.9948], [153.1241, -4.2523], [152.9656, -4.7565]]], [[[155.9575, -6.687], [155.7191, -6.8628], [155.344, -6.7217], [155.202, -6.3075], [154.782, -5.9706], [154.7412, -5.5453], [154.9969, -5.54], [155.467, -6.145], [155.8225, -6.3803], [155.9575, -6.687]]], [[[151.9158, -4.2967], [152.4054, -4.3406], [152.4001, -4.7312], [152.0135, -5.0038], [152.1431, -5.3571], [151.8652, -5.5649], [151.515, -5.5524], [151.2291, -5.92], [150.4283, -6.2764], [149.6524, -6.2906], [149.3825, -6.078], [149.1264, -6.1277], [148.4011, -5.7651], [148.3447, -5.5449], [148.999, -5.4845], [149.2454, -5.5729], [150.2987, -5.5356], [150.953, -5.4237], [151.3268, -4.9603], [151.6712, -4.8835], [151.5518, -4.3455], [151.9158, -4.2967]]], [[[140.9761, -9.1187], [140.9748, -6.3461], [140.9739, -4.0232], [140.9734, -2.6099], [141.1856, -2.6276], [142.2115, -3.0835], [142.9053, -3.3206], [143.509, -3.4311], [144.0159, -3.7835], [144.4775, -3.8253], [145.0879, -4.349], [145.3347, -4.3854], [145.767, -4.8231], [145.8527, -5.4712], [146.4036, -5.6164], [147.0344, -5.9191], [147.3766, -5.9506], [147.8018, -6.315], [147.8453, -6.6626], [147.1191, -6.7217], [146.9607, -6.929], [147.1902, -7.3782], [147.7242, -7.8762], [148.1268, -8.1035], [148.2471, -8.5545], [148.5831, -9.0516], [149.2476, -9.0712], [149.2032, -9.4068], [149.7612, -9.8058], [149.8744, -10.0131], [150.6672, -10.2573], [150.4825, -10.6368], [150.0169, -10.5773], [149.7541, -10.3531], [147.7685, -10.0699], [146.6965, -9.0255], [146.0334, -8.0764], [144.9738, -7.8021], [144.5099, -7.5673], [143.6137, -8.2003], [143.0948, -8.3112], [143.366, -8.9611], [142.6474, -9.3277], [142.2297, -9.1697], [141.1332, -9.2212], [140.9761, -9.1187]]]]
            },
            "properties": {
                "name": "Papua New Guinea",
                "id": "PG"
            },
            "id": "PG"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[134.5956, 7.3821], [134.5064, 7.4372], [134.5561, 7.5939], [134.6595, 7.6631], [134.5956, 7.3821]]]
            },
            "properties": {
                "name": "Palau",
                "id": "PW"
            },
            "id": "PW"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[126.0059, 9.3211], [126.1932, 9.2767], [126.3197, 8.8448], [126.4355, 7.8327], [126.5816, 7.2476], [126.08, 6.7332], [125.8243, 7.3333], [125.4008, 6.7957], [125.5886, 6.4659], [125.6681, 5.9785], [125.4559, 5.6643], [124.6364, 5.9981], [124.078, 6.4042], [123.9853, 6.9937], [124.2068, 7.3963], [123.9684, 7.6644], [123.493, 7.8078], [123.3909, 7.4074], [122.4978, 7.6729], [122.176, 7.0044], [122.0472, 7.3635], [122.132, 7.8105], [122.3371, 8.0284], [122.911, 8.1563], [123.0176, 8.3982], [123.4344, 8.7032], [124.2258, 8.2712], [124.4513, 8.6064], [124.731, 8.5629], [124.869, 8.9722], [125.5336, 9.1408], [125.5211, 9.7592], [126.0059, 9.3211]]], [[[124.5938, 9.7871], [124.3599, 9.63], [123.9355, 9.6238], [123.817, 9.8173], [124.1726, 10.1351], [124.577, 10.0268], [124.5938, 9.7871]]], [[[123.1308, 9.064], [122.5626, 9.4826], [122.4716, 9.9616], [122.8556, 10.0868], [122.8169, 10.5036], [122.9834, 10.8867], [123.2564, 10.9941], [123.5676, 10.7806], [123.1618, 9.8644], [123.3083, 9.357], [123.1308, 9.064]]], [[[123.3705, 9.4498], [123.386, 9.9669], [123.7114, 10.4738], [123.952, 10.3167], [123.6435, 10.0202], [123.3705, 9.4498]]], [[[117.3109, 8.4395], [117.35, 8.7134], [117.8848, 9.2407], [118.1148, 9.3468], [119.0239, 10.3535], [119.2241, 10.4774], [119.2614, 10.8449], [119.5268, 10.9532], [119.6844, 10.5515], [119.1917, 10.061], [118.782, 9.9163], [118.4348, 9.2562], [117.9896, 8.8772], [117.3109, 8.4395]]], [[[124.5747, 11.343], [124.9299, 11.3727], [125.0133, 10.7854], [125.2535, 10.2639], [125.0266, 10.0331], [124.7807, 10.168], [124.7869, 10.7815], [124.4456, 10.9235], [124.5747, 11.343]]], [[[122.4964, 11.6151], [123.1583, 11.5356], [123.0167, 11.1166], [122.7699, 10.8236], [122.1977, 10.623], [121.9642, 10.8716], [122.1036, 11.643], [122.4964, 11.6151]]], [[[125.2397, 12.5277], [125.5358, 12.1913], [125.4568, 11.9524], [125.6281, 11.1321], [125.2335, 11.145], [124.8841, 11.7753], [124.3848, 12.2441], [124.2946, 12.5695], [125.2397, 12.5277]]], [[[120.7045, 13.4794], [121.2029, 13.4324], [121.5225, 13.131], [121.5407, 12.6383], [121.2367, 12.2188], [120.922, 12.5117], [120.7635, 12.9698], [120.5082, 13.2601], [120.7045, 13.4794]]], [[[121.1017, 18.6153], [121.8457, 18.2952], [122.2998, 18.4026], [122.1511, 17.7563], [122.2368, 17.435], [122.5191, 17.1247], [122.1351, 16.185], [121.5953, 15.9333], [121.3925, 15.3242], [121.6957, 14.7374], [121.8004, 14.1138], [122.4907, 14.3224], [122.856, 14.2509], [123.2315, 13.7475], [123.4322, 13.9664], [123.726, 13.8843], [123.6079, 13.5283], [124.1428, 13.036], [124.0598, 12.5672], [123.311, 13.044], [123.1632, 13.4417], [122.5954, 13.9078], [122.4068, 13.4927], [121.7778, 13.9375], [121.2034, 13.6401], [120.6166, 14.1879], [120.922, 14.4933], [120.8882, 14.7157], [120.0821, 14.8511], [119.8309, 16.3266], [120.1598, 16.0478], [120.3893, 16.2218], [120.3054, 16.5294], [120.4088, 16.9555], [120.3582, 17.6383], [120.5997, 18.5078], [121.1017, 18.6153]]]]
            },
            "properties": {
                "name": "Philippines",
                "id": "PH"
            },
            "id": "PH"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-69.9658, -4.2359], [-70.7995, -4.1733], [-70.9737, -4.3504], [-71.8448, -4.5044], [-72.6987, -5.0673], [-72.8871, -5.1228], [-72.9799, -5.635], [-73.2355, -6.0984], [-73.1374, -6.466], [-73.758, -6.9059], [-73.7496, -7.3356], [-74.0021, -7.5562], [-73.5491, -8.3459], [-72.9741, -8.993], [-73.2093, -9.4116], [-72.379, -9.5102], [-72.1815, -10.0038], [-71.238, -9.9661], [-70.637, -9.4782], [-70.6423, -11.0101], [-70.2202, -11.0478], [-69.5785, -10.9519], [-68.6852, -12.502], [-68.9786, -12.8802], [-69.0741, -13.6828], [-68.8803, -14.199], [-69.235, -14.5972], [-69.3748, -14.963], [-69.1726, -15.2368], [-69.4185, -15.6035], [-69.2176, -16.149], [-68.9134, -16.2618], [-69.0208, -16.6422], [-69.6249, -17.2002], [-69.5108, -17.506], [-69.8522, -17.704], [-69.9263, -18.206], [-70.4184, -18.3454], [-71.337, -17.6827], [-71.5323, -17.2943], [-72.1114, -17.0026], [-72.4676, -16.7079], [-73.825, -16.153], [-74.1471, -15.9124], [-75.1043, -15.4117], [-75.5336, -14.899], [-75.934, -14.6336], [-76.2891, -14.1333], [-76.1839, -13.5154], [-76.8322, -12.3489], [-77.1527, -12.0603], [-77.2204, -11.6635], [-77.6332, -11.288], [-77.7362, -10.8365], [-78.1856, -10.089], [-78.7622, -8.6171], [-79.3772, -7.8354], [-79.7621, -7.0666], [-80.1103, -6.6497], [-80.8117, -6.2822], [-81.1805, -5.9426], [-80.8827, -5.7589], [-81.1084, -5.0278], [-81.3366, -4.6695], [-81.2833, -4.3224], [-80.7986, -3.7312], [-80.3247, -3.388], [-80.1793, -3.8776], [-80.51, -4.0694], [-80.4885, -4.3939], [-80.1396, -4.2962], [-79.6385, -4.4547], [-79.3308, -4.9279], [-79.0763, -4.9905], [-78.4198, -3.7769], [-78.3472, -3.4311], [-77.8607, -2.9819], [-76.679, -2.5628], [-76.0898, -2.1331], [-75.5706, -1.5312], [-75.2632, -0.5555], [-75.2845, -0.1063], [-74.8018, -0.2], [-74.4178, -0.5809], [-74.2465, -0.9706], [-73.6643, -1.2489], [-73.4963, -1.6932], [-73.1969, -1.8304], [-73.1545, -2.2783], [-72.3957, -2.4288], [-71.7525, -2.1527], [-71.3969, -2.3342], [-70.9146, -2.2184], [-70.0741, -2.7502], [-70.7351, -3.7818], [-70.3396, -3.8142], [-69.9658, -4.2359]]]
            },
            "properties": {
                "name": "Peru",
                "id": "PE"
            },
            "id": "PE"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-128.2901, -24.3974], [-128.3205, -24.3997], [-128.3503, -24.3402], [-128.3037, -24.3335], [-128.2901, -24.3974]]]
            },
            "properties": {
                "name": "Pitcairn Islands",
                "id": "PN"
            },
            "id": "PN"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-77.3742, 8.6583], [-77.2124, 8.0338], [-77.3509, 7.7057], [-77.7439, 7.537], [-77.9011, 7.2294], [-78.1701, 7.5437], [-78.4215, 8.0608], [-78.1139, 8.3796], [-79.0865, 8.997], [-79.4416, 9.0059], [-79.7505, 8.5953], [-80.3687, 8.289], [-80.4581, 8.0768], [-80.0752, 7.6671], [-80.4388, 7.2752], [-80.8456, 7.2201], [-81.0352, 7.7111], [-81.5041, 7.7213], [-81.7276, 8.1376], [-82.6796, 8.3218], [-82.8793, 8.0706], [-82.9976, 8.3676], [-82.917, 8.7404], [-82.9399, 9.4493], [-82.5635, 9.5767], [-82.2441, 9.0316], [-81.3548, 8.7804], [-80.8387, 8.8874], [-80.1272, 9.2101], [-79.5774, 9.598], [-78.5043, 9.4063], [-78.0828, 9.2363], [-77.3742, 8.6583]]]
            },
            "properties": {
                "name": "Panama",
                "id": "PA"
            },
            "id": "PA"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[77.7992, 35.496], [77.0486, 35.1099], [76.5945, 34.7357], [75.7093, 34.5031], [74.3004, 34.7654], [73.9613, 34.6535], [74.1499, 33.507], [73.9941, 33.2424], [74.6578, 32.5189], [75.3334, 32.2792], [74.5099, 31.7127], [74.6329, 31.0345], [73.8991, 30.4352], [73.809, 30.0934], [73.3816, 29.9345], [72.903, 29.029], [72.342, 28.752], [71.8701, 27.9623], [70.7373, 27.7293], [70.4035, 28.0249], [70.1447, 27.8491], [69.5681, 27.1744], [69.47, 26.8046], [70.1567, 26.4713], [70.0777, 26.0718], [70.2646, 25.7064], [70.6521, 25.4228], [71.048, 24.6877], [71.044, 24.4001], [70.5469, 24.4183], [69.7163, 24.1728], [69.5592, 24.2731], [68.7282, 24.2656], [68.7242, 23.9646], [68.1649, 23.8572], [67.6687, 23.811], [67.3096, 24.175], [67.1715, 24.7561], [66.7032, 24.8608], [66.6988, 25.2261], [66.4284, 25.5755], [65.6796, 25.3553], [64.7767, 25.3074], [64.6591, 25.184], [63.7207, 25.3859], [63.4912, 25.2106], [62.5723, 25.2546], [62.3153, 25.1347], [61.5878, 25.2022], [61.6686, 25.769], [61.8697, 26.2422], [62.4392, 26.5609], [63.1681, 26.6657], [63.1667, 27.2525], [62.7632, 27.2503], [62.7397, 28.0023], [62.3531, 28.4146], [61.8901, 28.5465], [61.6229, 28.7915], [61.3184, 29.3725], [60.8434, 29.8586], [62.4765, 29.4085], [63.5676, 29.4982], [64.0989, 29.3921], [64.521, 29.5643], [65.0954, 29.5594], [66.1772, 29.8355], [66.3974, 30.9124], [66.9243, 31.3057], [67.2874, 31.2178], [67.5781, 31.5063], [68.2138, 31.8073], [68.869, 31.6342], [69.2791, 31.9369], [69.2414, 32.4336], [69.5015, 33.02], [69.9201, 33.1123], [70.2841, 33.3689], [69.8682, 33.8976], [71.0516, 34.0498], [70.9655, 34.5306], [71.6206, 35.1831], [71.4276, 35.8338], [71.1852, 36.042], [71.6206, 36.4366], [72.623, 36.8295], [73.7691, 36.8885], [74.0017, 36.8233], [74.5415, 37.0221], [75.3467, 36.9134], [75.8403, 36.6497], [75.945, 36.0176], [76.2518, 35.8108], [77.4467, 35.4756], [77.7992, 35.496]]]
            },
            "properties": {
                "name": "Pakistan",
                "id": "PK"
            },
            "id": "PK"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[56.388, 24.9793], [56.6406, 24.4702], [57.2199, 23.9229], [58.5782, 23.6437], [59.7998, 22.2201], [59.3714, 21.4988], [58.8956, 21.1126], [58.4743, 20.4068], [57.8618, 20.2439], [57.7153, 19.6069], [57.8116, 19.017], [57.1764, 18.9025], [56.6553, 18.5873], [56.551, 18.166], [56.2704, 17.9508], [55.479, 17.8433], [55.0644, 17.039], [54.0683, 17.0057], [53.6097, 16.7598], [53.0855, 16.6484], [52.729, 17.3005], [51.9775, 18.9961], [53.667, 19.559], [54.9774, 19.9958], [55.641, 22.0017], [55.186, 22.704], [55.1997, 23.0346], [55.7608, 24.2425], [55.7959, 24.8679], [56.064, 24.7388], [56.388, 24.9793]]]
            },
            "properties": {
                "name": "Oman",
                "id": "OM"
            },
            "id": "OM"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[173.1152, -41.2791], [173.738, -40.9888], [174.3026, -41.0194], [174.0922, -41.505], [174.2831, -41.7407], [173.5449, -42.518], [173.2213, -42.9765], [172.7184, -43.2589], [172.9208, -43.8914], [172.3855, -43.8297], [171.4426, -44.136], [171.1133, -45.0393], [170.7005, -45.6843], [169.6866, -46.5516], [168.382, -46.6054], [168.1889, -46.3621], [167.682, -46.193], [166.7316, -46.1979], [166.7338, -45.5436], [167.1946, -44.9634], [167.7872, -44.595], [168.3665, -44.0818], [168.8064, -43.9922], [169.6613, -43.5913], [170.3027, -43.1075], [170.7417, -42.9273], [171.2571, -42.4652], [171.4861, -41.7949], [172.0108, -41.4447], [172.1396, -40.9471], [172.6407, -40.5183], [172.9887, -40.8481], [173.1152, -41.2791]]], [[[173.2693, -34.935], [173.8441, -35.0264], [174.3204, -35.2466], [174.5437, -35.5822], [174.391, -35.7739], [174.802, -36.3093], [174.7226, -36.8411], [175.2996, -36.9933], [175.4608, -36.4757], [175.8762, -36.9578], [176.1084, -37.6449], [177.3358, -37.9907], [178.0091, -37.5548], [178.536, -37.692], [178.2679, -38.5509], [177.9763, -38.7223], [177.9656, -39.1426], [177.4077, -39.0809], [176.954, -39.3677], [177.1098, -39.6731], [176.8421, -40.1578], [175.9828, -41.2134], [175.3098, -41.6107], [174.6356, -41.2893], [175.1625, -40.6217], [175.2543, -40.2892], [175.0093, -39.9523], [173.9342, -39.5093], [173.8441, -39.1395], [174.5974, -38.7849], [174.9281, -37.8043], [174.7292, -37.4487], [174.782, -36.9436], [174.4758, -36.9418], [174.4469, -36.4509], [173.9453, -36.1761], [173.1166, -35.2053], [173.2693, -34.935]]]]
            },
            "properties": {
                "name": "New Zealand",
                "id": "NZ"
            },
            "id": "NZ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[20.898, 80.2499], [22.4507, 80.4022], [26.8608, 80.16], [27.1986, 79.9065], [25.641, 79.403], [23.9475, 79.1943], [20.8611, 79.3978], [18.7251, 79.7607], [18.3438, 80.0595], [20.898, 80.2499]]], [[[16.7867, 79.9068], [18.5813, 79.5716], [19.0896, 79.157], [20.4581, 79.1293], [21.3889, 78.7404], [19.7687, 78.6228], [18.4393, 78.0251], [16.7005, 76.5794], [14.3657, 77.2345], [14.921, 77.6889], [13.6807, 78.028], [11.7738, 78.7165], [10.866, 79.7965], [12.7535, 79.7758], [13.3838, 79.4809], [15.8163, 79.6819], [16.7867, 79.9068]]], [[[21.6082, 78.5957], [23.1166, 77.9916], [24.2383, 77.8986], [23.8414, 77.4978], [22.057, 77.5011], [21.6082, 77.9161], [20.2282, 78.4779], [21.6082, 78.5957]]]]
            },
            "properties": {
                "name": "Svalbard and Jan Mayen",
                "id": "SJ"
            },
            "id": "SJ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[166.9584, -0.5165], [166.9163, -0.5467], [166.9136, -0.4992], [166.9584, -0.5165]]]
            },
            "properties": {
                "name": "Nauru",
                "id": "NR"
            },
            "id": "NR"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[88.1099, 27.8704], [87.9843, 27.134], [88.1614, 26.7247], [88.0549, 26.43], [87.2874, 26.3603], [87.0166, 26.5556], [86.7014, 26.4349], [86.3663, 26.5743], [85.293, 26.7412], [84.6853, 27.0412], [84.6103, 27.2987], [84.0909, 27.4913], [83.2897, 27.371], [82.7335, 27.5189], [81.9877, 27.9139], [81.8528, 27.8669], [80.5868, 28.6494], [80.0706, 28.8301], [80.4017, 29.7303], [81.0103, 30.1645], [81.4169, 30.3376], [82.0432, 30.3269], [82.1591, 30.1152], [82.8542, 29.6833], [83.1556, 29.6127], [83.5835, 29.1834], [84.1016, 29.2198], [84.2285, 28.9118], [84.7141, 28.5957], [85.1589, 28.5922], [85.1225, 28.3161], [85.6783, 28.2775], [86.4089, 27.9286], [86.5545, 28.0853], [87.1413, 27.8385], [88.1099, 27.8704]]]
            },
            "properties": {
                "name": "Nepal",
                "id": "NP"
            },
            "id": "NP"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[30.8696, 69.7834], [28.9657, 69.0219], [29.1415, 69.6715], [27.8897, 70.0617], [26.5257, 69.915], [26.0116, 69.6526], [25.7484, 68.9901], [24.9414, 68.5933], [23.8539, 68.8059], [22.4108, 68.7198], [21.622, 69.2707], [20.6223, 69.037], [19.9698, 68.3565], [18.3785, 68.5624], [17.9168, 67.965], [17.3247, 68.1039], [16.1275, 67.4259], [16.4036, 67.055], [15.423, 66.4899], [14.5432, 66.1292], [14.4798, 65.3014], [13.6501, 64.5816], [14.0776, 64.464], [13.9604, 64.0141], [12.6625, 63.9404], [11.9997, 63.2917], [12.2181, 63.0007], [12.3034, 62.2856], [12.1555, 61.7207], [12.8809, 61.3523], [12.294, 61.0027], [12.5888, 60.4508], [12.4862, 60.1067], [11.6806, 59.5923], [11.7982, 59.29], [11.3885, 59.0365], [10.8345, 59.1839], [9.6182, 58.946], [8.1663, 58.1452], [7.0051, 58.0242], [5.7067, 58.5236], [5.8452, 59.3535], [5.1314, 59.2265], [5.2441, 60.5695], [5.0493, 60.7076], [4.9276, 61.7107], [5.5336, 62.3109], [6.353, 62.6112], [7.2838, 62.6023], [7.0086, 62.9576], [8.1006, 63.091], [8.398, 63.5351], [9.6968, 63.6246], [9.7079, 63.865], [11.3499, 64.9059], [12.1595, 65.1789], [12.2727, 65.5682], [12.9763, 66.0192], [13.1046, 66.5394], [14.755, 67.4991], [14.7989, 67.8094], [16.0644, 68.2], [16.6517, 68.6257], [18.1015, 69.1564], [18.2932, 69.4751], [20.0688, 69.8835], [21.163, 69.8895], [21.4005, 70.1744], [22.6847, 70.3749], [23.0464, 70.1019], [24.4198, 70.702], [24.6582, 71.001], [25.7684, 70.8531], [27.5972, 71.0913], [29.1024, 70.8607], [30.9442, 70.2745], [29.6014, 69.9767], [29.7923, 69.7279], [30.8696, 69.7834]]]
            },
            "properties": {
                "name": "Norway",
                "id": "NO"
            },
            "id": "NO"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-169.8034, -19.0832], [-169.9039, -19.1378], [-169.9483, -19.0729], [-169.834, -18.966], [-169.8034, -19.0832]]]
            },
            "properties": {
                "name": "Niue",
                "id": "NU"
            },
            "id": "NU"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-83.1576, 14.9931], [-83.2992, 14.749], [-83.1878, 14.3401], [-83.4124, 13.9966], [-83.5673, 13.3205], [-83.511, 12.4119], [-83.7693, 11.9316], [-83.6517, 11.6422], [-83.8679, 11.2999], [-83.6419, 10.9173], [-84.1684, 10.7806], [-84.3484, 10.9799], [-84.9092, 10.9453], [-85.6215, 11.1845], [-85.7444, 11.062], [-86.4688, 11.7385], [-86.7556, 12.1566], [-87.6676, 12.9037], [-87.3373, 12.9792], [-87.0592, 12.9916], [-86.7108, 13.3134], [-86.7336, 13.7635], [-86.3317, 13.7702], [-86.1512, 13.9948], [-85.7868, 13.8443], [-85.1796, 14.3432], [-84.9851, 14.7525], [-84.646, 14.6611], [-83.8674, 14.7947], [-83.1576, 14.9931]]]
            },
            "properties": {
                "name": "Nicaragua",
                "id": "NI"
            },
            "id": "NI"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[13.6062, 13.7045], [14.0638, 13.0786], [14.1974, 12.3839], [14.6271, 12.1087], [14.5597, 11.4921], [13.892, 11.1401], [13.5352, 10.6052], [13.2697, 10.0362], [13.1756, 9.5394], [12.9297, 9.4263], [12.8067, 8.8865], [12.4037, 8.5957], [12.0162, 7.5899], [11.7676, 7.272], [11.5518, 6.6972], [11.1532, 6.438], [11.0325, 6.6981], [10.6064, 7.063], [10.1438, 6.9964], [9.0603, 6.0092], [8.801, 5.1973], [8.556, 4.7552], [8.2932, 4.5576], [7.1546, 4.5146], [6.7569, 4.3437], [6.0764, 4.2904], [5.5877, 4.6473], [5.2326, 5.4836], [4.8611, 6.0265], [4.4314, 6.3487], [4.126, 6.4113], [2.7064, 6.3692], [2.7748, 6.7119], [2.686, 7.874], [2.7748, 9.0485], [3.0451, 9.084], [3.3252, 9.7783], [3.5573, 9.9074], [3.5764, 10.2683], [3.8343, 10.6074], [3.7163, 11.0797], [3.4877, 11.3954], [3.5955, 11.6963], [3.6466, 12.5299], [3.948, 12.775], [4.1477, 13.4577], [4.8233, 13.76], [5.4918, 13.8727], [6.3863, 13.6037], [6.8044, 13.1074], [7.0565, 13], [7.7885, 13.3378], [8.0953, 13.2912], [8.7504, 12.9081], [9.616, 12.8105], [10.1847, 13.2699], [10.9588, 13.3716], [11.412, 13.3538], [12.4632, 13.0937], [12.6549, 13.3267], [13.3239, 13.6707], [13.6062, 13.7045]]]
            },
            "properties": {
                "name": "Nigeria",
                "id": "NG"
            },
            "id": "NG"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[167.9394, -29.0175], [167.979, -29.0756], [167.9204, -29.0827], [167.9394, -29.0175]]]
            },
            "properties": {
                "name": "Norfolk Island",
                "id": "NF"
            },
            "id": "NF"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[14.9791, 22.996], [15.1722, 21.9223], [15.182, 21.5232], [15.6072, 20.9546], [15.5873, 20.7335], [15.949, 20.3034], [15.7351, 19.9039], [15.4745, 16.9085], [14.3679, 15.7499], [13.4481, 14.3805], [13.6062, 13.7045], [13.3239, 13.6707], [12.6549, 13.3267], [12.4632, 13.0937], [11.412, 13.3538], [10.9588, 13.3716], [10.1847, 13.2699], [9.616, 12.8105], [8.7504, 12.9081], [8.0953, 13.2912], [7.7885, 13.3378], [7.0565, 13], [6.8044, 13.1074], [6.3863, 13.6037], [5.4918, 13.8727], [4.8233, 13.76], [4.1477, 13.4577], [3.948, 12.775], [3.6466, 12.5299], [3.5955, 11.6963], [2.8782, 12.3679], [2.3659, 12.2219], [2.389, 11.897], [2.0912, 12.2778], [2.0739, 12.7142], [1.5652, 12.6356], [0.9872, 13.0418], [0.9779, 13.5518], [0.6183, 13.7036], [0.1638, 14.4973], [0.2175, 14.9114], [0.9601, 14.9869], [1.3002, 15.2723], [3.5041, 15.3562], [3.8769, 15.7553], [4.1823, 16.5818], [4.2347, 16.9964], [4.2276, 19.1426], [5.8367, 19.4791], [7.4818, 20.8729], [9.3785, 21.9915], [11.9678, 23.518], [13.4814, 23.1802], [14.2307, 22.6183], [14.9791, 22.996]]]
            },
            "properties": {
                "name": "Niger",
                "id": "NE"
            },
            "id": "NE"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[164.2023, -20.2462], [164.4358, -20.2821], [165.1918, -20.7691], [165.6627, -21.2671], [166.9425, -22.0901], [166.7742, -22.3759], [166.096, -21.9565], [165.2419, -21.5255], [164.4549, -20.829], [164.1699, -20.4801], [164.2023, -20.2462]]]
            },
            "properties": {
                "name": "New Caledonia",
                "id": "NC"
            },
            "id": "NC"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[23.3807, -17.6405], [24.2751, -17.4812], [24.9325, -17.5433], [25.2588, -17.7936], [24.359, -17.9783], [23.5804, -18.4528], [23.2986, -18.0276], [20.9739, -18.3188], [20.9779, -20.9684], [20.9708, -22], [19.9774, -22], [19.9805, -24.777], [19.9805, -26.5312], [19.9805, -28.4515], [19.6715, -28.5039], [19.2458, -28.9016], [18.1028, -28.8719], [17.4481, -28.6983], [17.3855, -28.3534], [17.0561, -28.0311], [16.7556, -28.4524], [16.4475, -28.6175], [15.7191, -27.9659], [15.3413, -27.3866], [14.9676, -26.3182], [14.8451, -25.7256], [14.8371, -25.0331], [14.5015, -24.2021], [14.474, -23.281], [14.5259, -22.7027], [14.3217, -22.19], [13.9733, -21.7678], [13.4504, -20.9169], [13.1685, -20.1845], [12.4583, -18.9269], [12.0956, -18.5412], [11.776, -18.0018], [11.7432, -17.2494], [12.5479, -17.2126], [13.101, -16.9676], [13.4038, -17.008], [13.9382, -17.3888], [16.9136, -17.3915], [18.3962, -17.3995], [18.8259, -17.7661], [19.6396, -17.8687], [20.3928, -17.8873], [20.625, -17.9965], [21.4169, -18.0005], [23.3807, -17.6405]]]
            },
            "properties": {
                "name": "Namibia",
                "id": "NA"
            },
            "id": "NA"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[45.1802, -12.9765], [45.0692, -12.8957], [45.1349, -12.7093], [45.2233, -12.7519], [45.1802, -12.9765]]]
            },
            "properties": {
                "name": "Mayotte",
                "id": "YT"
            },
            "id": "YT"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[102.1009, 6.2422], [102.9825, 5.5249], [103.4157, 4.8502], [103.4686, 4.3934], [103.362, 3.7693], [103.4397, 2.933], [103.8121, 2.5805], [104.2884, 1.4806], [103.6945, 1.4495], [102.7273, 1.8557], [101.2953, 2.8851], [101.2997, 3.2535], [100.7155, 3.9664], [100.6143, 4.6522], [100.3524, 5.5875], [100.3431, 5.9843], [100.119, 6.442], [100.3453, 6.5498], [101.0533, 6.2427], [101.2571, 5.7894], [101.5563, 5.908], [101.8737, 5.8254], [102.1009, 6.2422]]], [[[117.5746, 4.1706], [117.1005, 4.337], [115.8962, 4.3486], [115.5686, 3.9389], [115.4545, 3.0342], [115.0861, 2.8411], [115.1509, 2.4931], [114.7865, 2.2503], [114.8304, 1.98], [114.5459, 1.4673], [113.9022, 1.4344], [113.6222, 1.236], [112.476, 1.5592], [112.1857, 1.4393], [112.0783, 1.1432], [111.7698, 0.9994], [110.9379, 1.0172], [110.5056, 0.8618], [109.6542, 1.6151], [109.6289, 2.0275], [109.9845, 1.7176], [110.3493, 1.7198], [110.9402, 1.5174], [111.1541, 1.7389], [111.242, 2.4358], [111.7276, 2.854], [112.7375, 3.0706], [113.0446, 3.2051], [113.924, 4.2434], [114.0638, 4.5927], [114.6085, 4.0241], [114.8402, 4.3934], [114.7465, 4.7179], [115.0266, 4.8999], [115.1398, 4.8999], [115.5198, 5.049], [115.419, 5.413], [115.7968, 5.536], [116.1386, 6.1295], [116.4946, 6.5219], [117.294, 6.6768], [117.6456, 6.4735], [117.6172, 5.9408], [118.0038, 6.0531], [118.1157, 5.8627], [118.5946, 5.5919], [119.2236, 5.4126], [119.1322, 5.1005], [118.1854, 4.8284], [118.4979, 4.3623], [117.5746, 4.1706]]]]
            },
            "properties": {
                "name": "Malaysia",
                "id": "MY"
            },
            "id": "MY"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[34.9596, -11.5783], [34.6595, -11.5885], [34.3608, -12.2104], [34.5636, -13.3601], [35.2477, -13.8967], [35.8474, -14.6709], [35.7555, -16.0585], [35.3587, -16.1606], [35.1673, -16.5601], [35.2903, -17.0967], [34.3954, -16.1992], [34.248, -15.8876], [34.541, -15.2972], [34.5055, -14.5981], [34.3324, -14.4085], [33.6364, -14.5683], [33.2018, -14.0135], [32.9812, -14.0095], [32.6722, -13.6104], [32.9679, -13.2251], [33.0216, -12.6303], [33.398, -12.49], [33.2524, -12.1127], [33.2262, -11.5348], [33.3798, -11.1579], [33.2613, -10.8934], [33.659, -10.5906], [33.3509, -9.8622], [32.9199, -9.4072], [34.3208, -9.7317], [34.5241, -10.03], [34.6617, -10.71], [34.608, -11.0807], [34.9596, -11.5783]]]
            },
            "properties": {
                "name": "Malawi",
                "id": "MW"
            },
            "id": "MW"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[57.6514, -20.485], [57.3859, -20.2284], [57.5759, -19.9971], [57.7921, -20.2124], [57.6514, -20.485]]]
            },
            "properties": {
                "name": "Mauritius",
                "id": "MU"
            },
            "id": "MU"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-60.8263, 14.4946], [-61.0638, 14.4671], [-61.2198, 14.8044], [-60.9186, 14.7352], [-60.8263, 14.4946]]]
            },
            "properties": {
                "name": "Martinique",
                "id": "MQ"
            },
            "id": "MQ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-62.1484, 16.7403], [-62.1542, 16.6812], [-62.2217, 16.6994], [-62.223, 16.7518], [-62.1484, 16.7403]]]
            },
            "properties": {
                "name": "Montserrat",
                "id": "MS"
            },
            "id": "MS"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-12.2807, 14.8089], [-12.8584, 15.2426], [-13.2579, 15.7002], [-13.4095, 16.0593], [-13.8685, 16.1481], [-14.3, 16.5805], [-15.1128, 16.6448], [-15.6208, 16.5068], [-16.1683, 16.5472], [-16.4411, 16.2045], [-16.5352, 15.8383], [-16.5356, 16.2866], [-16.0789, 17.5459], [-16.0849, 18.5212], [-16.2132, 19.0032], [-16.5146, 19.3619], [-16.2835, 19.7871], [-16.2105, 20.2279], [-16.4298, 20.6523], [-17.0481, 20.8063], [-16.9647, 21.3292], [-15.0018, 21.3314], [-13.0163, 21.3341], [-13.0944, 22.4958], [-13.0316, 23], [-12.6203, 23.2712], [-12.0235, 23.4674], [-12.0164, 25.9954], [-10.5624, 25.9954], [-8.6821, 25.9954], [-8.6834, 27.2858], [-6.2387, 25.848], [-4.8227, 24.9958], [-6.594, 24.9944], [-6.3113, 22.5291], [-6.1404, 21.0367], [-5.8556, 18.5505], [-5.6286, 16.5685], [-5.36, 16.2831], [-5.5125, 15.4965], [-7.3555, 15.496], [-9.1768, 15.496], [-9.9414, 15.374], [-10.6965, 15.4228], [-10.8956, 15.1502], [-11.5026, 15.6367], [-11.7603, 15.4255], [-11.8728, 14.9953], [-12.2807, 14.8089]]]
            },
            "properties": {
                "name": "Mauritania",
                "id": "MR"
            },
            "id": "MR"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[32.8862, -26.8495], [32.1129, -26.8393], [31.9482, -25.9577], [31.986, -24.4605], [31.7995, -23.8923], [31.5456, -23.4821], [31.2877, -22.4021], [32.3713, -21.335], [32.4778, -20.7131], [33.0069, -19.8737], [32.7166, -19.0019], [32.9932, -18.3596], [32.9479, -16.7123], [32.2434, -16.4487], [31.9398, -16.4287], [31.2362, -16.0239], [30.4377, -15.9954], [30.3959, -15.643], [30.2317, -14.9905], [31.729, -14.496], [33.2018, -14.0135], [33.6364, -14.5683], [34.3324, -14.4085], [34.5055, -14.5981], [34.541, -15.2972], [34.248, -15.8876], [34.3954, -16.1992], [35.2903, -17.0967], [35.1673, -16.5601], [35.3587, -16.1606], [35.7555, -16.0585], [35.8474, -14.6709], [35.2477, -13.8967], [34.5636, -13.3601], [34.3608, -12.2104], [34.6595, -11.5885], [34.9596, -11.5783], [35.6312, -11.5818], [35.7852, -11.4531], [36.5185, -11.7163], [36.9789, -11.5667], [37.5417, -11.675], [37.9204, -11.2946], [38.4917, -11.4131], [38.7948, -11.2289], [39.3217, -11.1224], [39.9889, -10.821], [40.4634, -10.4641], [40.5447, -11.0656], [40.403, -11.3319], [40.5806, -12.6356], [40.5451, -13.463], [40.6401, -14.3899], [40.835, -14.7916], [40.5589, -15.4734], [40.1087, -15.9795], [39.8446, -16.4358], [39.0842, -16.9729], [38.145, -17.2428], [37.2443, -17.7399], [36.5403, -18.5181], [35.6512, -19.1639], [34.9481, -19.8129], [34.7559, -19.8218], [34.6981, -20.4042], [34.9822, -20.8063], [35.2677, -21.6511], [35.3156, -22.3968], [35.5753, -22.9632], [35.3702, -23.7982], [35.4381, -24.171], [35.1558, -24.5413], [34.6072, -24.8214], [33.3474, -25.2608], [32.7921, -25.6443], [32.5905, -26.0039], [32.9337, -26.2525], [32.8862, -26.8495]]]
            },
            "properties": {
                "name": "Mozambique",
                "id": "MZ"
            },
            "id": "MZ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[145.7519, 15.1334], [145.6845, 15.1249], [145.7133, 15.2155], [145.7821, 15.1747], [145.7519, 15.1334]]]
            },
            "properties": {
                "name": "Northern Mariana Islands",
                "id": "MP"
            },
            "id": "MP"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[116.6832, 49.8238], [115.5575, 47.945], [115.8984, 47.6871], [116.7605, 47.87], [117.3508, 47.652], [117.7685, 47.988], [118.4983, 47.9841], [119.711, 47.15], [119.8979, 46.8579], [119.7066, 46.6062], [118.3088, 46.7172], [117.3335, 46.3621], [116.5625, 46.2897], [116.2407, 45.7961], [115.6809, 45.4583], [114.517, 45.3646], [114.0305, 44.9425], [113.5871, 44.7459], [111.8981, 45.0641], [111.4022, 44.3672], [111.9331, 43.7116], [111.0072, 43.3414], [110.4004, 42.7736], [109.4434, 42.4558], [108.1712, 42.4474], [106.7702, 42.2889], [105.1971, 41.738], [104.4984, 41.6586], [104.4984, 41.877], [103.7109, 41.7514], [103.0726, 42.0062], [101.9731, 42.2157], [101.7139, 42.4656], [99.984, 42.6773], [99.4678, 42.5681], [97.2057, 42.7896], [96.3854, 42.7204], [95.9126, 43.2064], [95.3502, 44.278], [94.7119, 44.3508], [93.6563, 44.9008], [92.7876, 45.0357], [91.5842, 45.0766], [90.8771, 45.196], [90.6618, 45.5253], [91.0019, 46.0358], [91.0338, 46.529], [90.87, 46.9547], [90.4963, 47.2854], [90.3134, 47.676], [89.561, 48.004], [89.0478, 48.0027], [88.517, 48.3844], [87.9798, 48.5549], [87.8143, 49.1624], [88.1925, 49.4518], [88.8317, 49.4485], [89.6542, 49.7175], [89.644, 49.903], [91.8044, 50.6936], [94.2511, 50.5564], [94.6147, 50.0237], [95.5229, 49.9112], [95.8518, 50.0129], [96.986, 49.8828], [97.2088, 49.7308], [98.1032, 50.0779], [98.2795, 50.5333], [97.8254, 50.9852], [97.947, 51.3483], [98.8485, 52.0701], [100.4687, 51.7261], [101.3814, 51.4526], [102.1116, 51.3534], [102.2883, 50.585], [102.6833, 50.3871], [103.6328, 50.1387], [105.3835, 50.4736], [106.218, 50.3045], [106.7112, 50.3125], [107.2332, 49.9893], [107.9479, 49.9247], [108.034, 49.594], [108.6137, 49.3228], [109.2365, 49.3348], [110.1997, 49.1704], [110.8279, 49.1661], [111.3366, 49.3559], [113.0557, 49.6162], [113.1641, 49.7971], [114.2969, 50.2743], [114.743, 50.2337], [115.2743, 49.9489], [116.1346, 50.0109], [116.6832, 49.8238]]]
            },
            "properties": {
                "name": "Mongolia",
                "id": "MN"
            },
            "id": "MN"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[19.1943, 43.5331], [19.5517, 43.2122], [20.3445, 42.8278], [20.0639, 42.5473], [19.6546, 42.6285], [19.2809, 42.1726], [19.3426, 41.869], [18.5174, 42.4327], [18.4362, 42.5597], [18.4437, 42.9685], [18.9404, 43.4967], [19.1943, 43.5331]]]
            },
            "properties": {
                "name": "Montenegro",
                "id": "ME"
            },
            "id": "ME"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[101.139, 21.5676], [100.7564, 21.3128], [100.2495, 20.7304], [100.1225, 20.3167], [99.8904, 20.4246], [99.3382, 20.0788], [99.0208, 20.0419], [98.9169, 19.7729], [98.1112, 19.7623], [97.8169, 19.46], [97.7539, 18.621], [97.4849, 18.4941], [97.793, 17.6813], [98.4388, 16.9755], [98.6892, 16.3052], [98.5653, 15.4037], [98.1911, 15.204], [98.2462, 14.8147], [99.1366, 13.7165], [99.2196, 12.7399], [99.4052, 12.5477], [99.6147, 11.7811], [99.1903, 11.1051], [98.7571, 10.6612], [98.7025, 10.1902], [98.465, 10.6758], [98.6754, 10.987], [98.7416, 11.5916], [98.576, 13.162], [98.2453, 13.7333], [97.8121, 14.859], [97.7104, 15.8756], [97.5843, 16.0194], [97.6194, 16.5374], [97.3757, 16.5228], [97.1782, 17.0621], [96.6224, 16.564], [95.7635, 16.169], [95.3897, 15.7229], [94.9427, 15.8183], [94.5876, 16.2888], [94.2143, 16.1268], [94.589, 17.5695], [94.4309, 18.2016], [94.07, 18.8936], [93.7056, 19.0267], [93.9981, 19.4409], [93.3625, 20.0584], [93.002, 20.0748], [92.7357, 20.5626], [92.3242, 20.7917], [92.1795, 21.2933], [92.5937, 21.4673], [92.575, 21.9782], [92.9643, 22.0039], [93.1618, 22.3604], [93.0788, 22.7182], [93.366, 23.1323], [93.4149, 23.6823], [93.3074, 24.0219], [94.1277, 23.8763], [94.2929, 24.3219], [94.7075, 25.0486], [94.6227, 25.4099], [95.1323, 26.0411], [95.1287, 26.5973], [96.0613, 27.217], [96.6659, 27.3391], [97.3353, 27.9379], [97.3224, 28.218], [97.5377, 28.5101], [98.0988, 28.1421], [98.299, 27.5499], [98.651, 27.5726], [98.7318, 26.5836], [98.6546, 25.9177], [98.0109, 25.2923], [97.8196, 25.2519], [97.5315, 24.4915], [97.686, 23.898], [98.2124, 24.1106], [98.7642, 24.116], [98.8636, 23.1913], [99.3408, 23.0959], [99.3377, 22.498], [99.193, 22.126], [99.9179, 22.0279], [100.2148, 21.4628], [101.139, 21.5676]]]
            },
            "properties": {
                "name": "Myanmar",
                "id": "MM"
            },
            "id": "MM"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[14.5663, 35.8529], [14.4363, 35.8219], [14.3524, 35.8725], [14.4482, 35.9572], [14.5663, 35.8529]]]
            },
            "properties": {
                "name": "Malta",
                "id": "MT"
            },
            "id": "MT"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[4.2276, 19.1426], [4.2347, 16.9964], [4.1823, 16.5818], [3.8769, 15.7553], [3.5041, 15.3562], [1.3002, 15.2723], [0.9601, 14.9869], [0.2175, 14.9114], [-0.2359, 15.0592], [-0.7604, 15.0477], [-1.0496, 14.8195], [-1.7678, 14.4862], [-2.1132, 14.1684], [-2.4572, 14.274], [-3.1985, 13.673], [-3.3017, 13.2806], [-3.5758, 13.194], [-4.0512, 13.3822], [-4.3286, 13.119], [-4.2272, 12.7936], [-4.4807, 12.6724], [-4.4287, 12.3377], [-4.798, 12.0319], [-5.2881, 11.8277], [-5.2999, 11.2058], [-5.4905, 11.0425], [-5.5236, 10.4259], [-6.0345, 10.1946], [-6.2611, 10.7242], [-6.6932, 10.3495], [-7.1049, 10.2035], [-7.6611, 10.4272], [-7.9907, 10.1627], [-8.2315, 10.4379], [-8.4075, 11.3865], [-8.8219, 11.6732], [-9.043, 12.4025], [-9.8207, 12.0426], [-10.2748, 12.2126], [-10.6774, 11.8996], [-10.9333, 12.205], [-11.3053, 12.0155], [-11.3894, 12.4043], [-11.3903, 12.9419], [-11.6349, 13.3698], [-12.0543, 13.633], [-12.0193, 14.2065], [-12.2807, 14.8089], [-11.8728, 14.9953], [-11.7603, 15.4255], [-11.5026, 15.6367], [-10.8956, 15.1502], [-10.6965, 15.4228], [-9.9414, 15.374], [-9.1768, 15.496], [-7.3555, 15.496], [-5.5125, 15.4965], [-5.36, 16.2831], [-5.6286, 16.5685], [-5.8556, 18.5505], [-6.1404, 21.0367], [-6.3113, 22.5291], [-6.594, 24.9944], [-4.8227, 24.9958], [-3.2579, 23.981], [-1.2931, 22.6964], [1.1457, 21.1024], [1.1657, 20.8174], [1.6855, 20.3784], [2.2195, 20.2479], [2.4063, 20.0637], [3.2036, 19.7898], [3.2559, 19.4107], [3.1059, 19.1502], [3.4007, 18.9886], [4.2276, 19.1426]]]
            },
            "properties": {
                "name": "Mali",
                "id": "ML"
            },
            "id": "ML"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[22.3442, 42.3138], [22.8369, 41.9937], [23.0056, 41.7172], [22.9159, 41.3363], [22.7246, 41.1783], [21.9296, 41.1073], [21.5758, 40.8689], [20.9641, 40.8498], [20.4892, 41.2724], [20.566, 41.8739], [21.0596, 42.1713], [21.5625, 42.2476], [22.3442, 42.3138]]]
            },
            "properties": {
                "name": "North Macedonia",
                "id": "MK"
            },
            "id": "MK"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[171.1017, 7.1384], [171.2269, 7.0869], [171.2025, 7.0736], [171.0955, 7.1091], [171.1017, 7.1384]]]
            },
            "properties": {
                "name": "Marshall Islands",
                "id": "MH"
            },
            "id": "MH"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-97.1462, 25.9617], [-97.5071, 25.0144], [-97.6676, 24.3899], [-97.8578, 22.6245], [-97.6376, 21.6035], [-97.1214, 20.615], [-96.456, 19.8697], [-96.2895, 19.3437], [-95.821, 18.7546], [-95.1818, 18.7005], [-94.798, 18.5145], [-94.5461, 18.1749], [-94.189, 18.1953], [-93.5523, 18.4306], [-92.8849, 18.4688], [-92.7102, 18.6117], [-91.9738, 18.716], [-91.8031, 18.4706], [-91.2753, 18.6246], [-91.343, 18.9007], [-90.7393, 19.3521], [-90.5072, 19.9119], [-90.4841, 20.5564], [-90.3531, 21.0096], [-89.8198, 21.2746], [-88.8787, 21.414], [-88.1317, 21.616], [-86.8242, 21.4215], [-86.8648, 20.8849], [-87.4672, 20.1023], [-87.4248, 19.5834], [-87.7619, 18.4461], [-88.1967, 18.7196], [-88.2957, 18.4723], [-88.523, 18.4457], [-88.8064, 17.9654], [-89.1615, 17.8149], [-90.9892, 17.8163], [-90.993, 17.2525], [-91.4096, 17.2561], [-90.7107, 16.7083], [-90.417, 16.3909], [-90.4472, 16.0726], [-91.7365, 16.07], [-92.1871, 15.3207], [-92.0748, 15.0743], [-92.2352, 14.5452], [-92.809, 15.1387], [-93.916, 16.0536], [-94.3741, 16.2848], [-94.6615, 16.2018], [-94.9004, 16.4176], [-95.4643, 15.9745], [-96.5108, 15.6518], [-97.1846, 15.9093], [-97.7548, 15.967], [-98.5203, 16.3048], [-98.7622, 16.5347], [-99.6906, 16.7198], [-100.0244, 16.9205], [-100.8478, 17.2006], [-101.6002, 17.6516], [-101.847, 17.9223], [-102.6995, 18.0626], [-103.4415, 18.3254], [-103.9125, 18.8283], [-104.9385, 19.3095], [-105.4821, 19.9762], [-105.6694, 20.3855], [-105.237, 21.1193], [-105.2086, 21.4908], [-105.6492, 21.988], [-105.7917, 22.6276], [-106.4023, 23.1958], [-106.9354, 23.8812], [-107.9512, 24.6149], [-108.3736, 25.1942], [-109.385, 25.7273], [-109.4256, 26.0327], [-109.1997, 26.3052], [-109.4829, 26.7105], [-109.7548, 26.703], [-109.9441, 27.0794], [-110.4779, 27.3227], [-110.5298, 27.8642], [-111.1215, 27.9672], [-111.6801, 28.4706], [-112.1618, 29.0188], [-112.2235, 29.2696], [-112.7384, 29.9856], [-113.1104, 30.7934], [-113.0467, 31.1792], [-114.1493, 31.5072], [-114.8395, 31.7984], [-114.8819, 31.1565], [-114.6334, 30.5067], [-114.6498, 30.2381], [-114.3726, 29.8302], [-113.7556, 29.3677], [-113.4997, 28.9269], [-112.8709, 28.4244], [-112.7339, 27.826], [-112.3291, 27.5233], [-112.0091, 26.9671], [-111.5696, 26.7074], [-111.2917, 25.7899], [-111.0345, 25.5271], [-110.6774, 24.7885], [-110.5471, 24.2141], [-110.0229, 24.1746], [-109.421, 23.4803], [-109.458, 23.2149], [-109.9234, 22.8859], [-110.3627, 23.6051], [-111.4194, 24.329], [-112.0725, 24.84], [-112.0557, 25.488], [-112.3773, 26.2138], [-113.0207, 26.5831], [-113.2058, 26.857], [-113.5986, 26.7212], [-113.841, 26.9667], [-114.4454, 27.2183], [-114.9936, 27.7359], [-114.3007, 27.8731], [-114.0485, 28.4262], [-114.1455, 28.6055], [-114.9936, 29.3845], [-115.6738, 29.7565], [-116.0622, 30.8041], [-116.6622, 31.5649], [-117.1282, 32.5335], [-114.7248, 32.7155], [-114.836, 32.5082], [-112.939, 31.916], [-111.042, 31.3243], [-108.2145, 31.3292], [-108.2118, 31.7793], [-106.4533, 31.77], [-106.2558, 31.5445], [-104.9179, 30.5835], [-104.504, 29.6775], [-104.1107, 29.3863], [-103.2577, 29.001], [-102.892, 29.2163], [-102.7342, 29.6438], [-102.269, 29.871], [-101.4404, 29.7769], [-100.6587, 29.0685], [-100.2961, 28.3276], [-99.5053, 27.5482], [-99.4436, 27.0368], [-99.1078, 26.4469], [-98.0828, 26.0642], [-97.3582, 25.8707], [-97.1462, 25.9617]]]
            },
            "properties": {
                "name": "Mexico",
                "id": "MX"
            },
            "id": "MX"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[73.5121, 4.1644], [73.473, 4.1706], [73.5041, 4.2345], [73.5285, 4.2434], [73.5121, 4.1644]]]
            },
            "properties": {
                "name": "Maldives",
                "id": "MV"
            },
            "id": "MV"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[49.5383, -12.4323], [49.9374, -13.0724], [50.174, -14.0401], [50.2353, -14.7321], [50.4829, -15.3855], [50.2091, -15.9604], [49.8926, -15.4579], [49.6498, -15.5671], [49.8389, -16.4864], [49.4491, -17.2406], [49.478, -17.8984], [48.6071, -20.4574], [48.3509, -21.3488], [47.9084, -22.4661], [47.5581, -23.8745], [47.1773, -24.7872], [46.7285, -25.1498], [46.1586, -25.2306], [45.5078, -25.5631], [45.1154, -25.5431], [44.8131, -25.334], [44.3457, -25.2262], [44.0354, -24.9958], [43.6874, -24.3579], [43.7225, -23.5296], [43.398, -22.8864], [43.2666, -22.0492], [43.5019, -21.3563], [43.8556, -21.0767], [44.4047, -19.9221], [44.4487, -19.4285], [44.2387, -19.0752], [44.2329, -18.7405], [44.0399, -18.2886], [43.9795, -17.3915], [44.4216, -16.7026], [44.4762, -16.2174], [44.9094, -16.1743], [45.1669, -15.983], [45.5984, -15.9928], [45.7, -15.8139], [46.3317, -15.7136], [46.475, -15.5134], [47.8116, -14.5448], [47.9954, -13.9606], [48.7966, -13.2673], [48.8996, -12.4585], [49.2072, -12.0794], [49.5383, -12.4323]]]
            },
            "properties": {
                "name": "Madagascar",
                "id": "MG"
            },
            "id": "MG"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[28.2124, 45.4503], [28.0997, 45.9728], [28.2444, 46.4513], [28.0717, 46.9786], [27.3366, 47.6396], [26.9806, 48.155], [26.6189, 48.2597], [27.5493, 48.4777], [29.1948, 47.8824], [29.1597, 47.4558], [29.5494, 47.2467], [29.8779, 46.829], [29.838, 46.3505], [29.1464, 46.5268], [28.9475, 46.05], [28.2124, 45.4503]]]
            },
            "properties": {
                "name": "Moldova",
                "id": "MD"
            },
            "id": "MD"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[7.4387, 43.7507], [7.3779, 43.7316], [7.4143, 43.7711], [7.4387, 43.7507]]]
            },
            "properties": {
                "name": "Monaco",
                "id": "MC"
            },
            "id": "MC"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-2.2197, 35.1041], [-1.7955, 34.7521], [-1.6792, 33.3187], [-1.5099, 32.8775], [-1.0656, 32.4683], [-1.2753, 32.0892], [-2.4485, 32.13], [-2.9308, 32.0426], [-3.0174, 31.8344], [-3.8268, 31.6617], [-3.8335, 31.1978], [-4.3228, 30.6989], [-4.9683, 30.4654], [-5.4488, 29.9567], [-6.5008, 29.8093], [-6.6353, 29.5687], [-7.095, 29.6251], [-7.6851, 29.3495], [-8.6599, 28.7187], [-8.6834, 27.6565], [-13.1774, 27.652], [-12.949, 27.9144], [-11.986, 28.1292], [-11.4302, 28.3822], [-11.0809, 28.7138], [-10.4865, 29.0649], [-9.6671, 30.1094], [-9.6529, 30.4477], [-9.8755, 30.718], [-9.8087, 31.4247], [-9.3475, 32.0865], [-9.2458, 32.5726], [-8.5962, 33.1874], [-6.901, 33.969], [-6.3532, 34.776], [-5.9249, 35.7859], [-5.3973, 35.9297], [-5.1054, 35.4676], [-4.3299, 35.1613], [-3.6932, 35.2799], [-2.84, 35.1281], [-2.2197, 35.1041]]]
            },
            "properties": {
                "name": "Morocco",
                "id": "MA"
            },
            "id": "MA"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-63.0111, 18.0688], [-63.123, 18.0688], [-63.0631, 18.1154], [-63.0111, 18.0688]]]
            },
            "properties": {
                "name": "Saint Martin",
                "id": "MF"
            },
            "id": "MF"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[113.4788, 22.1957], [113.4943, 22.2414], [113.5467, 22.2241], [113.4788, 22.1957]]]
            },
            "properties": {
                "name": "Macau",
                "id": "MO"
            },
            "id": "MO"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[27.3517, 57.5282], [27.797, 57.3169], [27.8063, 56.867], [28.1481, 56.143], [27.5768, 55.7988], [26.5936, 55.6676], [24.9032, 56.3982], [24.1206, 56.2642], [22.0845, 56.4067], [21.0462, 56.07], [21.0711, 56.8237], [21.7285, 57.571], [22.5546, 57.7242], [23.6479, 56.9711], [24.4034, 57.3251], [24.3226, 57.8706], [25.111, 58.0635], [25.9912, 57.8382], [26.5328, 57.5311], [27.3517, 57.5282]]]
            },
            "properties": {
                "name": "Latvia",
                "id": "LV"
            },
            "id": "LV"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[6.1164, 50.1209], [6.4875, 49.7985], [6.3441, 49.4527], [5.7897, 49.5383], [5.744, 49.9196], [6.1164, 50.1209]]]
            },
            "properties": {
                "name": "Luxembourg",
                "id": "LU"
            },
            "id": "LU"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[26.5936, 55.6676], [26.175, 55.0033], [25.8594, 54.9192], [25.5473, 54.3317], [24.7683, 53.9746], [23.4845, 53.9398], [23.37, 54.2005], [22.7663, 54.3568], [22.8311, 54.8384], [21.2358, 55.2641], [21.0462, 56.07], [22.0845, 56.4067], [24.1206, 56.2642], [24.9032, 56.3982], [26.5936, 55.6676]]]
            },
            "properties": {
                "name": "Lithuania",
                "id": "LT"
            },
            "id": "LT"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[27.8303, -28.9091], [28.6257, -28.5816], [29.3013, -29.0898], [29.3905, -29.2696], [29.098, -29.919], [28.3922, -30.1476], [28.018, -30.6421], [27.3886, -30.3158], [27.0517, -29.6642], [27.2945, -29.5195], [27.8303, -28.9091]]]
            },
            "properties": {
                "name": "Lesotho",
                "id": "LS"
            },
            "id": "LS"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[79.9822, 9.8129], [80.253, 9.7965], [80.7111, 9.3663], [81.373, 8.4315], [81.436, 8.119], [81.8741, 7.2885], [81.8612, 6.9014], [81.6375, 6.4251], [80.724, 5.979], [80.0954, 6.153], [79.8593, 6.8295], [79.7923, 7.5854], [79.929, 8.8994], [80.1185, 9.3268], [79.9822, 9.8129]]]
            },
            "properties": {
                "name": "Sri Lanka",
                "id": "LK"
            },
            "id": "LK"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[9.5801, 47.0572], [9.4877, 47.0621], [9.5277, 47.2707], [9.5801, 47.0572]]]
            },
            "properties": {
                "name": "Liechtenstein",
                "id": "LI"
            },
            "id": "LI"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-60.8953, 13.8221], [-61.0636, 13.9158], [-60.8867, 14.0112], [-60.8953, 13.8221]]]
            },
            "properties": {
                "name": "Saint Lucia",
                "id": "LC"
            },
            "id": "LC"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[25.1505, 31.655], [24.8526, 31.335], [24.9738, 30.7766], [24.7115, 30.1316], [24.9805, 29.1817], [24.9805, 27.8345], [24.9805, 25.8134], [24.9805, 24.2416], [24.9805, 21.9959], [24.9796, 20.0024], [23.9804, 19.9958], [23.9804, 19.4968], [21.5847, 20.6794], [19.6684, 21.6257], [17.7521, 22.5721], [15.9841, 23.4452], [14.9791, 22.996], [14.2307, 22.6183], [13.4814, 23.1802], [11.9678, 23.518], [11.5075, 24.3144], [10.6863, 24.5514], [10.2557, 24.5909], [10.0009, 25.3322], [9.4482, 26.0673], [9.4913, 26.3337], [9.8593, 26.5521], [9.7474, 27.3306], [9.9161, 27.7856], [9.8424, 28.9668], [9.6724, 29.567], [9.3102, 30.1152], [9.5188, 30.2293], [9.8952, 30.3873], [10.2162, 30.7832], [10.115, 31.4637], [10.8265, 32.0807], [11.5048, 32.4137], [11.5043, 33.182], [12.2798, 32.8584], [12.7535, 32.8012], [13.2835, 32.9148], [14.2369, 32.6813], [14.5135, 32.5109], [15.1767, 32.391], [15.4963, 31.6568], [16.123, 31.2644], [17.3491, 31.0815], [18.1902, 30.7775], [18.9364, 30.2905], [19.2915, 30.2879], [19.7132, 30.4885], [20.1509, 31.0784], [19.9263, 31.8175], [20.1216, 32.2188], [20.621, 32.5801], [21.6357, 32.9374], [22.1875, 32.9184], [23.0908, 32.6187], [23.2866, 32.2139], [24.1295, 32.0093], [24.6839, 32.0159], [25.1505, 31.655]]]
            },
            "properties": {
                "name": "Libya",
                "id": "LY"
            },
            "id": "LY"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-8.4863, 7.5584], [-8.2966, 7.0741], [-8.3325, 6.8015], [-8.6035, 6.5077], [-7.8886, 6.2347], [-7.7965, 5.975], [-7.4543, 5.8414], [-7.4299, 5.3247], [-7.5688, 5.0805], [-7.5451, 4.3512], [-8.2591, 4.59], [-9.1322, 5.0548], [-10.2763, 6.0775], [-11.5075, 6.9067], [-11.2678, 7.2325], [-10.6474, 7.7594], [-10.2832, 8.4852], [-9.7683, 8.5345], [-9.5182, 8.3463], [-9.369, 7.6396], [-9.4598, 7.4425], [-9.1175, 7.2157], [-8.8896, 7.2627], [-8.7083, 7.6591], [-8.4863, 7.5584]]]
            },
            "properties": {
                "name": "Liberia",
                "id": "LR"
            },
            "id": "LR"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[35.8691, 33.4319], [35.411, 33.0755], [35.1087, 33.0835], [35.9761, 34.6291], [36.4329, 34.6136], [36.5851, 34.2212], [35.9424, 33.6676], [35.8691, 33.4319]]]
            },
            "properties": {
                "name": "Lebanon",
                "id": "LB"
            },
            "id": "LB"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[102.1276, 22.379], [102.9488, 21.5698], [102.8511, 21.2657], [103.1046, 20.8915], [103.635, 20.6971], [104.0518, 20.9413], [104.5832, 20.6465], [104.6187, 20.3744], [104.9281, 20.018], [104.5463, 19.6105], [104.0319, 19.6753], [103.8965, 19.3401], [104.7163, 18.8035], [105.115, 18.6787], [105.0857, 18.4501], [105.4581, 18.1545], [105.6916, 17.7377], [106.5021, 16.9542], [106.6961, 16.4588], [107.3966, 16.0429], [107.1897, 15.7473], [107.6531, 15.255], [107.5195, 14.705], [106.82, 14.3148], [106.5012, 14.5781], [105.9788, 14.3432], [105.9046, 13.9247], [105.1833, 14.3464], [105.4754, 14.5301], [105.5131, 15.3606], [105.6223, 15.6998], [105.4062, 15.9874], [105.047, 16.1601], [104.7505, 16.6475], [104.8162, 17.3005], [103.9497, 18.3192], [103.3669, 18.4235], [103.0913, 18.1381], [102.7175, 17.8922], [102.1014, 18.2104], [101.1053, 17.4793], [100.9086, 17.5837], [101.1133, 18.0333], [101.0507, 18.4071], [101.2864, 18.977], [101.1546, 19.5794], [100.6254, 19.4999], [100.3977, 19.7561], [100.5429, 20.0885], [100.1225, 20.3167], [100.2495, 20.7304], [100.7564, 21.3128], [101.139, 21.5676], [101.2242, 21.2236], [101.705, 21.1503], [101.744, 21.778], [101.5243, 22.2538], [101.6712, 22.4625], [102.1276, 22.379]]]
            },
            "properties": {
                "name": "Lao People's Democratic Republic",
                "id": "LA"
            },
            "id": "LA"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[48.4424, 28.5429], [47.6713, 28.5331], [47.4334, 28.9895], [46.5314, 29.0964], [46.9056, 29.5377], [47.1143, 29.9611], [47.6727, 30.0956], [47.9785, 29.9829], [47.9696, 29.6167], [48.1836, 28.9793], [48.4424, 28.5429]]]
            },
            "properties": {
                "name": "Kuwait",
                "id": "KW"
            },
            "id": "KW"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[21.5625, 42.2476], [21.0596, 42.1713], [20.566, 41.8739], [20.4856, 42.2232], [20.0639, 42.5473], [20.3445, 42.8278], [21.0569, 43.0915], [21.3907, 42.7515], [21.7529, 42.6698], [21.5625, 42.2476]]]
            },
            "properties": {
                "name": "Kosovo",
                "id": "XK"
            },
            "id": "XK"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[128.3745, 38.6233], [128.619, 38.1763], [129.335, 37.2747], [129.4735, 36.742], [129.4034, 36.0522], [129.5619, 35.9475], [129.2143, 35.1818], [128.5112, 35.101], [128.4442, 34.8706], [127.7148, 34.9545], [127.0308, 34.6069], [126.4817, 34.4937], [126.2913, 35.1542], [126.7174, 35.769], [126.5483, 36.4775], [126.2171, 36.8708], [126.7463, 37.1935], [126.634, 37.7816], [127.1697, 38.3045], [128.0389, 38.3085], [128.3745, 38.6233]]]
            },
            "properties": {
                "name": "South Korea",
                "id": "KR"
            },
            "id": "KR"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-62.6307, 17.2401], [-62.8389, 17.3391], [-62.7945, 17.4025], [-62.7137, 17.3533], [-62.6307, 17.2401]]]
            },
            "properties": {
                "name": "Saint Kitts and Nevis",
                "id": "KN"
            },
            "id": "KN"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-157.3422, 1.8557], [-157.2461, 1.7318], [-157.4201, 1.7873], [-157.3422, 1.8557]]]
            },
            "properties": {
                "name": "Kiribati",
                "id": "KI"
            },
            "id": "KI"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[104.4265, 10.4112], [104.2622, 10.5413], [103.532, 10.6048], [103.722, 10.8902], [103.5325, 11.1468], [103.153, 10.9137], [103.1254, 11.4606], [102.9341, 11.7065], [102.7366, 12.0896], [102.7557, 12.4261], [102.4995, 12.6698], [102.3198, 13.5398], [102.729, 13.8421], [103.1996, 14.3326], [104.7789, 14.428], [105.1833, 14.3464], [105.9046, 13.9247], [105.9788, 14.3432], [106.5012, 14.5781], [106.82, 14.3148], [107.5195, 14.705], [107.3313, 14.1266], [107.6056, 13.4377], [107.4756, 13.0302], [107.5062, 12.3644], [106.9305, 12.0776], [106.4138, 11.9484], [106.3401, 11.6817], [105.8514, 11.6351], [105.8558, 11.2941], [106.1679, 11.0123], [105.3866, 10.9399], [104.8504, 10.5347], [104.4265, 10.4112]]]
            },
            "properties": {
                "name": "Cambodia",
                "id": "KH"
            },
            "id": "KH"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[80.2095, 42.1899], [80.2162, 42.0323], [79.2938, 41.7829], [78.3625, 41.3718], [78.1232, 41.0758], [76.8239, 40.9821], [76.4804, 40.4494], [75.8718, 40.3034], [75.5837, 40.6052], [75.0044, 40.4494], [74.4118, 40.1374], [73.9915, 40.0433], [73.9147, 39.6065], [73.6315, 39.4489], [73.2351, 39.3743], [72.0428, 39.3521], [71.8062, 39.2758], [71.4045, 39.598], [70.7333, 39.4134], [70.6077, 39.5643], [69.5987, 39.5736], [69.229, 39.761], [69.5304, 40.0974], [69.9667, 40.2022], [70.4514, 40.049], [70.9579, 40.239], [71.6926, 40.1525], [73.113, 40.7859], [72.6585, 40.8698], [71.7924, 41.4131], [71.4085, 41.1361], [70.7826, 41.2626], [70.1811, 41.5716], [70.8421, 42.0195], [70.9468, 42.2485], [71.2567, 42.7337], [71.8168, 42.822], [72.8551, 42.561], [73.422, 42.5934], [73.5565, 43.0027], [74.209, 43.2402], [75.0475, 42.9046], [76.9442, 42.9716], [79.1646, 42.759], [79.49, 42.4576], [80.2095, 42.1899]]]
            },
            "properties": {
                "name": "Kyrgyzstan",
                "id": "KG"
            },
            "id": "KG"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[41.8839, 3.9779], [41.3419, 3.2016], [40.9646, 2.8145], [40.9699, 1.378], [40.9788, -0.8703], [41.5328, -1.6955], [40.9956, -1.9507], [40.6441, -2.5393], [40.2224, -2.6884], [40.1154, -3.2504], [39.4909, -4.4787], [39.2219, -4.6922], [37.7974, -3.6743], [37.6087, -3.4604], [37.6438, -3.0453], [36.2633, -2.2747], [34.7709, -1.4416], [33.9031, -1.0021], [33.9431, 0.1738], [34.4815, 1.042], [34.7874, 1.2307], [34.9654, 1.6435], [34.964, 2.0625], [34.7425, 2.818], [34.4478, 3.1634], [34.3928, 3.6916], [34.165, 3.8128], [33.9759, 4.2203], [35.2681, 5.4925], [35.7448, 5.3442], [35.763, 4.808], [36.0818, 4.4498], [36.9056, 4.4116], [38.0864, 3.649], [39.4944, 3.4559], [39.8424, 3.8514], [40.7653, 4.2731], [41.2207, 3.9437], [41.8839, 3.9779]]]
            },
            "properties": {
                "name": "Kenya",
                "id": "KE"
            },
            "id": "KE"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[87.3229, 49.0858], [86.7534, 49.0088], [86.5496, 48.5287], [85.7493, 48.3849], [85.526, 47.9157], [85.6565, 47.2547], [84.786, 46.8308], [83.1929, 47.1864], [83.0043, 47.0337], [82.3264, 45.52], [82.4787, 45.1236], [81.602, 45.3109], [80.059, 45.0064], [80.4554, 44.7463], [80.3551, 44.0973], [80.7857, 43.1616], [80.1651, 42.6653], [80.2095, 42.1899], [79.49, 42.4576], [79.1646, 42.759], [76.9442, 42.9716], [75.0475, 42.9046], [74.209, 43.2402], [73.5565, 43.0027], [73.422, 42.5934], [72.8551, 42.561], [71.8168, 42.822], [71.2567, 42.7337], [70.9468, 42.2485], [70.4159, 42.0785], [70.0954, 41.8206], [69.0652, 41.367], [68.2919, 40.6563], [67.9359, 41.1965], [66.8142, 41.1423], [66.6686, 41.2706], [66.4986, 41.9951], [66.0094, 42.0048], [66.1004, 42.9907], [65.803, 42.8771], [65.4963, 43.3108], [64.9054, 43.7147], [64.4434, 43.5513], [63.2071, 43.6281], [61.9904, 43.4923], [61.1608, 44.1688], [61.0081, 44.3939], [58.5551, 45.5555], [55.9757, 44.9949], [55.9766, 42.929], [55.9774, 41.3221], [55.5451, 41.2626], [54.9037, 41.9192], [54.1211, 42.3351], [53.2502, 42.2059], [52.4938, 41.7802], [52.5968, 42.7603], [51.8439, 42.9104], [51.3019, 43.4825], [50.8305, 44.1928], [50.3311, 44.3255], [50.4093, 44.6242], [50.8603, 44.6287], [51.4156, 45.358], [52.5311, 45.3988], [52.7739, 45.5728], [53.1352, 46.1916], [53.1703, 46.6692], [52.9159, 46.9542], [52.1888, 46.8397], [51.1781, 47.11], [50.4195, 46.8796], [50, 46.6342], [49.3475, 46.5192], [49.2321, 46.3372], [48.6102, 46.5663], [48.9595, 46.7744], [48.1099, 47.7452], [47.0934, 47.9477], [47.0042, 48.2846], [46.661, 48.4124], [46.7028, 48.8055], [47.0144, 49.0984], [46.8022, 49.367], [47.3264, 50.2734], [47.706, 50.378], [48.4344, 49.8284], [48.8432, 50.0131], [48.8086, 50.6012], [49.498, 51.0835], [50.2468, 51.2895], [50.7941, 51.7292], [51.6091, 51.4839], [52.3309, 51.6812], [52.571, 51.4817], [53.3381, 51.4824], [54.0416, 51.1153], [54.4216, 50.7804], [54.727, 50.9981], [55.5424, 50.6017], [55.7977, 50.6021], [56.4915, 51.0196], [57.0117, 51.0651], [57.4423, 50.8889], [57.8387, 51.0917], [58.3594, 51.0638], [58.8836, 50.6945], [59.8122, 50.5819], [59.9552, 50.7992], [60.6379, 50.6638], [61.3894, 50.8609], [61.5851, 51.2298], [61.3632, 51.442], [60.4647, 51.6513], [60.0657, 51.9764], [60.9375, 52.2805], [60.8021, 52.7448], [61.0476, 52.9725], [61.974, 52.9437], [62.0148, 53.1079], [61.1994, 53.2872], [60.9797, 53.6217], [61.3339, 54.0492], [61.9287, 53.9464], [63.0739, 54.1053], [64.4611, 54.3841], [65.1576, 54.3643], [65.4767, 54.6233], [66.2225, 54.6673], [68.0739, 54.9596], [68.2062, 55.1609], [68.9773, 55.3895], [70.1824, 55.1625], [70.7382, 55.3052], [71.1856, 54.5994], [71.0933, 54.2123], [72.9141, 54.1073], [73.3993, 53.8115], [73.2857, 53.5984], [74.4518, 53.6472], [76.2664, 54.312], [76.5758, 53.9424], [77.7042, 53.3791], [78.4757, 52.6385], [79.4687, 51.493], [79.9862, 50.7746], [80.8771, 51.2815], [81.4657, 50.7397], [82.4938, 50.7275], [83.3571, 50.9945], [83.9453, 50.7746], [84.2578, 50.2883], [84.9893, 50.0615], [85.21, 49.6648], [86.1807, 49.4993], [86.6144, 49.6098], [87.3229, 49.0858]]]
            },
            "properties": {
                "name": "Kazakhstan",
                "id": "KZ"
            },
            "id": "KZ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[141.2296, 41.3727], [141.4626, 40.611], [141.7969, 40.2914], [141.978, 39.8444], [141.9007, 39.1115], [141.6584, 38.9748], [141.4675, 38.404], [141.1084, 38.3378], [140.9282, 37.9494], [141.0365, 37.4674], [140.9686, 37.0022], [140.6272, 36.5028], [140.6219, 36.0593], [140.874, 35.7251], [140.4572, 35.5102], [140.4164, 35.267], [139.7994, 34.9567], [139.6502, 35.409], [139.2494, 35.2781], [138.9826, 34.6984], [138.5773, 35.0863], [138.1889, 34.5963], [136.8848, 34.8058], [136.5332, 34.6784], [136.8537, 34.3242], [136.3299, 34.1768], [135.9162, 33.5616], [135.4528, 33.5536], [135.1753, 33.898], [135.1003, 34.2882], [135.3848, 34.5004], [134.7399, 34.7654], [134.2081, 34.6975], [133.9684, 34.5275], [133.1423, 34.3024], [132.2381, 34.227], [132.0903, 33.8554], [131.7405, 34.0521], [130.9188, 33.9757], [131.0041, 34.3925], [131.3543, 34.4134], [132.923, 35.5111], [133.3767, 35.4588], [134.2139, 35.5391], [135.1744, 35.7473], [135.6805, 35.5031], [136.0955, 35.7677], [136.0063, 35.9905], [136.6983, 36.742], [137.3424, 36.7705], [137.5142, 36.9516], [138.3199, 37.2183], [138.8849, 37.8438], [139.4012, 38.1425], [140.0479, 39.4635], [139.9228, 40.5986], [140.2814, 40.8463], [141.1186, 40.8822], [141.2296, 41.3727]]], [[[143.8241, 44.1169], [144.7985, 43.9402], [145.1012, 43.7644], [145.3476, 43.1767], [144.6307, 42.9468], [143.9693, 42.8815], [143.4295, 42.419], [143.2364, 42.0004], [141.8515, 42.5792], [140.9863, 42.3422], [140.4803, 42.5592], [140.3267, 42.2934], [140.7337, 42.1162], [140.3848, 41.5192], [139.9951, 41.5765], [140.1083, 41.9129], [139.8211, 42.3875], [139.8912, 42.6494], [140.7808, 43.2149], [141.2962, 43.1998], [141.6446, 44.0197], [141.7822, 44.7166], [141.5829, 45.156], [141.9376, 45.5094], [142.7042, 44.8191], [143.8241, 44.1169]]], [[[131.1745, 33.6024], [131.5829, 33.6526], [131.8967, 33.2548], [131.9766, 32.8438], [131.7321, 32.593], [131.3374, 31.4047], [130.5886, 31.1783], [130.2006, 31.2919], [130.3218, 31.6013], [130.1944, 32.0909], [130.6405, 32.6192], [129.5801, 33.2362], [130.3649, 33.6344], [130.4838, 33.8345], [130.953, 33.8718], [131.1745, 33.6024]]], [[[134.3572, 34.2562], [134.6373, 34.2265], [134.739, 33.8203], [134.3772, 33.6082], [134.1815, 33.2473], [133.6319, 33.511], [133.2861, 33.36], [132.9772, 32.842], [132.4951, 32.9166], [132.3659, 33.5123], [132.7841, 33.9926], [133.5822, 34.017], [134.0758, 34.3583], [134.3572, 34.2562]]]]
            },
            "properties": {
                "name": "Japan",
                "id": "JP"
            },
            "id": "JP"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[39.1455, 32.1247], [38.9622, 31.9951], [36.9584, 31.4917], [37.9803, 30.5], [37.6336, 30.3132], [37.4694, 29.9949], [36.7551, 29.8662], [36.4759, 29.4951], [36.0156, 29.1906], [34.9507, 29.3535], [34.9734, 29.555], [35.174, 30.524], [35.4394, 31.1326], [35.4505, 31.4793], [35.5589, 31.7656], [35.5513, 32.3955], [35.7875, 32.735], [36.3721, 32.387], [36.8182, 32.3173], [38.7735, 33.372], [39.1455, 32.1247]]]
            },
            "properties": {
                "name": "Jordan",
                "id": "JO"
            },
            "id": "JO"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-2.0186, 49.2312], [-2.2359, 49.1763], [-2.2206, 49.2665], [-2.0186, 49.2312]]]
            },
            "properties": {
                "name": "Jersey",
                "id": "JE"
            },
            "id": "JE"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-77.2614, 18.4572], [-76.3499, 18.1518], [-76.5246, 17.8664], [-76.8533, 17.9738], [-77.3615, 17.8336], [-77.7681, 17.8775], [-78.2167, 18.4479], [-77.8735, 18.522], [-77.2614, 18.4572]]]
            },
            "properties": {
                "name": "Jamaica",
                "id": "JM"
            },
            "id": "JM"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[9.632, 40.8822], [9.8051, 40.4996], [9.5623, 39.1661], [9.0563, 39.2394], [8.8814, 38.9127], [8.418, 39.2056], [8.4712, 40.2927], [8.1898, 40.6518], [9.2831, 41.2018], [9.632, 40.8822]]], [[[15.5766, 38.2202], [15.0994, 37.4585], [15.2943, 37.0133], [15.1127, 36.6879], [14.5019, 36.7989], [12.4356, 37.8198], [13.3518, 38.1807], [13.6816, 38.0009], [14.5059, 38.0453], [14.846, 38.1718], [15.5766, 38.2202]]], [[[13.6998, 46.5201], [13.3993, 46.3177], [13.7198, 45.5875], [13.2062, 45.7713], [12.2745, 45.4459], [12.5235, 44.9678], [12.2483, 44.7223], [12.3961, 44.2238], [13.564, 43.5713], [14.0106, 42.6898], [14.8659, 42.0523], [15.1687, 41.9338], [15.9641, 41.9396], [16.0125, 41.4353], [17.1032, 41.062], [17.955, 40.6554], [18.4859, 40.105], [18.0779, 39.9367], [17.8649, 40.2803], [16.9283, 40.4579], [16.5301, 39.8595], [16.5976, 39.6389], [17.1147, 39.3805], [17.1746, 38.9979], [16.5589, 38.7147], [16.5456, 38.4093], [16.0569, 37.9419], [15.7244, 37.9392], [15.9726, 38.7125], [16.1967, 38.7591], [16.0236, 39.3535], [15.6929, 39.99], [14.9507, 40.239], [14.7656, 40.6683], [14.1024, 40.8272], [13.7331, 41.2356], [13.0886, 41.244], [12.6309, 41.4695], [11.6375, 42.2876], [10.7084, 42.9361], [10.0475, 44.0201], [8.766, 44.4223], [8.0815, 43.9189], [7.4929, 43.7671], [7.6771, 44.0831], [6.9673, 44.2802], [7.0308, 44.7166], [6.6277, 45.1178], [7.1533, 45.401], [7.021, 45.9257], [7.9932, 46.0158], [8.4584, 46.2458], [8.9537, 45.8298], [9.2512, 46.2866], [9.9392, 46.3616], [10.4528, 46.865], [11.0249, 46.7971], [11.2442, 46.9755], [12.1542, 46.9351], [12.3881, 46.7025], [13.6998, 46.5201]], [[12.4853, 43.9016], [12.5146, 43.9531], [12.441, 43.9824], [12.397, 43.9344], [12.4853, 43.9016]]]]
            },
            "properties": {
                "name": "Italy",
                "id": "IT"
            },
            "id": "IT"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[35.7875, 32.735], [35.5513, 32.3955], [35.1931, 32.5344], [34.9561, 32.1611], [34.9507, 31.6022], [35.4505, 31.4793], [35.4394, 31.1326], [35.174, 30.524], [34.9734, 29.555], [34.9041, 29.4773], [34.2454, 31.2085], [34.4775, 31.5849], [34.6786, 31.8956], [35.1087, 33.0835], [35.411, 33.0755], [35.8691, 33.4319], [35.7875, 32.735]]]
            },
            "properties": {
                "name": "Israel",
                "id": "IL"
            },
            "id": "IL"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-15.5431, 66.2285], [-14.6982, 66.0203], [-14.7576, 65.7557], [-13.6159, 65.4872], [-13.853, 64.8622], [-15.0215, 64.296], [-16.0605, 64.1113], [-16.6404, 63.8654], [-17.8156, 63.7129], [-18.6537, 63.4066], [-20.1982, 63.5558], [-21.8328, 64.2054], [-21.9502, 64.515], [-22.684, 65.0264], [-22.0057, 65.4934], [-22.9024, 65.5804], [-24.2241, 65.4872], [-23.7371, 66.0695], [-22.4261, 66.4302], [-21.3035, 65.8765], [-21.23, 65.4206], [-20.3567, 65.7191], [-20.3567, 66.0331], [-18.7775, 66.1688], [-16.7485, 66.1317], [-15.9854, 66.5145], [-15.5431, 66.2285]]]
            },
            "properties": {
                "name": "Iceland",
                "id": "IS"
            },
            "id": "IS"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[44.7652, 37.1424], [45.3618, 36.0154], [45.7235, 35.8365], [46.1337, 35.1276], [45.6783, 34.7982], [45.4377, 34.4152], [45.3968, 33.9708], [46.1457, 33.2295], [46.1128, 32.9579], [46.57, 32.834], [47.3713, 32.4239], [47.8298, 31.7944], [47.6793, 31.0025], [48.0105, 30.9896], [48.0149, 30.4654], [48.5467, 29.9625], [47.9785, 29.9829], [47.6727, 30.0956], [47.1143, 29.9611], [46.9056, 29.5377], [46.5314, 29.0964], [46.3565, 29.0636], [44.7163, 29.1937], [42.8578, 30.4952], [42.0743, 31.0802], [40.3693, 31.9391], [39.1455, 32.1247], [38.7735, 33.372], [40.6894, 34.3322], [40.9872, 34.4289], [41.1945, 34.7689], [41.3543, 35.6403], [41.2456, 36.0735], [41.4169, 36.5148], [41.7884, 36.5973], [42.3588, 37.1087], [42.7748, 37.3719], [43.5161, 37.2445], [44.1562, 37.2831], [44.2818, 36.9782], [44.7652, 37.1424]]]
            },
            "properties": {
                "name": "Iraq",
                "id": "IQ"
            },
            "id": "IQ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[46.1146, 38.8776], [46.4906, 38.9065], [47.773, 39.6486], [47.9958, 39.6842], [48.2422, 38.9788], [48.0233, 38.819], [48.5929, 38.4111], [48.8685, 38.4355], [49.0811, 37.6676], [49.47, 37.4967], [50.1305, 37.407], [50.5331, 37.0137], [51.1186, 36.7425], [52.1902, 36.6217], [54.0172, 36.9524], [53.9142, 37.3435], [54.7452, 37.502], [55.0755, 37.9024], [55.5784, 38.0999], [56.2287, 38.0733], [56.4409, 38.2495], [57.1937, 38.2162], [57.4236, 37.9477], [58.4357, 37.6387], [58.8157, 37.6835], [59.2409, 37.5206], [59.5623, 37.1788], [60.0626, 36.9631], [60.3413, 36.6377], [61.1195, 36.6426], [61.262, 35.6194], [61.08, 34.8555], [60.4856, 34.0947], [60.5109, 33.6388], [60.9171, 33.5052], [60.5606, 33.1376], [60.8292, 32.2494], [60.854, 31.4833], [61.6602, 31.3825], [61.7844, 30.8321], [61.104, 30.1285], [60.8434, 29.8586], [61.3184, 29.3725], [61.6229, 28.7915], [61.8901, 28.5465], [62.3531, 28.4146], [62.7397, 28.0023], [62.7632, 27.2503], [63.1667, 27.2525], [63.1681, 26.6657], [62.4392, 26.5609], [61.8697, 26.2422], [61.6686, 25.769], [61.5878, 25.2022], [61.412, 25.1023], [60.6641, 25.2821], [59.4562, 25.4814], [59.0461, 25.4175], [58.7979, 25.5546], [57.7961, 25.6532], [57.3344, 25.7917], [56.9824, 26.9054], [56.3561, 27.2001], [55.6503, 26.9777], [54.8957, 26.5565], [53.7056, 26.7256], [53.4548, 26.9431], [52.6918, 27.3235], [52.476, 27.6165], [51.6664, 27.8451], [51.2788, 28.1314], [51.0622, 28.7262], [50.6752, 29.1466], [50.6499, 29.42], [49.9831, 30.2093], [49.5548, 30.0291], [48.9191, 30.1209], [48.5467, 29.9625], [48.0149, 30.4654], [48.0105, 30.9896], [47.6793, 31.0025], [47.8298, 31.7944], [47.3713, 32.4239], [46.57, 32.834], [46.1128, 32.9579], [46.1457, 33.2295], [45.3968, 33.9708], [45.4377, 34.4152], [45.6783, 34.7982], [46.1337, 35.1276], [45.7235, 35.8365], [45.3618, 36.0154], [44.7652, 37.1424], [44.5614, 37.7448], [44.2112, 37.9081], [44.4309, 38.3569], [44.023, 39.3774], [44.8171, 39.6504], [45.4798, 39.0063], [46.1146, 38.8776]]]
            },
            "properties": {
                "name": "Iran",
                "id": "IR"
            },
            "id": "IR"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-6.218, 54.0887], [-6.0274, 52.927], [-6.5612, 52.1888], [-7.5273, 52.0989], [-8.8135, 51.5849], [-10.3786, 51.8688], [-9.9558, 52.1367], [-9.2993, 53.0975], [-9.7954, 53.3951], [-9.996, 54.276], [-8.6231, 54.3468], [-8.764, 54.6813], [-8.2746, 55.1463], [-7.2468, 55.3531], [-7.2186, 55.0921], [-8.1183, 54.4143], [-7.3553, 54.1213], [-6.218, 54.0887]]]
            },
            "properties": {
                "name": "Ireland",
                "id": "IE"
            },
            "id": "IE"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[72.492, -7.3773], [72.4671, -7.3675], [72.4738, -7.3098], [72.4356, -7.2304], [72.4938, -7.2619], [72.492, -7.3773]]]
            },
            "properties": {
                "name": "British Indian Ocean Territory",
                "id": "IO"
            },
            "id": "IO"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[78.7198, 31.8876], [78.8445, 31.3017], [79.1073, 31.4025], [79.3386, 31.1055], [79.3697, 31.0798], [79.9165, 30.8942], [79.9245, 30.8889], [80.1913, 30.5684], [80.6823, 30.4148], [81.0103, 30.1645], [80.4017, 29.7303], [80.0706, 28.8301], [80.5868, 28.6494], [81.8528, 27.8669], [81.9877, 27.9139], [82.7335, 27.5189], [83.2897, 27.371], [84.0909, 27.4913], [84.6103, 27.2987], [84.6853, 27.0412], [85.293, 26.7412], [86.3663, 26.5743], [86.7014, 26.4349], [87.0166, 26.5556], [87.2874, 26.3603], [88.0549, 26.43], [88.1614, 26.7247], [87.9843, 27.134], [88.1099, 27.8704], [88.6213, 28.0919], [88.8485, 27.8686], [88.8912, 27.316], [88.8579, 26.9613], [89.7638, 26.7016], [90.3458, 26.8903], [90.7395, 26.7718], [91.9984, 26.8548], [92.0836, 27.2907], [91.5949, 27.5575], [91.6317, 27.7599], [91.9775, 27.7301], [92.6642, 27.949], [92.702, 28.147], [93.2067, 28.5909], [93.9022, 28.803], [94.6231, 29.3126], [94.7696, 29.1759], [95.4204, 29.0543], [96.0352, 29.4471], [96.4355, 29.0507], [96.776, 28.3671], [97.3224, 28.218], [97.3353, 27.9379], [96.6659, 27.3391], [96.0613, 27.217], [95.1287, 26.5973], [95.1323, 26.0411], [94.6227, 25.4099], [94.7075, 25.0486], [94.2929, 24.3219], [94.1277, 23.8763], [93.3074, 24.0219], [93.4149, 23.6823], [93.366, 23.1323], [93.0788, 22.7182], [93.1618, 22.3604], [92.9643, 22.0039], [92.575, 21.9782], [92.4916, 22.6853], [92.3615, 22.929], [92.2461, 23.6836], [91.938, 23.5047], [91.6198, 22.9796], [91.3152, 23.1043], [91.1603, 23.6605], [91.3672, 24.0933], [91.8768, 24.1954], [92.2514, 24.895], [92.0499, 25.1693], [90.4394, 25.1578], [89.814, 25.3052], [89.8229, 25.9413], [89.2893, 26.0376], [89.1082, 26.2023], [88.4402, 26.3696], [88.0846, 25.8884], [88.4521, 25.5746], [88.4561, 25.1884], [88.1454, 24.4857], [88.7336, 24.2309], [88.5671, 23.6743], [88.7407, 23.4368], [89.0514, 22.0932], [89.0518, 21.6541], [88.2537, 21.6222], [87.9483, 21.8255], [87.1005, 21.5006], [86.8595, 21.2369], [86.9753, 20.7002], [86.7503, 20.3131], [86.2793, 19.9194], [85.5748, 19.693], [84.7709, 19.1253], [84.1042, 18.2926], [83.6541, 18.0697], [83.1982, 17.609], [82.3597, 17.0963], [82.259, 16.56], [81.7618, 16.3297], [81.2385, 16.264], [80.9788, 15.7584], [80.6467, 15.8951], [80.2934, 15.7109], [80.0533, 15.0739], [80.1656, 14.5776], [80.1119, 14.2123], [80.3422, 13.3614], [80.229, 12.6902], [79.8584, 11.9888], [79.7541, 11.5751], [79.8486, 11.1969], [79.838, 10.3225], [79.3905, 10.306], [78.9964, 9.6833], [78.9795, 9.2687], [78.4215, 9.1049], [78.1925, 8.8909], [78.0602, 8.3844], [77.5178, 8.0782], [76.9669, 8.4071], [76.5536, 8.9029], [76.3246, 9.452], [76.3463, 9.9221], [75.9224, 10.7841], [75.724, 11.3616], [75.1966, 12.0576], [74.7705, 13.0773], [74.6711, 13.6676], [74.3821, 14.4946], [73.9493, 15.0748], [73.932, 15.397], [73.4761, 16.0544], [73.3376, 16.4597], [73.1561, 17.6218], [72.8711, 18.6832], [72.6678, 19.8311], [72.8813, 20.5631], [72.8138, 21.117], [72.5431, 21.6968], [72.5901, 22.2783], [72.3326, 22.2703], [72.037, 21.8233], [72.2541, 21.5312], [72.0153, 21.1557], [71.0245, 20.7388], [70.7191, 20.7406], [70.1274, 21.0948], [69.0088, 22.1966], [70.1771, 22.5726], [70.2512, 22.9707], [69.6644, 22.759], [69.2361, 22.8487], [68.6408, 23.19], [68.1649, 23.8572], [68.7242, 23.9646], [68.7282, 24.2656], [69.5592, 24.2731], [69.7163, 24.1728], [70.5469, 24.4183], [71.044, 24.4001], [71.048, 24.6877], [70.6521, 25.4228], [70.2646, 25.7064], [70.0777, 26.0718], [70.1567, 26.4713], [69.47, 26.8046], [69.5681, 27.1744], [70.1447, 27.8491], [70.4035, 28.0249], [70.7373, 27.7293], [71.8701, 27.9623], [72.342, 28.752], [72.903, 29.029], [73.3816, 29.9345], [73.809, 30.0934], [73.8991, 30.4352], [74.6329, 31.0345], [74.5099, 31.7127], [75.3334, 32.2792], [74.6578, 32.5189], [73.9941, 33.2424], [74.1499, 33.507], [73.9613, 34.6535], [74.3004, 34.7654], [75.7093, 34.5031], [76.5945, 34.7357], [77.0486, 35.1099], [77.7992, 35.496], [77.8107, 35.4845], [78.2821, 34.654], [78.9364, 34.3521], [78.7531, 34.0876], [78.8019, 33.4999], [79.1127, 33.2264], [79.1353, 33.1718], [79.2165, 32.5641], [79.2192, 32.5011], [78.3896, 32.5197], [78.7198, 31.8876]]]
            },
            "properties": {
                "name": "India",
                "id": "IN"
            },
            "id": "IN"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-4.4121, 54.1854], [-4.7457, 54.1189], [-4.5086, 54.3768], [-4.4121, 54.1854]]]
            },
            "properties": {
                "name": "Isle of Man",
                "id": "IM"
            },
            "id": "IM"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[96.4924, 5.2293], [97.4512, 5.2359], [97.9084, 4.8799], [98.2484, 4.4147], [98.3074, 4.0929], [99.7323, 3.1829], [100.4572, 2.2574], [100.6854, 2.1202], [101.0462, 2.2574], [101.4768, 1.6932], [101.7849, 1.6213], [102.1573, 1.2591], [102.4694, 0.7792], [102.8493, 0.7153], [103.0664, 0.492], [103.4788, 0.4801], [103.7868, 0.0468], [103.4286, -0.1916], [103.4313, -0.5334], [103.7211, -0.8867], [104.3608, -1.0385], [104.5685, -1.9218], [104.8451, -2.0932], [104.6684, -2.3857], [105.3968, -2.3804], [105.5819, -2.4918], [106.0445, -3.1062], [105.8438, -3.6135], [105.8873, -5.0096], [105.8163, -5.6767], [105.6183, -5.7997], [105.3493, -5.5493], [105.0812, -5.7455], [104.6396, -5.5205], [104.6014, -5.9044], [103.8312, -5.0797], [102.919, -4.4707], [102.5377, -4.152], [102.1276, -3.5993], [101.5785, -3.167], [100.8478, -2.1438], [100.8554, -1.9343], [100.4865, -1.2991], [100.3081, -0.8268], [99.5978, 0.1023], [99.1593, 0.3518], [98.7962, 1.4948], [98.5644, 1.9023], [97.7006, 2.3586], [97.591, 2.8464], [97.3912, 2.9752], [96.9691, 3.5753], [96.4449, 3.8163], [95.4949, 4.7614], [95.2068, 5.2839], [95.2277, 5.5648], [95.629, 5.6092], [96.1333, 5.2941], [96.4924, 5.2293]]], [[[120.0124, -9.3748], [120.5038, -9.674], [120.8327, -10.0375], [120.439, -10.2941], [120.1447, -10.2], [119.6009, -9.7734], [119.0856, -9.7068], [119.1855, -9.3846], [120.0124, -9.3748]]], [[[125.0679, -9.512], [124.4274, -10.1485], [123.8574, -10.3438], [123.5893, -9.9669], [123.7092, -9.6149], [124.0363, -9.3415], [124.4442, -9.1901], [124.9223, -8.9424], [125.0679, -9.512]]], [[[116.6406, -8.614], [116.3774, -8.9291], [116.0764, -8.7449], [116.0613, -8.4373], [116.4014, -8.2043], [116.7343, -8.3871], [116.6406, -8.614]]], [[[122.7828, -8.6117], [121.6513, -8.8989], [121.0351, -8.9353], [119.8078, -8.6974], [119.9183, -8.4453], [120.6103, -8.2407], [121.4444, -8.578], [121.9664, -8.4551], [122.263, -8.6251], [122.6034, -8.4027], [122.7828, -8.6117]]], [[[118.2426, -8.3179], [118.9879, -8.3379], [119.0061, -8.7498], [118.1898, -8.8403], [117.0614, -9.0991], [116.7884, -9.0064], [116.835, -8.5323], [117.1649, -8.3672], [117.567, -8.4266], [118.1174, -8.1221], [118.2426, -8.3179]]], [[[115.4479, -8.155], [115.7045, -8.4071], [115.2361, -8.7977], [114.4753, -8.1195], [115.4479, -8.155]]], [[[126.8009, -7.668], [126.4719, -7.9503], [125.8434, -7.8167], [126.6095, -7.5717], [126.8009, -7.668]]], [[[138.5351, -8.2735], [138.2963, -8.4053], [137.6851, -8.2624], [138.0074, -7.6414], [138.2954, -7.4385], [138.77, -7.3906], [138.9893, -7.696], [138.5351, -8.2735]]], [[[131.3255, -7.9996], [131.0866, -7.8651], [131.2602, -7.4705], [131.6912, -7.439], [131.3255, -7.9996]]], [[[113.8445, -7.1052], [113.4708, -7.2184], [112.7637, -7.1398], [112.868, -6.9001], [113.9746, -6.873], [113.8445, -7.1052]]], [[[134.537, -6.4424], [134.3559, -6.8149], [134.0589, -6.7691], [134.1681, -6.1761], [134.537, -6.4424]]], [[[107.3739, -6.0074], [107.6669, -6.2156], [108.295, -6.2649], [108.6776, -6.7905], [110.4261, -6.9471], [110.7369, -6.4722], [111.1546, -6.6693], [111.5403, -6.6484], [112.0872, -6.8934], [112.5391, -6.9263], [112.7943, -7.5526], [113.2484, -7.7182], [114.0705, -7.633], [114.4442, -7.8957], [114.387, -8.4053], [114.5836, -8.7698], [113.2533, -8.2868], [112.6789, -8.4093], [111.5101, -8.305], [110.6072, -8.1497], [110.0386, -7.8904], [109.2818, -7.7049], [108.7411, -7.6671], [108.4517, -7.7968], [107.9173, -7.724], [107.2852, -7.4718], [106.6313, -7.4155], [106.5199, -7.0537], [105.4838, -6.7816], [105.8682, -6.1166], [106.0751, -5.9142], [106.8253, -6.0984], [107.0463, -5.9044], [107.3739, -6.0074]]], [[[134.747, -5.7069], [134.7559, -6.1708], [134.4411, -6.335], [134.3413, -5.7127], [134.747, -5.7069]]], [[[122.6451, -5.2692], [122.3961, -5.0699], [122.369, -4.7672], [122.702, -4.6185], [122.6451, -5.2692]]], [[[126.8612, -3.0879], [127.2274, -3.3911], [127.2297, -3.6331], [126.6863, -3.8235], [126.2145, -3.6051], [126.0263, -3.1705], [126.8612, -3.0879]]], [[[129.7545, -2.866], [130.3791, -2.9894], [130.8598, -3.5705], [130.8052, -3.8577], [129.8442, -3.3272], [129.4678, -3.4533], [128.9675, -3.3259], [128.4193, -3.416], [128.0819, -3.1838], [128.1987, -2.866], [129.4274, -2.7905], [129.7545, -2.866]]], [[[108.2071, -2.9978], [107.6145, -3.2096], [107.6665, -2.5664], [108.0744, -2.597], [108.2071, -2.9978]]], [[[124.9694, -1.7057], [124.8344, -1.8943], [124.4176, -2.0053], [124.3808, -1.6875], [124.9694, -1.7057]]], [[[135.4741, -1.5916], [136.2016, -1.6551], [136.1927, -1.8593], [135.4741, -1.5916]]], [[[106.0458, -1.6693], [106.3658, -2.4647], [106.6788, -2.704], [106.547, -3.0555], [105.9988, -2.8247], [105.7857, -2.1815], [105.1332, -2.0426], [105.5855, -1.5268], [106.0458, -1.6693]]], [[[128.153, -1.6604], [127.5617, -1.7283], [127.6465, -1.3324], [128.153, -1.6604]]], [[[99.1637, -1.778], [98.8743, -1.6639], [98.6017, -1.1979], [98.869, -0.9155], [99.2671, -1.6275], [99.1637, -1.778]]], [[[135.3831, -0.6514], [135.8935, -0.726], [135.8389, -1.1193], [135.3831, -0.6514]]], [[[140.9734, -2.6099], [140.9739, -4.0232], [140.9748, -6.3461], [140.9761, -9.1187], [139.9347, -8.1013], [139.3856, -8.1892], [138.8561, -8.1452], [139.0878, -7.5872], [138.7478, -7.2517], [138.8645, -6.8584], [138.4388, -6.3435], [138.0611, -5.4654], [137.0894, -4.9243], [136.6189, -4.8187], [135.9797, -4.531], [135.1957, -4.4507], [134.1473, -3.7968], [133.9737, -3.8182], [133.6532, -3.3645], [133.2488, -4.0623], [132.9687, -4.0947], [132.7539, -3.7036], [132.7512, -3.2948], [132.3482, -2.9752], [133.1911, -2.4377], [133.6088, -2.5473], [133.9049, -2.391], [133.9218, -2.1021], [132.963, -2.2725], [132.3078, -2.2423], [132.0233, -1.9902], [131.9305, -1.5596], [131.2935, -1.3936], [131.2571, -0.8556], [131.8044, -0.7038], [132.1285, -0.4539], [132.6252, -0.3589], [133.4726, -0.726], [133.9746, -0.7442], [134.2596, -1.363], [134.106, -1.7212], [134.1557, -2.1953], [135.0373, -3.333], [135.4865, -3.345], [136.2433, -2.5832], [136.3898, -2.2734], [136.843, -2.1975], [137.1236, -1.8411], [137.8063, -1.4833], [138.6497, -1.7909], [139.7896, -2.3484], [140.6223, -2.4456], [140.9734, -2.6099]]], [[[97.4814, 1.4651], [97.9319, 0.9741], [97.8764, 0.6283], [97.4054, 0.947], [97.2443, 1.4238], [97.4814, 1.4651]]], [[[124.889, 0.9954], [124.4274, 0.4707], [123.754, 0.3056], [123.2653, 0.3265], [123.0824, 0.4858], [121.8421, 0.4366], [121.4258, 0.4947], [120.3489, 0.4494], [120.1274, 0.1667], [120.012, -0.307], [120.0972, -0.6501], [120.5176, -1.0394], [120.6676, -1.3701], [121.0338, -1.4065], [121.5194, -0.8556], [121.9695, -0.9333], [122.2798, -0.7571], [122.8888, -0.7553], [122.5067, -1.3479], [121.7187, -1.8628], [121.349, -1.9458], [121.8484, -2.3316], [122.3992, -3.2007], [122.2527, -3.6206], [122.8773, -4.1089], [122.8973, -4.349], [122.207, -4.4964], [121.9172, -4.848], [121.4866, -4.5812], [121.618, -4.0929], [120.9144, -3.5558], [121.0542, -3.167], [121.052, -2.7515], [120.6538, -2.6676], [120.2539, -3.0529], [120.4368, -3.7072], [120.3627, -4.0858], [120.4199, -4.6176], [120.2792, -5.1463], [120.3116, -5.5418], [119.7172, -5.6932], [119.3763, -5.425], [119.6116, -4.4236], [119.6236, -4.0343], [119.4198, -3.4755], [118.9946, -3.5376], [118.8126, -3.1568], [118.7837, -2.7648], [119.0922, -2.4829], [119.3217, -1.9298], [119.3089, -1.4083], [119.7718, -0.4836], [119.8091, 0.2386], [120.2694, 0.971], [120.5167, 0.8174], [120.9122, 1.2888], [121.44, 1.2142], [121.5918, 1.0678], [122.4365, 1.018], [122.8924, 0.8498], [123.2781, 0.9279], [123.8468, 0.8383], [124.2738, 1.022], [124.9893, 1.7012], [125.2339, 1.5023], [124.889, 0.9954]]], [[[127.7326, 0.848], [128.1609, 1.1579], [128.4242, 1.5174], [128.6883, 1.5725], [128.7025, 1.1064], [128.299, 0.8769], [128.6914, 0.3602], [127.9829, 0.4721], [127.8875, 0.2985], [128.0464, -0.706], [127.6918, -0.2417], [127.7086, 0.2883], [127.5555, 0.4898], [127.4201, 1.252], [127.6318, 1.8437], [128.0109, 1.7012], [128.0118, 1.3319], [127.6527, 1.0141], [127.7326, 0.848]]], [[[117.5746, 4.1706], [117.6301, 3.6361], [117.1662, 3.5922], [117.6105, 3.0644], [118.0664, 2.3178], [117.8649, 1.9684], [118.0806, 1.7016], [118.9848, 0.9821], [118.5347, 0.8134], [118.196, 0.8742], [117.745, 0.7295], [117.5222, 0.2359], [117.4627, -0.3238], [117.5626, -0.7708], [116.5545, -1.474], [116.4236, -2.0528], [116.5656, -2.2996], [116.3308, -2.9024], [115.9561, -3.5949], [114.6937, -4.1697], [114.5361, -3.4946], [114.0825, -3.2788], [113.7957, -3.4564], [113.5258, -3.1838], [112.9714, -3.1869], [112.6003, -3.4005], [112.2851, -3.321], [111.8222, -3.5323], [111.8231, -3.0573], [111.3676, -2.9335], [111.0445, -3.0555], [110.5739, -2.8913], [110.2326, -2.925], [110.0191, -1.3989], [109.7874, -1.0114], [109.454, -0.8689], [109.1606, -0.4947], [109.2574, 0.0313], [108.9444, 0.3558], [108.9058, 0.7939], [109.0758, 1.4957], [109.3785, 1.9227], [109.6289, 2.0275], [109.6542, 1.6151], [110.5056, 0.8618], [110.9379, 1.0172], [111.7698, 0.9994], [112.0783, 1.1432], [112.1857, 1.4393], [112.476, 1.5592], [113.6222, 1.236], [113.9022, 1.4344], [114.5459, 1.4673], [114.8304, 1.98], [114.7865, 2.2503], [115.1509, 2.4931], [115.0861, 2.8411], [115.4545, 3.0342], [115.5686, 3.9389], [115.8962, 4.3486], [117.1005, 4.337], [117.5746, 4.1706]]]]
            },
            "properties": {
                "name": "Indonesia",
                "id": "ID"
            },
            "id": "ID"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[22.132, 48.4053], [22.8764, 47.9472], [22.2905, 47.7279], [21.1519, 46.3044], [20.2419, 46.1086], [19.5308, 46.1552], [18.9054, 45.9315], [17.9639, 45.7704], [17.3105, 45.9963], [16.5163, 46.4997], [16.0929, 46.8632], [16.4533, 47.0066], [16.4342, 47.3675], [17.1475, 48.0058], [17.7619, 47.7701], [18.7242, 47.787], [18.7917, 48.0005], [19.8988, 48.1314], [20.4901, 48.5269], [21.4515, 48.5522], [22.132, 48.4053]]]
            },
            "properties": {
                "name": "Hungary",
                "id": "HU"
            },
            "id": "HU"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-71.7791, 19.7183], [-71.6571, 19.1306], [-71.7683, 18.0391], [-72.0599, 18.2286], [-72.8767, 18.1518], [-73.3851, 18.2513], [-73.885, 18.0418], [-74.419, 18.3463], [-74.2276, 18.6628], [-72.7894, 18.4346], [-72.3478, 18.6747], [-72.8112, 19.0716], [-72.7033, 19.4409], [-73.0527, 19.6109], [-73.1177, 19.9039], [-72.6369, 19.9008], [-71.7791, 19.7183]]]
            },
            "properties": {
                "name": "Haiti",
                "id": "HT"
            },
            "id": "HT"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[18.9054, 45.9315], [19.0549, 45.5271], [19.007, 44.8693], [18.6625, 45.0774], [17.8129, 45.0779], [16.5305, 45.2168], [16.2935, 45.0086], [15.7879, 45.1791], [15.7369, 44.7658], [16.214, 44.215], [17.6247, 43.0426], [17.5852, 42.9383], [16.903, 43.3924], [15.9415, 43.6565], [15.123, 44.2567], [14.8548, 45.081], [14.3861, 45.342], [13.9657, 44.8355], [13.6293, 45.1081], [13.5778, 45.5169], [13.8787, 45.4286], [15.3396, 45.4672], [15.6246, 45.8338], [15.6361, 46.2005], [16.5163, 46.4997], [17.3105, 45.9963], [17.9639, 45.7704], [18.9054, 45.9315]]], [[[17.6678, 42.897], [18.4362, 42.5597], [18.5174, 42.4327], [17.6678, 42.897]]]]
            },
            "properties": {
                "name": "Croatia",
                "id": "HR"
            },
            "id": "HR"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-83.1576, 14.9931], [-83.8674, 14.7947], [-84.646, 14.6611], [-84.9851, 14.7525], [-85.1796, 14.3432], [-85.7868, 13.8443], [-86.1512, 13.9948], [-86.3317, 13.7702], [-86.7336, 13.7635], [-86.7108, 13.3134], [-87.0592, 12.9916], [-87.3373, 12.9792], [-87.4891, 13.3529], [-87.8143, 13.3991], [-87.7153, 13.8128], [-88.151, 13.9872], [-88.4491, 13.851], [-89.0572, 14.329], [-89.3626, 14.416], [-89.2223, 14.8661], [-88.9764, 15.1427], [-88.2284, 15.7291], [-87.6181, 15.9097], [-86.9072, 15.7624], [-86.3568, 15.7832], [-85.7839, 16.003], [-85.4836, 15.8995], [-84.9738, 15.9901], [-84.2614, 15.8227], [-83.7604, 15.2204], [-83.3691, 15.2399], [-83.1576, 14.9931]]]
            },
            "properties": {
                "name": "Honduras",
                "id": "HN"
            },
            "id": "HN"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[73.7074, -53.1372], [73.465, -53.1843], [73.3363, -53.0298], [73.5858, -53.0271], [73.7074, -53.1372]]]
            },
            "properties": {
                "name": "Heard Island and McDonald Islands",
                "id": "HM"
            },
            "id": "HM"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[114.0154, 22.5117], [114.2658, 22.541], [114.268, 22.2956], [114.0154, 22.5117]]]
            },
            "properties": {
                "name": "Hong Kong",
                "id": "HK"
            },
            "id": "HK"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-57.1948, 5.5484], [-57.3309, 5.0202], [-57.7111, 4.9909], [-58.0544, 4.1719], [-57.8327, 3.6761], [-57.5497, 3.3529], [-57.3036, 3.3769], [-57.2097, 2.8828], [-56.7043, 2.0363], [-56.4828, 1.9422], [-56.8368, 1.8814], [-57.1189, 2.0141], [-57.5943, 1.7043], [-58.3407, 1.5876], [-58.5119, 1.2848], [-58.8625, 1.2036], [-59.2312, 1.3758], [-59.7563, 1.9005], [-59.7552, 2.2743], [-59.9942, 2.6902], [-59.8544, 3.5873], [-59.5512, 3.9335], [-59.8333, 4.476], [-60.1112, 4.511], [-59.9907, 5.0828], [-60.142, 5.239], [-60.7422, 5.2022], [-61.3767, 5.9071], [-61.1286, 6.2142], [-61.1457, 6.6945], [-60.3951, 6.9453], [-60.7191, 7.4989], [-60.5136, 7.8131], [-60.0324, 8.0537], [-59.8315, 8.3059], [-60.0175, 8.5491], [-59.2003, 8.0746], [-58.6266, 7.5459], [-58.4806, 7.0381], [-57.9825, 6.786], [-57.1902, 6.0975], [-57.1948, 5.5484]]]
            },
            "properties": {
                "name": "Guyana",
                "id": "GY"
            },
            "id": "GY"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[144.7416, 13.2593], [144.6493, 13.4288], [144.7905, 13.5269], [144.7416, 13.2593]]]
            },
            "properties": {
                "name": "Guam",
                "id": "GU"
            },
            "id": "GU"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-51.6526, 4.0614], [-51.9906, 3.7018], [-52.7006, 2.3635], [-52.9648, 2.1837], [-53.7678, 2.3551], [-54.13, 2.1211], [-54.6163, 2.3266], [-54.1954, 2.818], [-54.2032, 3.1381], [-53.9904, 3.5895], [-54.3508, 4.0543], [-54.4522, 5.0135], [-54.1559, 5.3589], [-53.8472, 5.7823], [-53.4544, 5.5635], [-52.8993, 5.425], [-52.2905, 4.9421], [-51.9196, 4.5244], [-51.6526, 4.0614]]]
            },
            "properties": {
                "name": "French Guiana",
                "id": "GF"
            },
            "id": "GF"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-89.1615, 17.8149], [-89.2374, 15.8942], [-88.8941, 15.8907], [-88.2284, 15.7291], [-88.9764, 15.1427], [-89.2223, 14.8661], [-89.3626, 14.416], [-89.8726, 14.0454], [-90.0952, 13.7364], [-90.607, 13.9291], [-91.1461, 13.9255], [-91.8191, 14.2283], [-92.2352, 14.5452], [-92.0748, 15.0743], [-92.1871, 15.3207], [-91.7365, 16.07], [-90.4472, 16.0726], [-90.417, 16.3909], [-90.7107, 16.7083], [-91.4096, 17.2561], [-90.993, 17.2525], [-90.9892, 17.8163], [-89.1615, 17.8149]]]
            },
            "properties": {
                "name": "Guatemala",
                "id": "GT"
            },
            "id": "GT"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[-25.4324, 70.9213], [-25.4022, 70.6527], [-27.898, 70.4541], [-27.7089, 70.8971], [-25.4324, 70.9213]]], [[[-52.7313, 69.9447], [-52.0452, 69.8071], [-52.1125, 69.4891], [-53.5784, 69.2567], [-53.7831, 69.5064], [-54.804, 69.6304], [-54.8304, 70.1611], [-53.3751, 70.2213], [-52.7313, 69.9447]]], [[[-29.953, 83.5649], [-25.9475, 83.2897], [-24.4702, 82.8773], [-21.5208, 82.5954], [-25.1489, 82.0011], [-21.3379, 82.0687], [-21.1466, 81.6952], [-17.2261, 81.4304], [-15.5555, 81.8337], [-12.1928, 81.649], [-11.5288, 81.424], [-14.5035, 80.7633], [-16.7607, 80.5733], [-16.8683, 80.1982], [-19.4292, 80.2577], [-20.1385, 79.8033], [-19.2836, 79.683], [-19.0749, 79.1524], [-20.9557, 78.5551], [-20.8625, 77.9119], [-20.2319, 77.3684], [-18.339, 77.2152], [-18.5103, 76.7782], [-20.9422, 76.887], [-21.8772, 76.5734], [-21.5692, 76.2937], [-20.1037, 76.2191], [-19.5091, 75.7575], [-19.4261, 75.2299], [-20.485, 75.3143], [-19.2252, 74.4795], [-19.3692, 74.284], [-21.1295, 74.1109], [-20.3673, 73.8483], [-20.5096, 73.493], [-22.1851, 73.2699], [-22.0364, 72.9184], [-22.2931, 72.1196], [-24.0692, 72.4987], [-24.6669, 72.4374], [-22.0133, 71.6888], [-21.7523, 71.4784], [-21.5228, 70.5262], [-23.3279, 70.451], [-23.7917, 70.5551], [-24.377, 71.1463], [-25.7422, 71.1836], [-26.7179, 70.9506], [-27.6887, 70.9934], [-28.5409, 70.4769], [-28.0149, 70.4024], [-26.7472, 70.4756], [-23.1732, 70.1145], [-23.0882, 69.883], [-26.3414, 68.7023], [-29.2496, 68.2988], [-29.8686, 68.3116], [-30.9786, 68.0613], [-32.1373, 68.3849], [-32.2747, 67.9228], [-33.157, 67.6267], [-34.1016, 66.7258], [-34.6329, 66.4349], [-36.3792, 65.8307], [-37.7541, 65.593], [-39.9609, 65.5562], [-39.5779, 65.3407], [-40.6554, 64.9154], [-40.1822, 64.48], [-40.6177, 64.1317], [-40.5504, 63.7254], [-42.1529, 62.5686], [-42.3216, 62.1526], [-42.1103, 61.8572], [-42.4188, 61.537], [-42.7171, 60.7675], [-43.3201, 59.9281], [-44.0654, 59.9247], [-45.3793, 60.2028], [-46.0467, 60.6157], [-46.0116, 61.0968], [-46.8746, 60.8163], [-47.7963, 60.829], [-48.922, 61.2775], [-49.2891, 61.59], [-49.5534, 62.2328], [-50.3192, 62.4731], [-50.3382, 62.8287], [-51.4688, 63.6423], [-51.4511, 63.9047], [-52.0934, 64.4158], [-52.259, 65.1549], [-53.6346, 66.4136], [-53.0382, 66.8268], [-53.8845, 67.1356], [-53.4189, 67.5746], [-53.578, 67.8369], [-53.0393, 68.6108], [-51.2493, 68.74], [-50.5, 69.9358], [-52.2545, 70.059], [-54.0143, 70.4217], [-54.1659, 70.8201], [-52.4052, 70.6867], [-51.5246, 70.4394], [-51.1302, 70.9717], [-53.117, 71.3128], [-53.4761, 71.6402], [-54.6891, 71.3672], [-55.5939, 71.5536], [-55.3156, 72.1107], [-55.6017, 72.4536], [-54.7379, 72.8724], [-56.104, 73.5582], [-55.9295, 73.8954], [-56.7063, 74.2192], [-56.2556, 74.5268], [-58.6035, 75.3853], [-58.5163, 75.6891], [-61.3747, 76.1801], [-63.4388, 76.3394], [-66.8262, 75.9688], [-69.3728, 76.3319], [-69.2521, 76.6861], [-70.7928, 76.869], [-70.8629, 77.1755], [-69.3515, 77.4671], [-72.8181, 78.1945], [-72.3957, 78.5043], [-68.9935, 78.8574], [-67.4823, 79.1169], [-65.9679, 79.1324], [-64.7923, 80.0007], [-66.8437, 80.0761], [-66.996, 80.413], [-62.9932, 81.2069], [-61.436, 81.1337], [-61.203, 81.7469], [-58.7174, 82.0932], [-54.7259, 82.3513], [-52.7757, 82.3218], [-50.8944, 81.8952], [-48.8612, 82.4054], [-45.2912, 81.8288], [-44.239, 82.3682], [-46.4782, 82.9519], [-43.1945, 83.255], [-32.9845, 83.5995], [-29.953, 83.5649]]]]
            },
            "properties": {
                "name": "Greenland",
                "id": "GL"
            },
            "id": "GL"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-61.7154, 12.0128], [-61.715, 12.185], [-61.6071, 12.2232], [-61.6271, 12.0541], [-61.7154, 12.0128]]]
            },
            "properties": {
                "name": "Grenada",
                "id": "GD"
            },
            "id": "GD"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[23.8521, 35.5355], [24.3129, 35.3638], [24.7212, 35.425], [25.4758, 35.3061], [25.7448, 35.1427], [24.7998, 34.9345], [24.4638, 35.1605], [23.5618, 35.295], [23.8521, 35.5355]]], [[[26.0391, 40.7269], [25.1043, 40.9945], [24.3839, 40.9129], [23.8787, 40.5444], [23.6643, 40.2239], [23.3119, 40.2164], [22.6296, 40.4956], [22.5923, 40.0371], [22.919, 39.6291], [22.9656, 39.0308], [23.2528, 38.6614], [23.9671, 38.2748], [23.5804, 38.0107], [23.1938, 37.9592], [23.1614, 37.3338], [22.765, 37.3932], [23.0735, 36.7749], [22.6083, 36.7798], [22.0805, 37.0288], [21.5829, 37.0807], [21.5714, 37.541], [21.1448, 37.9192], [21.4036, 38.1967], [21.8248, 38.3281], [22.7996, 37.9814], [22.4219, 38.4386], [21.4724, 38.3214], [21.1133, 38.3849], [20.7795, 39.0086], [20.301, 39.3273], [20.0013, 39.7095], [20.6574, 40.1174], [21.0312, 40.6585], [20.9641, 40.8498], [21.5758, 40.8689], [21.9296, 41.1073], [22.7246, 41.1783], [22.9159, 41.3363], [23.635, 41.3869], [24.0558, 41.5272], [25.2512, 41.2436], [26.1355, 41.3856], [26.321, 41.7167], [26.6246, 41.4016], [26.0391, 40.7269]]], [[[23.4153, 38.9588], [24.0989, 38.6712], [23.7589, 38.4013], [23.2519, 38.8013], [23.4153, 38.9588]]]]
            },
            "properties": {
                "name": "Greece",
                "id": "GR"
            },
            "id": "GR"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[9.5907, 1.0318], [9.3861, 1.1392], [9.8069, 1.9276], [9.8007, 2.3044], [9.98, 2.1677], [11.3286, 2.1673], [11.3352, 0.9998], [9.5907, 1.0318]]]
            },
            "properties": {
                "name": "Equatorial Guinea",
                "id": "GQ"
            },
            "id": "GQ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-15.0431, 10.9404], [-15.3931, 11.2174], [-15.5018, 11.7238], [-16.1384, 11.9174], [-16.7119, 12.3551], [-15.5748, 12.4904], [-15.1962, 12.68], [-13.7294, 12.6738], [-13.7327, 11.7358], [-14.6831, 11.5085], [-15.0431, 10.9404]]]
            },
            "properties": {
                "name": "Guinea-Bissau",
                "id": "GW"
            },
            "id": "GW"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-16.7634, 13.064], [-16.8248, 13.3409], [-16.5623, 13.5873], [-15.5096, 13.5864], [-15.8343, 13.1563], [-16.6488, 13.1541], [-16.7634, 13.064]]]
            },
            "properties": {
                "name": "Gambia",
                "id": "GM"
            },
            "id": "GM"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-61.3272, 16.2302], [-61.5221, 16.228], [-61.529, 16.434], [-61.4065, 16.4682], [-61.3272, 16.2302]]]
            },
            "properties": {
                "name": "Guadeloupe",
                "id": "GP"
            },
            "id": "GP"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-11.3894, 12.4043], [-11.3053, 12.0155], [-10.9333, 12.205], [-10.6774, 11.8996], [-10.2748, 12.2126], [-9.8207, 12.0426], [-9.043, 12.4025], [-8.8219, 11.6732], [-8.4075, 11.3865], [-8.2315, 10.4379], [-7.9907, 10.1627], [-8.1365, 10.022], [-8.137, 9.4955], [-7.8962, 9.416], [-7.951, 8.7866], [-7.8236, 8.4674], [-8.232, 7.5566], [-8.4863, 7.5584], [-8.7083, 7.6591], [-8.8896, 7.2627], [-9.1175, 7.2157], [-9.4598, 7.4425], [-9.369, 7.6396], [-9.5182, 8.3463], [-9.7683, 8.5345], [-10.2832, 8.4852], [-10.5005, 8.6876], [-10.6905, 9.3144], [-11.2056, 9.9776], [-11.911, 9.9931], [-12.5016, 9.8622], [-12.7559, 9.3734], [-13.2928, 9.0494], [-13.7005, 9.8511], [-14.4269, 10.2483], [-14.7758, 10.9315], [-15.0431, 10.9404], [-14.6831, 11.5085], [-13.7327, 11.7358], [-13.7294, 12.6738], [-13.0828, 12.6334], [-12.2912, 12.328], [-11.3894, 12.4043]]]
            },
            "properties": {
                "name": "Guinea",
                "id": "GN"
            },
            "id": "GN"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-0.0686, 11.1157], [-0.0577, 10.6305], [0.3627, 10.2364], [0.2619, 9.4955], [0.5291, 9.3583], [0.4153, 8.6525], [0.688, 8.3041], [0.5837, 8.1456], [0.6348, 7.3537], [0.5256, 6.8508], [0.7369, 6.4526], [1.1874, 6.0895], [0.9499, 5.8103], [0.2597, 5.7575], [-0.7977, 5.2266], [-1.6384, 4.9807], [-2.0017, 4.7623], [-3.1139, 5.0885], [-3.0868, 5.1285], [-3.0191, 5.1307], [-2.7952, 5.1844], [-3.2007, 6.3483], [-3.2358, 6.8073], [-2.9858, 7.205], [-2.7899, 7.9321], [-2.5058, 8.2087], [-2.7466, 9.1098], [-2.6958, 9.4813], [-2.7865, 10.4019], [-2.9148, 10.5924], [-2.8298, 10.9985], [-0.7014, 10.9888], [-0.0686, 11.1157]]]
            },
            "properties": {
                "name": "Ghana",
                "id": "GH"
            },
            "id": "GH"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-2.5124, 49.4946], [-2.5475, 49.4287], [-2.646, 49.4682], [-2.5124, 49.4946]]]
            },
            "properties": {
                "name": "Guernsey",
                "id": "GG"
            },
            "id": "GG"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[46.4298, 41.8907], [46.1821, 41.6573], [46.6189, 41.3439], [46.4577, 41.07], [45.281, 41.4495], [45.0013, 41.291], [43.4393, 41.1073], [42.7876, 41.5636], [42.4663, 41.4398], [41.5101, 41.5174], [41.7631, 41.9702], [41.4888, 42.6591], [40.8367, 43.0635], [39.9782, 43.42], [40.6481, 43.534], [41.5807, 43.2193], [42.4192, 43.2242], [43.7824, 42.747], [43.9573, 42.5664], [44.5059, 42.7488], [45.1602, 42.6751], [45.7275, 42.4749], [45.6388, 42.205], [46.4298, 41.8907]]]
            },
            "properties": {
                "name": "Georgia",
                "id": "GE"
            },
            "id": "GE"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[13.2937, 2.1615], [13.1627, 1.6479], [13.2741, 1.2409], [13.8512, 1.4189], [14.181, 1.3701], [14.4345, 0.8116], [14.0874, 0.5364], [13.8845, 0.1906], [13.8601, -0.2035], [14.4806, -0.6181], [14.3839, -1.8899], [14.0874, -2.4669], [13.7842, -2.1638], [13.465, -2.3955], [12.9918, -2.3134], [12.7934, -1.9316], [12.4321, -1.929], [12.4463, -2.3298], [11.5754, -2.3973], [11.5376, -2.8367], [11.934, -3.3188], [11.5043, -3.5203], [11.1301, -3.9163], [10.3476, -3.0129], [9.6245, -2.3671], [9.2658, -1.8251], [9.3306, -1.5348], [9.0647, -1.2982], [8.8215, -0.7082], [9.2969, -0.3514], [9.5907, 1.0318], [11.3352, 0.9998], [11.3286, 2.1673], [11.3485, 2.2996], [13.2204, 2.2565], [13.2937, 2.1615]]]
            },
            "properties": {
                "name": "Gabon",
                "id": "GA"
            },
            "id": "GA"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[5.7897, 49.5383], [6.3441, 49.4527], [6.7356, 49.1606], [7.4507, 49.1522], [8.1348, 48.9735], [7.5843, 48.0644], [7.6154, 47.5925], [7.0006, 47.3227], [6.06, 46.4282], [6.7583, 46.4158], [7.021, 45.9257], [7.1533, 45.401], [6.6277, 45.1178], [7.0308, 44.7166], [6.9673, 44.2802], [7.6771, 44.0831], [7.4929, 43.7671], [7.4387, 43.7507], [7.4143, 43.7711], [7.3779, 43.7316], [6.4941, 43.1692], [6.1159, 43.0724], [5.4066, 43.2286], [5.0599, 43.4444], [4.7119, 43.3733], [4.0527, 43.5931], [3.2591, 43.1931], [3.0518, 42.9152], [3.2116, 42.431], [2.0326, 42.3537], [1.7059, 42.5033], [1.4284, 42.5961], [-0.0411, 42.6893], [-1.2855, 43.0595], [-1.794, 43.4075], [-1.4848, 43.5638], [-1.2456, 44.5599], [-1.066, 45.8059], [-1.1464, 46.3115], [-1.7867, 46.5148], [-2.0188, 47.0377], [-3.1587, 47.6946], [-4.312, 47.8229], [-4.6291, 48.0857], [-4.3932, 48.3676], [-4.7208, 48.5398], [-3.2315, 48.8408], [-2.6924, 48.5367], [-2.4463, 48.6483], [-1.4375, 48.6415], [-1.8564, 49.6837], [-1.2587, 49.6802], [-1.1386, 49.3879], [-0.1636, 49.2969], [0.1869, 49.703], [1.2456, 49.9982], [1.5514, 50.2938], [1.5794, 50.7393], [1.9123, 50.9905], [2.5249, 51.0971], [2.8396, 50.7118], [4.1744, 50.2466], [4.8677, 49.788], [5.7897, 49.5383]]], [[[9.4802, 42.8056], [9.5508, 42.1296], [9.1863, 41.3847], [8.8077, 41.5885], [8.7132, 42.5499], [9.4802, 42.8056]]]]
            },
            "properties": {
                "name": "France",
                "id": "FR"
            },
            "id": "FR"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[158.315, 6.8135], [158.1836, 6.8011], [158.1348, 6.9449], [158.2946, 6.9511], [158.315, 6.8135]]]
            },
            "properties": {
                "name": "Federated States of Micronesia",
                "id": "FM"
            },
            "id": "FM"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-6.6311, 62.2279], [-7.0135, 62.094], [-7.1722, 62.2856], [-6.6311, 62.2279]]]
            },
            "properties": {
                "name": "Faroe Islands",
                "id": "FO"
            },
            "id": "FO"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[-58.8501, -51.2698], [-58.4737, -51.509], [-57.9765, -51.3843], [-57.8382, -51.7092], [-58.6834, -51.9361], [-59.0681, -52.1731], [-59.5708, -51.9254], [-59.0596, -51.6857], [-58.8501, -51.2698]]], [[[-60.2863, -51.462], [-59.268, -51.4274], [-59.9214, -51.9693], [-60.2863, -51.462]]]]
            },
            "properties": {
                "name": "Falkland Islands",
                "id": "FK"
            },
            "id": "FK"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[178.2804, -17.372], [178.5915, -17.6516], [178.6679, -18.0808], [177.8471, -18.2549], [177.3215, -18.0773], [177.2638, -17.8633], [177.6181, -17.4612], [178.2804, -17.372]]], [[[179.9991, -16.1686], [179.7483, -16.4464], [179.9281, -16.7443], [179.007, -16.9001], [178.805, -16.6315], [179.5517, -16.2498], [179.9991, -16.1686]]]]
            },
            "properties": {
                "name": "Fiji",
                "id": "FJ"
            },
            "id": "FJ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[28.9657, 69.0219], [28.4708, 68.4883], [29.3439, 68.062], [29.9414, 67.5475], [29.0869, 66.9709], [29.9032, 66.0911], [29.604, 64.9685], [30.0728, 64.7649], [30.1083, 64.3661], [30.5038, 64.0205], [30.0555, 63.689], [31.1807, 63.2082], [31.5341, 62.8855], [31.2855, 62.5679], [29.6902, 61.5461], [27.7978, 60.5362], [25.6565, 60.3331], [23.7216, 59.9656], [22.7934, 60.0768], [22.5759, 60.3591], [21.436, 60.5964], [21.3605, 60.9675], [21.606, 61.5916], [21.2562, 61.9897], [21.1035, 62.6229], [22.2434, 63.4379], [23.2488, 63.8963], [24.5579, 64.8009], [25.3729, 65.0095], [25.348, 65.4792], [24.1557, 65.8052], [23.7012, 66.4808], [23.9884, 66.8106], [23.4681, 67.45], [23.639, 67.9543], [22.7823, 68.3911], [21.9975, 68.5207], [20.6223, 69.037], [21.622, 69.2707], [22.4108, 68.7198], [23.8539, 68.8059], [24.9414, 68.5933], [25.7484, 68.9901], [26.0116, 69.6526], [26.5257, 69.915], [27.8897, 70.0617], [29.1415, 69.6715], [28.9657, 69.0219]]]
            },
            "properties": {
                "name": "Finland",
                "id": "FI"
            },
            "id": "FI"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[42.3784, 12.4665], [41.7667, 11.5889], [41.7982, 10.9803], [42.5577, 11.0806], [42.9226, 10.9994], [42.6594, 10.6212], [42.8418, 10.2031], [43.1818, 9.8799], [43.4828, 9.3796], [44.023, 8.9859], [46.9784, 7.9969], [47.9781, 7.9969], [45.9348, 5.9972], [44.9405, 4.9119], [44.0283, 4.9509], [43.5383, 4.8404], [43.0158, 4.5634], [42.7916, 4.2922], [42.0241, 4.1377], [41.8839, 3.9779], [41.2207, 3.9437], [40.7653, 4.2731], [39.8424, 3.8514], [39.4944, 3.4559], [38.0864, 3.649], [36.9056, 4.4116], [36.0818, 4.4498], [35.763, 4.808], [35.7448, 5.3442], [35.2681, 5.4925], [35.0821, 5.6731], [34.7106, 6.6604], [34.0643, 7.2259], [33.6661, 7.6711], [33.2262, 7.7608], [33.0127, 7.9516], [33.2342, 8.3964], [33.9533, 8.4435], [34.0945, 8.5824], [34.078, 9.4613], [34.2915, 10.1249], [34.2756, 10.528], [34.5716, 10.88], [34.9312, 10.8649], [35.1123, 11.8166], [35.5961, 12.5375], [36.1075, 12.7266], [36.2123, 13.2712], [36.3907, 13.6259], [36.5243, 14.2567], [37.0246, 14.2718], [37.2572, 14.4538], [37.571, 14.1493], [37.8844, 14.8524], [38.5045, 14.4245], [39.074, 14.6282], [40.2215, 14.4311], [40.7697, 14.1444], [41.3627, 13.4998], [41.7649, 13.1838], [42.3784, 12.4665]]]
            },
            "properties": {
                "name": "Ethiopia",
                "id": "ET"
            },
            "id": "ET"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[28.0127, 59.4842], [27.4272, 58.7331], [27.753, 57.8411], [27.3517, 57.5282], [26.5328, 57.5311], [25.9912, 57.8382], [25.111, 58.0635], [24.3226, 57.8706], [24.529, 58.3543], [23.7678, 58.3609], [23.5094, 58.6585], [23.4943, 59.1957], [24.3803, 59.4726], [25.5091, 59.6389], [26.9749, 59.4507], [28.0127, 59.4842]]], [[[22.6172, 58.6213], [23.2928, 58.4834], [22.1875, 58.1543], [22.0814, 58.4781], [22.6172, 58.6213]]]]
            },
            "properties": {
                "name": "Estonia",
                "id": "EE"
            },
            "id": "EE"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[-1.794, 43.4075], [-1.2855, 43.0595], [-0.0411, 42.6893], [1.4284, 42.5961], [1.4861, 42.4345], [1.7059, 42.5033], [2.0326, 42.3537], [3.2116, 42.431], [3.248, 41.9445], [2.0827, 41.2875], [1.0329, 41.062], [-0.3269, 39.5199], [-0.2049, 39.0627], [0.2015, 38.7591], [-0.3813, 38.4355], [-0.6468, 38.1518], [-0.8221, 37.581], [-1.3275, 37.561], [-1.7975, 37.233], [-2.1116, 36.7767], [-4.3668, 36.7181], [-4.6742, 36.5063], [-5.1716, 36.4238], [-5.6254, 36.026], [-6.0407, 36.1885], [-6.4924, 36.9547], [-6.8845, 37.1944], [-7.4061, 37.1793], [-7.5036, 37.5854], [-7.1855, 38.0062], [-7.3431, 38.4572], [-7.0461, 38.9069], [-7.4452, 39.5363], [-7.0368, 39.7139], [-7.0146, 40.2084], [-6.8102, 40.3429], [-6.9285, 41.0092], [-6.2125, 41.5321], [-6.6182, 41.9422], [-7.4037, 41.8335], [-7.9208, 41.8836], [-8.2131, 42.1336], [-8.7771, 41.9409], [-8.691, 42.2743], [-9.2352, 42.977], [-8.8736, 43.3343], [-7.6982, 43.7644], [-7.2621, 43.5948], [-5.6658, 43.5824], [-4.523, 43.416], [-3.6046, 43.5194], [-3.0455, 43.3716], [-2.3371, 43.3281], [-1.794, 43.4075]]], [[[3.1454, 39.7902], [3.4619, 39.6979], [3.0726, 39.3011], [2.3713, 39.6131], [2.785, 39.8546], [3.1454, 39.7902]]], [[[-16.3346, 28.38], [-16.6579, 28.0071], [-16.9054, 28.3396], [-16.3346, 28.38]]]]
            },
            "properties": {
                "name": "Spain",
                "id": "ES"
            },
            "id": "ES"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[38.6093, 18.0049], [38.9116, 17.427], [39.1424, 16.7292], [39.2991, 15.9213], [39.5064, 15.532], [39.8637, 15.4703], [40.2042, 15.014], [41.1763, 14.6202], [41.6584, 13.9832], [42.2452, 13.5877], [42.7961, 12.8642], [43.1166, 12.7084], [42.67, 12.3764], [42.3784, 12.4665], [41.7649, 13.1838], [41.3627, 13.4998], [40.7697, 14.1444], [40.2215, 14.4311], [39.074, 14.6282], [38.5045, 14.4245], [37.8844, 14.8524], [37.571, 14.1493], [37.2572, 14.4538], [37.0246, 14.2718], [36.5243, 14.2567], [36.4267, 15.132], [36.9136, 16.2964], [37.0091, 17.059], [37.4112, 17.0616], [37.7823, 17.458], [38.2537, 17.5845], [38.6093, 18.0049]]]
            },
            "properties": {
                "name": "Eritrea",
                "id": "ER"
            },
            "id": "ER"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[-6.218, 54.0887], [-7.3553, 54.1213], [-8.1183, 54.4143], [-7.2186, 55.0921], [-6.1293, 55.2175], [-5.4703, 54.5002], [-5.6068, 54.2727], [-6.218, 54.0887]]], [[[-3.1097, 58.5154], [-3.9901, 57.959], [-3.4029, 57.7082], [-2.0741, 57.7024], [-1.778, 57.4938], [-2.6527, 56.3183], [-3.1783, 56.0802], [-2.1471, 55.9031], [-1.6555, 55.5704], [-1.2917, 54.7738], [-0.6714, 54.5039], [-0.2055, 54.0217], [0.5589, 52.967], [1.6566, 52.7537], [1.5589, 52.0869], [0.9553, 51.8077], [0.6867, 51.3865], [1.4151, 51.3632], [0.9601, 50.9259], [0.2051, 50.763], [-1.5168, 50.7475], [-2.5477, 50.6163], [-3.4047, 50.6323], [-3.7933, 50.2293], [-4.1726, 50.3908], [-5.3422, 50.2461], [-4.583, 50.7764], [-4.1881, 51.1885], [-3.1359, 51.2049], [-4.3863, 51.7412], [-4.9023, 51.6262], [-5.0881, 51.9959], [-4.3832, 52.1973], [-3.9804, 52.5417], [-4.1111, 53.2189], [-3.0646, 53.4268], [-2.925, 53.7327], [-3.958, 54.7809], [-5.1354, 54.8575], [-4.7212, 55.421], [-5.2457, 55.9293], [-5.6097, 56.0553], [-5.392, 56.5148], [-5.9368, 56.6058], [-5.562, 57.2328], [-5.8181, 57.4361], [-5.3382, 58.2386], [-4.7155, 58.5101], [-3.1097, 58.5154]]]]
            },
            "properties": {
                "name": "United Kingdom",
                "id": "GB"
            },
            "id": "GB"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[34.1983, 31.3226], [34.2454, 31.2085], [34.9041, 29.4773], [34.7363, 29.2705], [34.3999, 28.016], [34.2201, 27.7643], [33.7602, 28.0475], [33.2475, 28.5678], [33.0757, 29.0729], [32.7215, 29.5217], [32.6318, 28.9921], [32.8982, 28.5651], [33.5471, 27.8984], [33.5498, 27.6072], [33.8929, 27.0497], [33.9591, 26.6488], [34.565, 25.6913], [35.194, 24.4751], [35.6246, 24.0658], [35.5229, 23.4426], [35.6978, 22.9463], [36.2296, 22.6289], [36.8714, 21.9968], [34.2467, 21.9964], [32.6061, 21.9959], [30.3285, 21.9951], [27.2723, 21.9955], [24.9805, 21.9959], [24.9805, 24.2416], [24.9805, 25.8134], [24.9805, 27.8345], [24.9805, 29.1817], [24.7115, 30.1316], [24.9738, 30.7766], [24.8526, 31.335], [25.1505, 31.655], [25.3822, 31.513], [25.8931, 31.6209], [27.2479, 31.3781], [27.9674, 31.0975], [28.5147, 31.0505], [29.0723, 30.8303], [29.5916, 31.0114], [30.3951, 31.4575], [30.7005, 31.4038], [31.1941, 31.5876], [32.1018, 31.0926], [33.1299, 31.1681], [33.6665, 31.1304], [34.1983, 31.3226]]]
            },
            "properties": {
                "name": "Egypt",
                "id": "EG"
            },
            "id": "EG"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[-91.2722, 0.0251], [-90.7997, -0.7522], [-90.9055, -0.9404], [-91.3692, -0.287], [-91.2722, 0.0251]]], [[[-75.2845, -0.1063], [-75.2632, -0.5555], [-75.5706, -1.5312], [-76.0898, -2.1331], [-76.679, -2.5628], [-77.8607, -2.9819], [-78.3472, -3.4311], [-78.4198, -3.7769], [-79.0763, -4.9905], [-79.3308, -4.9279], [-79.6385, -4.4547], [-80.1396, -4.2962], [-80.4885, -4.3939], [-80.51, -4.0694], [-80.1793, -3.8776], [-80.3247, -3.388], [-79.9217, -3.0902], [-79.7299, -2.5793], [-80.4501, -2.6259], [-80.9628, -2.1891], [-80.7704, -2.0768], [-80.8015, -1.3834], [-80.9024, -1.0789], [-80.554, -0.8481], [-80.4823, -0.3682], [-80.1334, -0.006], [-80.0251, 0.4104], [-80.0883, 0.7846], [-79.7412, 0.9799], [-78.8996, 1.2063], [-78.8597, 1.4553], [-78.3121, 1.046], [-77.4676, 0.6363], [-77.4228, 0.425], [-76.4946, 0.2355], [-76.311, 0.4485], [-75.8798, 0.1511], [-75.2845, -0.1063]]]]
            },
            "properties": {
                "name": "Ecuador",
                "id": "EC"
            },
            "id": "EC"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[8.5764, 36.9374], [8.2306, 36.5454], [8.2457, 35.8707], [8.3944, 35.204], [8.2457, 34.7339], [7.5138, 34.0805], [7.5, 33.8323], [7.7628, 33.2331], [8.2111, 32.9268], [8.3332, 32.5437], [9.0439, 32.0723], [9.5188, 30.2293], [9.3102, 30.1152], [9.6724, 29.567], [9.8424, 28.9668], [9.9161, 27.7856], [9.7474, 27.3306], [9.8593, 26.5521], [9.4913, 26.3337], [9.4482, 26.0673], [10.0009, 25.3322], [10.2557, 24.5909], [10.6863, 24.5514], [11.5075, 24.3144], [11.9678, 23.518], [9.3785, 21.9915], [7.4818, 20.8729], [5.8367, 19.4791], [4.2276, 19.1426], [3.4007, 18.9886], [3.1059, 19.1502], [3.2559, 19.4107], [3.2036, 19.7898], [2.4063, 20.0637], [2.2195, 20.2479], [1.6855, 20.3784], [1.1657, 20.8174], [1.1457, 21.1024], [-1.2931, 22.6964], [-3.2579, 23.981], [-4.8227, 24.9958], [-6.2387, 25.848], [-8.6834, 27.2858], [-8.6834, 27.6565], [-8.6599, 28.7187], [-7.6851, 29.3495], [-7.095, 29.6251], [-6.6353, 29.5687], [-6.5008, 29.8093], [-5.4488, 29.9567], [-4.9683, 30.4654], [-4.3228, 30.6989], [-3.8335, 31.1978], [-3.8268, 31.6617], [-3.0174, 31.8344], [-2.9308, 32.0426], [-2.4485, 32.13], [-1.2753, 32.0892], [-1.0656, 32.4683], [-1.5099, 32.8775], [-1.6792, 33.3187], [-1.7955, 34.7521], [-2.2197, 35.1041], [-1.9132, 35.0943], [-0.9175, 35.6683], [0.0479, 35.9004], [0.5149, 36.2618], [1.2571, 36.5197], [2.5932, 36.6009], [2.9727, 36.7847], [3.7788, 36.8961], [4.7581, 36.8965], [5.1958, 36.6768], [6.0649, 36.8641], [6.4866, 37.0856], [6.9274, 36.9196], [7.6079, 36.9999], [7.9106, 36.8566], [8.5764, 36.9374]]]
            },
            "properties": {
                "name": "Algeria",
                "id": "DZ"
            },
            "id": "DZ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-71.7683, 18.0391], [-71.6571, 19.1306], [-71.7791, 19.7183], [-71.5578, 19.8954], [-70.9542, 19.9141], [-70.1294, 19.6362], [-69.7394, 19.2993], [-68.6848, 18.9047], [-68.3594, 18.538], [-68.6588, 18.222], [-68.9349, 18.408], [-69.7707, 18.4435], [-70.1831, 18.2517], [-71.0278, 18.273], [-71.3958, 17.6462], [-71.7683, 18.0391]]]
            },
            "properties": {
                "name": "Dominican Republic",
                "id": "DO"
            },
            "id": "DO"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[9.7399, 54.8255], [8.6701, 54.9034], [8.6159, 55.4181], [8.1321, 55.5999], [8.1641, 56.6069], [8.6186, 57.1114], [9.5543, 57.2325], [9.9623, 57.581], [10.5371, 57.4485], [10.2828, 56.6204], [10.1829, 55.8651], [9.5912, 55.4932], [9.7399, 54.8255]]], [[[12.5688, 55.785], [11.6539, 55.1869], [11.2864, 55.2044], [10.9788, 55.7215], [12.219, 56.1186], [12.5688, 55.785]]], [[[10.645, 55.6099], [10.7852, 55.1334], [9.9889, 55.1631], [9.8606, 55.5156], [10.645, 55.6099]]]]
            },
            "properties": {
                "name": "Denmark",
                "id": "DK"
            },
            "id": "DK"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-61.2817, 15.2492], [-61.481, 15.5253], [-61.3201, 15.5853], [-61.2817, 15.2492]]]
            },
            "properties": {
                "name": "Dominica",
                "id": "DM"
            },
            "id": "DM"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[43.2462, 11.4997], [42.9226, 10.9994], [42.5577, 11.0806], [41.7982, 10.9803], [41.7667, 11.5889], [42.3784, 12.4665], [42.67, 12.3764], [43.1166, 12.7084], [43.41, 12.1899], [43.2719, 11.9698], [42.7992, 11.7394], [43.2462, 11.4997]]]
            },
            "properties": {
                "name": "Djibouti",
                "id": "DJ"
            },
            "id": "DJ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[9.7399, 54.8255], [10.3604, 54.4382], [11.3996, 53.9446], [12.1111, 54.1684], [12.5755, 54.4673], [13.0287, 54.4109], [13.8654, 53.8534], [14.2587, 53.7296], [14.4145, 53.2835], [14.1286, 52.8782], [14.6196, 52.5284], [14.7527, 52.0818], [14.6018, 51.8324], [15.0164, 51.2527], [14.8096, 50.8589], [14.3692, 50.8986], [12.4525, 50.3498], [12.2763, 50.0424], [12.6318, 49.4613], [13.8148, 48.7669], [13.4095, 48.3942], [12.8143, 48.1607], [12.686, 47.6693], [11.717, 47.5837], [11.2979, 47.4247], [10.4306, 47.541], [10.3129, 47.3133], [9.5241, 47.5242], [8.6177, 47.7661], [7.6154, 47.5925], [7.5843, 48.0644], [8.1348, 48.9735], [7.4507, 49.1522], [6.7356, 49.1606], [6.3441, 49.4527], [6.4875, 49.7985], [6.1164, 50.1209], [6.3645, 50.3163], [5.9939, 50.7504], [5.8949, 50.9843], [6.1932, 51.4888], [5.9486, 51.7625], [6.7418, 51.9109], [7.0352, 52.3801], [7.1973, 53.2823], [7.2852, 53.6814], [8.0091, 53.6907], [8.5387, 53.5569], [8.8978, 53.8357], [8.9573, 54.5383], [8.6701, 54.9034], [9.7399, 54.8255]]]
            },
            "properties": {
                "name": "Germany",
                "id": "DE"
            },
            "id": "DE"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[14.8096, 50.8589], [16.0072, 50.6117], [16.6792, 50.0974], [17.152, 50.3784], [17.8746, 49.9722], [18.5622, 49.8792], [18.8321, 49.5108], [18.161, 49.2574], [17.7583, 48.888], [17.1884, 48.861], [16.9531, 48.5988], [16.4777, 48.8001], [16.0573, 48.7549], [14.972, 48.9839], [14.6915, 48.5993], [14.0492, 48.6024], [13.8148, 48.7669], [12.6318, 49.4613], [12.2763, 50.0424], [12.4525, 50.3498], [14.3692, 50.8986], [14.8096, 50.8589]]]
            },
            "properties": {
                "name": "Czechia",
                "id": "CZ"
            },
            "id": "CZ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[34.4633, 35.5937], [33.9418, 35.2918], [34.0501, 34.9882], [32.9417, 34.5758], [32.4489, 34.7294], [32.3171, 34.9532], [32.9417, 35.3904], [33.4588, 35.3358], [34.4633, 35.5937]]]
            },
            "properties": {
                "name": "Cyprus",
                "id": "CY"
            },
            "id": "CY"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-81.3696, 19.349], [-81.1306, 19.3468], [-81.3037, 19.2718], [-81.3696, 19.349]]]
            },
            "properties": {
                "name": "Cayman Islands",
                "id": "KY"
            },
            "id": "KY"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[105.7253, -10.493], [105.6969, -10.564], [105.5842, -10.5125], [105.7053, -10.4308], [105.7253, -10.493]]]
            },
            "properties": {
                "name": "Christmas Island",
                "id": "CX"
            },
            "id": "CX"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-68.7511, 12.0599], [-68.8033, 12.0457], [-68.995, 12.142], [-69.154, 12.2982], [-69.0767, 12.3422], [-69.0132, 12.2312], [-68.8275, 12.1584], [-68.7511, 12.0599]]]
            },
            "properties": {
                "name": "Curaçao",
                "id": "CW"
            },
            "id": "CW"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[-82.5617, 21.5716], [-82.8531, 21.4437], [-83.0826, 21.7913], [-82.7146, 21.8903], [-82.5617, 21.5716]]], [[[-81.8375, 23.1629], [-81.1785, 23.0595], [-80.6501, 23.103], [-80.0752, 22.9423], [-79.183, 22.3879], [-78.6865, 22.367], [-77.8651, 21.9005], [-77.4973, 21.8717], [-76.6475, 21.2844], [-75.7229, 21.1108], [-75.6428, 20.7335], [-74.8826, 20.6505], [-74.2529, 20.0797], [-75.1165, 19.9012], [-76.1586, 19.9896], [-77.7151, 19.8555], [-77.2135, 20.3003], [-77.2297, 20.6438], [-77.9974, 20.7153], [-78.4908, 21.0536], [-78.6366, 21.5157], [-79.2745, 21.5627], [-80.2313, 21.8721], [-80.4992, 22.0634], [-80.9619, 22.0528], [-81.8162, 22.2001], [-81.9034, 22.6791], [-82.7382, 22.6893], [-83.3796, 22.2228], [-84.3264, 22.0745], [-84.3612, 22.379], [-84.045, 22.6662], [-83.2577, 22.9676], [-82.1014, 23.1905], [-81.8375, 23.1629]]]]
            },
            "properties": {
                "name": "Cuba",
                "id": "CU"
            },
            "id": "CU"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-83.6419, 10.9173], [-83.4482, 10.4658], [-82.7783, 9.6695], [-82.5635, 9.5767], [-82.9399, 9.4493], [-82.917, 8.7404], [-82.9976, 8.3676], [-82.8793, 8.0706], [-83.1625, 8.5882], [-83.734, 8.6144], [-83.6373, 9.0352], [-83.8956, 9.2762], [-84.6589, 9.6469], [-85.1145, 9.5816], [-85.6248, 9.9025], [-85.8305, 10.3979], [-85.6672, 10.7451], [-85.7444, 11.062], [-85.6215, 11.1845], [-84.9092, 10.9453], [-84.3484, 10.9799], [-84.1684, 10.7806], [-83.6419, 10.9173]]]
            },
            "properties": {
                "name": "Costa Rica",
                "id": "CR"
            },
            "id": "CR"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-23.4442, 15.0078], [-23.7054, 14.9611], [-23.7007, 15.2714], [-23.4442, 15.0078]]]
            },
            "properties": {
                "name": "Cape Verde",
                "id": "CV"
            },
            "id": "CV"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[43.4659, -11.9014], [43.2266, -11.7518], [43.3793, -11.6142], [43.4659, -11.9014]]]
            },
            "properties": {
                "name": "Comoros",
                "id": "KM"
            },
            "id": "KM"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-71.3197, 11.8619], [-71.958, 11.6666], [-72.2485, 11.1965], [-72.6902, 10.8361], [-72.8693, 10.4911], [-73.0065, 9.7894], [-73.3563, 9.2269], [-72.7963, 9.1089], [-72.6654, 8.6277], [-72.4166, 8.3818], [-72.443, 7.4549], [-72.0843, 7.0967], [-71.0134, 6.9946], [-70.6552, 7.0829], [-70.095, 6.9378], [-69.4392, 6.1348], [-68.4717, 6.1565], [-67.8591, 6.2897], [-67.4394, 6.0256], [-67.8249, 5.2705], [-67.8553, 4.507], [-67.6616, 3.8643], [-67.3111, 3.416], [-67.8347, 2.8926], [-67.2108, 2.3901], [-66.8761, 1.2231], [-67.352, 2.0861], [-67.8152, 1.79], [-68.1765, 1.7198], [-69.8486, 1.7087], [-69.8522, 1.0593], [-69.3615, 1.0642], [-69.1633, 0.864], [-70.0539, 0.5786], [-70.0706, -0.1387], [-69.6675, -0.4823], [-69.4003, -1.1948], [-69.6691, -2.6676], [-69.9658, -4.2359], [-70.3396, -3.8142], [-70.7351, -3.7818], [-70.0741, -2.7502], [-70.9146, -2.2184], [-71.3969, -2.3342], [-71.7525, -2.1527], [-72.3957, -2.4288], [-73.1545, -2.2783], [-73.1969, -1.8304], [-73.4963, -1.6932], [-73.6643, -1.2489], [-74.2465, -0.9706], [-74.4178, -0.5809], [-74.8018, -0.2], [-75.2845, -0.1063], [-75.8798, 0.1511], [-76.311, 0.4485], [-76.4946, 0.2355], [-77.4228, 0.425], [-77.4676, 0.6363], [-78.3121, 1.046], [-78.8597, 1.4553], [-78.5769, 1.774], [-78.6171, 2.3067], [-78.1201, 2.4882], [-77.67, 2.8788], [-77.2428, 3.5855], [-77.1666, 3.8621], [-77.4272, 4.0605], [-77.2863, 4.7219], [-77.4017, 5.4161], [-77.2492, 5.7801], [-77.4694, 6.177], [-77.36, 6.5046], [-77.9011, 7.2294], [-77.7439, 7.537], [-77.3509, 7.7057], [-77.2124, 8.0338], [-77.3742, 8.6583], [-76.8519, 8.0906], [-76.8879, 8.6197], [-76.2769, 8.989], [-76.1355, 9.2656], [-75.6394, 9.4502], [-75.671, 10.1964], [-75.4459, 10.611], [-74.8446, 11.1095], [-74.4542, 10.9892], [-74.0592, 11.3408], [-73.3134, 11.2959], [-72.722, 11.7123], [-72.275, 11.8894], [-72.1358, 12.1886], [-71.7145, 12.4199], [-71.2622, 12.3351], [-71.3197, 11.8619]]]
            },
            "properties": {
                "name": "Colombia",
                "id": "CO"
            },
            "id": "CO"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-159.7406, -21.2494], [-159.8395, -21.2383], [-159.832, -21.2005], [-159.7683, -21.1885], [-159.7406, -21.2494]]]
            },
            "properties": {
                "name": "Cook Islands",
                "id": "CK"
            },
            "id": "CK"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[18.6102, 3.4785], [18.4908, 2.9246], [18.0722, 2.0133], [18.058, 1.5347], [17.9026, 1.1179], [17.8875, 0.2341], [17.7242, -0.2777], [17.753, -0.5489], [17.2789, -0.9994], [16.8799, -1.2258], [16.5407, -1.8402], [16.2154, -2.178], [16.2171, -3.0302], [16.1466, -3.4639], [15.8722, -3.9345], [15.6001, -4.0308], [14.7794, -4.8458], [14.4105, -4.8311], [14.3581, -4.2993], [13.4149, -4.8373], [13.0726, -4.6349], [12.8809, -4.4454], [12.3846, -4.6189], [12.0184, -5.0042], [11.7773, -4.5657], [11.1301, -3.9163], [11.5043, -3.5203], [11.934, -3.3188], [11.5376, -2.8367], [11.5754, -2.3973], [12.4463, -2.3298], [12.4321, -1.929], [12.7934, -1.9316], [12.9918, -2.3134], [13.465, -2.3955], [13.7842, -2.1638], [14.0874, -2.4669], [14.3839, -1.8899], [14.4806, -0.6181], [13.8601, -0.2035], [13.8845, 0.1906], [14.0874, 0.5364], [14.4345, 0.8116], [14.181, 1.3701], [13.8512, 1.4189], [13.2741, 1.2409], [13.1627, 1.6479], [13.2937, 2.1615], [14.4842, 2.1549], [14.9023, 2.0124], [15.7417, 1.9152], [16.0596, 1.6763], [16.1834, 2.2703], [16.4684, 2.8318], [16.6735, 3.5354], [17.4379, 3.6845], [18.161, 3.4998], [18.6102, 3.4785]]]
            },
            "properties": {
                "name": "Republic of Congo",
                "id": "CG"
            },
            "id": "CG"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[27.4032, 5.1094], [27.7881, 4.6446], [28.192, 4.3503], [28.7269, 4.5048], [29.1513, 4.3881], [29.6768, 4.5869], [30.1949, 3.9819], [30.5083, 3.8359], [30.8385, 3.4905], [30.7284, 2.4554], [31.1763, 2.2703], [31.2527, 2.0448], [30.9424, 1.683], [29.9427, 0.8192], [29.9343, 0.4991], [29.7177, 0.0983], [29.5619, -0.9772], [29.577, -1.3878], [29.1295, -1.8601], [29.1064, -2.2335], [28.8765, -2.4004], [29.0146, -2.7204], [29.2245, -3.0533], [29.2232, -3.9109], [29.4034, -4.4494], [29.3426, -4.9829], [29.5943, -5.651], [29.4802, -6.0252], [29.7097, -6.6169], [30.3134, -7.2037], [30.7511, -8.1936], [28.9724, -8.4648], [28.9178, -8.7005], [28.4007, -9.2248], [28.6301, -9.8311], [28.639, -10.6692], [28.3572, -11.4828], [28.4823, -11.8122], [29.0643, -12.3489], [29.4274, -12.4314], [29.7954, -12.1553], [29.7954, -13.3929], [29.5543, -13.2491], [29.0141, -13.3689], [28.3576, -12.482], [27.5333, -12.1953], [27.0459, -11.616], [26.9496, -11.8988], [26.5962, -11.972], [26.0258, -11.8903], [25.3493, -11.6231], [25.1847, -11.2431], [24.5184, -11.4384], [24.32, -11.0718], [23.9666, -10.8716], [23.8339, -11.0136], [22.5613, -11.0558], [22.3069, -10.6914], [22.1977, -10.0406], [21.8133, -9.4689], [21.9056, -8.6934], [21.7511, -7.3054], [20.6077, -7.2778], [20.4821, -6.9161], [19.8753, -6.9862], [19.5277, -7.1447], [19.3408, -7.9668], [18.6532, -7.9361], [17.536, -8.076], [17.1551, -7.4612], [16.7094, -6.4717], [16.7179, -6.2414], [16.3152, -5.8658], [14.3985, -5.8925], [13.0682, -5.8649], [12.4117, -5.9866], [12.2137, -5.7589], [12.5035, -5.6958], [12.5222, -5.1489], [12.8298, -4.7366], [13.0726, -4.6349], [13.4149, -4.8373], [14.3581, -4.2993], [14.4105, -4.8311], [14.7794, -4.8458], [15.6001, -4.0308], [15.8722, -3.9345], [16.1466, -3.4639], [16.2171, -3.0302], [16.2154, -2.178], [16.5407, -1.8402], [16.8799, -1.2258], [17.2789, -0.9994], [17.753, -0.5489], [17.7242, -0.2777], [17.8875, 0.2341], [17.9026, 1.1179], [18.058, 1.5347], [18.0722, 2.0133], [18.4908, 2.9246], [18.6102, 3.4785], [18.5676, 4.2576], [19.0687, 4.8915], [19.5011, 5.1276], [19.8065, 5.0894], [20.2264, 4.8297], [20.558, 4.4627], [21.5376, 4.2447], [22.4223, 4.1351], [22.7557, 4.6469], [23.4171, 4.6633], [24.32, 4.994], [24.7656, 4.9301], [25.2495, 5.0246], [25.5251, 5.3123], [26.8222, 5.0623], [27.1151, 5.1977], [27.4032, 5.1094]]]
            },
            "properties": {
                "name": "Democratic Republic of Congo",
                "id": "CD"
            },
            "id": "CD"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[15.4803, 7.5237], [15.2459, 7.2636], [14.7394, 6.2799], [14.6169, 5.8649], [14.7088, 4.6655], [15.0226, 4.3583], [15.1287, 3.827], [15.775, 3.127], [16.0636, 2.9086], [16.1834, 2.2703], [16.0596, 1.6763], [15.7417, 1.9152], [14.9023, 2.0124], [14.4842, 2.1549], [13.2937, 2.1615], [13.2204, 2.2565], [11.3485, 2.2996], [11.3286, 2.1673], [9.98, 2.1677], [9.8007, 2.3044], [9.8762, 3.3099], [9.4252, 3.9224], [8.9999, 4.0916], [8.9027, 4.4351], [8.556, 4.7552], [8.801, 5.1973], [9.0603, 6.0092], [10.1438, 6.9964], [10.6064, 7.063], [11.0325, 6.6981], [11.1532, 6.438], [11.5518, 6.6972], [11.7676, 7.272], [12.0162, 7.5899], [12.4037, 8.5957], [12.8067, 8.8865], [12.9297, 9.4263], [13.1756, 9.5394], [13.2697, 10.0362], [13.5352, 10.6052], [13.892, 11.1401], [14.5597, 11.4921], [14.6271, 12.1087], [14.1974, 12.3839], [14.0638, 13.0786], [14.5162, 12.9796], [14.7612, 12.6556], [15.0812, 11.8455], [15.0297, 11.1135], [15.1323, 10.6483], [15.5411, 9.9603], [14.2432, 9.9798], [13.9773, 9.6917], [14.3324, 9.2034], [15.1163, 8.5571], [15.443, 7.8518], [15.4803, 7.5237]]]
            },
            "properties": {
                "name": "Cameroon",
                "id": "CM"
            },
            "id": "CM"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-5.5236, 10.4259], [-5.0999, 10.2417], [-4.9698, 9.9301], [-4.6258, 9.7134], [-3.8776, 9.895], [-3.2235, 9.8954], [-2.6958, 9.4813], [-2.7466, 9.1098], [-2.5058, 8.2087], [-2.7899, 7.9321], [-2.9858, 7.205], [-3.2358, 6.8073], [-3.2007, 6.3483], [-2.7952, 5.1844], [-3.0191, 5.1307], [-4.0372, 5.2301], [-5.5646, 5.0894], [-6.9229, 4.6384], [-7.5451, 4.3512], [-7.5688, 5.0805], [-7.4299, 5.3247], [-7.4543, 5.8414], [-7.7965, 5.975], [-7.8886, 6.2347], [-8.6035, 6.5077], [-8.3325, 6.8015], [-8.2966, 7.0741], [-8.4863, 7.5584], [-8.232, 7.5566], [-7.8236, 8.4674], [-7.951, 8.7866], [-7.8962, 9.416], [-8.137, 9.4955], [-8.1365, 10.022], [-7.9907, 10.1627], [-7.6611, 10.4272], [-7.1049, 10.2035], [-6.6932, 10.3495], [-6.2611, 10.7242], [-6.0345, 10.1946], [-5.5236, 10.4259]]]
            },
            "properties": {
                "name": "Côte d'Ivoire",
                "id": "CI"
            },
            "id": "CI"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[110.8887, 19.9918], [111.0138, 19.6553], [110.5722, 19.1719], [110.4514, 18.748], [109.5193, 18.2184], [108.7016, 18.5354], [108.6936, 19.3384], [109.6511, 19.9842], [110.5886, 20.0726], [110.8887, 19.9918]]], [[[130.5269, 42.5353], [130.2406, 42.8917], [129.8983, 42.9983], [129.7199, 42.4749], [129.3137, 42.4137], [128.9236, 42.0381], [128.0451, 41.9875], [128.291, 41.5627], [128.1112, 41.3891], [127.1795, 41.5312], [126.9034, 41.7811], [125.989, 40.9049], [124.8895, 40.4596], [124.3621, 40.0042], [124.1056, 39.8409], [123.3483, 39.7632], [122.3349, 39.3663], [121.6499, 38.8652], [121.7853, 39.401], [121.5177, 39.6389], [122.2749, 40.5418], [121.859, 40.8423], [121.1745, 40.9013], [120.479, 40.231], [119.5912, 39.9026], [118.9125, 39.1666], [118.2977, 39.0671], [117.7845, 39.1346], [117.5577, 38.625], [118.0149, 38.1834], [118.94, 38.0426], [119.0891, 37.7008], [118.9529, 37.3311], [119.45, 37.1247], [120.3702, 37.7008], [120.7502, 37.834], [121.6402, 37.4603], [122.6025, 37.4265], [122.5195, 36.9467], [121.9327, 36.9595], [120.9899, 36.5978], [120.3933, 36.054], [120.0546, 35.8614], [119.2156, 35.0118], [119.5827, 34.5821], [120.2015, 34.3255], [120.8709, 33.0165], [120.8532, 32.6613], [121.4009, 32.3719], [121.3521, 31.8588], [121.0556, 31.7194], [121.6606, 31.3199], [121.8781, 30.9168], [120.9974, 30.5582], [121.1594, 30.3016], [121.9442, 29.8941], [121.7174, 29.2562], [121.602, 28.3667], [121.0986, 28.2903], [120.2788, 27.0972], [119.6484, 25.9186], [119.5392, 25.5915], [119.0248, 25.2235], [118.5605, 24.5803], [118.0873, 24.6269], [118.0562, 24.246], [116.5381, 23.1798], [116.4706, 22.9459], [115.4985, 22.719], [115.1957, 22.8171], [114.854, 22.6169], [114.2658, 22.541], [114.0154, 22.5117], [113.6195, 22.8615], [113.5467, 22.2241], [113.4943, 22.2414], [113.4788, 22.1957], [113.0083, 22.1193], [112.5861, 21.7767], [111.9438, 21.8495], [111.6029, 21.5592], [110.771, 21.3865], [110.1935, 21.0376], [110.5114, 20.5182], [110.123, 20.2639], [109.6626, 20.9168], [109.9307, 21.4806], [109.5441, 21.5378], [109.1486, 21.4255], [109.0305, 21.6266], [108.3247, 21.6937], [107.9727, 21.5081], [107.3513, 21.6089], [106.7294, 22.0004], [106.5363, 22.3954], [106.7804, 22.779], [106.5421, 22.9081], [105.8429, 22.9228], [105.2752, 23.3454], [104.8646, 23.1363], [104.7958, 22.9112], [104.3719, 22.704], [103.3008, 22.7643], [103.0051, 22.4532], [102.5173, 22.7408], [102.1276, 22.379], [101.6712, 22.4625], [101.5243, 22.2538], [101.744, 21.778], [101.705, 21.1503], [101.2242, 21.2236], [101.139, 21.5676], [100.2148, 21.4628], [99.9179, 22.0279], [99.193, 22.126], [99.3377, 22.498], [99.3408, 23.0959], [98.8636, 23.1913], [98.7642, 24.116], [98.2124, 24.1106], [97.686, 23.898], [97.5315, 24.4915], [97.8196, 25.2519], [98.0109, 25.2923], [98.6546, 25.9177], [98.7318, 26.5836], [98.651, 27.5726], [98.299, 27.5499], [98.0988, 28.1421], [97.5377, 28.5101], [97.3224, 28.218], [96.776, 28.3671], [96.4355, 29.0507], [96.0352, 29.4471], [95.4204, 29.0543], [94.7696, 29.1759], [94.6231, 29.3126], [93.9022, 28.803], [93.2067, 28.5909], [92.702, 28.147], [92.6642, 27.949], [91.9775, 27.7301], [91.6317, 27.7599], [91.6056, 27.9516], [90.3529, 28.0804], [89.9809, 28.3112], [89.537, 28.1075], [88.8912, 27.316], [88.8485, 27.8686], [88.6213, 28.0919], [88.1099, 27.8704], [87.1413, 27.8385], [86.5545, 28.0853], [86.4089, 27.9286], [85.6783, 28.2775], [85.1225, 28.3161], [85.1589, 28.5922], [84.7141, 28.5957], [84.2285, 28.9118], [84.1016, 29.2198], [83.5835, 29.1834], [83.1556, 29.6127], [82.8542, 29.6833], [82.1591, 30.1152], [82.0432, 30.3269], [81.4169, 30.3376], [81.0103, 30.1645], [80.6823, 30.4148], [80.1913, 30.5684], [79.9245, 30.8889], [79.9165, 30.8942], [79.3697, 31.0798], [79.3386, 31.1055], [79.1073, 31.4025], [78.8445, 31.3017], [78.7198, 31.8876], [78.3896, 32.5197], [79.2192, 32.5011], [79.2165, 32.5641], [79.1353, 33.1718], [79.1127, 33.2264], [78.8019, 33.4999], [78.7531, 34.0876], [78.9364, 34.3521], [78.2821, 34.654], [77.8107, 35.4845], [77.7992, 35.496], [77.4467, 35.4756], [76.2518, 35.8108], [75.945, 36.0176], [75.8403, 36.6497], [75.3467, 36.9134], [74.5415, 37.0221], [74.8912, 37.2317], [74.7452, 38.5101], [74.2773, 38.6597], [73.8015, 38.6068], [73.6315, 39.4489], [73.9147, 39.6065], [73.9915, 40.0433], [74.4118, 40.1374], [75.0044, 40.4494], [75.5837, 40.6052], [75.8718, 40.3034], [76.4804, 40.4494], [76.8239, 40.9821], [78.1232, 41.0758], [78.3625, 41.3718], [79.2938, 41.7829], [80.2162, 42.0323], [80.2095, 42.1899], [80.1651, 42.6653], [80.7857, 43.1616], [80.3551, 44.0973], [80.4554, 44.7463], [80.059, 45.0064], [81.602, 45.3109], [82.4787, 45.1236], [82.3264, 45.52], [83.0043, 47.0337], [83.1929, 47.1864], [84.786, 46.8308], [85.6565, 47.2547], [85.526, 47.9157], [85.7493, 48.3849], [86.5496, 48.5287], [86.7534, 49.0088], [87.3229, 49.0858], [87.8143, 49.1624], [87.9798, 48.5549], [88.517, 48.3844], [89.0478, 48.0027], [89.561, 48.004], [90.3134, 47.676], [90.4963, 47.2854], [90.87, 46.9547], [91.0338, 46.529], [91.0019, 46.0358], [90.6618, 45.5253], [90.8771, 45.196], [91.5842, 45.0766], [92.7876, 45.0357], [93.6563, 44.9008], [94.7119, 44.3508], [95.3502, 44.278], [95.9126, 43.2064], [96.3854, 42.7204], [97.2057, 42.7896], [99.4678, 42.5681], [99.984, 42.6773], [101.7139, 42.4656], [101.9731, 42.2157], [103.0726, 42.0062], [103.7109, 41.7514], [104.4984, 41.877], [104.4984, 41.6586], [105.1971, 41.738], [106.7702, 42.2889], [108.1712, 42.4474], [109.4434, 42.4558], [110.4004, 42.7736], [111.0072, 43.3414], [111.9331, 43.7116], [111.4022, 44.3672], [111.8981, 45.0641], [113.5871, 44.7459], [114.0305, 44.9425], [114.517, 45.3646], [115.6809, 45.4583], [116.2407, 45.7961], [116.5625, 46.2897], [117.3335, 46.3621], [118.3088, 46.7172], [119.7066, 46.6062], [119.8979, 46.8579], [119.711, 47.15], [118.4983, 47.9841], [117.7685, 47.988], [117.3508, 47.652], [116.7605, 47.87], [115.8984, 47.6871], [115.5575, 47.945], [116.6832, 49.8238], [117.8733, 49.5135], [118.4517, 49.8444], [119.26, 50.0664], [119.1921, 50.3797], [120.067, 51.6007], [120.7497, 52.0965], [120.6561, 52.5666], [120.0945, 52.7872], [120.704, 53.1718], [122.338, 53.485], [123.6079, 53.5465], [124.8122, 53.1339], [125.649, 53.0422], [126.313, 52.3997], [126.9247, 51.1002], [127.5901, 50.2091], [127.5027, 49.8735], [127.9998, 49.5685], [128.5267, 49.5943], [129.5339, 49.3235], [130.1962, 48.8916], [130.8043, 48.3414], [130.712, 48.1279], [131.0027, 47.6915], [132.5617, 47.7683], [133.1441, 48.1057], [133.4686, 48.0972], [134.2933, 48.3733], [134.5636, 48.3219], [134.7523, 47.7155], [134.1677, 47.3022], [133.8614, 46.2475], [133.1858, 45.4947], [132.9359, 45.03], [131.9775, 45.2439], [131.0822, 44.9101], [131.2553, 44.0716], [131.262, 43.4333], [131.0684, 42.9024], [130.5771, 42.8118], [130.5269, 42.5353]]]]
            },
            "properties": {
                "name": "China",
                "id": "CN"
            },
            "id": "CN"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[-67.0799, -55.1538], [-68.07, -55.2213], [-68.107, -54.9292], [-67.2452, -54.9776], [-67.0799, -55.1538]]], [[[-69.703, -54.919], [-68.9007, -55.0176], [-68.2826, -55.255], [-68.2932, -55.5214], [-69.4119, -55.4441], [-69.9798, -55.1476], [-69.703, -54.919]]], [[[-72.9233, -53.4817], [-72.2055, -53.8075], [-73.3048, -53.9438], [-73.6865, -53.4266], [-72.9233, -53.4817]]], [[[-68.6299, -52.6525], [-68.6532, -54.8538], [-69.4862, -54.8591], [-69.7235, -54.7122], [-70.4972, -54.8094], [-71.4409, -54.6198], [-70.8982, -54.338], [-70.8678, -53.8843], [-70.0903, -53.4182], [-70.3906, -53.0263], [-69.7636, -52.7315], [-68.6299, -52.6525]]], [[[-74.4762, -49.148], [-74.5699, -49.9909], [-75.3001, -49.8475], [-75.1842, -49.0836], [-74.7934, -48.705], [-74.4762, -49.148]]], [[[-74.5672, -48.5918], [-74.923, -48.6264], [-75.2129, -48.1417], [-74.7292, -48.1261], [-74.5672, -48.5918]]], [[[-72.9861, -44.7801], [-73.4451, -44.6411], [-73.2078, -44.3348], [-72.7641, -44.5488], [-72.9861, -44.7801]]], [[[-73.7354, -44.3948], [-73.9833, -44.4946], [-73.7271, -45.1192], [-74.0991, -45.3252], [-74.6178, -44.6478], [-74.5017, -44.4733], [-73.7354, -44.3948]]], [[[-73.7733, -43.3459], [-74.355, -43.2637], [-74.2094, -42.8789], [-74.0368, -41.7953], [-73.5278, -41.8961], [-73.4708, -42.4665], [-73.7893, -42.5859], [-73.4364, -42.9366], [-73.7733, -43.3459]]], [[[-67.1948, -22.8216], [-67.0088, -23.0014], [-67.3562, -24.0339], [-68.2502, -24.3921], [-68.562, -24.8378], [-68.3842, -25.0921], [-68.6002, -25.4859], [-68.4144, -26.1539], [-68.5811, -26.5183], [-68.3461, -27.0279], [-68.8463, -27.1536], [-69.1744, -27.9246], [-69.6569, -28.4138], [-69.8278, -29.1031], [-70.0269, -29.3242], [-69.9277, -29.7694], [-69.9563, -30.358], [-70.1614, -30.4401], [-70.5196, -31.1486], [-70.5853, -31.5694], [-70.1696, -32.4718], [-70.0198, -33.2717], [-69.7978, -33.3987], [-69.8524, -34.2243], [-70.2899, -34.733], [-70.4703, -35.3261], [-70.4048, -36.0616], [-71.0556, -36.5237], [-71.1677, -37.7621], [-71.0281, -38.0413], [-70.9517, -38.7383], [-71.4256, -38.9855], [-71.5394, -39.6025], [-71.7199, -39.6354], [-71.6952, -40.3354], [-71.932, -40.6918], [-71.9114, -41.6506], [-71.7501, -42.0466], [-72.1247, -42.2983], [-72.1464, -42.9899], [-71.7816, -43.167], [-71.905, -43.44], [-71.6801, -43.9296], [-71.82, -44.3832], [-71.2127, -44.4414], [-71.2611, -44.7632], [-71.5962, -44.9794], [-71.3537, -45.2306], [-71.7727, -45.7242], [-71.8757, -46.1606], [-71.6952, -46.5783], [-71.9403, -46.8313], [-71.905, -47.2015], [-72.346, -47.4927], [-72.518, -47.8762], [-72.3549, -48.3658], [-72.6143, -48.7929], [-73.5762, -49.583], [-73.5012, -50.1254], [-73.153, -50.7384], [-72.5098, -50.6075], [-72.2763, -50.9102], [-72.4077, -51.541], [-71.9187, -51.9898], [-69.9603, -52.0084], [-68.4433, -52.3569], [-69.241, -52.2055], [-69.5606, -52.4217], [-70.795, -52.7688], [-70.9959, -53.7791], [-71.2977, -53.8834], [-72.1744, -53.6322], [-71.8528, -53.2855], [-71.4003, -53.107], [-71.3878, -52.7644], [-72.4583, -53.2544], [-73.0527, -53.2433], [-74.0143, -52.6392], [-73.5183, -52.0408], [-73.9733, -51.7847], [-73.8958, -51.3315], [-74.8147, -51.0629], [-75.0948, -50.6812], [-74.3337, -49.9745], [-74.3411, -48.5958], [-74.5772, -48.2744], [-74.6549, -47.7022], [-74.1584, -47.1824], [-74.152, -46.9742], [-75.6567, -46.6102], [-74.9245, -46.1597], [-75.0666, -45.8751], [-74.1579, -45.7673], [-74.0377, -45.4175], [-73.5498, -45.4836], [-73.3625, -44.978], [-72.739, -44.7343], [-72.6638, -44.4365], [-73.2651, -44.1688], [-72.9965, -43.6317], [-72.7852, -42.3014], [-72.4993, -41.9809], [-72.6698, -41.6595], [-73.0149, -41.5441], [-73.5214, -41.7971], [-73.966, -41.1184], [-73.6694, -40.0824], [-73.4104, -39.7889], [-73.2264, -39.2243], [-73.5325, -38.3667], [-73.4648, -38.0405], [-73.6619, -37.6987], [-73.6017, -37.1886], [-73.216, -37.1669], [-73.1181, -36.6884], [-72.8747, -36.3905], [-72.6239, -35.5857], [-72.2237, -35.0961], [-72.0029, -34.1653], [-71.6644, -33.6526], [-71.743, -33.0951], [-71.4522, -32.6596], [-71.5259, -31.806], [-71.6619, -31.1695], [-71.6695, -30.3305], [-71.4005, -30.1432], [-71.3157, -29.6496], [-71.5192, -28.9265], [-71.1863, -28.3778], [-71.0527, -27.7275], [-70.6465, -26.3293], [-70.7138, -25.7842], [-70.4455, -25.1725], [-70.5742, -24.6442], [-70.4878, -23.7818], [-70.5633, -23.0569], [-70.3316, -22.8487], [-70.0875, -21.493], [-70.1971, -20.7256], [-70.1483, -19.8049], [-70.4184, -18.3454], [-69.9263, -18.206], [-69.8522, -17.704], [-69.5108, -17.506], [-69.3133, -17.9432], [-69.094, -18.0507], [-68.9684, -18.9682], [-68.4628, -19.4329], [-68.6983, -19.721], [-68.7451, -20.4588], [-68.4999, -20.6119], [-68.1969, -21.3004], [-67.9883, -22.0572], [-67.8795, -22.8229], [-67.1948, -22.8216]]]]
            },
            "properties": {
                "name": "Chile",
                "id": "CL"
            },
            "id": "CL"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[9.5241, 47.5242], [9.5277, 47.2707], [9.4877, 47.0621], [9.5801, 47.0572], [10.4528, 46.865], [9.9392, 46.3616], [9.2512, 46.2866], [8.9537, 45.8298], [8.4584, 46.2458], [7.9932, 46.0158], [7.021, 45.9257], [6.7583, 46.4158], [6.06, 46.4282], [7.0006, 47.3227], [7.6154, 47.5925], [8.6177, 47.7661], [9.5241, 47.5242]]]
            },
            "properties": {
                "name": "Switzerland",
                "id": "CH"
            },
            "id": "CH"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[96.8404, -12.182], [96.835, -12.1797], [96.8279, -12.1509], [96.8257, -12.126], [96.8328, -12.126], [96.8395, -12.1602], [96.8404, -12.182]]]
            },
            "properties": {
                "name": "Cocos (Keeling) Islands",
                "id": "CC"
            },
            "id": "CC"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[-105.289, 72.9199], [-106.9216, 73.4799], [-105.5123, 73.7657], [-104.583, 73.3538], [-105.289, 72.9199]]], [[[-79.5373, 73.6546], [-77.2066, 73.4996], [-76.2895, 73.081], [-76.4005, 72.8207], [-77.836, 72.8968], [-79.5006, 72.7559], [-80.8241, 73.3807], [-80.849, 73.7211], [-79.5373, 73.6546]]], [[[-86.5894, 71.0107], [-84.7896, 71.0933], [-84.6995, 71.6315], [-85.9115, 71.9866], [-85.3411, 72.4216], [-85.6445, 72.7745], [-85.0184, 73.3356], [-82.6596, 73.7296], [-81.406, 73.6346], [-80.2748, 72.7455], [-80.9413, 72.2101], [-78.453, 72.4352], [-77.7532, 72.7248], [-75.2943, 72.4809], [-74.9032, 72.1005], [-73.7136, 71.7198], [-71.6406, 71.5163], [-70.7926, 71.1033], [-70.5609, 70.7382], [-69.1686, 70.7641], [-67.3637, 70.0344], [-66.6852, 69.2858], [-67.7517, 69.0387], [-68.038, 68.5507], [-67.033, 68.3261], [-66.2252, 67.9588], [-64.5275, 67.8127], [-64.0079, 67.3473], [-61.9684, 67.019], [-61.2997, 66.6488], [-61.9915, 66.0354], [-62.6589, 65.6399], [-63.3643, 65.5433], [-63.4018, 65.1185], [-64.6653, 65.1689], [-65.4015, 65.7639], [-65.3054, 66.0085], [-66.4771, 66.2797], [-67.1833, 66.0345], [-68.2568, 65.9386], [-67.3034, 65.4829], [-66.8606, 65.0917], [-65.2748, 64.6316], [-64.6784, 64.0281], [-64.5144, 63.2639], [-65.0688, 63.2635], [-65.2659, 62.7151], [-65.9788, 63.0007], [-67.676, 63.0935], [-66.2813, 62.3027], [-66.2567, 61.8683], [-67.4401, 62.1513], [-69.0823, 62.4052], [-69.5452, 62.7446], [-70.2362, 62.7634], [-71.2538, 63.0424], [-73.4437, 64.4236], [-74.5124, 64.6702], [-75.0675, 64.4567], [-76.7239, 64.242], [-77.7912, 64.367], [-78.0957, 64.9392], [-77.4474, 65.1616], [-77.3267, 65.4532], [-75.8283, 65.227], [-73.5607, 65.5429], [-74.434, 66.139], [-73.0333, 66.7283], [-72.2201, 67.2543], [-73.3283, 68.2668], [-74.648, 68.7076], [-74.9172, 68.9828], [-76.4034, 68.6923], [-75.7873, 69.3186], [-77.1289, 69.6526], [-78.9797, 70.5813], [-79.3475, 70.3722], [-78.7778, 70.0477], [-79.3033, 69.8948], [-81.0982, 70.0912], [-82.1387, 69.8413], [-86.3219, 70.1454], [-86.6244, 70.4013], [-87.9006, 70.2519], [-88.8483, 70.5229], [-89.3655, 71.0671], [-88.0387, 70.9512], [-87.8724, 71.2085], [-89.0794, 71.2879], [-89.8458, 71.4924], [-90.0251, 71.9489], [-89.2631, 73.0691], [-87.7197, 73.7229], [-85.1105, 73.8081], [-86.6293, 72.8709], [-86.0361, 71.7709], [-85.0233, 71.3532], [-86.5894, 71.0107]]], [[[-100.002, 73.946], [-99.1579, 73.7316], [-97.5819, 73.8876], [-97.0017, 73.6665], [-97.7959, 73.2852], [-97.0519, 72.6367], [-96.6133, 71.8339], [-98.663, 71.3021], [-99.167, 71.3672], [-100.5944, 72.1524], [-101.7239, 72.3149], [-102.7137, 72.783], [-100.4847, 72.773], [-100.2828, 73.1203], [-101.4509, 73.4311], [-100.9151, 73.8053], [-100.002, 73.946]]], [[[-93.171, 74.161], [-92.2228, 73.9724], [-90.3547, 73.8687], [-92.118, 72.7539], [-93.3407, 72.8018], [-94.0377, 72.0288], [-95.1929, 72.0275], [-95.5475, 72.7816], [-95.633, 73.6954], [-95.0397, 74.0239], [-93.171, 74.161]]], [[[-119.7363, 74.1126], [-117.5149, 74.2318], [-115.5107, 73.6188], [-115.4468, 73.4388], [-118.9615, 72.6842], [-120.18, 72.2126], [-120.6192, 71.5057], [-123.2107, 71.1235], [-124.0077, 71.6775], [-125.7626, 72.1375], [-124.9871, 72.5881], [-124.8364, 73.0762], [-123.7973, 73.7682], [-124.6962, 74.3481], [-121.3153, 74.5299], [-119.7363, 74.1126]]], [[[-93.5427, 75.028], [-93.5472, 74.691], [-94.6973, 74.6422], [-96.5658, 75.0988], [-95.6707, 75.5287], [-94.4272, 75.5935], [-93.5427, 75.028]]], [[[-102.2275, 76.0149], [-103.3148, 75.7641], [-104.3506, 76.1823], [-102.5841, 76.2817], [-102.2275, 76.0149]]], [[[-97.7009, 76.4664], [-97.4097, 75.5522], [-97.7994, 75.1167], [-100.2344, 75.0078], [-100.712, 75.4064], [-102.5413, 75.5136], [-101.4313, 75.9919], [-102.1378, 76.2848], [-100.388, 76.6135], [-97.7009, 76.4664]]], [[[-108.2924, 76.0571], [-105.481, 75.7457], [-105.8625, 75.1915], [-107.1533, 74.9272], [-108.8312, 75.0648], [-110.9408, 74.6387], [-112.5193, 74.4169], [-113.5141, 74.43], [-114.4518, 75.0879], [-115.7289, 74.9682], [-117.6001, 75.2716], [-116.6098, 76.0738], [-115.5806, 76.4375], [-114.1939, 76.4515], [-112.6975, 76.2016], [-111.0527, 75.5484], [-109.0865, 75.5065], [-108.9449, 75.6989], [-110.2701, 76.4169], [-108.467, 76.7376], [-108.2924, 76.0571]]], [[[-94.2949, 76.9125], [-92.7162, 76.6029], [-91.3051, 76.6808], [-90.2515, 76.0536], [-88.2014, 75.512], [-86.0687, 75.5023], [-83.932, 75.819], [-82.1538, 75.831], [-79.6602, 75.4494], [-79.508, 74.8801], [-80.2777, 74.5816], [-81.8089, 74.4766], [-88.4231, 74.4942], [-89.8444, 74.5485], [-91.9616, 74.7931], [-92.4281, 75.3828], [-92.1851, 75.8465], [-93.0917, 76.3541], [-95.2739, 76.2644], [-96.6397, 76.703], [-95.6383, 77.0639], [-94.2949, 76.9125]]], [[[-115.5513, 77.3633], [-116.2205, 76.6111], [-119.3679, 76.2218], [-119.9128, 75.8589], [-121.9083, 76.0347], [-121.6138, 76.4415], [-119.0903, 77.3051], [-115.5513, 77.3633]]], [[[-95.4843, 77.7921], [-93.301, 77.7399], [-93.5196, 77.4745], [-95.987, 77.484], [-95.4843, 77.7921]]], [[[-110.4581, 78.1032], [-109.7718, 77.9574], [-110.1984, 77.5246], [-111.952, 77.3442], [-113.1643, 77.5302], [-113.1872, 77.9124], [-110.4581, 78.1032]]], [[[-109.816, 78.6503], [-109.3905, 78.3367], [-113.1499, 78.4084], [-110.4077, 78.7566], [-109.816, 78.6503]]], [[[-96.2045, 78.5314], [-94.8873, 78.3452], [-95.087, 77.9927], [-96.9895, 77.8061], [-98.2548, 78.4293], [-96.2045, 78.5314]]], [[[-103.426, 79.3157], [-99.6094, 78.5831], [-99.1664, 77.8569], [-100.5859, 77.8917], [-101.0742, 78.1938], [-102.7313, 78.3711], [-103.5183, 78.7691], [-105.5358, 79.0325], [-105.3877, 79.3235], [-103.426, 79.3157]]], [[[-91.8857, 81.1328], [-90.643, 80.5937], [-87.6749, 80.3722], [-87.1442, 79.6626], [-85.5014, 79.5303], [-85.2899, 79.2083], [-87.0164, 78.8987], [-88.7911, 78.1925], [-90.6144, 78.1498], [-92.6782, 78.3891], [-95.1032, 79.29], [-95.297, 79.6531], [-96.7734, 80.1358], [-95.6146, 80.3962], [-96.1328, 80.6913], [-95.2697, 81.0007], [-91.8857, 81.1328]]], [[[-69.4889, 83.0169], [-63.641, 82.8127], [-61.4771, 82.4674], [-62.1766, 82.0434], [-64.5741, 81.7336], [-65.4839, 81.2848], [-70.1434, 80.3977], [-71.3878, 79.7618], [-75.2595, 79.4209], [-76.2558, 79.0068], [-74.4332, 78.724], [-75.866, 78.0098], [-78.0127, 77.9461], [-78.0762, 77.5191], [-79.3408, 77.1584], [-78.2888, 76.978], [-78.2844, 76.5711], [-80.6903, 76.1765], [-81.1708, 76.5128], [-83.8856, 76.4531], [-85.1412, 76.3046], [-89.5701, 76.4919], [-89.4997, 76.8268], [-88.3982, 77.104], [-86.8737, 77.2004], [-88.0946, 77.7193], [-87.0179, 77.8922], [-87.5517, 78.1767], [-86.808, 78.7744], [-84.3162, 78.9753], [-85.0899, 79.6122], [-86.4207, 79.8453], [-86.3073, 80.3194], [-83.7236, 80.229], [-80.0511, 80.5287], [-83.4013, 80.714], [-85.3074, 80.526], [-88.9214, 80.8057], [-89.9474, 81.1725], [-88.9784, 81.5414], [-90.4903, 81.8772], [-86.5807, 82.1873], [-82.1225, 82.6019], [-79.8864, 82.9386], [-69.97, 83.1161], [-69.4889, 83.0169]]], [[[-61.1053, 45.9448], [-60.8061, 45.738], [-60.5049, 46.204], [-59.8651, 46.1597], [-60.3862, 45.6545], [-61.2837, 45.5737], [-61.4953, 45.9413], [-60.8703, 46.7966], [-60.3318, 46.7678], [-60.5768, 46.1721], [-61.1053, 45.9448]]], [[[-63.8113, 46.4686], [-63.1294, 46.422], [-62.1635, 46.4872], [-62.8784, 46.0012], [-63.641, 46.2307], [-63.8113, 46.4686]]], [[[-74.7088, 45.0038], [-73.558, 45.425], [-73.1596, 46.0101], [-71.901, 46.632], [-71.2611, 46.7562], [-70.5196, 47.0323], [-68.987, 48.2748], [-67.5608, 48.8559], [-66.1781, 49.2132], [-64.8364, 49.1917], [-64.2618, 48.9218], [-64.2538, 48.5505], [-65.2595, 48.0213], [-65.9266, 48.1887], [-65.6665, 47.696], [-65.2282, 47.8114], [-64.7033, 47.7248], [-64.9121, 47.3688], [-65.3189, 47.1012], [-64.9057, 46.8881], [-64.5415, 46.2404], [-63.2928, 45.7522], [-62.4831, 45.6217], [-61.9556, 45.868], [-61.4924, 45.6869], [-61.2837, 45.2355], [-63.7611, 44.4862], [-64.286, 44.5501], [-64.8624, 43.8678], [-65.7382, 43.5607], [-66.1257, 43.8137], [-66.0995, 44.3677], [-65.6567, 44.7605], [-64.4489, 45.2559], [-64.8979, 45.6261], [-65.8845, 45.223], [-66.8726, 45.0672], [-67.1249, 45.1693], [-67.4725, 45.2759], [-67.4328, 45.603], [-67.7845, 45.7016], [-67.8067, 47.083], [-68.311, 47.3546], [-68.8288, 47.2032], [-69.243, 47.4629], [-70.0078, 46.7088], [-70.2963, 45.9062], [-70.898, 45.2626], [-71.3272, 45.2901], [-71.5175, 45.0078], [-74.7088, 45.0038]]], [[[-61.8011, 49.094], [-62.2195, 49.0791], [-63.5658, 49.3994], [-64.1315, 49.9416], [-62.8584, 49.7055], [-61.8171, 49.2835], [-61.8011, 49.094]]], [[[-127.1973, 50.6403], [-125.4821, 50.3167], [-124.6429, 49.4287], [-123.9959, 49.2241], [-123.497, 48.582], [-123.5946, 48.3334], [-124.6893, 48.5975], [-125.8285, 49.0918], [-125.8354, 49.2767], [-126.5485, 49.4189], [-126.683, 49.8764], [-127.1143, 49.8797], [-128.2675, 50.6092], [-127.9182, 50.8605], [-127.1973, 50.6403]]], [[[-55.4588, 51.5365], [-55.8714, 50.9073], [-56.6939, 50.0597], [-55.7648, 49.9605], [-55.892, 49.5803], [-54.9827, 49.268], [-54.579, 49.4908], [-53.9577, 49.4418], [-53.5733, 49.1413], [-53.853, 48.8112], [-53.5312, 48.2317], [-52.955, 48.0293], [-53.1756, 47.6529], [-52.6536, 47.5495], [-53.0697, 46.6812], [-53.6164, 46.6803], [-54.1737, 46.8805], [-53.8692, 47.387], [-54.8566, 47.3848], [-56.2211, 47.6716], [-56.9525, 47.5743], [-58.3332, 47.6769], [-59.1169, 47.5708], [-59.3624, 47.8655], [-58.7105, 48.325], [-58.7165, 48.598], [-58.0158, 49.5426], [-57.4656, 50.4636], [-56.7503, 51.2748], [-56.0256, 51.5685], [-55.4588, 51.5365]]], [[[-80.7318, 52.7472], [-81.8391, 52.9579], [-81.8473, 53.1862], [-81.1357, 53.2058], [-80.7318, 52.7472]]], [[[-132.6556, 54.1275], [-131.7026, 53.9864], [-132.0113, 53.2653], [-132.7475, 53.3105], [-133.0522, 53.7782], [-132.6556, 54.1275]]], [[[-78.9356, 56.2662], [-79.1755, 55.8851], [-80.0009, 55.9322], [-79.5963, 56.2444], [-78.9356, 56.2662]]], [[[-79.5452, 62.4117], [-79.324, 62.0261], [-79.7144, 61.6126], [-80.2652, 61.8182], [-80.0215, 62.3431], [-79.5452, 62.4117]]], [[[-82.0004, 62.9543], [-82.1138, 62.6522], [-83.0158, 62.2099], [-83.699, 62.1602], [-83.8994, 62.4765], [-83.3765, 62.905], [-82.0004, 62.9543]]], [[[-84.9197, 65.261], [-83.4071, 65.1039], [-82.0501, 64.6442], [-81.7161, 64.0219], [-80.829, 64.09], [-80.3021, 63.7622], [-81.0463, 63.4615], [-82.3782, 63.7067], [-82.4672, 63.9269], [-83.4943, 64.0993], [-83.7283, 63.8135], [-84.6329, 63.3092], [-85.4954, 63.1392], [-85.7142, 63.6579], [-87.1888, 63.6723], [-86.252, 64.1368], [-86.3743, 64.5659], [-85.9617, 65.7042], [-85.241, 65.7954], [-84.9197, 65.261]]], [[[-75.6758, 68.3225], [-75.1538, 68.234], [-75.1274, 67.5373], [-75.7801, 67.2836], [-77.0048, 67.2669], [-77.3058, 67.7062], [-76.7403, 68.2313], [-75.6758, 68.3225]]], [[[-97.4394, 69.6427], [-96.2999, 69.3444], [-95.6856, 68.7358], [-96.4016, 68.4708], [-97.472, 68.5438], [-99.254, 68.8632], [-99.5641, 69.0341], [-97.4394, 69.6427]]], [[[-74.7088, 45.0038], [-75.1793, 44.8994], [-76.4646, 44.0574], [-76.82, 43.6286], [-78.7205, 43.625], [-79.1719, 43.4666], [-79.0368, 42.8025], [-80.2475, 42.3662], [-81.2778, 42.209], [-82.439, 41.675], [-83.1419, 41.976], [-83.0731, 42.3005], [-82.5453, 42.6245], [-82.1378, 43.5709], [-82.5511, 45.3473], [-83.5926, 45.817], [-83.9777, 46.0851], [-84.1921, 46.5494], [-84.5617, 46.4575], [-84.8759, 46.9001], [-88.3782, 48.3032], [-89.4556, 47.996], [-90.8403, 48.2007], [-91.5183, 48.0582], [-92.9963, 48.6117], [-93.3778, 48.6166], [-93.7078, 48.5256], [-94.6209, 48.7427], [-95.162, 48.9917], [-97.5297, 48.9932], [-99.2354, 48.993], [-102.2201, 48.993], [-103.9256, 48.993], [-106.4839, 48.993], [-109.895, 48.993], [-112.4532, 48.993], [-115.8643, 48.993], [-118.4226, 48.993], [-120.1281, 48.993], [-122.7888, 48.993], [-123.0491, 48.993], [-123.3356, 49.4591], [-123.859, 49.4829], [-124.4833, 49.8082], [-125.21, 50.4763], [-126.4045, 50.5298], [-126.6318, 50.9151], [-127.0577, 50.8676], [-127.7082, 51.1512], [-127.6449, 51.4784], [-128.3576, 52.1589], [-128.1088, 52.858], [-128.6524, 53.2437], [-129.2842, 53.3931], [-129.5637, 53.2515], [-130.3351, 53.724], [-130.0433, 54.1335], [-130.4304, 54.4209], [-129.6666, 55.4366], [-130.0251, 55.8882], [-130.4772, 56.2307], [-131.5752, 56.5989], [-131.8661, 56.7929], [-133.8208, 58.7049], [-134.9439, 59.2882], [-135.4759, 59.7934], [-136.3219, 59.6049], [-136.5787, 59.1522], [-137.4385, 58.9031], [-137.5932, 59.2263], [-139.1852, 60.0837], [-141.0021, 60.3003], [-141.0021, 63.2222], [-141.0021, 65.56], [-141.0021, 68.4819], [-141.0021, 69.6509], [-139.1815, 69.5155], [-138.1283, 69.1519], [-136.7174, 68.8891], [-135.8763, 68.9169], [-135.6914, 69.3111], [-135.1409, 69.4678], [-133.1632, 69.4338], [-130.4985, 70.1431], [-128.9715, 69.7123], [-127.765, 70.2219], [-127.1385, 70.2392], [-126.6122, 69.7303], [-125.9073, 69.4185], [-124.7679, 69.99], [-123.6091, 69.3774], [-123.0258, 69.81], [-120.9624, 69.6604], [-120.2925, 69.4205], [-118.8687, 69.2571], [-118.0953, 69.043], [-116.0651, 68.8554], [-115.6312, 68.9726], [-114.4138, 68.6597], [-115.1332, 67.8191], [-112.4352, 67.6849], [-110.9901, 67.7907], [-110.0426, 67.9772], [-109.6305, 67.7328], [-108.5929, 67.591], [-107.6263, 67.0031], [-108.2611, 68.1498], [-108.3134, 68.6108], [-106.1646, 68.9198], [-105.4286, 68.4584], [-104.1935, 68.0311], [-103.4741, 68.115], [-102.692, 67.8116], [-101.555, 67.6931], [-100.4561, 67.8396], [-99.1468, 67.7237], [-98.4171, 67.8265], [-98.2184, 68.3174], [-97.2659, 68.453], [-96.0361, 68.1578], [-96.3714, 67.5539], [-95.7826, 67.1937], [-95.2588, 67.2625], [-95.6505, 67.7375], [-93.6517, 68.5431], [-93.6814, 68.8874], [-94.2707, 69.4551], [-96.0503, 69.8311], [-96.4924, 70.1249], [-96.2265, 70.5418], [-96.549, 70.8088], [-96.4056, 71.2737], [-95.2013, 71.9036], [-94.3084, 71.7649], [-92.9488, 71.2622], [-92.9814, 70.8523], [-91.5641, 70.1782], [-92.751, 69.7139], [-90.8221, 69.2904], [-90.4683, 68.8638], [-89.0567, 69.266], [-88.0413, 68.8117], [-87.8103, 68.4042], [-88.347, 68.2883], [-88.1958, 67.7659], [-87.2663, 67.1839], [-86.5363, 67.5162], [-85.9526, 68.0724], [-85.7338, 68.6301], [-84.8622, 69.074], [-85.3869, 69.2318], [-85.5074, 69.8453], [-82.6183, 69.691], [-82.6421, 69.4584], [-81.3286, 69.12], [-81.2815, 68.6572], [-82.5526, 68.4464], [-81.9764, 67.862], [-81.2702, 67.4598], [-81.4675, 67.0699], [-82.6416, 66.5876], [-84.4784, 66.1794], [-85.6039, 66.5683], [-86.6331, 66.5314], [-86.0429, 66.0225], [-87.2914, 65.3549], [-87.9701, 65.3489], [-89.7494, 65.9359], [-89.9241, 65.7804], [-88.974, 65.3482], [-87.0275, 65.1982], [-87.2805, 64.8262], [-88.1057, 64.1832], [-88.653, 64.0094], [-90.1418, 63.9819], [-90.0135, 63.8044], [-91.3301, 63.5067], [-90.7466, 63.3516], [-90.8711, 62.9459], [-91.4491, 62.8041], [-92.3613, 62.8194], [-93.4206, 61.7059], [-93.9127, 61.4815], [-94.6467, 60.4164], [-94.7858, 59.9534], [-94.7135, 58.9034], [-94.2871, 58.716], [-93.2782, 58.7564], [-92.249, 57.009], [-91.1113, 57.2412], [-90.5922, 57.2246], [-89.7909, 56.9813], [-88.9484, 56.8512], [-88.0751, 56.4673], [-87.5608, 56.0565], [-85.8305, 55.6569], [-85.061, 55.2856], [-83.9107, 55.3147], [-82.5775, 55.1487], [-82.2195, 54.8136], [-82.4181, 54.3559], [-82.1413, 53.8177], [-82.2605, 52.9612], [-81.5994, 52.4325], [-81.6613, 52.2938], [-80.6579, 51.7582], [-80.368, 51.3299], [-79.8362, 51.1734], [-79.4975, 51.5698], [-78.9777, 51.7338], [-78.4917, 52.2521], [-78.7238, 52.6278], [-79.2418, 54.0989], [-79.6655, 54.6975], [-77.8911, 55.2364], [-77.3249, 55.5555], [-76.6504, 56.1073], [-76.5729, 57.1813], [-77.1569, 58.0189], [-78.5152, 58.6823], [-77.7606, 59.3801], [-77.3118, 60.0424], [-77.8715, 60.7859], [-77.7362, 61.4373], [-78.1372, 62.1074], [-78.0682, 62.3555], [-77.3724, 62.5726], [-74.69, 62.1835], [-73.6299, 62.4543], [-72.0814, 61.7283], [-71.4227, 61.159], [-70.2792, 61.0687], [-69.6405, 60.6898], [-69.7559, 60.3886], [-69.682, 59.3417], [-69.1735, 58.8967], [-68.6981, 58.9045], [-67.5697, 58.2135], [-66.608, 58.5489], [-65.6061, 59.1107], [-64.9312, 60.2519], [-64.4995, 60.2683], [-63.1854, 58.8579], [-62.5939, 58.4741], [-62.3056, 57.9723], [-61.899, 57.8613], [-61.851, 57.3812], [-61.3337, 57.0106], [-61.5146, 56.3903], [-59.9303, 55.2594], [-58.997, 55.1494], [-58.7802, 54.8384], [-58.1951, 54.8659], [-57.4046, 54.5705], [-58.1514, 54.3504], [-57.4161, 54.1628], [-57.1489, 53.8476], [-56.4651, 53.7651], [-55.7979, 53.212], [-55.8336, 52.3104], [-55.6951, 52.1378], [-56.976, 51.4577], [-58.5103, 51.295], [-59.1655, 50.7799], [-60.0801, 50.2546], [-61.2897, 50.202], [-62.7155, 50.3016], [-64.868, 50.2754], [-65.2686, 50.32], [-66.4955, 50.2119], [-66.9411, 49.9938], [-67.3719, 49.3486], [-68.2819, 49.1972], [-68.9291, 48.829], [-69.775, 48.0981], [-69.9055, 47.8322], [-70.7058, 47.1398], [-71.2678, 46.7958], [-71.8797, 46.687], [-72.981, 46.2098], [-73.974, 45.3451], [-74.7088, 45.0038]]], [[[-114.5215, 72.593], [-113.5001, 72.6944], [-112.7537, 72.986], [-111.2698, 72.7137], [-108.7549, 72.551], [-107.72, 73.329], [-106.4822, 73.1962], [-105.415, 72.7883], [-104.3495, 71.434], [-104.5697, 71.1039], [-103.9535, 70.7626], [-100.9732, 70.0295], [-100.9351, 69.7152], [-102.2343, 69.8422], [-102.9197, 69.5648], [-101.9756, 69.4069], [-101.857, 69.0239], [-103.4681, 68.8086], [-105.0195, 69.0814], [-106.1408, 69.1621], [-106.6591, 69.4396], [-107.4399, 69.0021], [-108.946, 68.7598], [-111.3108, 68.542], [-113.1277, 68.4941], [-113.6941, 69.195], [-116.5135, 69.4247], [-117.1354, 70.1001], [-114.5923, 70.3125], [-112.6378, 70.2253], [-112.1143, 70.4468], [-113.7573, 70.6907], [-115.991, 70.5864], [-117.587, 70.6296], [-118.2642, 70.8882], [-117.8141, 71.1585], [-118.8683, 71.6868], [-118.9447, 71.9855], [-118.2136, 72.2629], [-118.3745, 72.5339], [-117.5517, 72.8311], [-114.6382, 73.3727], [-114.1091, 72.8611], [-114.5215, 72.593]]]]
            },
            "properties": {
                "name": "Canada",
                "id": "CA"
            },
            "id": "CA"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[22.86, 10.9195], [23.2559, 10.4579], [23.6461, 9.8231], [23.5374, 8.8159], [24.1473, 8.6654], [24.2915, 8.2912], [24.8535, 8.1376], [25.2472, 7.7244], [25.3809, 7.3333], [25.8891, 7.0647], [26.3619, 6.6355], [26.5141, 6.0691], [27.0836, 5.777], [27.4032, 5.1094], [27.1151, 5.1977], [26.8222, 5.0623], [25.5251, 5.3123], [25.2495, 5.0246], [24.7656, 4.9301], [24.32, 4.994], [23.4171, 4.6633], [22.7557, 4.6469], [22.4223, 4.1351], [21.5376, 4.2447], [20.558, 4.4627], [20.2264, 4.8297], [19.8065, 5.0894], [19.5011, 5.1276], [19.0687, 4.8915], [18.5676, 4.2576], [18.6102, 3.4785], [18.161, 3.4998], [17.4379, 3.6845], [16.6735, 3.5354], [16.4684, 2.8318], [16.1834, 2.2703], [16.0636, 2.9086], [15.775, 3.127], [15.1287, 3.827], [15.0226, 4.3583], [14.7088, 4.6655], [14.6169, 5.8649], [14.7394, 6.2799], [15.2459, 7.2636], [15.4803, 7.5237], [15.8452, 7.4753], [16.3787, 7.6835], [16.7849, 7.5508], [17.6496, 7.9836], [18.4553, 8.032], [19.1087, 8.6561], [19.1455, 9.0161], [20.3422, 9.1271], [20.7733, 9.4058], [21.2638, 9.9745], [21.7258, 10.3664], [21.7063, 10.5746], [22.4938, 10.9963], [22.86, 10.9195]]]
            },
            "properties": {
                "name": "Central African Republic",
                "id": "CF"
            },
            "id": "CF"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[5.6938, 50.7748], [5.7972, 50.7546], [5.9939, 50.7504], [6.3645, 50.3163], [6.1164, 50.1209], [5.744, 49.9196], [5.7897, 49.5383], [4.8677, 49.788], [4.1744, 50.2466], [2.8396, 50.7118], [2.5249, 51.0971], [3.35, 51.3776], [3.9023, 51.2076], [4.2263, 51.3865], [4.5033, 51.4746], [5.827, 51.1257], [5.6938, 50.7748]]]
            },
            "properties": {
                "name": "Belgium",
                "id": "BE"
            },
            "id": "BE"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[25.2588, -17.7936], [25.2242, -17.9153], [25.7613, -18.6495], [26.1683, -19.5381], [26.6784, -19.8928], [27.2217, -20.1458], [27.2807, -20.4788], [27.6997, -20.5307], [27.6696, -21.0642], [28.0455, -21.5729], [29.0372, -21.8113], [29.3648, -22.194], [28.8397, -22.4807], [28.2102, -22.6938], [27.8906, -23.0737], [27.1462, -23.5243], [26.835, -24.2407], [26.3974, -24.6136], [25.9122, -24.7477], [25.5837, -25.6062], [24.7483, -25.8174], [23.8938, -25.6008], [23.2662, -25.2666], [22.8786, -25.4579], [22.6403, -26.0714], [22.0907, -26.5801], [21.6464, -26.8544], [20.74, -26.849], [20.6268, -26.4438], [20.7932, -25.9155], [20.3453, -25.03], [19.9805, -24.777], [19.9774, -22], [20.9708, -22], [20.9779, -20.9684], [20.9739, -18.3188], [23.2986, -18.0276], [23.5804, -18.4528], [24.359, -17.9783], [25.2588, -17.7936]]]
            },
            "properties": {
                "name": "Botswana",
                "id": "BW"
            },
            "id": "BW"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[91.6317, 27.7599], [91.5949, 27.5575], [92.0836, 27.2907], [91.9984, 26.8548], [90.7395, 26.7718], [90.3458, 26.8903], [89.7638, 26.7016], [88.8579, 26.9613], [88.8912, 27.316], [89.537, 28.1075], [89.9809, 28.3112], [90.3529, 28.0804], [91.6056, 27.9516], [91.6317, 27.7599]]]
            },
            "properties": {
                "name": "Bhutan",
                "id": "BT"
            },
            "id": "BT"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[115.0266, 4.8999], [114.7465, 4.7179], [114.8402, 4.3934], [114.6085, 4.0241], [114.0638, 4.5927], [114.2995, 4.6074], [115.0266, 4.8999], [115.1398, 4.8999], [115.0266, 4.8999]]]
            },
            "properties": {
                "name": "Brunei",
                "id": "BN"
            },
            "id": "BN"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-59.4933, 13.0822], [-59.6114, 13.1021], [-59.5916, 13.3179], [-59.4276, 13.1527], [-59.4933, 13.0822]]]
            },
            "properties": {
                "name": "Barbados",
                "id": "BB"
            },
            "id": "BB"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[-51.8326, -1.4336], [-51.5461, -0.6497], [-51.1608, -0.6665], [-51.2764, -1.0216], [-51.8326, -1.4336]]], [[[-49.6287, -0.2293], [-49.1169, -0.1636], [-48.3798, -0.3527], [-48.5396, -0.801], [-48.9289, -1.4824], [-49.5878, -1.7123], [-50.5076, -1.7878], [-50.7597, -1.2405], [-50.7713, -0.6452], [-50.6454, -0.2728], [-50.2481, -0.1165], [-49.6287, -0.2293]]], [[[-56.4828, 1.9422], [-56.0198, 1.8424], [-56.1295, 2.2996], [-55.0058, 2.593], [-54.6163, 2.3266], [-54.13, 2.1211], [-53.7678, 2.3551], [-52.9648, 2.1837], [-52.7006, 2.3635], [-51.9906, 3.7018], [-51.6526, 4.0614], [-51.2198, 4.0938], [-51.0525, 3.2819], [-50.659, 2.1309], [-50.459, 1.8295], [-49.9572, 1.6599], [-49.8988, 1.1628], [-50.2945, 0.8356], [-50.8163, 0.1724], [-51.2829, -0.085], [-51.7026, -0.7624], [-51.9476, -1.5867], [-51.2973, -1.2236], [-50.9177, -1.1153], [-50.69, -1.7616], [-50.4033, -2.0155], [-49.9991, -1.8317], [-49.7195, -1.9263], [-49.3137, -1.7319], [-48.9913, -1.83], [-48.115, -0.7375], [-47.3981, -0.6266], [-46.8113, -0.7797], [-46.6173, -0.9706], [-46.2192, -1.0314], [-45.6448, -1.3479], [-45.0764, -1.4664], [-44.6513, -1.7456], [-44.3082, -2.5353], [-43.9329, -2.5832], [-42.9368, -2.4652], [-42.2496, -2.7919], [-41.8761, -2.7466], [-41.3181, -2.9361], [-40.4745, -2.7954], [-39.9647, -2.8616], [-38.4757, -3.7174], [-38.0489, -4.2163], [-37.1746, -4.9123], [-36.5907, -5.0975], [-35.9799, -5.0544], [-35.5493, -5.1294], [-35.2355, -5.5666], [-34.9882, -6.3936], [-34.8056, -7.2885], [-34.8347, -7.9717], [-35.1578, -8.9305], [-35.3409, -9.2305], [-36.3983, -10.4841], [-36.9378, -10.8206], [-37.4119, -11.497], [-37.6887, -12.0998], [-38.2397, -12.8443], [-38.788, -12.7826], [-38.8352, -13.147], [-39.0894, -13.5882], [-38.9422, -14.0308], [-39.0596, -14.6549], [-38.8805, -15.8645], [-39.2152, -17.3156], [-39.1539, -17.704], [-39.4869, -17.9903], [-39.7399, -18.6397], [-39.6999, -19.278], [-40.0013, -19.7419], [-40.396, -20.5693], [-40.7892, -20.9062], [-41.0471, -21.5059], [-41.1226, -22.0843], [-41.7054, -22.3098], [-41.9804, -22.5806], [-42.0424, -22.9472], [-42.9583, -22.9672], [-43.5327, -23.0462], [-43.8661, -22.9104], [-44.6373, -23.0555], [-45.4233, -23.6854], [-45.9721, -23.7955], [-46.8672, -24.2363], [-47.8766, -24.9976], [-48.5451, -25.8161], [-48.6776, -26.703], [-48.5542, -27.1962], [-48.6208, -28.0755], [-48.7997, -28.5753], [-49.2714, -28.871], [-49.7461, -29.3633], [-50.2994, -30.4259], [-51.1572, -30.3642], [-51.4637, -31.0527], [-51.9724, -31.3839], [-52.1935, -31.8854], [-52.1274, -32.1678], [-52.6523, -33.1377], [-53.3707, -33.7422], [-53.5314, -33.171], [-53.1254, -32.7368], [-53.6017, -32.403], [-53.7618, -32.0568], [-54.2205, -31.8553], [-54.5876, -31.4851], [-55.2546, -31.2258], [-55.5573, -30.876], [-55.8736, -31.0696], [-56.1761, -30.6283], [-56.8328, -30.1072], [-57.2144, -30.2834], [-57.609, -30.188], [-56.9387, -29.595], [-55.7255, -28.2043], [-55.1014, -27.8669], [-54.8291, -27.5508], [-54.3271, -27.4234], [-53.8381, -27.1212], [-53.6712, -26.2249], [-53.8912, -25.6687], [-54.1546, -25.5231], [-54.6158, -25.576], [-54.4731, -25.2204], [-54.2418, -24.0472], [-54.6254, -23.8124], [-55.3662, -23.9913], [-55.6541, -22.8105], [-55.8492, -22.3076], [-56.5239, -22.1025], [-56.9374, -22.2712], [-57.9856, -22.0461], [-57.8303, -20.9981], [-58.1598, -20.1645], [-58.1314, -19.7446], [-57.8005, -19.0809], [-57.5741, -18.2793], [-57.8325, -17.5122], [-58.396, -17.2343], [-58.538, -16.3284], [-60.1756, -16.2693], [-60.299, -14.6185], [-60.5065, -13.7897], [-61.0769, -13.4897], [-61.79, -13.5256], [-62.176, -13.1337], [-62.7654, -12.9974], [-63.0675, -12.6694], [-63.5858, -12.5189], [-64.4205, -12.4399], [-64.5135, -12.2508], [-64.9925, -11.9751], [-65.39, -11.2462], [-65.334, -10.8929], [-65.4368, -10.449], [-65.3132, -10.2533], [-65.3962, -9.7126], [-66.2635, -9.8262], [-66.7301, -9.9754], [-67.5824, -10.5058], [-68.0717, -10.7029], [-68.398, -11.0185], [-69.5785, -10.9519], [-70.2202, -11.0478], [-70.6423, -11.0101], [-70.637, -9.4782], [-71.238, -9.9661], [-72.1815, -10.0038], [-72.379, -9.5102], [-73.2093, -9.4116], [-72.9741, -8.993], [-73.5491, -8.3459], [-74.0021, -7.5562], [-73.7496, -7.3356], [-73.758, -6.9059], [-73.1374, -6.466], [-73.2355, -6.0984], [-72.9799, -5.635], [-72.8871, -5.1228], [-72.6987, -5.0673], [-71.8448, -4.5044], [-70.9737, -4.3504], [-70.7995, -4.1733], [-69.9658, -4.2359], [-69.6691, -2.6676], [-69.4003, -1.1948], [-69.6675, -0.4823], [-70.0706, -0.1387], [-70.0539, 0.5786], [-69.1633, 0.864], [-69.3615, 1.0642], [-69.8522, 1.0593], [-69.8486, 1.7087], [-68.1765, 1.7198], [-67.8152, 1.79], [-67.352, 2.0861], [-66.8761, 1.2231], [-66.4293, 0.8218], [-66.06, 0.7854], [-65.6814, 0.9834], [-65.3609, 0.8685], [-65.1037, 1.1082], [-64.1149, 1.6191], [-64.0354, 1.9045], [-63.394, 2.2223], [-63.3893, 2.4119], [-63.9242, 2.4523], [-64.2188, 3.2047], [-64.2212, 3.5873], [-64.5679, 3.8998], [-64.2556, 4.1404], [-64.0214, 3.9291], [-63.2948, 3.9224], [-62.9685, 3.594], [-62.7122, 4.0179], [-62.1531, 4.0982], [-61.0028, 4.5354], [-60.6046, 4.9944], [-60.7422, 5.2022], [-60.142, 5.239], [-59.9907, 5.0828], [-60.1112, 4.511], [-59.8333, 4.476], [-59.5512, 3.9335], [-59.8544, 3.5873], [-59.9942, 2.6902], [-59.7552, 2.2743], [-59.7563, 1.9005], [-59.2312, 1.3758], [-58.8625, 1.2036], [-58.5119, 1.2848], [-58.3407, 1.5876], [-57.5943, 1.7043], [-57.1189, 2.0141], [-56.8368, 1.8814], [-56.4828, 1.9422]]]]
            },
            "properties": {
                "name": "Brazil",
                "id": "BR"
            },
            "id": "BR"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-58.1598, -20.1645], [-58.1803, -19.8178], [-59.0905, -19.286], [-60.0073, -19.2976], [-61.7569, -19.6451], [-61.917, -20.0553], [-62.2763, -20.5627], [-62.2767, -21.066], [-62.6509, -22.2339], [-62.8434, -21.9973], [-63.8186, -22.0053], [-63.9762, -22.0728], [-64.3739, -22.7612], [-64.6056, -22.229], [-65.0579, -22.103], [-65.771, -22.0994], [-66.0986, -21.8353], [-66.3652, -22.1136], [-66.7117, -22.2161], [-67.1948, -22.8216], [-67.8795, -22.8229], [-67.9883, -22.0572], [-68.1969, -21.3004], [-68.4999, -20.6119], [-68.7451, -20.4588], [-68.6983, -19.721], [-68.4628, -19.4329], [-68.9684, -18.9682], [-69.094, -18.0507], [-69.3133, -17.9432], [-69.5108, -17.506], [-69.6249, -17.2002], [-69.0208, -16.6422], [-68.9134, -16.2618], [-69.2176, -16.149], [-69.4185, -15.6035], [-69.1726, -15.2368], [-69.3748, -14.963], [-69.235, -14.5972], [-68.8803, -14.199], [-69.0741, -13.6828], [-68.9786, -12.8802], [-68.6852, -12.502], [-69.5785, -10.9519], [-68.398, -11.0185], [-68.0717, -10.7029], [-67.5824, -10.5058], [-66.7301, -9.9754], [-66.2635, -9.8262], [-65.3962, -9.7126], [-65.3132, -10.2533], [-65.4368, -10.449], [-65.334, -10.8929], [-65.39, -11.2462], [-64.9925, -11.9751], [-64.5135, -12.2508], [-64.4205, -12.4399], [-63.5858, -12.5189], [-63.0675, -12.6694], [-62.7654, -12.9974], [-62.176, -13.1337], [-61.79, -13.5256], [-61.0769, -13.4897], [-60.5065, -13.7897], [-60.299, -14.6185], [-60.1756, -16.2693], [-58.538, -16.3284], [-58.396, -17.2343], [-57.8325, -17.5122], [-57.5741, -18.2793], [-57.8005, -19.0809], [-58.1314, -19.7446], [-58.1598, -20.1645]]]
            },
            "properties": {
                "name": "Bolivia",
                "id": "BO"
            },
            "id": "BO"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-64.7303, 32.2934], [-64.8202, 32.2596], [-64.6946, 32.387], [-64.7303, 32.2934]]]
            },
            "properties": {
                "name": "Bermuda",
                "id": "BM"
            },
            "id": "BM"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-88.8941, 15.8907], [-89.2374, 15.8942], [-89.1615, 17.8149], [-88.8064, 17.9654], [-88.523, 18.4457], [-88.2957, 18.4723], [-88.0973, 18.1217], [-88.2717, 17.6098], [-88.3134, 16.6328], [-88.8941, 15.8907]]]
            },
            "properties": {
                "name": "Belize",
                "id": "BZ"
            },
            "id": "BZ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[28.1481, 56.143], [28.7948, 55.9426], [29.375, 55.9386], [29.4824, 55.6845], [30.2335, 55.8452], [30.9069, 55.5699], [31.1213, 54.6484], [31.4036, 54.1959], [31.792, 54.0558], [32.7042, 53.3363], [32.1422, 53.0913], [31.4178, 53.196], [31.5771, 52.3122], [31.7636, 52.1012], [30.9806, 52.0461], [30.5331, 51.5964], [29.3466, 51.3825], [29.1357, 51.6173], [28.5991, 51.5427], [27.2701, 51.6135], [27.1422, 51.752], [25.9251, 51.9136], [24.3617, 51.8674], [23.6053, 51.5179], [23.6523, 52.0403], [23.1969, 52.257], [23.8445, 52.6642], [23.8872, 53.0276], [23.4845, 53.9398], [24.7683, 53.9746], [25.5473, 54.3317], [25.8594, 54.9192], [26.175, 55.0033], [26.5936, 55.6676], [27.5768, 55.7988], [28.1481, 56.143]]]
            },
            "properties": {
                "name": "Belarus",
                "id": "BY"
            },
            "id": "BY"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-62.832, 17.8766], [-62.8655, 17.9184], [-62.7996, 17.9086], [-62.832, 17.8766]]]
            },
            "properties": {
                "name": "Saint Barthelemy",
                "id": "BL"
            },
            "id": "BL"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[-77.7439, 24.7072], [-78.0449, 24.2873], [-78.2988, 24.7538], [-78.0333, 25.1431], [-77.7439, 24.7072]]], [[[-77.2257, 25.904], [-77.4032, 26.0247], [-77.2468, 26.1565], [-77.2062, 26.489], [-77.0384, 26.3332], [-77.1673, 26.2404], [-77.2257, 25.904]]]]
            },
            "properties": {
                "name": "Bahamas",
                "id": "BS"
            },
            "id": "BS"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[50.6072, 25.8831], [50.4661, 25.9657], [50.4523, 26.1907], [50.6099, 26.1246], [50.6072, 25.8831]]]
            },
            "properties": {
                "name": "Bahrain",
                "id": "BH"
            },
            "id": "BH"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[19.007, 44.8693], [19.3568, 44.8586], [19.1517, 44.3024], [19.4882, 43.7036], [19.1943, 43.5331], [18.9404, 43.4967], [18.4437, 42.9685], [18.4362, 42.5597], [17.6678, 42.897], [17.5852, 42.9383], [17.6247, 43.0426], [16.214, 44.215], [15.7369, 44.7658], [15.7879, 45.1791], [16.2935, 45.0086], [16.5305, 45.2168], [17.8129, 45.0779], [18.6625, 45.0774], [19.007, 44.8693]]]
            },
            "properties": {
                "name": "Bosnia and Herzegovina",
                "id": "BA"
            },
            "id": "BA"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[28.5853, 43.7422], [28.4655, 43.3893], [27.9288, 43.186], [27.8888, 42.7497], [27.4849, 42.4683], [28.0145, 41.9689], [27.2949, 42.0794], [26.6153, 41.9649], [26.321, 41.7167], [26.1355, 41.3856], [25.2512, 41.2436], [24.0558, 41.5272], [23.635, 41.3869], [22.9159, 41.3363], [23.0056, 41.7172], [22.8369, 41.9937], [22.3442, 42.3138], [22.4667, 42.8425], [22.9767, 43.1878], [22.5546, 43.4546], [22.421, 44.0077], [22.7051, 44.2376], [23.2244, 43.8741], [25.4972, 43.6708], [26.2158, 44.0072], [27.0867, 44.1675], [28.5853, 43.7422]]]
            },
            "properties": {
                "name": "Bulgaria",
                "id": "BG"
            },
            "id": "BG"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[92.575, 21.9782], [92.5937, 21.4673], [92.1795, 21.2933], [92.3242, 20.7917], [92.0561, 21.1747], [92.0082, 21.6848], [91.693, 22.5046], [91.4094, 22.7972], [90.9455, 22.597], [90.6334, 23.0941], [90.435, 22.7519], [90.5895, 22.2583], [90.1589, 21.8171], [89.8118, 21.9835], [89.2343, 21.7225], [89.0514, 22.0932], [88.7407, 23.4368], [88.5671, 23.6743], [88.7336, 24.2309], [88.1454, 24.4857], [88.4561, 25.1884], [88.4521, 25.5746], [88.0846, 25.8884], [88.4402, 26.3696], [89.1082, 26.2023], [89.2893, 26.0376], [89.8229, 25.9413], [89.814, 25.3052], [90.4394, 25.1578], [92.0499, 25.1693], [92.2514, 24.895], [91.8768, 24.1954], [91.3672, 24.0933], [91.1603, 23.6605], [91.3152, 23.1043], [91.6198, 22.9796], [91.938, 23.5047], [92.2461, 23.6836], [92.3615, 22.929], [92.4916, 22.6853], [92.575, 21.9782]]]
            },
            "properties": {
                "name": "Bangladesh",
                "id": "BD"
            },
            "id": "BD"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[0.2175, 14.9114], [0.1638, 14.4973], [0.6183, 13.7036], [0.9779, 13.5518], [0.9872, 13.0418], [1.5652, 12.6356], [2.0739, 12.7142], [2.0912, 12.2778], [2.389, 11.897], [1.9802, 11.4184], [1.4267, 11.4473], [0.9007, 10.9932], [-0.0686, 11.1157], [-0.7014, 10.9888], [-2.8298, 10.9985], [-2.9148, 10.5924], [-2.7865, 10.4019], [-2.6958, 9.4813], [-3.2235, 9.8954], [-3.8776, 9.895], [-4.6258, 9.7134], [-4.9698, 9.9301], [-5.0999, 10.2417], [-5.5236, 10.4259], [-5.4905, 11.0425], [-5.2999, 11.2058], [-5.2881, 11.8277], [-4.798, 12.0319], [-4.4287, 12.3377], [-4.4807, 12.6724], [-4.2272, 12.7936], [-4.3286, 13.119], [-4.0512, 13.3822], [-3.5758, 13.194], [-3.3017, 13.2806], [-3.1985, 13.673], [-2.4572, 14.274], [-2.1132, 14.1684], [-1.7678, 14.4862], [-1.0496, 14.8195], [-0.7604, 15.0477], [-0.2359, 15.0592], [0.2175, 14.9114]]]
            },
            "properties": {
                "name": "Burkina Faso",
                "id": "BF"
            },
            "id": "BF"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[3.5955, 11.6963], [3.4877, 11.3954], [3.7163, 11.0797], [3.8343, 10.6074], [3.5764, 10.2683], [3.5573, 9.9074], [3.3252, 9.7783], [3.0451, 9.084], [2.7748, 9.0485], [2.686, 7.874], [2.7748, 6.7119], [2.7064, 6.3692], [1.6224, 6.2169], [1.6002, 9.0498], [1.4244, 9.2851], [1.3299, 9.9971], [0.7799, 10.3598], [0.9007, 10.9932], [1.4267, 11.4473], [1.9802, 11.4184], [2.389, 11.897], [2.3659, 12.2219], [2.8782, 12.3679], [3.5955, 11.6963]]]
            },
            "properties": {
                "name": "Benin",
                "id": "BJ"
            },
            "id": "BJ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[30.5535, -2.3999], [30.5149, -2.9175], [30.7901, -3.2744], [30.4252, -3.5891], [30.1469, -4.0854], [29.7177, -4.456], [29.4034, -4.4494], [29.2232, -3.9109], [29.2245, -3.0533], [29.0146, -2.7204], [29.3901, -2.8087], [29.8682, -2.7164], [29.9303, -2.3396], [30.5535, -2.3999]]]
            },
            "properties": {
                "name": "Burundi",
                "id": "BI"
            },
            "id": "BI"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[48.5729, 41.8446], [49.1064, 41.3017], [49.2263, 41.026], [49.7758, 40.5839], [49.3244, 39.6083], [49.363, 39.3495], [49.0137, 39.1342], [48.8685, 38.4355], [48.5929, 38.4111], [48.0233, 38.819], [48.2422, 38.9788], [47.9958, 39.6842], [47.773, 39.6486], [46.4906, 38.9065], [46.5501, 39.2012], [45.7897, 39.8812], [45.9646, 40.2337], [45.376, 40.6381], [45.5877, 40.8467], [45.0013, 41.291], [45.281, 41.4495], [46.4577, 41.07], [46.6189, 41.3439], [46.1821, 41.6573], [46.4298, 41.8907], [46.7494, 41.8126], [47.2612, 41.315], [47.8609, 41.2129], [48.5729, 41.8446]]], [[[46.1146, 38.8776], [45.4798, 39.0063], [44.8171, 39.6504], [44.7683, 39.7037], [45.0315, 39.7649], [45.7662, 39.3783], [46.1146, 38.8776]]]]
            },
            "properties": {
                "name": "Azerbaijan",
                "id": "AZ"
            },
            "id": "AZ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[16.9531, 48.5988], [17.1475, 48.0058], [16.4342, 47.3675], [16.4533, 47.0066], [16.0929, 46.8632], [15.9575, 46.6777], [15.0009, 46.6262], [14.5037, 46.4171], [13.6998, 46.5201], [12.3881, 46.7025], [12.1542, 46.9351], [11.2442, 46.9755], [11.0249, 46.7971], [10.4528, 46.865], [9.5801, 47.0572], [9.5277, 47.2707], [9.5241, 47.5242], [10.3129, 47.3133], [10.4306, 47.541], [11.2979, 47.4247], [11.717, 47.5837], [12.686, 47.6693], [12.8143, 48.1607], [13.4095, 48.3942], [13.8148, 48.7669], [14.0492, 48.6024], [14.6915, 48.5993], [14.972, 48.9839], [16.0573, 48.7549], [16.4777, 48.8001], [16.9531, 48.5988]]]
            },
            "properties": {
                "name": "Austria",
                "id": "AT"
            },
            "id": "AT"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[145.0431, -40.7868], [145.2832, -40.7699], [146.3175, -41.1637], [146.99, -40.9923], [147.4547, -41.0017], [147.9687, -40.7797], [148.2928, -40.9471], [148.3017, -42.0399], [147.9244, -42.5726], [147.9807, -43.1572], [147.4081, -42.894], [146.8741, -43.6126], [146.0431, -43.5474], [145.2681, -42.5442], [145.2384, -42.0195], [144.778, -41.4189], [144.6462, -40.9808], [145.0431, -40.7868]]], [[[137.5963, -35.7384], [137.4485, -36.0749], [136.7551, -36.0332], [136.6388, -35.7491], [137.334, -35.5924], [137.5963, -35.7384]]], [[[136.7147, -13.8039], [136.8945, -14.2931], [136.3632, -14.2288], [136.4249, -13.8648], [136.7147, -13.8039]]], [[[130.6188, -11.3763], [131.2682, -11.1899], [131.5385, -11.4367], [130.9508, -11.9263], [130.645, -11.7425], [130.6188, -11.3763]]], [[[143.1787, -11.9547], [143.1103, -12.3036], [143.4015, -12.6401], [143.5866, -13.4435], [143.5485, -13.7409], [143.7562, -14.349], [143.9617, -14.4627], [144.4731, -14.2319], [144.648, -14.4924], [145.2876, -14.943], [145.2717, -15.4765], [145.4581, -16.0563], [145.4261, -16.406], [145.902, -17.0701], [146.1257, -17.6352], [146.0325, -18.2731], [146.3334, -18.5536], [146.4813, -19.0787], [147.1387, -19.393], [147.4183, -19.3783], [147.9155, -19.8693], [148.7593, -20.2897], [148.6839, -20.5804], [149.205, -21.1251], [149.7039, -22.4408], [150.0763, -22.1647], [150.5415, -22.5593], [150.7639, -22.5761], [150.8429, -23.4582], [151.1537, -23.784], [151.9025, -24.2008], [152.1298, -24.5976], [152.4565, -24.8023], [152.9137, -25.4321], [153.1649, -25.9644], [153.0842, -26.3039], [153.117, -27.1944], [153.5755, -28.2407], [153.6044, -28.8546], [153.3483, -29.2905], [153.2724, -29.8924], [153.0304, -30.5635], [152.9439, -31.4349], [152.5595, -32.0457], [152.4703, -32.439], [151.8128, -32.9011], [151.4839, -33.3476], [151.2313, -34.0294], [150.9601, -34.2971], [150.6902, -35.1778], [150.1953, -35.8334], [149.9605, -36.8455], [149.9325, -37.5286], [149.2986, -37.8021], [148.2626, -37.8309], [147.3957, -38.2189], [146.8568, -38.6632], [145.9353, -38.9016], [145.791, -38.6668], [144.6653, -38.21], [143.5391, -38.8208], [142.6123, -38.4515], [141.725, -38.2713], [141.4244, -38.3636], [141.0112, -38.0769], [140.6272, -38.0285], [139.7843, -37.2459], [139.8575, -36.6622], [139.5486, -36.0967], [139.0376, -35.6892], [138.1845, -35.6128], [138.5112, -35.0242], [138.4899, -34.7636], [138.0895, -34.1697], [137.6918, -35.1432], [136.8834, -35.2399], [137.0144, -34.9159], [137.3908, -34.9132], [137.4938, -34.1613], [137.9319, -33.5789], [137.8524, -33.2007], [137.4423, -33.1936], [137.2372, -33.6295], [136.4307, -34.0299], [135.6476, -34.9394], [135.1855, -33.9069], [134.7909, -33.3285], [134.3013, -33.1652], [134.1002, -32.7488], [134.2343, -32.5486], [133.5511, -32.1829], [133.212, -32.1837], [132.7575, -31.956], [132.2146, -32.0071], [131.7214, -31.6964], [131.1435, -31.4957], [130.783, -31.604], [130.1296, -31.5792], [128.9462, -31.7026], [128.0677, -32.0666], [127.3198, -32.2641], [125.9171, -32.2969], [124.759, -32.8829], [124.126, -33.1292], [123.6506, -33.8364], [123.2076, -33.9882], [122.7774, -33.891], [122.1511, -33.9917], [121.4054, -33.8266], [119.854, -33.9748], [119.4505, -34.3681], [118.8951, -34.48], [118.1356, -34.9865], [117.5817, -35.0979], [116.5172, -34.9878], [115.9868, -34.7952], [115.7262, -34.5262], [115.0089, -34.2558], [115.1815, -33.6433], [115.5154, -33.5314], [115.6831, -33.1927], [115.6982, -31.6946], [115.1767, -30.8081], [114.9947, -30.2164], [114.9592, -29.4334], [114.5375, -28.5429], [114.165, -28.0808], [114.0283, -27.3471], [113.5818, -26.5583], [113.853, -26.3319], [113.5889, -26.0984], [113.5396, -25.6252], [114.2156, -26.2893], [114.2143, -25.8516], [113.671, -24.9772], [113.4175, -24.4356], [113.5529, -23.7329], [113.7571, -23.4182], [113.683, -22.6378], [113.9586, -21.9392], [114.1637, -22.3231], [114.3777, -22.3413], [114.8588, -21.7359], [115.4563, -21.4917], [116.0107, -21.0305], [116.7068, -20.6536], [117.4063, -20.7211], [118.1991, -20.3753], [118.7513, -20.2617], [119.1047, -19.9954], [119.5858, -20.0384], [120.8785, -19.6651], [121.4937, -19.1067], [121.8337, -18.4772], [122.2372, -17.9685], [122.1604, -17.3138], [122.7202, -16.7878], [122.9705, -16.4367], [123.5254, -17.4856], [123.778, -16.8677], [123.4903, -16.4908], [124.577, -16.1135], [124.3817, -15.758], [124.8389, -15.1609], [125.2432, -14.9448], [125.1789, -14.7148], [125.6814, -14.3881], [126.0209, -14.4946], [126.1115, -14.1142], [126.5696, -14.1608], [126.9034, -13.744], [127.6727, -14.195], [128.1996, -14.7517], [129.4589, -14.9332], [129.7536, -14.7894], [129.3785, -14.3926], [129.7097, -13.9802], [129.8389, -13.5731], [130.2597, -13.3024], [130.1682, -12.9574], [130.3999, -12.688], [130.898, -12.5238], [131.0458, -12.1895], [131.4382, -12.277], [132.3722, -12.2392], [132.5839, -12.1101], [132.6829, -11.5055], [133.0247, -11.4527], [133.1854, -11.7057], [133.904, -11.8322], [134.2369, -12.008], [134.7301, -11.9844], [135.2179, -12.2215], [135.7883, -11.9072], [136.0818, -12.4226], [136.5403, -11.9578], [136.9473, -12.3498], [136.5372, -12.7843], [136.5945, -13.0036], [135.9273, -13.3041], [135.9894, -13.8102], [135.8833, -14.1533], [135.4053, -14.7583], [135.5309, -15.0002], [136.2052, -15.4033], [136.7844, -15.8942], [137.0019, -15.8783], [137.7037, -16.2329], [138.2448, -16.7181], [139.0097, -16.8992], [139.2485, -17.3285], [140.0359, -17.7027], [140.5114, -17.6245], [140.8305, -17.4146], [141.2189, -16.6462], [141.412, -16.0696], [141.6255, -15.0566], [141.523, -14.4702], [141.5945, -14.1528], [141.4724, -13.7977], [141.6455, -13.2593], [141.6779, -12.4914], [141.9513, -11.8961], [142.1684, -10.9466], [142.4565, -10.7074], [142.8369, -11.3071], [142.8724, -11.8215], [143.1787, -11.9547]]]]
            },
            "properties": {
                "name": "Australia",
                "id": "AU"
            },
            "id": "AU"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[69.185, -49.1093], [69.9157, -49.3486], [69.6129, -49.6509], [68.8721, -49.4445], [69.185, -49.1093]]]
            },
            "properties": {
                "name": "French Southern and Antarctic Lands",
                "id": "TF"
            },
            "id": "TF"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[-59.7339, -80.3442], [-60.5828, -80.9484], [-64.2683, -80.7486], [-65.9801, -80.3846], [-62.5189, -80.3736], [-61.3432, -79.8866], [-59.7064, -79.8755], [-59.7339, -80.3442]]], [[[-159.053, -79.8076], [-161.8655, -79.7037], [-164.2259, -79.3206], [-163.2562, -78.7223], [-161.6431, -78.9012], [-159.6842, -79.4023], [-159.053, -79.8076]]], [[[-70.334, -79.6797], [-71.7836, -79.4445], [-70.544, -78.8838], [-67.4785, -78.3627], [-66.7281, -78.3836], [-69.2509, -79.2101], [-70.334, -79.6797]]], [[[-45.2226, -78.8106], [-43.722, -78.8186], [-42.9654, -79.4769], [-43.5278, -80.1916], [-49.1875, -80.643], [-49.773, -80.7842], [-54.1626, -80.8703], [-53.4823, -80.1889], [-52.2971, -80.1414], [-50.3391, -79.4796], [-50.7331, -79.2829], [-50.2197, -78.6051], [-49.0811, -78.0476], [-46.8257, -77.7852], [-45.5302, -77.8815], [-43.8086, -78.2864], [-43.9473, -78.5975], [-45.2226, -78.8106]]], [[[-120.5562, -73.756], [-120.2726, -73.9891], [-121.0625, -74.3375], [-122.8591, -74.3428], [-122.6247, -73.9655], [-123.1121, -73.6823], [-120.5562, -73.756]]], [[[-126.3299, -73.2864], [-124.9933, -73.8297], [-124.8731, -74.2083], [-127.4143, -73.5163], [-126.3299, -73.2864]]], [[[-74.3544, -73.0986], [-74.5748, -73.6113], [-75.9009, -73.3325], [-75.3769, -72.8203], [-74.3544, -73.0986]]], [[[-91.1608, -73.1821], [-91.6699, -72.6236], [-90.8072, -72.6108], [-91.1608, -73.1821]]], [[[-98.0911, -71.9125], [-96.8695, -71.8508], [-95.6095, -72.0683], [-96.0518, -72.5775], [-98.4078, -72.5477], [-100.1951, -72.2725], [-102.2647, -72.1354], [-102.128, -71.9853], [-98.6155, -71.7638], [-98.0911, -71.9125]]], [[[-73.7067, -70.635], [-74.205, -70.924], [-76.1763, -71.1326], [-76.5004, -70.9413], [-75.0076, -70.6088], [-73.7067, -70.635]]], [[[-74.9871, -69.7277], [-74.8489, -70.1791], [-75.7267, -70.0961], [-74.9871, -69.7277]]], [[[-70.0511, -69.1892], [-69.417, -69.5834], [-68.3361, -70.8561], [-68.2411, -71.822], [-69.2092, -72.5344], [-72.3675, -72.6698], [-73.0864, -72.4079], [-71.1066, -72.047], [-72.4121, -71.6622], [-73.8994, -72.1522], [-75.3531, -71.8783], [-75.2925, -71.6151], [-74.1872, -71.383], [-72.6216, -71.3883], [-71.1941, -70.9848], [-71.0611, -70.5369], [-70.328, -70.3611], [-71.8537, -69.9692], [-71.869, -68.9411], [-70.417, -68.7889], [-70.0511, -69.1892]]], [[[-67.9885, -67.4745], [-68.5804, -67.7328], [-69.0825, -67.403], [-68.3359, -66.802], [-67.6878, -67.1473], [-67.9885, -67.4745]]], [[[-57.0206, -63.3729], [-58.2631, -63.7636], [-58.8954, -64.389], [-59.9632, -64.4312], [-61.0598, -64.9812], [-61.7361, -65.0335], [-62.1453, -65.3318], [-62.3051, -65.8405], [-61.8754, -66.296], [-63.7525, -66.2778], [-64.0778, -66.6542], [-64.6862, -66.8064], [-64.8193, -67.3076], [-65.4432, -67.3262], [-65.6394, -68.1306], [-64.8984, -68.6734], [-63.3436, -68.8106], [-63.4559, -69.0419], [-62.4505, -69.5843], [-61.9611, -70.1201], [-61.9611, -70.9005], [-61.0172, -71.1668], [-61.2136, -71.5641], [-60.7193, -72.0728], [-60.3846, -73.0072], [-61.4054, -73.467], [-60.8789, -73.6122], [-61.0107, -74.4782], [-62.2257, -74.5057], [-63.9247, -75.0047], [-63.3634, -75.4517], [-66.3705, -76.0132], [-69.3044, -76.3506], [-70.0954, -76.6546], [-71.7987, -76.7527], [-75.2683, -76.5814], [-77.19, -76.6298], [-76.2487, -77.2747], [-75.3869, -77.474], [-72.852, -77.5903], [-73.2515, -77.8944], [-74.812, -78.1776], [-80.6015, -77.7519], [-81.4411, -77.8855], [-77.4325, -78.4346], [-77.8691, -78.7454], [-80.2923, -78.8226], [-83.246, -78.3569], [-83.26, -78.7742], [-80.1512, -79.2683], [-76.499, -79.3255], [-76.5578, -79.9035], [-75.2366, -80.8028], [-73.0296, -80.9173], [-70.239, -80.8565], [-64.7501, -81.5219], [-64.1371, -81.8695], [-65.9133, -82.1833], [-62.7357, -82.5273], [-61.5898, -83.3414], [-59.5159, -83.4586], [-57.3535, -82.8403], [-53.9862, -82.2006], [-48.3607, -81.8921], [-43.6692, -82.2699], [-41.4338, -81.2977], [-38.7718, -80.8823], [-37.2093, -81.0638], [-35.3269, -80.6505], [-29.3291, -80.172], [-24.2403, -80.0619], [-25.2586, -79.7623], [-29.9494, -79.599], [-30.3161, -79.1631], [-32.9943, -79.2288], [-36.2391, -78.7742], [-36.181, -78.4684], [-34.0758, -77.4252], [-32.0634, -77.1598], [-28.9336, -76.3701], [-26.0594, -75.9573], [-24.2696, -75.7668], [-19.4931, -75.54], [-17.2989, -74.334], [-15.6725, -74.4072], [-15.7488, -73.9456], [-16.5188, -73.6441], [-15.5959, -73.0968], [-14.3211, -73.123], [-14.2978, -72.7328], [-13.2087, -72.7852], [-11.497, -72.4128], [-10.8254, -71.5534], [-9.8879, -71.0274], [-9.2307, -71.1739], [-8.6466, -71.6728], [-7.7137, -71.5463], [-7.8735, -70.9404], [-5.9364, -70.7127], [-5.5879, -70.8569], [-5.9499, -71.3417], [-2.8121, -71.3208], [-0.8958, -71.3492], [-0.5431, -71.7128], [0.835, -71.2023], [2.6096, -70.9], [5.1132, -70.6559], [8.5232, -70.4739], [9.1415, -70.1836], [10.2175, -70.5081], [11.7014, -70.7664], [12.9292, -70.2133], [13.8228, -70.3434], [15.807, -70.3238], [18.1246, -70.5405], [19.1966, -70.2932], [19.2649, -70.9022], [21.0707, -70.8436], [21.705, -70.2586], [22.979, -70.8103], [23.8037, -70.4046], [24.7567, -70.892], [25.9743, -71.0372], [27.207, -70.9111], [30.0035, -70.2999], [31.3787, -70.2257], [32.6212, -70.0007], [32.9892, -69.6243], [32.5675, -69.0743], [33.1214, -68.689], [34.193, -68.7023], [35.2246, -69.6371], [37.5599, -69.7184], [38.8592, -70.006], [39.7053, -69.4258], [39.8637, -68.9669], [41.1328, -68.5749], [42.409, -68.3521], [42.8196, -68.123], [44.6999, -67.9042], [44.9893, -67.7692], [47.1174, -67.5726], [48.6479, -67.7941], [48.7136, -67.217], [49.2472, -66.9414], [50.6059, -67.15], [50.3325, -66.4447], [51.8843, -66.0199], [53.6719, -65.8587], [54.9481, -65.9164], [55.7102, -66.0798], [57.1853, -66.6133], [56.4533, -66.7798], [56.8919, -67.0563], [57.6274, -67.0142], [58.7376, -67.2295], [59.2507, -67.4851], [60.4821, -67.3853], [62.6878, -67.6476], [63.6989, -67.5082], [68.3279, -67.8895], [69.4163, -67.743], [69.9822, -68.4644], [69.5344, -68.7369], [69.6293, -69.2314], [68.9062, -69.3726], [69.0825, -69.8666], [68.1783, -69.8373], [67.2678, -70.2732], [67.9408, -70.4228], [69.2503, -70.4313], [68.8725, -71.0354], [68.0375, -71.391], [67.4321, -72.0031], [66.8919, -72.9486], [67.9714, -73.0857], [68.4197, -72.5149], [69.5548, -72.3746], [71.2766, -71.624], [71.9047, -70.7069], [72.7601, -70.3957], [72.8223, -70.0961], [73.9422, -69.7432], [75.4239, -69.8933], [75.8913, -69.5754], [77.8174, -69.069], [78.7265, -68.2779], [79.288, -68.1195], [82.017, -67.6902], [83.3043, -67.6032], [84.4851, -67.1145], [85.7107, -67.1611], [87.9803, -66.7882], [89.6986, -66.8229], [92.0734, -66.5077], [93.9644, -66.6897], [94.8397, -66.5015], [95.5411, -66.6311], [98.2577, -66.4673], [99.3701, -66.6484], [100.8891, -66.3581], [101.4746, -65.9511], [102.674, -65.8654], [103.9511, -65.9879], [108.1578, -66.6391], [109.4629, -66.9085], [110.6223, -66.5241], [110.9069, -66.0767], [113.0992, -65.8001], [113.7096, -65.9297], [114.3368, -66.3603], [115.3103, -66.561], [115.2739, -67.0279], [113.991, -67.2117], [114.0265, -67.4412], [116.7134, -67.047], [118.1388, -67.0825], [119.1331, -67.3706], [121.4875, -67.0905], [122.1826, -66.8593], [123.9693, -66.608], [124.5978, -66.7083], [125.8656, -66.3643], [126.6646, -66.4975], [127.5413, -67.051], [129.2369, -67.0417], [129.7412, -66.4686], [130.9517, -66.1912], [131.831, -66.2356], [133.4446, -66.0816], [134.9716, -66.3301], [135.352, -66.1273], [136.1941, -66.2924], [137.7539, -66.4065], [139.9001, -66.715], [141.9726, -66.8069], [142.8884, -67], [143.4481, -66.877], [144.6214, -67.1416], [143.9422, -67.7941], [145.9752, -67.6241], [146.8279, -67.9645], [147.0938, -68.3685], [148.4561, -68.467], [151.068, -68.3849], [151.562, -68.6939], [153.0819, -68.8568], [154.1997, -68.4178], [155.5202, -69.0246], [157.4813, -69.3087], [158.1578, -69.2088], [159.7838, -69.5217], [160.2095, -69.9749], [161.0369, -70.3172], [161.4244, -70.8268], [162.6749, -70.3047], [163.3487, -70.6208], [164.4034, -70.5103], [166.6269, -70.6643], [167.5692, -70.8103], [168.1725, -71.1832], [170.1625, -71.6307], [169.8287, -72.7288], [169.545, -73.0502], [167.6158, -73.337], [164.7758, -74.0286], [165.3027, -74.5936], [163.1672, -74.6021], [162.5337, -75.1671], [161.6797, -75.2177], [162.8156, -75.8463], [162.7628, -76.7456], [164.4296, -78.0422], [166.2087, -78.4515], [164.6347, -78.6033], [160.4829, -79.2017], [160.542, -80.425], [160.9078, -81.3901], [162.8214, -81.8664], [167.2328, -82.9521], [168.1099, -83.3618], [171.9172, -83.6441], [179.403, -84.2061], [180, -84.3517], [180, -89.9989], [-180, -89.9989], [-180, -89.583], [-180, -89.2931], [-180, -88.5869], [-180, -87.8811], [-180, -87.1753], [-180, -86.4695], [-180, -85.7633], [-180, -85.0575], [-180, -84.3517], [-171.7037, -84.5426], [-162.9335, -84.9012], [-157.1276, -85.1858], [-156.9864, -84.8111], [-163.5685, -84.5288], [-164.951, -83.8057], [-167.5528, -83.8111], [-169.1677, -83.4497], [-174.0661, -82.9002], [-171.8213, -82.8474], [-168.4178, -83.2287], [-163.111, -83.329], [-159.4445, -83.5434], [-157.6796, -83.1292], [-155.4594, -82.9805], [-153.0098, -82.4496], [-154.7175, -81.9409], [-153.9566, -81.7003], [-157.0326, -81.319], [-156.5283, -81.1623], [-148.1228, -80.9009], [-150.5755, -80.3536], [-148.3172, -80.0708], [-148.1765, -79.7761], [-152.0914, -79.2416], [-155.21, -78.9646], [-156.4693, -78.6353], [-154.7164, -78.3982], [-155.3416, -78.1918], [-157.2667, -78.1998], [-158.5003, -77.7786], [-158.2136, -77.1571], [-154.8149, -77.1269], [-153.4606, -77.4159], [-151.719, -77.4261], [-149.7177, -77.7976], [-145.967, -77.0688], [-145.7504, -76.7492], [-147.3404, -76.4384], [-146.383, -76.0998], [-143.5742, -75.5635], [-142.3298, -75.4907], [-141.5057, -75.6905], [-139.6911, -75.2129], [-137.6181, -75.0757], [-136.5494, -75.1396], [-135.362, -74.6904], [-133.4748, -74.852], [-132.0495, -74.7659], [-129.7907, -74.8915], [-127.8633, -74.7193], [-123.8894, -74.773], [-119.6771, -74.6544], [-118.3421, -74.3815], [-115.1052, -74.4551], [-114.7909, -73.9886], [-113.5085, -74.0889], [-113.9318, -74.982], [-111.6963, -74.7921], [-111.8064, -74.2696], [-110.307, -74.3668], [-110.3005, -74.7108], [-111.4631, -75.1334], [-109.2722, -75.1849], [-106.6189, -75.3438], [-104.9019, -75.1152], [-101.7081, -75.1272], [-101.0394, -75.4219], [-98.5578, -75.1898], [-101.2518, -74.4858], [-101.7154, -74.0237], [-102.7663, -73.8838], [-102.4108, -73.6166], [-100.9854, -73.7573], [-99.7812, -73.7201], [-100.0209, -73.4027], [-102.6751, -73.321], [-102.4092, -72.9876], [-98.0125, -73.0334], [-96.1521, -73.3095], [-94.2463, -73.313], [-92.241, -73.1785], [-90.9209, -73.3192], [-90.2954, -72.9779], [-88.1945, -72.8585], [-88.4193, -73.2291], [-87.0379, -73.3538], [-85.9808, -73.2087], [-84.9811, -73.5021], [-82.1835, -73.8568], [-81.3088, -73.7383], [-81.2624, -73.3148], [-80.4421, -72.9446], [-79.5217, -73.0897], [-78.4078, -73.5558], [-76.8506, -73.4604], [-77.1349, -73.8177], [-75.293, -73.6388], [-73.9961, -73.6996], [-72.9293, -73.4479], [-68.821, -73.1053], [-67.6671, -72.8345], [-66.8277, -72.0905], [-67.4603, -71.5268], [-67.8884, -70.4215], [-68.4033, -70.0198], [-68.7078, -69.4321], [-67.3717, -69.4125], [-66.9749, -69.1608], [-67.3906, -68.8612], [-66.7933, -68.2402], [-67.1498, -68.0245], [-66.705, -67.5273], [-67.5859, -67.435], [-67.4934, -67.1127], [-66.371, -66.6089], [-65.7664, -66.6249], [-65.6172, -66.1353], [-64.0658, -65.5538], [-64.0381, -65.1791], [-62.5761, -64.7557], [-61.6317, -64.6047], [-60.8643, -64.0734], [-59.5102, -63.8208], [-58.8721, -63.5518], [-57.3897, -63.2264], [-57.0206, -63.3729]]]]
            },
            "properties": {
                "name": "Antarctica",
                "id": "AQ"
            },
            "id": "AQ"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-170.7262, -14.3513], [-170.8205, -14.3122], [-170.6891, -14.2576], [-170.7262, -14.3513]]]
            },
            "properties": {
                "name": "American Samoa",
                "id": "AS"
            },
            "id": "AS"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[46.4906, 38.9065], [46.1146, 38.8776], [45.7662, 39.3783], [45.0315, 39.7649], [44.7683, 39.7037], [44.2893, 40.0406], [43.7917, 40.0703], [43.5693, 40.4823], [43.7225, 40.7193], [43.4393, 41.1073], [45.0013, 41.291], [45.5877, 40.8467], [45.376, 40.6381], [45.9646, 40.2337], [45.7897, 39.8812], [46.5501, 39.2012], [46.4906, 38.9065]]]
            },
            "properties": {
                "name": "Armenia",
                "id": "AM"
            },
            "id": "AM"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[-62.6509, -22.2339], [-62.3726, -22.439], [-61.7984, -23.1821], [-61.0329, -23.7556], [-59.8924, -24.0934], [-59.373, -24.4538], [-58.3654, -24.9594], [-57.8216, -25.1365], [-57.5872, -25.4051], [-57.8906, -26.0065], [-58.2031, -26.3816], [-58.1914, -26.6302], [-58.6186, -27.1323], [-57.1118, -27.4701], [-56.3705, -27.5375], [-56.0673, -27.3076], [-55.7147, -27.415], [-55.4266, -27.0093], [-55.1358, -26.9312], [-54.7552, -26.533], [-54.6158, -25.576], [-54.1546, -25.5231], [-53.8912, -25.6687], [-53.6712, -26.2249], [-53.8381, -27.1212], [-54.3271, -27.4234], [-54.8291, -27.5508], [-55.1014, -27.8669], [-55.7255, -28.2043], [-56.9387, -29.595], [-57.609, -30.188], [-57.8724, -30.5911], [-57.8105, -30.8587], [-58.1889, -31.9241], [-58.2011, -32.4718], [-58.1709, -32.9592], [-58.4244, -33.1115], [-58.5471, -33.6637], [-58.2835, -34.6837], [-57.3036, -35.1884], [-57.1589, -35.5058], [-57.354, -35.7202], [-57.265, -36.1441], [-56.6981, -36.4265], [-56.6721, -36.8513], [-57.3957, -37.7448], [-57.5471, -38.0857], [-58.1792, -38.436], [-59.8282, -38.8381], [-61.1122, -38.993], [-62.067, -38.9189], [-62.3382, -39.1506], [-62.0537, -39.3739], [-62.2869, -39.8955], [-62.395, -40.8907], [-62.959, -41.1095], [-63.7731, -41.1499], [-64.8531, -40.8139], [-65.1334, -40.8805], [-65.059, -41.9698], [-64.4205, -42.4337], [-63.596, -42.4066], [-63.6925, -42.8052], [-64.1306, -42.8616], [-64.6504, -42.5313], [-65.0269, -42.759], [-64.4323, -43.0591], [-64.9856, -43.2935], [-65.2837, -43.6299], [-65.3613, -44.4773], [-65.6476, -44.6615], [-65.6388, -45.0078], [-66.1901, -44.9647], [-66.9414, -45.2573], [-67.5566, -45.9701], [-67.5633, -46.3452], [-66.7769, -47.0057], [-65.9985, -47.0936], [-65.7382, -47.3449], [-65.8101, -47.941], [-67.033, -48.6277], [-67.6849, -49.2465], [-67.7834, -49.8591], [-68.9396, -50.3824], [-69.2352, -50.9506], [-69.0325, -51.6364], [-68.4433, -52.3569], [-69.9603, -52.0084], [-71.9187, -51.9898], [-72.4077, -51.541], [-72.2763, -50.9102], [-72.5098, -50.6075], [-73.153, -50.7384], [-73.5012, -50.1254], [-73.5762, -49.583], [-72.6143, -48.7929], [-72.3549, -48.3658], [-72.518, -47.8762], [-72.346, -47.4927], [-71.905, -47.2015], [-71.9403, -46.8313], [-71.6952, -46.5783], [-71.8757, -46.1606], [-71.7727, -45.7242], [-71.3537, -45.2306], [-71.5962, -44.9794], [-71.2611, -44.7632], [-71.2127, -44.4414], [-71.82, -44.3832], [-71.6801, -43.9296], [-71.905, -43.44], [-71.7816, -43.167], [-72.1464, -42.9899], [-72.1247, -42.2983], [-71.7501, -42.0466], [-71.9114, -41.6506], [-71.932, -40.6918], [-71.6952, -40.3354], [-71.7199, -39.6354], [-71.5394, -39.6025], [-71.4256, -38.9855], [-70.9517, -38.7383], [-71.0281, -38.0413], [-71.1677, -37.7621], [-71.0556, -36.5237], [-70.4048, -36.0616], [-70.4703, -35.3261], [-70.2899, -34.733], [-69.8524, -34.2243], [-69.7978, -33.3987], [-70.0198, -33.2717], [-70.1696, -32.4718], [-70.5853, -31.5694], [-70.5196, -31.1486], [-70.1614, -30.4401], [-69.9563, -30.358], [-69.9277, -29.7694], [-70.0269, -29.3242], [-69.8278, -29.1031], [-69.6569, -28.4138], [-69.1744, -27.9246], [-68.8463, -27.1536], [-68.3461, -27.0279], [-68.5811, -26.5183], [-68.4144, -26.1539], [-68.6002, -25.4859], [-68.3842, -25.0921], [-68.562, -24.8378], [-68.2502, -24.3921], [-67.3562, -24.0339], [-67.0088, -23.0014], [-67.1948, -22.8216], [-66.7117, -22.2161], [-66.3652, -22.1136], [-66.0986, -21.8353], [-65.771, -22.0994], [-65.0579, -22.103], [-64.6056, -22.229], [-64.3739, -22.7612], [-63.9762, -22.0728], [-63.8186, -22.0053], [-62.8434, -21.9973], [-62.6509, -22.2339]]], [[[-68.6532, -54.8538], [-68.6299, -52.6525], [-68.2782, -52.9841], [-68.0085, -53.5638], [-67.2943, -54.0499], [-65.346, -54.8777], [-66.5112, -55.0322], [-66.9305, -54.9248], [-68.6532, -54.8538]]]]
            },
            "properties": {
                "name": "Argentina",
                "id": "AR"
            },
            "id": "AR"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[56.2979, 25.6505], [56.388, 24.9793], [56.064, 24.7388], [55.7959, 24.8679], [55.7608, 24.2425], [55.1997, 23.0346], [55.186, 22.704], [55.1043, 22.6214], [52.555, 22.933], [51.5927, 24.0787], [51.5683, 24.286], [51.9061, 23.9855], [52.6483, 24.1546], [53.8934, 24.0769], [54.3972, 24.278], [54.747, 24.8102], [55.941, 25.7939], [56.0804, 26.0624], [56.2979, 25.6505]]]
            },
            "properties": {
                "name": "United Arab Emirates",
                "id": "AE"
            },
            "id": "AE"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[1.7059, 42.5033], [1.4861, 42.4345], [1.4284, 42.5961], [1.7059, 42.5033]]]
            },
            "properties": {
                "name": "Andorra",
                "id": "AD"
            },
            "id": "AD"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[19.9893, 60.3511], [20.2588, 60.2612], [19.7461, 60.099], [19.6871, 60.2677], [19.9893, 60.3511]]]
            },
            "properties": {
                "name": "Aland Islands",
                "id": "AX"
            },
            "id": "AX"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[20.0639, 42.5473], [20.4856, 42.2232], [20.566, 41.8739], [20.4892, 41.2724], [20.9641, 40.8498], [21.0312, 40.6585], [20.6574, 40.1174], [20.0013, 39.7095], [19.8517, 40.0437], [19.3981, 40.2847], [19.4407, 41.4247], [19.3426, 41.869], [19.2809, 42.1726], [19.6546, 42.6285], [20.0639, 42.5473]]]
            },
            "properties": {
                "name": "Albania",
                "id": "AL"
            },
            "id": "AL"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-63.0012, 18.222], [-63.1534, 18.2002], [-63.026, 18.2699], [-63.0012, 18.222]]]
            },
            "properties": {
                "name": "Anguilla",
                "id": "AI"
            },
            "id": "AI"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[12.2137, -5.7589], [12.0184, -5.0042], [12.3846, -4.6189], [12.8809, -4.4454], [13.0726, -4.6349], [12.8298, -4.7366], [12.5222, -5.1489], [12.5035, -5.6958], [12.2137, -5.7589]]], [[[23.9666, -10.8716], [23.9915, -12.4221], [23.8432, -13.0009], [21.9789, -13.0009], [21.9798, -15.9555], [22.1507, -16.5974], [23.3807, -17.6405], [21.4169, -18.0005], [20.625, -17.9965], [20.3928, -17.8873], [19.6396, -17.8687], [18.8259, -17.7661], [18.3962, -17.3995], [16.9136, -17.3915], [13.9382, -17.3888], [13.4038, -17.008], [13.101, -16.9676], [12.5479, -17.2126], [11.7432, -17.2494], [11.8191, -16.7043], [11.7507, -15.8321], [11.9678, -15.6341], [12.2803, -14.6376], [12.5506, -13.4377], [12.9834, -12.7759], [13.4171, -12.5202], [13.7855, -11.8127], [13.8477, -11.0545], [13.2093, -9.7033], [12.9985, -9.0481], [13.3589, -8.6872], [13.3785, -8.3698], [12.8622, -7.2317], [12.8236, -6.9547], [12.5213, -6.5903], [12.3025, -6.0927], [13.0682, -5.8649], [14.3985, -5.8925], [16.3152, -5.8658], [16.7179, -6.2414], [16.7094, -6.4717], [17.1551, -7.4612], [17.536, -8.076], [18.6532, -7.9361], [19.3408, -7.9668], [19.5277, -7.1447], [19.8753, -6.9862], [20.4821, -6.9161], [20.6077, -7.2778], [21.7511, -7.3054], [21.9056, -8.6934], [21.8133, -9.4689], [22.1977, -10.0406], [22.3069, -10.6914], [22.5613, -11.0558], [23.8339, -11.0136], [23.9666, -10.8716]]]]
            },
            "properties": {
                "name": "Angola",
                "id": "AO"
            },
            "id": "AO"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[74.8912, 37.2317], [74.5415, 37.0221], [74.0017, 36.8233], [73.7691, 36.8885], [72.623, 36.8295], [71.6206, 36.4366], [71.1852, 36.042], [71.4276, 35.8338], [71.6206, 35.1831], [70.9655, 34.5306], [71.0516, 34.0498], [69.8682, 33.8976], [70.2841, 33.3689], [69.9201, 33.1123], [69.5015, 33.02], [69.2414, 32.4336], [69.2791, 31.9369], [68.869, 31.6342], [68.2138, 31.8073], [67.5781, 31.5063], [67.2874, 31.2178], [66.9243, 31.3057], [66.3974, 30.9124], [66.1772, 29.8355], [65.0954, 29.5594], [64.521, 29.5643], [64.0989, 29.3921], [63.5676, 29.4982], [62.4765, 29.4085], [60.8434, 29.8586], [61.104, 30.1285], [61.7844, 30.8321], [61.6602, 31.3825], [60.854, 31.4833], [60.8292, 32.2494], [60.5606, 33.1376], [60.9171, 33.5052], [60.5109, 33.6388], [60.4856, 34.0947], [61.08, 34.8555], [61.262, 35.6194], [62.6105, 35.2333], [63.0566, 35.4459], [63.1086, 35.8187], [63.8623, 36.0123], [64.5108, 36.3408], [64.8162, 37.1322], [65.5549, 37.2512], [65.7648, 37.569], [66.5221, 37.3484], [67.069, 37.3346], [67.7592, 37.1722], [68.0677, 36.9498], [68.9604, 37.3249], [69.2649, 37.1083], [69.4922, 37.553], [70.2512, 37.664], [70.2148, 37.9246], [70.8789, 38.4564], [71.2558, 38.3068], [71.5518, 37.933], [71.4329, 37.1273], [71.8022, 36.6941], [72.8955, 37.2676], [73.4814, 37.4718], [73.7496, 37.2317], [74.2596, 37.4154], [74.8912, 37.2317]]]
            },
            "properties": {
                "name": "Afghanistan",
                "id": "AF"
            },
            "id": "AF"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-61.7161, 17.0368], [-61.8597, 17.0133], [-61.8173, 17.1691], [-61.7161, 17.0368]]]
            },
            "properties": {
                "name": "Antigua and Barbuda",
                "id": "AG"
            },
            "id": "AG"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "Polygon",
                "coordinates": [[[-69.8992, 12.4518], [-69.9421, 12.4385], [-70.0661, 12.5468], [-69.9732, 12.5677], [-69.8992, 12.4518]]]
            },
            "properties": {
                "name": "Aruba",
                "id": "AW"
            },
            "id": "AW"
        }]
    };
    return map;
}
)();
"use strict";
(self.webpackChunk_am5 = self.webpackChunk_am5 || []).push([[6842], {
    6970: function(t, e, n) {
        n.r(e),
        n.d(e, {
            DefaultTheme: function() {
                return le
            },
            GraticuleSeries: function() {
                return rt
            },
            MapChart: function() {
                return Ei
            },
            MapLine: function() {
                return q
            },
            MapLineSeries: function() {
                return et
            },
            MapPointSeries: function() {
                return Ii
            },
            MapPolygon: function() {
                return Li
            },
            MapPolygonSeries: function() {
                return ki
            },
            MapSeries: function() {
                return a
            },
            ZoomControl: function() {
                return Yi
            },
            geoAlbersUsa: function() {
                return Vi
            },
            geoEqualEarth: function() {
                return Ki
            },
            geoEquirectangular: function() {
                return Zi
            },
            geoMercator: function() {
                return ae
            },
            geoNaturalEarth1: function() {
                return eo
            },
            geoOrthographic: function() {
                return Xi
            },
            getGeoArea: function() {
                return Di
            },
            getGeoBounds: function() {
                return Si
            },
            getGeoCentroid: function() {
                return xi
            },
            getGeoCircle: function() {
                return Pi
            },
            getGeoRectangle: function() {
                return Mi
            },
            normalizeGeoPoint: function() {
                return Ni
            }
        });
        var i = n(3399)
          , o = n(5071)
          , r = n(256);
        class a extends i.F {
            constructor() {
                super(...arguments),
                Object.defineProperty(this, "_types", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: []
                }),
                Object.defineProperty(this, "_geometries", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: []
                }),
                Object.defineProperty(this, "_geoJSONparsed", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: !1
                }),
                Object.defineProperty(this, "_excluded", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: []
                }),
                Object.defineProperty(this, "_notIncluded", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: []
                })
            }
            _afterNew() {
                this.fields.push("geometry", "geometryType"),
                this._setRawDefault("geometryField", "geometry"),
                this._setRawDefault("geometryTypeField", "geometryType"),
                this._setRawDefault("idField", "id"),
                this.on("geoJSON", (t => {
                    let e = this._prevSettings.geoJSON;
                    e && e != t && this.data.clear()
                }
                )),
                super._afterNew()
            }
            _handleDirties() {
                const t = this.get("geoJSON");
                let e = this._prevSettings.geoJSON;
                e && e != t && (this._prevSettings.geoJSON = void 0,
                this._geoJSONparsed = !1),
                this._geoJSONparsed || (this._parseGeoJSON(),
                this._geoJSONparsed = !0)
            }
            _prepareChildren() {
                if (super._prepareChildren(),
                this._valuesDirty && this._handleDirties(),
                this.isDirty("geoJSON") || this.isDirty("include") || this.isDirty("exclude")) {
                    this._handleDirties();
                    const t = this.chart
                      , e = this.get("exclude");
                    e && (t && (t._centerLocation = null),
                    o.each(e, (t => {
                        const e = this.getDataItemById(t);
                        e && this._excludeDataItem(e)
                    }
                    ))),
                    e && 0 != e.length || (o.each(this._excluded, (t => {
                        this._unexcludeDataItem(t)
                    }
                    )),
                    this._excluded = []);
                    const n = this.get("include");
                    n && (t && (t._centerLocation = null),
                    o.each(this.dataItems, (t => {
                        const e = t.get("id");
                        e && -1 == n.indexOf(e) ? this._notIncludeDataItem(t) : this._unNotIncludeDataItem(t)
                    }
                    ))),
                    n || (o.each(this._notIncluded, (t => {
                        this._unNotIncludeDataItem(t)
                    }
                    )),
                    this._notIncluded = [])
                }
            }
            _excludeDataItem(t) {
                this._removeGeometry(t.get("geometry")),
                o.move(this._excluded, t)
            }
            _unexcludeDataItem(t) {
                this._addGeometry(t.get("geometry"), this)
            }
            _notIncludeDataItem(t) {
                this._removeGeometry(t.get("geometry")),
                o.move(this._notIncluded, t)
            }
            _unNotIncludeDataItem(t) {
                this._addGeometry(t.get("geometry"), this)
            }
            checkInclude(t, e, n) {
                if (e) {
                    if (0 == e.length)
                        return !1;
                    if (-1 == e.indexOf(t))
                        return !1
                }
                return !(n && n.length > 0 && -1 != n.indexOf(t))
            }
            _parseGeoJSON() {
                const t = this.get("geoJSON");
                if (t) {
                    let e;
                    "FeatureCollection" == t.type ? e = t.features : "Feature" == t.type ? e = [t] : -1 != ["Point", "LineString", "Polygon", "MultiPoint", "MultiLineString", "MultiPolygon"].indexOf(t.type) ? e = [{
                        geometry: t
                    }] : console.log("nothing found in geoJSON");
                    const n = this.get("geodataNames");
                    if (e) {
                        const t = this.get("idField", "id");
                        for (let i = 0, a = e.length; i < a; i++) {
                            let a = e[i]
                              , s = a.geometry;
                            if (s) {
                                let e = s.type
                                  , i = a[t];
                                if (n && n[i] && (a.properties.name = n[i]),
                                -1 != this._types.indexOf(e)) {
                                    let n, l;
                                    null != i && (n = o.find(this.dataItems, (t => t.get("id") == i))),
                                    n && (l = n.dataContext),
                                    n ? l.geometry || (l.geometry = s,
                                    l.geometryType = e,
                                    n.set("geometry", s),
                                    n.set("geometryType", e),
                                    this.processDataItem(n)) : (l = {
                                        geometry: s,
                                        geometryType: e,
                                        madeFromGeoData: !0
                                    },
                                    l[t] = i,
                                    this.data.push(l)),
                                    r.softCopyProperties(a.properties, l)
                                }
                            }
                        }
                    }
                    const i = "geodataprocessed";
                    this.events.isEnabled(i) && this.events.dispatch(i, {
                        type: i,
                        target: this
                    })
                }
            }
            _placeBulletsContainer(t) {
                this.children.moveValue(this.bulletsContainer)
            }
            _removeBulletsContainer() {}
            projection() {
                const t = this.chart;
                if (t)
                    return t.get("projection")
            }
            geoPath() {
                const t = this.chart;
                if (t)
                    return t.getPrivate("geoPath")
            }
            _addGeometry(t, e) {
                if (t && e.get("affectsBounds", !0)) {
                    this._geometries.push(t);
                    const e = this.chart;
                    e && e.markDirtyGeometries()
                }
            }
            _removeGeometry(t) {
                if (t) {
                    o.remove(this._geometries, t);
                    const e = this.chart;
                    e && e.markDirtyGeometries()
                }
            }
            _dispose() {
                super._dispose();
                const t = this.chart;
                t && t.series.removeValue(this)
            }
            _onDataClear() {
                super._onDataClear(),
                this._geoJSONparsed = !1,
                this._markDirtyKey("exclude")
            }
        }
        Object.defineProperty(a, "className", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: "MapSeries"
        }),
        Object.defineProperty(a, "classNames", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: i.F.classNames.concat([a.className])
        });
        var s = n(5040)
          , l = n(6245)
          , u = n(1479);
        class c {
            constructor() {
                this._partials = new Float64Array(32),
                this._n = 0
            }
            add(t) {
                const e = this._partials;
                let n = 0;
                for (let i = 0; i < this._n && i < 32; i++) {
                    const o = e[i]
                      , r = t + o
                      , a = Math.abs(t) < Math.abs(o) ? t - (r - o) : o - (r - t);
                    a && (e[n++] = a),
                    t = r
                }
                return e[n] = t,
                this._n = n + 1,
                this
            }
            valueOf() {
                const t = this._partials;
                let e, n, i, o = this._n, r = 0;
                if (o > 0) {
                    for (r = t[--o]; o > 0 && (e = r,
                    n = t[--o],
                    r = e + n,
                    i = n - (r - e),
                    !i); )
                        ;
                    o > 0 && (i < 0 && t[o - 1] < 0 || i > 0 && t[o - 1] > 0) && (n = 2 * i,
                    e = r + n,
                    n == e - r && (r = e))
                }
                return r
            }
        }
        var h = 1e-6
          , p = 1e-12
          , f = Math.PI
          , g = f / 2
          , d = f / 4
          , m = 2 * f
          , y = 180 / f
          , v = f / 180
          , _ = Math.abs
          , b = Math.atan
          , w = Math.atan2
          , P = Math.cos
          , x = Math.ceil
          , D = Math.exp
          , S = (Math.floor,
        Math.hypot)
          , M = Math.log
          , N = (Math.pow,
        Math.sin)
          , j = Math.sign || function(t) {
            return t > 0 ? 1 : t < 0 ? -1 : 0
        }
          , C = Math.sqrt
          , E = Math.tan;
        function I(t) {
            return t > 1 ? g : t < -1 ? -g : Math.asin(t)
        }
        function O(t) {
            return (t = N(t / 2)) * t
        }
        function T() {}
        function L(t, e) {
            t && B.hasOwnProperty(t.type) && B[t.type](t, e)
        }
        var k, z, R, G, Y = {
            Feature: function(t, e) {
                L(t.geometry, e)
            },
            FeatureCollection: function(t, e) {
                for (var n = t.features, i = -1, o = n.length; ++i < o; )
                    L(n[i].geometry, e)
            }
        }, B = {
            Sphere: function(t, e) {
                e.sphere()
            },
            Point: function(t, e) {
                t = t.coordinates,
                e.point(t[0], t[1], t[2])
            },
            MultiPoint: function(t, e) {
                for (var n = t.coordinates, i = -1, o = n.length; ++i < o; )
                    t = n[i],
                    e.point(t[0], t[1], t[2])
            },
            LineString: function(t, e) {
                X(t.coordinates, e, 0)
            },
            MultiLineString: function(t, e) {
                for (var n = t.coordinates, i = -1, o = n.length; ++i < o; )
                    X(n[i], e, 0)
            },
            Polygon: function(t, e) {
                A(t.coordinates, e)
            },
            MultiPolygon: function(t, e) {
                for (var n = t.coordinates, i = -1, o = n.length; ++i < o; )
                    A(n[i], e)
            },
            GeometryCollection: function(t, e) {
                for (var n = t.geometries, i = -1, o = n.length; ++i < o; )
                    L(n[i], e)
            }
        };
        function X(t, e, n) {
            var i, o = -1, r = t.length - n;
            for (e.lineStart(); ++o < r; )
                i = t[o],
                e.point(i[0], i[1], i[2]);
            e.lineEnd()
        }
        function A(t, e) {
            var n = -1
              , i = t.length;
            for (e.polygonStart(); ++n < i; )
                X(t[n], e, 1);
            e.polygonEnd()
        }
        function Z(t, e) {
            t && Y.hasOwnProperty(t.type) ? Y[t.type](t, e) : L(t, e)
        }
        var W = {
            sphere: T,
            point: T,
            lineStart: function() {
                W.point = V,
                W.lineEnd = F
            },
            lineEnd: T,
            polygonStart: T,
            polygonEnd: T
        };
        function F() {
            W.point = W.lineEnd = T
        }
        function V(t, e) {
            z = t *= v,
            R = N(e *= v),
            G = P(e),
            W.point = J
        }
        function J(t, e) {
            t *= v;
            var n = N(e *= v)
              , i = P(e)
              , o = _(t - z)
              , r = P(o)
              , a = i * N(o)
              , s = G * n - R * i * r
              , l = R * n + G * i * r;
            k.add(w(C(a * a + s * s), l)),
            z = t,
            R = n,
            G = i
        }
        function $(t) {
            return k = new c,
            Z(t, W),
            +k
        }
        var H = [null, null]
          , Q = {
            type: "LineString",
            coordinates: H
        };
        function U(t, e) {
            return H[0] = t,
            H[1] = e,
            $(Q)
        }
        class q extends u.T {
            constructor() {
                super(...arguments),
                Object.defineProperty(this, "_projectionDirty", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: !1
                })
            }
            _beforeChanged() {
                if (super._beforeChanged(),
                this._projectionDirty || this.isDirty("geometry") || this.isDirty("precision")) {
                    const t = this.get("geometry");
                    if (t) {
                        const e = this.getPrivate("series");
                        if (e) {
                            const n = e.chart;
                            if (n) {
                                const i = n.get("projection");
                                let o = null;
                                i && i.clipAngle && (o = i.clipAngle(),
                                i.precision(this.get("precision", .5)));
                                const r = this.dataItem
                                  , a = n.getPrivate("geoPath");
                                if (a && r)
                                    if (this._clear = !0,
                                    "straight" == r.get("lineType", e.get("lineType"))) {
                                        const t = this.get("geometry");
                                        if (t) {
                                            let e = t.coordinates;
                                            if (e) {
                                                let i;
                                                "LineString" == t.type ? i = [e] : "MultiLineString" == t.type && (i = e),
                                                this.set("draw", (t => {
                                                    for (let e = 0; e < i.length; e++) {
                                                        let o = i[e];
                                                        if (o.length > 0) {
                                                            const e = o[0]
                                                              , i = n.convert({
                                                                longitude: e[0],
                                                                latitude: e[1]
                                                            });
                                                            t.lineTo(i.x, i.y);
                                                            for (let e = 0; e < o.length; e++) {
                                                                const i = o[e]
                                                                  , r = n.convert({
                                                                    longitude: i[0],
                                                                    latitude: i[1]
                                                                });
                                                                t.lineTo(r.x, r.y)
                                                            }
                                                        }
                                                    }
                                                }
                                                ))
                                            }
                                        }
                                    } else
                                        this.set("draw", (n => {
                                            i && !1 === e.get("clipBack") && i.clipAngle(180),
                                            a.context(this._display),
                                            a(t),
                                            a.context(null),
                                            i && i.clipAngle && i.clipAngle(o)
                                        }
                                        ))
                            }
                        }
                    }
                    const e = "linechanged";
                    this.events.isEnabled(e) && this.events.dispatch(e, {
                        type: e,
                        target: this
                    })
                }
            }
            markDirtyProjection() {
                this.markDirty(),
                this._projectionDirty = !0
            }
            _clearDirty() {
                super._clearDirty(),
                this._projectionDirty = !1
            }
            _getTooltipPoint() {
                let t = this.get("tooltipX")
                  , e = this.get("tooltipY")
                  , n = 0
                  , i = 0;
                if (s.isNumber(t) && (n = t),
                s.isNumber(e) && (i = e),
                t instanceof l.gG) {
                    const e = this.positionToGeoPoint(t.value)
                      , o = this.getPrivate("series");
                    if (o) {
                        const t = o.chart;
                        if (t) {
                            const o = t.convert(e);
                            n = o.x,
                            i = o.y
                        }
                    }
                }
                return {
                    x: n,
                    y: i
                }
            }
            positionToGeoPoint(t) {
                const e = this.get("geometry")
                  , n = this.getPrivate("series")
                  , i = n.chart
                  , o = this.dataItem;
                if (e && n && i && o) {
                    const r = o.get("lineType", n.get("lineType"));
                    let a, s, l, u = $(e), c = 0, h = 0, p = 0, f = e.coordinates;
                    if (f) {
                        let n;
                        "LineString" == e.type ? n = [f] : "MultiLineString" == e.type && (n = f);
                        for (let e = 0; e < n.length; e++) {
                            let i = n[e];
                            if (i.length > 1) {
                                for (let o = 1; o < i.length; o++)
                                    if (s = i[o - 1],
                                    l = i[o],
                                    h = c / u,
                                    a = U(s, l),
                                    c += a,
                                    p = c / u,
                                    h <= t && p > t) {
                                        e = n.length;
                                        break
                                    }
                            } else
                                1 == i.length && (s = i[0],
                                l = i[0],
                                h = 0,
                                p = 1)
                        }
                        if (s && l) {
                            let e, n = (t - h) / (p - h);
                            if ("straight" == r) {
                                let t = i.convert({
                                    longitude: s[0],
                                    latitude: s[1]
                                })
                                  , e = i.convert({
                                    longitude: l[0],
                                    latitude: l[1]
                                })
                                  , o = t.x + (e.x - t.x) * n
                                  , r = t.y + (e.y - t.y) * n;
                                return i.invert({
                                    x: o,
                                    y: r
                                })
                            }
                            return e = function(t, e) {
                                var n = t[0] * v
                                  , i = t[1] * v
                                  , o = e[0] * v
                                  , r = e[1] * v
                                  , a = P(i)
                                  , s = N(i)
                                  , l = P(r)
                                  , u = N(r)
                                  , c = a * P(n)
                                  , h = a * N(n)
                                  , p = l * P(o)
                                  , f = l * N(o)
                                  , g = 2 * I(C(O(r - i) + a * l * O(o - n)))
                                  , d = N(g)
                                  , m = g ? function(t) {
                                    var e = N(t *= g) / d
                                      , n = N(g - t) / d
                                      , i = n * c + e * p
                                      , o = n * h + e * f
                                      , r = n * s + e * u;
                                    return [w(o, i) * y, w(r, C(i * i + o * o)) * y]
                                }
                                : function() {
                                    return [n * y, i * y]
                                }
                                ;
                                return m.distance = g,
                                m
                            }(s, l)(n),
                            {
                                longitude: e[0],
                                latitude: e[1]
                            }
                        }
                    }
                }
                return {
                    longitude: 0,
                    latitude: 0
                }
            }
        }
        Object.defineProperty(q, "className", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: "MapLine"
        }),
        Object.defineProperty(q, "classNames", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: u.T.classNames.concat([q.className])
        });
        var K = n(7144)
          , tt = n(5769);
        class et extends a {
            constructor() {
                super(...arguments),
                Object.defineProperty(this, "mapLines", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: new K.o(tt.YS.new({}),( () => q._new(this._root, {}, [this.mapLines.template])))
                }),
                Object.defineProperty(this, "_types", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: ["LineString", "MultiLineString"]
                })
            }
            _afterNew() {
                this.fields.push("lineType"),
                this._setRawDefault("lineTypeField", "lineType"),
                super._afterNew()
            }
            makeMapLine(t) {
                const e = this.children.push(this.mapLines.make());
                return e._setDataItem(t),
                this.mapLines.push(e),
                e
            }
            markDirtyProjection() {
                o.each(this.dataItems, (t => {
                    let e = t.get("mapLine");
                    e && e.markDirtyProjection()
                }
                ))
            }
            _prepareChildren() {
                super._prepareChildren(),
                this.isDirty("stroke") && this.mapLines.template.set("stroke", this.get("stroke"))
            }
            processDataItem(t) {
                super.processDataItem(t);
                let e = t.get("mapLine");
                e || (e = this.makeMapLine(t)),
                this._handlePointsToConnect(t),
                t.on("pointsToConnect", ( () => {
                    this._handlePointsToConnect(t)
                }
                )),
                t.set("mapLine", e),
                this._addGeometry(t.get("geometry"), this),
                e.setPrivate("series", this)
            }
            _handlePointsToConnect(t) {
                const e = t.get("pointsToConnect");
                e && (o.each(e, (e => {
                    e.on("geometry", ( () => {
                        this.markDirtyValues(t)
                    }
                    )),
                    e.on("longitude", ( () => {
                        this.markDirtyValues(t)
                    }
                    )),
                    e.on("latitude", ( () => {
                        this.markDirtyValues(t)
                    }
                    ))
                }
                )),
                this.markDirtyValues(t))
            }
            markDirtyValues(t) {
                if (super.markDirtyValues(),
                t) {
                    const e = t.get("mapLine");
                    if (e) {
                        const n = t.get("pointsToConnect");
                        if (n) {
                            let i = [];
                            o.each(n, (t => {
                                const e = t.get("longitude")
                                  , n = t.get("latitude");
                                if (null != e && null != n)
                                    i.push([e, n]);
                                else {
                                    const e = t.get("geometry");
                                    if (e) {
                                        const t = e.coordinates;
                                        t && i.push([t[0], t[1]])
                                    }
                                }
                            }
                            ));
                            let r = {
                                type: "LineString",
                                coordinates: i
                            };
                            t.setRaw("geometry", r),
                            e.set("geometry", r)
                        } else
                            e.set("geometry", t.get("geometry"))
                    }
                }
            }
            disposeDataItem(t) {
                super.disposeDataItem(t);
                const e = t.get("mapLine");
                e && (this.mapLines.removeValue(e),
                e.dispose())
            }
            _excludeDataItem(t) {
                super._excludeDataItem(t);
                const e = t.get("mapLine");
                e && e.setPrivate("visible", !1)
            }
            _unexcludeDataItem(t) {
                super._unexcludeDataItem(t);
                const e = t.get("mapLine");
                e && e.setPrivate("visible", !0)
            }
            _notIncludeDataItem(t) {
                super._notIncludeDataItem(t);
                const e = t.get("mapLine");
                e && e.setPrivate("visible", !1)
            }
            _unNotIncludeDataItem(t) {
                super._unNotIncludeDataItem(t);
                const e = t.get("mapLine");
                e && e.setPrivate("visible", !0)
            }
        }
        function nt(t, e, n) {
            t = +t,
            e = +e,
            n = (o = arguments.length) < 2 ? (e = t,
            t = 0,
            1) : o < 3 ? 1 : +n;
            for (var i = -1, o = 0 | Math.max(0, Math.ceil((e - t) / n)), r = new Array(o); ++i < o; )
                r[i] = t + i * n;
            return r
        }
        function it(t, e, n) {
            var i = nt(t, e - h, n).concat(e);
            return function(t) {
                return i.map((function(e) {
                    return [t, e]
                }
                ))
            }
        }
        function ot(t, e, n) {
            var i = nt(t, e - h, n).concat(e);
            return function(t) {
                return i.map((function(e) {
                    return [e, t]
                }
                ))
            }
        }
        Object.defineProperty(et, "className", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: "MapLineSeries"
        }),
        Object.defineProperty(et, "classNames", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: a.classNames.concat([et.className])
        });
        class rt extends et {
            constructor() {
                super(...arguments),
                Object.defineProperty(this, "_dataItem", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: this.makeDataItem({})
                })
            }
            _afterNew() {
                super._afterNew(),
                this.dataItems.push(this._dataItem),
                this._generate()
            }
            _updateChildren() {
                if (super._updateChildren(),
                this.isDirty("step") && this._generate(),
                this.isDirty("clipExtent") && this.get("clipExtent")) {
                    const t = this.chart;
                    t && t.events.on("geoboundschanged", ( () => {
                        this._generate()
                    }
                    )),
                    this._generate()
                }
            }
            _generate() {
                let t = function() {
                    var t, e, n, i, o, r, a, s, l, u, c, p, f = 10, g = f, d = 90, m = 360, y = 2.5;
                    function v() {
                        return {
                            type: "MultiLineString",
                            coordinates: b()
                        }
                    }
                    function b() {
                        return nt(x(i / d) * d, n, d).map(c).concat(nt(x(s / m) * m, a, m).map(p)).concat(nt(x(e / f) * f, t, f).filter((function(t) {
                            return _(t % d) > h
                        }
                        )).map(l)).concat(nt(x(r / g) * g, o, g).filter((function(t) {
                            return _(t % m) > h
                        }
                        )).map(u))
                    }
                    return v.lines = function() {
                        return b().map((function(t) {
                            return {
                                type: "LineString",
                                coordinates: t
                            }
                        }
                        ))
                    }
                    ,
                    v.outline = function() {
                        return {
                            type: "Polygon",
                            coordinates: [c(i).concat(p(a).slice(1), c(n).reverse().slice(1), p(s).reverse().slice(1))]
                        }
                    }
                    ,
                    v.extent = function(t) {
                        return arguments.length ? v.extentMajor(t).extentMinor(t) : v.extentMinor()
                    }
                    ,
                    v.extentMajor = function(t) {
                        return arguments.length ? (i = +t[0][0],
                        n = +t[1][0],
                        s = +t[0][1],
                        a = +t[1][1],
                        i > n && (t = i,
                        i = n,
                        n = t),
                        s > a && (t = s,
                        s = a,
                        a = t),
                        v.precision(y)) : [[i, s], [n, a]]
                    }
                    ,
                    v.extentMinor = function(n) {
                        return arguments.length ? (e = +n[0][0],
                        t = +n[1][0],
                        r = +n[0][1],
                        o = +n[1][1],
                        e > t && (n = e,
                        e = t,
                        t = n),
                        r > o && (n = r,
                        r = o,
                        o = n),
                        v.precision(y)) : [[e, r], [t, o]]
                    }
                    ,
                    v.step = function(t) {
                        return arguments.length ? v.stepMajor(t).stepMinor(t) : v.stepMinor()
                    }
                    ,
                    v.stepMajor = function(t) {
                        return arguments.length ? (d = +t[0],
                        m = +t[1],
                        v) : [d, m]
                    }
                    ,
                    v.stepMinor = function(t) {
                        return arguments.length ? (f = +t[0],
                        g = +t[1],
                        v) : [f, g]
                    }
                    ,
                    v.precision = function(h) {
                        return arguments.length ? (y = +h,
                        l = it(r, o, 90),
                        u = ot(e, t, y),
                        c = it(s, a, 90),
                        p = ot(i, n, y),
                        v) : y
                    }
                    ,
                    v.extentMajor([[-180, -89.999999], [180, 89.999999]]).extentMinor([[-180, -80.000001], [180, 80.000001]])
                }();
                if (t) {
                    if (this.get("clipExtent")) {
                        const e = this.chart;
                        if (e) {
                            const n = e.geoBounds();
                            n && t.extent([[n.left, n.bottom], [n.right, n.top]])
                        }
                    }
                    const e = this.get("step", 10);
                    t.stepMinor([360, 360]),
                    t.stepMajor([e, e]),
                    this._dataItem.set("geometry", t())
                }
            }
        }
        Object.defineProperty(rt, "className", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: "GraticuleSeries"
        }),
        Object.defineProperty(rt, "classNames", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: et.classNames.concat([rt.className])
        });
        var at = n(3409)
          , st = n(3783);
        function lt(t, e) {
            function n(n, i) {
                return n = t(n, i),
                e(n[0], n[1])
            }
            return t.invert && e.invert && (n.invert = function(n, i) {
                return (n = e.invert(n, i)) && t.invert(n[0], n[1])
            }
            ),
            n
        }
        function ut(t, e) {
            return _(t) > f && (t -= Math.round(t / m) * m),
            [t, e]
        }
        function ct(t, e, n) {
            return (t %= m) ? e || n ? lt(pt(t), ft(e, n)) : pt(t) : e || n ? ft(e, n) : ut
        }
        function ht(t) {
            return function(e, n) {
                return _(e += t) > f && (e -= Math.round(e / m) * m),
                [e, n]
            }
        }
        function pt(t) {
            var e = ht(t);
            return e.invert = ht(-t),
            e
        }
        function ft(t, e) {
            var n = P(t)
              , i = N(t)
              , o = P(e)
              , r = N(e);
            function a(t, e) {
                var a = P(e)
                  , s = P(t) * a
                  , l = N(t) * a
                  , u = N(e)
                  , c = u * n + s * i;
                return [w(l * o - c * r, s * n - u * i), I(c * o + l * r)]
            }
            return a.invert = function(t, e) {
                var a = P(e)
                  , s = P(t) * a
                  , l = N(t) * a
                  , u = N(e)
                  , c = u * o - l * r;
                return [w(l * o + u * r, s * n + c * i), I(c * n - s * i)]
            }
            ,
            a
        }
        function gt() {
            var t, e = [];
            return {
                point: function(e, n, i) {
                    t.push([e, n, i])
                },
                lineStart: function() {
                    e.push(t = [])
                },
                lineEnd: T,
                rejoin: function() {
                    e.length > 1 && e.push(e.pop().concat(e.shift()))
                },
                result: function() {
                    var n = e;
                    return e = [],
                    t = null,
                    n
                }
            }
        }
        function dt(t, e) {
            return _(t[0] - e[0]) < h && _(t[1] - e[1]) < h
        }
        function mt(t, e, n, i) {
            this.x = t,
            this.z = e,
            this.o = n,
            this.e = i,
            this.v = !1,
            this.n = this.p = null
        }
        function yt(t, e, n, i, o) {
            var r, a, s = [], l = [];
            if (t.forEach((function(t) {
                if (!((e = t.length - 1) <= 0)) {
                    var e, n, i = t[0], a = t[e];
                    if (dt(i, a)) {
                        if (!i[2] && !a[2]) {
                            for (o.lineStart(),
                            r = 0; r < e; ++r)
                                o.point((i = t[r])[0], i[1]);
                            return void o.lineEnd()
                        }
                        a[0] += 2e-6
                    }
                    s.push(n = new mt(i,t,null,!0)),
                    l.push(n.o = new mt(i,null,n,!1)),
                    s.push(n = new mt(a,t,null,!1)),
                    l.push(n.o = new mt(a,null,n,!0))
                }
            }
            )),
            s.length) {
                for (l.sort(e),
                vt(s),
                vt(l),
                r = 0,
                a = l.length; r < a; ++r)
                    l[r].e = n = !n;
                for (var u, c, h = s[0]; ; ) {
                    for (var p = h, f = !0; p.v; )
                        if ((p = p.n) === h)
                            return;
                    u = p.z,
                    o.lineStart();
                    do {
                        if (p.v = p.o.v = !0,
                        p.e) {
                            if (f)
                                for (r = 0,
                                a = u.length; r < a; ++r)
                                    o.point((c = u[r])[0], c[1]);
                            else
                                i(p.x, p.n.x, 1, o);
                            p = p.n
                        } else {
                            if (f)
                                for (u = p.p.z,
                                r = u.length - 1; r >= 0; --r)
                                    o.point((c = u[r])[0], c[1]);
                            else
                                i(p.x, p.p.x, -1, o);
                            p = p.p
                        }
                        u = (p = p.o).z,
                        f = !f
                    } while (!p.v);
                    o.lineEnd()
                }
            }
        }
        function vt(t) {
            if (e = t.length) {
                for (var e, n, i = 0, o = t[0]; ++i < e; )
                    o.n = n = t[i],
                    n.p = o,
                    o = n;
                o.n = n = t[0],
                n.p = o
            }
        }
        function _t(t) {
            return [w(t[1], t[0]), I(t[2])]
        }
        function bt(t) {
            var e = t[0]
              , n = t[1]
              , i = P(n);
            return [i * P(e), i * N(e), N(n)]
        }
        function wt(t, e) {
            return t[0] * e[0] + t[1] * e[1] + t[2] * e[2]
        }
        function Pt(t, e) {
            return [t[1] * e[2] - t[2] * e[1], t[2] * e[0] - t[0] * e[2], t[0] * e[1] - t[1] * e[0]]
        }
        function xt(t, e) {
            t[0] += e[0],
            t[1] += e[1],
            t[2] += e[2]
        }
        function Dt(t, e) {
            return [t[0] * e, t[1] * e, t[2] * e]
        }
        function St(t) {
            var e = C(t[0] * t[0] + t[1] * t[1] + t[2] * t[2]);
            t[0] /= e,
            t[1] /= e,
            t[2] /= e
        }
        function Mt(t) {
            return _(t[0]) <= f ? t[0] : j(t[0]) * ((_(t[0]) + f) % m - f)
        }
        function Nt(t) {
            return Array.from(function*(t) {
                for (const e of t)
                    yield*e
            }(t))
        }
        function jt(t, e, n, i) {
            return function(o) {
                var r, a, s, l = e(o), u = gt(), p = e(u), y = !1, v = {
                    point: _,
                    lineStart: x,
                    lineEnd: D,
                    polygonStart: function() {
                        v.point = S,
                        v.lineStart = M,
                        v.lineEnd = j,
                        a = [],
                        r = []
                    },
                    polygonEnd: function() {
                        v.point = _,
                        v.lineStart = x,
                        v.lineEnd = D,
                        a = Nt(a);
                        var t = function(t, e) {
                            var n = Mt(e)
                              , i = e[1]
                              , o = N(i)
                              , r = [N(n), -P(n), 0]
                              , a = 0
                              , s = 0
                              , l = new c;
                            1 === o ? i = g + h : -1 === o && (i = -g - h);
                            for (var u = 0, p = t.length; u < p; ++u)
                                if (v = (y = t[u]).length)
                                    for (var y, v, _ = y[v - 1], b = Mt(_), x = _[1] / 2 + d, D = N(x), S = P(x), M = 0; M < v; ++M,
                                    b = C,
                                    D = O,
                                    S = T,
                                    _ = j) {
                                        var j = y[M]
                                          , C = Mt(j)
                                          , E = j[1] / 2 + d
                                          , O = N(E)
                                          , T = P(E)
                                          , L = C - b
                                          , k = L >= 0 ? 1 : -1
                                          , z = k * L
                                          , R = z > f
                                          , G = D * O;
                                        if (l.add(w(G * k * N(z), S * T + G * P(z))),
                                        a += R ? L + k * m : L,
                                        R ^ b >= n ^ C >= n) {
                                            var Y = Pt(bt(_), bt(j));
                                            St(Y);
                                            var B = Pt(r, Y);
                                            St(B);
                                            var X = (R ^ L >= 0 ? -1 : 1) * I(B[2]);
                                            (i > X || i === X && (Y[0] || Y[1])) && (s += R ^ L >= 0 ? 1 : -1)
                                        }
                                    }
                            return (a < -h || a < h && l < -1e-12) ^ 1 & s
                        }(r, i);
                        a.length ? (y || (o.polygonStart(),
                        y = !0),
                        yt(a, Et, t, n, o)) : t && (y || (o.polygonStart(),
                        y = !0),
                        o.lineStart(),
                        n(null, null, 1, o),
                        o.lineEnd()),
                        y && (o.polygonEnd(),
                        y = !1),
                        a = r = null
                    },
                    sphere: function() {
                        o.polygonStart(),
                        o.lineStart(),
                        n(null, null, 1, o),
                        o.lineEnd(),
                        o.polygonEnd()
                    }
                };
                function _(e, n) {
                    t(e, n) && o.point(e, n)
                }
                function b(t, e) {
                    l.point(t, e)
                }
                function x() {
                    v.point = b,
                    l.lineStart()
                }
                function D() {
                    v.point = _,
                    l.lineEnd()
                }
                function S(t, e) {
                    s.push([t, e]),
                    p.point(t, e)
                }
                function M() {
                    p.lineStart(),
                    s = []
                }
                function j() {
                    S(s[0][0], s[0][1]),
                    p.lineEnd();
                    var t, e, n, i, l = p.clean(), c = u.result(), h = c.length;
                    if (s.pop(),
                    r.push(s),
                    s = null,
                    h)
                        if (1 & l) {
                            if ((e = (n = c[0]).length - 1) > 0) {
                                for (y || (o.polygonStart(),
                                y = !0),
                                o.lineStart(),
                                t = 0; t < e; ++t)
                                    o.point((i = n[t])[0], i[1]);
                                o.lineEnd()
                            }
                        } else
                            h > 1 && 2 & l && c.push(c.pop().concat(c.shift())),
                            a.push(c.filter(Ct))
                }
                return v
            }
        }
        function Ct(t) {
            return t.length > 1
        }
        function Et(t, e) {
            return ((t = t.x)[0] < 0 ? t[1] - g - h : g - t[1]) - ((e = e.x)[0] < 0 ? e[1] - g - h : g - e[1])
        }
        ut.invert = ut;
        var It = jt((function() {
            return !0
        }
        ), (function(t) {
            var e, n = NaN, i = NaN, o = NaN;
            return {
                lineStart: function() {
                    t.lineStart(),
                    e = 1
                },
                point: function(r, a) {
                    var s = r > 0 ? f : -f
                      , l = _(r - n);
                    _(l - f) < h ? (t.point(n, i = (i + a) / 2 > 0 ? g : -g),
                    t.point(o, i),
                    t.lineEnd(),
                    t.lineStart(),
                    t.point(s, i),
                    t.point(r, i),
                    e = 0) : o !== s && l >= f && (_(n - o) < h && (n -= o * h),
                    _(r - s) < h && (r -= s * h),
                    i = function(t, e, n, i) {
                        var o, r, a = N(t - n);
                        return _(a) > h ? b((N(e) * (r = P(i)) * N(n) - N(i) * (o = P(e)) * N(t)) / (o * r * a)) : (e + i) / 2
                    }(n, i, r, a),
                    t.point(o, i),
                    t.lineEnd(),
                    t.lineStart(),
                    t.point(s, i),
                    e = 0),
                    t.point(n = r, i = a),
                    o = s
                },
                lineEnd: function() {
                    t.lineEnd(),
                    n = i = NaN
                },
                clean: function() {
                    return 2 - e
                }
            }
        }
        ), (function(t, e, n, i) {
            var o;
            if (null == t)
                o = n * g,
                i.point(-f, o),
                i.point(0, o),
                i.point(f, o),
                i.point(f, 0),
                i.point(f, -o),
                i.point(0, -o),
                i.point(-f, -o),
                i.point(-f, 0),
                i.point(-f, o);
            else if (_(t[0] - e[0]) > h) {
                var r = t[0] < e[0] ? f : -f;
                o = n * r / 2,
                i.point(-r, o),
                i.point(0, o),
                i.point(r, o)
            } else
                i.point(e[0], e[1])
        }
        ), [-f, -g]);
        function Ot(t) {
            return function() {
                return t
            }
        }
        function Tt(t, e, n, i, o, r) {
            if (n) {
                var a = P(e)
                  , s = N(e)
                  , l = i * n;
                null == o ? (o = e + i * m,
                r = e - l / 2) : (o = Lt(a, o),
                r = Lt(a, r),
                (i > 0 ? o < r : o > r) && (o += i * m));
                for (var u, c = o; i > 0 ? c > r : c < r; c -= l)
                    u = _t([a, -s * P(c), -s * N(c)]),
                    t.point(u[0], u[1])
            }
        }
        function Lt(t, e) {
            (e = bt(e))[0] -= t,
            St(e);
            var n, i = (n = -e[1]) > 1 ? 0 : n < -1 ? f : Math.acos(n);
            return ((-e[2] < 0 ? -i : i) + m - h) % m
        }
        function kt(t) {
            var e = P(t)
              , n = 6 * v
              , i = e > 0
              , o = _(e) > h;
            function r(t, n) {
                return P(t) * P(n) > e
            }
            function a(t, n, i) {
                var o = [1, 0, 0]
                  , r = Pt(bt(t), bt(n))
                  , a = wt(r, r)
                  , s = r[0]
                  , l = a - s * s;
                if (!l)
                    return !i && t;
                var u = e * a / l
                  , c = -e * s / l
                  , p = Pt(o, r)
                  , g = Dt(o, u);
                xt(g, Dt(r, c));
                var d = p
                  , m = wt(g, d)
                  , y = wt(d, d)
                  , v = m * m - y * (wt(g, g) - 1);
                if (!(v < 0)) {
                    var b = C(v)
                      , w = Dt(d, (-m - b) / y);
                    if (xt(w, g),
                    w = _t(w),
                    !i)
                        return w;
                    var P, x = t[0], D = n[0], S = t[1], M = n[1];
                    D < x && (P = x,
                    x = D,
                    D = P);
                    var N = D - x
                      , j = _(N - f) < h;
                    if (!j && M < S && (P = S,
                    S = M,
                    M = P),
                    j || N < h ? j ? S + M > 0 ^ w[1] < (_(w[0] - x) < h ? S : M) : S <= w[1] && w[1] <= M : N > f ^ (x <= w[0] && w[0] <= D)) {
                        var E = Dt(d, (-m + b) / y);
                        return xt(E, g),
                        [w, _t(E)]
                    }
                }
            }
            function s(e, n) {
                var o = i ? t : f - t
                  , r = 0;
                return e < -o ? r |= 1 : e > o && (r |= 2),
                n < -o ? r |= 4 : n > o && (r |= 8),
                r
            }
            return jt(r, (function(t) {
                var e, n, l, u, c;
                return {
                    lineStart: function() {
                        u = l = !1,
                        c = 1
                    },
                    point: function(h, p) {
                        var g, d = [h, p], m = r(h, p), y = i ? m ? 0 : s(h, p) : m ? s(h + (h < 0 ? f : -f), p) : 0;
                        if (!e && (u = l = m) && t.lineStart(),
                        m !== l && (!(g = a(e, d)) || dt(e, g) || dt(d, g)) && (d[2] = 1),
                        m !== l)
                            c = 0,
                            m ? (t.lineStart(),
                            g = a(d, e),
                            t.point(g[0], g[1])) : (g = a(e, d),
                            t.point(g[0], g[1], 2),
                            t.lineEnd()),
                            e = g;
                        else if (o && e && i ^ m) {
                            var v;
                            y & n || !(v = a(d, e, !0)) || (c = 0,
                            i ? (t.lineStart(),
                            t.point(v[0][0], v[0][1]),
                            t.point(v[1][0], v[1][1]),
                            t.lineEnd()) : (t.point(v[1][0], v[1][1]),
                            t.lineEnd(),
                            t.lineStart(),
                            t.point(v[0][0], v[0][1], 3)))
                        }
                        !m || e && dt(e, d) || t.point(d[0], d[1]),
                        e = d,
                        l = m,
                        n = y
                    },
                    lineEnd: function() {
                        l && t.lineEnd(),
                        e = null
                    },
                    clean: function() {
                        return c | (u && l) << 1
                    }
                }
            }
            ), (function(e, i, o, r) {
                Tt(r, t, n, o, e, i)
            }
            ), i ? [0, -t] : [-f, t - f])
        }
        var zt = 1e9
          , Rt = -zt;
        function Gt(t, e, n, i) {
            function o(o, r) {
                return t <= o && o <= n && e <= r && r <= i
            }
            function r(o, r, s, u) {
                var c = 0
                  , h = 0;
                if (null == o || (c = a(o, s)) !== (h = a(r, s)) || l(o, r) < 0 ^ s > 0)
                    do {
                        u.point(0 === c || 3 === c ? t : n, c > 1 ? i : e)
                    } while ((c = (c + s + 4) % 4) !== h);
                else
                    u.point(r[0], r[1])
            }
            function a(i, o) {
                return _(i[0] - t) < h ? o > 0 ? 0 : 3 : _(i[0] - n) < h ? o > 0 ? 2 : 1 : _(i[1] - e) < h ? o > 0 ? 1 : 0 : o > 0 ? 3 : 2
            }
            function s(t, e) {
                return l(t.x, e.x)
            }
            function l(t, e) {
                var n = a(t, 1)
                  , i = a(e, 1);
                return n !== i ? n - i : 0 === n ? e[1] - t[1] : 1 === n ? t[0] - e[0] : 2 === n ? t[1] - e[1] : e[0] - t[0]
            }
            return function(a) {
                var l, u, c, h, p, f, g, d, m, y, v, _ = a, b = gt(), w = {
                    point: P,
                    lineStart: function() {
                        w.point = x,
                        u && u.push(c = []),
                        y = !0,
                        m = !1,
                        g = d = NaN
                    },
                    lineEnd: function() {
                        l && (x(h, p),
                        f && m && b.rejoin(),
                        l.push(b.result())),
                        w.point = P,
                        m && _.lineEnd()
                    },
                    polygonStart: function() {
                        _ = b,
                        l = [],
                        u = [],
                        v = !0
                    },
                    polygonEnd: function() {
                        var e = function() {
                            for (var e = 0, n = 0, o = u.length; n < o; ++n)
                                for (var r, a, s = u[n], l = 1, c = s.length, h = s[0], p = h[0], f = h[1]; l < c; ++l)
                                    r = p,
                                    a = f,
                                    p = (h = s[l])[0],
                                    f = h[1],
                                    a <= i ? f > i && (p - r) * (i - a) > (f - a) * (t - r) && ++e : f <= i && (p - r) * (i - a) < (f - a) * (t - r) && --e;
                            return e
                        }()
                          , n = v && e
                          , o = (l = Nt(l)).length;
                        (n || o) && (a.polygonStart(),
                        n && (a.lineStart(),
                        r(null, null, 1, a),
                        a.lineEnd()),
                        o && yt(l, s, e, r, a),
                        a.polygonEnd()),
                        _ = a,
                        l = u = c = null
                    }
                };
                function P(t, e) {
                    o(t, e) && _.point(t, e)
                }
                function x(r, a) {
                    var s = o(r, a);
                    if (u && c.push([r, a]),
                    y)
                        h = r,
                        p = a,
                        f = s,
                        y = !1,
                        s && (_.lineStart(),
                        _.point(r, a));
                    else if (s && m)
                        _.point(r, a);
                    else {
                        var l = [g = Math.max(Rt, Math.min(zt, g)), d = Math.max(Rt, Math.min(zt, d))]
                          , b = [r = Math.max(Rt, Math.min(zt, r)), a = Math.max(Rt, Math.min(zt, a))];
                        !function(t, e, n, i, o, r) {
                            var a, s = t[0], l = t[1], u = 0, c = 1, h = e[0] - s, p = e[1] - l;
                            if (a = n - s,
                            h || !(a > 0)) {
                                if (a /= h,
                                h < 0) {
                                    if (a < u)
                                        return;
                                    a < c && (c = a)
                                } else if (h > 0) {
                                    if (a > c)
                                        return;
                                    a > u && (u = a)
                                }
                                if (a = o - s,
                                h || !(a < 0)) {
                                    if (a /= h,
                                    h < 0) {
                                        if (a > c)
                                            return;
                                        a > u && (u = a)
                                    } else if (h > 0) {
                                        if (a < u)
                                            return;
                                        a < c && (c = a)
                                    }
                                    if (a = i - l,
                                    p || !(a > 0)) {
                                        if (a /= p,
                                        p < 0) {
                                            if (a < u)
                                                return;
                                            a < c && (c = a)
                                        } else if (p > 0) {
                                            if (a > c)
                                                return;
                                            a > u && (u = a)
                                        }
                                        if (a = r - l,
                                        p || !(a < 0)) {
                                            if (a /= p,
                                            p < 0) {
                                                if (a > c)
                                                    return;
                                                a > u && (u = a)
                                            } else if (p > 0) {
                                                if (a < u)
                                                    return;
                                                a < c && (c = a)
                                            }
                                            return u > 0 && (t[0] = s + u * h,
                                            t[1] = l + u * p),
                                            c < 1 && (e[0] = s + c * h,
                                            e[1] = l + c * p),
                                            !0
                                        }
                                    }
                                }
                            }
                        }(l, b, t, e, n, i) ? s && (_.lineStart(),
                        _.point(r, a),
                        v = !1) : (m || (_.lineStart(),
                        _.point(l[0], l[1])),
                        _.point(b[0], b[1]),
                        s || _.lineEnd(),
                        v = !1)
                    }
                    g = r,
                    d = a,
                    m = s
                }
                return w
            }
        }
        var Yt = t => t;
        function Bt(t) {
            return function(e) {
                var n = new Xt;
                for (var i in t)
                    n[i] = t[i];
                return n.stream = e,
                n
            }
        }
        function Xt() {}
        Xt.prototype = {
            constructor: Xt,
            point: function(t, e) {
                this.stream.point(t, e)
            },
            sphere: function() {
                this.stream.sphere()
            },
            lineStart: function() {
                this.stream.lineStart()
            },
            lineEnd: function() {
                this.stream.lineEnd()
            },
            polygonStart: function() {
                this.stream.polygonStart()
            },
            polygonEnd: function() {
                this.stream.polygonEnd()
            }
        };
        var At = 1 / 0
          , Zt = At
          , Wt = -At
          , Ft = Wt
          , Vt = {
            point: function(t, e) {
                t < At && (At = t),
                t > Wt && (Wt = t),
                e < Zt && (Zt = e),
                e > Ft && (Ft = e)
            },
            lineStart: T,
            lineEnd: T,
            polygonStart: T,
            polygonEnd: T,
            result: function() {
                var t = [[At, Zt], [Wt, Ft]];
                return Wt = Ft = -(Zt = At = 1 / 0),
                t
            }
        }
          , Jt = Vt;
        function $t(t, e, n) {
            var i = t.clipExtent && t.clipExtent();
            return t.scale(150).translate([0, 0]),
            null != i && t.clipExtent(null),
            Z(n, t.stream(Jt)),
            e(Jt.result()),
            null != i && t.clipExtent(i),
            t
        }
        function Ht(t, e, n) {
            return $t(t, (function(n) {
                var i = e[1][0] - e[0][0]
                  , o = e[1][1] - e[0][1]
                  , r = Math.min(i / (n[1][0] - n[0][0]), o / (n[1][1] - n[0][1]))
                  , a = +e[0][0] + (i - r * (n[1][0] + n[0][0])) / 2
                  , s = +e[0][1] + (o - r * (n[1][1] + n[0][1])) / 2;
                t.scale(150 * r).translate([a, s])
            }
            ), n)
        }
        function Qt(t, e, n) {
            return Ht(t, [[0, 0], e], n)
        }
        function Ut(t, e, n) {
            return $t(t, (function(n) {
                var i = +e
                  , o = i / (n[1][0] - n[0][0])
                  , r = (i - o * (n[1][0] + n[0][0])) / 2
                  , a = -o * n[0][1];
                t.scale(150 * o).translate([r, a])
            }
            ), n)
        }
        function qt(t, e, n) {
            return $t(t, (function(n) {
                var i = +e
                  , o = i / (n[1][1] - n[0][1])
                  , r = -o * n[0][0]
                  , a = (i - o * (n[1][1] + n[0][1])) / 2;
                t.scale(150 * o).translate([r, a])
            }
            ), n)
        }
        var Kt = P(30 * v);
        function te(t, e) {
            return +e ? function(t, e) {
                function n(i, o, r, a, s, l, u, c, p, f, g, d, m, y) {
                    var v = u - i
                      , b = c - o
                      , P = v * v + b * b;
                    if (P > 4 * e && m--) {
                        var x = a + f
                          , D = s + g
                          , S = l + d
                          , M = C(x * x + D * D + S * S)
                          , N = I(S /= M)
                          , j = _(_(S) - 1) < h || _(r - p) < h ? (r + p) / 2 : w(D, x)
                          , E = t(j, N)
                          , O = E[0]
                          , T = E[1]
                          , L = O - i
                          , k = T - o
                          , z = b * L - v * k;
                        (z * z / P > e || _((v * L + b * k) / P - .5) > .3 || a * f + s * g + l * d < Kt) && (n(i, o, r, a, s, l, O, T, j, x /= M, D /= M, S, m, y),
                        y.point(O, T),
                        n(O, T, j, x, D, S, u, c, p, f, g, d, m, y))
                    }
                }
                return function(e) {
                    var i, o, r, a, s, l, u, c, h, p, f, g, d = {
                        point: m,
                        lineStart: y,
                        lineEnd: _,
                        polygonStart: function() {
                            e.polygonStart(),
                            d.lineStart = b
                        },
                        polygonEnd: function() {
                            e.polygonEnd(),
                            d.lineStart = y
                        }
                    };
                    function m(n, i) {
                        n = t(n, i),
                        e.point(n[0], n[1])
                    }
                    function y() {
                        c = NaN,
                        d.point = v,
                        e.lineStart()
                    }
                    function v(i, o) {
                        var r = bt([i, o])
                          , a = t(i, o);
                        n(c, h, u, p, f, g, c = a[0], h = a[1], u = i, p = r[0], f = r[1], g = r[2], 16, e),
                        e.point(c, h)
                    }
                    function _() {
                        d.point = m,
                        e.lineEnd()
                    }
                    function b() {
                        y(),
                        d.point = w,
                        d.lineEnd = P
                    }
                    function w(t, e) {
                        v(i = t, e),
                        o = c,
                        r = h,
                        a = p,
                        s = f,
                        l = g,
                        d.point = v
                    }
                    function P() {
                        n(c, h, u, p, f, g, o, r, i, a, s, l, 16, e),
                        d.lineEnd = _,
                        _()
                    }
                    return d
                }
            }(t, e) : function(t) {
                return Bt({
                    point: function(e, n) {
                        e = t(e, n),
                        this.stream.point(e[0], e[1])
                    }
                })
            }(t)
        }
        var ee = Bt({
            point: function(t, e) {
                this.stream.point(t * v, e * v)
            }
        });
        function ne(t, e, n, i, o, r) {
            if (!r)
                return function(t, e, n, i, o) {
                    function r(r, a) {
                        return [e + t * (r *= i), n - t * (a *= o)]
                    }
                    return r.invert = function(r, a) {
                        return [(r - e) / t * i, (n - a) / t * o]
                    }
                    ,
                    r
                }(t, e, n, i, o);
            var a = P(r)
              , s = N(r)
              , l = a * t
              , u = s * t
              , c = a / t
              , h = s / t
              , p = (s * n - a * e) / t
              , f = (s * e + a * n) / t;
            function g(t, r) {
                return [l * (t *= i) - u * (r *= o) + e, n - u * t - l * r]
            }
            return g.invert = function(t, e) {
                return [i * (c * t - h * e + p), o * (f - h * t - c * e)]
            }
            ,
            g
        }
        function ie(t) {
            return oe((function() {
                return t
            }
            ))()
        }
        function oe(t) {
            var e, n, i, o, r, a, s, l, u, c, h = 150, p = 480, f = 250, g = 0, d = 0, m = 0, _ = 0, b = 0, w = 0, P = 1, x = 1, D = null, S = It, M = null, N = Yt, j = .5;
            function E(t) {
                return l(t[0] * v, t[1] * v)
            }
            function I(t) {
                return (t = l.invert(t[0], t[1])) && [t[0] * y, t[1] * y]
            }
            function O() {
                var t = ne(h, 0, 0, P, x, w).apply(null, e(g, d))
                  , i = ne(h, p - t[0], f - t[1], P, x, w);
                return n = ct(m, _, b),
                s = lt(e, i),
                l = lt(n, s),
                a = te(s, j),
                T()
            }
            function T() {
                return u = c = null,
                E
            }
            return E.stream = function(t) {
                return u && c === t ? u : u = ee(function(t) {
                    return Bt({
                        point: function(e, n) {
                            var i = t(e, n);
                            return this.stream.point(i[0], i[1])
                        }
                    })
                }(n)(S(a(N(c = t)))))
            }
            ,
            E.preclip = function(t) {
                return arguments.length ? (S = t,
                D = void 0,
                T()) : S
            }
            ,
            E.postclip = function(t) {
                return arguments.length ? (N = t,
                M = i = o = r = null,
                T()) : N
            }
            ,
            E.clipAngle = function(t) {
                return arguments.length ? (S = +t ? kt(D = t * v) : (D = null,
                It),
                T()) : D * y
            }
            ,
            E.clipExtent = function(t) {
                return arguments.length ? (N = null == t ? (M = i = o = r = null,
                Yt) : Gt(M = +t[0][0], i = +t[0][1], o = +t[1][0], r = +t[1][1]),
                T()) : null == M ? null : [[M, i], [o, r]]
            }
            ,
            E.scale = function(t) {
                return arguments.length ? (h = +t,
                O()) : h
            }
            ,
            E.translate = function(t) {
                return arguments.length ? (p = +t[0],
                f = +t[1],
                O()) : [p, f]
            }
            ,
            E.center = function(t) {
                return arguments.length ? (g = t[0] % 360 * v,
                d = t[1] % 360 * v,
                O()) : [g * y, d * y]
            }
            ,
            E.rotate = function(t) {
                return arguments.length ? (m = t[0] % 360 * v,
                _ = t[1] % 360 * v,
                b = t.length > 2 ? t[2] % 360 * v : 0,
                O()) : [m * y, _ * y, b * y]
            }
            ,
            E.angle = function(t) {
                return arguments.length ? (w = t % 360 * v,
                O()) : w * y
            }
            ,
            E.reflectX = function(t) {
                return arguments.length ? (P = t ? -1 : 1,
                O()) : P < 0
            }
            ,
            E.reflectY = function(t) {
                return arguments.length ? (x = t ? -1 : 1,
                O()) : x < 0
            }
            ,
            E.precision = function(t) {
                return arguments.length ? (a = te(s, j = t * t),
                T()) : C(j)
            }
            ,
            E.fitExtent = function(t, e) {
                return Ht(E, t, e)
            }
            ,
            E.fitSize = function(t, e) {
                return Qt(E, t, e)
            }
            ,
            E.fitWidth = function(t, e) {
                return Ut(E, t, e)
            }
            ,
            E.fitHeight = function(t, e) {
                return qt(E, t, e)
            }
            ,
            function() {
                return e = t.apply(this, arguments),
                E.invert = e.invert && I,
                O()
            }
        }
        function re(t, e) {
            return [t, M(E((g + e) / 2))]
        }
        function ae() {
            return function(t) {
                var e, n, i, o = ie(t), r = o.center, a = o.scale, s = o.translate, l = o.clipExtent, u = null;
                function c() {
                    var r = f * a()
                      , s = o(function(t) {
                        function e(e) {
                            return (e = t(e[0] * v, e[1] * v))[0] *= y,
                            e[1] *= y,
                            e
                        }
                        return t = ct(t[0] * v, t[1] * v, t.length > 2 ? t[2] * v : 0),
                        e.invert = function(e) {
                            return (e = t.invert(e[0] * v, e[1] * v))[0] *= y,
                            e[1] *= y,
                            e
                        }
                        ,
                        e
                    }(o.rotate()).invert([0, 0]));
                    return l(null == u ? [[s[0] - r, s[1] - r], [s[0] + r, s[1] + r]] : t === re ? [[Math.max(s[0] - r, u), e], [Math.min(s[0] + r, n), i]] : [[u, Math.max(s[1] - r, e)], [n, Math.min(s[1] + r, i)]])
                }
                return o.scale = function(t) {
                    return arguments.length ? (a(t),
                    c()) : a()
                }
                ,
                o.translate = function(t) {
                    return arguments.length ? (s(t),
                    c()) : s()
                }
                ,
                o.center = function(t) {
                    return arguments.length ? (r(t),
                    c()) : r()
                }
                ,
                o.clipExtent = function(t) {
                    return arguments.length ? (null == t ? u = e = n = i = null : (u = +t[0][0],
                    e = +t[0][1],
                    n = +t[1][0],
                    i = +t[1][1]),
                    c()) : null == u ? null : [[u, e], [n, i]]
                }
                ,
                c()
            }(re).scale(961 / m)
        }
        re.invert = function(t, e) {
            return [t, 2 * b(D(e)) - g]
        }
        ;
        var se = n(9395);
        class le extends at.Q {
            setupDefaultRules() {
                super.setupDefaultRules();
                const t = this._root.interfaceColors
                  , e = this.rule.bind(this);
                e("MapChart").setAll({
                    projection: ae(),
                    panX: "translateX",
                    panY: "translateY",
                    pinchZoom: !0,
                    zoomStep: 2,
                    zoomLevel: 1,
                    rotationX: 0,
                    rotationY: 0,
                    rotationZ: 0,
                    maxZoomLevel: 32,
                    minZoomLevel: 1,
                    wheelY: "zoom",
                    wheelX: "none",
                    animationEasing: se.out(se.cubic),
                    wheelEasing: se.out(se.cubic),
                    wheelDuration: 0,
                    wheelSensitivity: 1,
                    maxPanOut: .4,
                    centerMapOnZoomOut: !0
                });
                {
                    const n = e("MapLine");
                    n.setAll({
                        precision: .5,
                        role: "figure"
                    }),
                    (0,
                    st.v)(n, "stroke", t, "grid")
                }
                e("MapPolygonSeries").setAll({
                    affectsBounds: !0
                }),
                e("MapPointSeries").setAll({
                    affectsBounds: !1,
                    clipFront: !1,
                    clipBack: !0,
                    autoScale: !1
                }),
                e("MapLineSeries").setAll({
                    affectsBounds: !1
                });
                {
                    const n = e("MapPolygon");
                    n.setAll({
                        precision: .5,
                        isMeasured: !1,
                        role: "figure",
                        fillOpacity: 1,
                        position: "absolute",
                        strokeWidth: .2,
                        strokeOpacity: 1
                    }),
                    (0,
                    st.v)(n, "fill", t, "primaryButton"),
                    (0,
                    st.v)(n, "stroke", t, "background")
                }
                e("Button", ["zoomcontrol"]).setAll({
                    marginTop: 1,
                    marginBottom: 1
                }),
                e("Graphics", ["map", "button", "plus", "icon"]).setAll({
                    x: l.CI,
                    y: l.CI,
                    draw: t => {
                        t.moveTo(-4, 0),
                        t.lineTo(4, 0),
                        t.moveTo(0, -4),
                        t.lineTo(0, 4)
                    }
                }),
                e("Graphics", ["map", "button", "minus", "icon"]).setAll({
                    x: l.CI,
                    y: l.CI,
                    draw: t => {
                        t.moveTo(-4, 0),
                        t.lineTo(4, 0)
                    }
                }),
                e("GraticuleSeries").setAll({
                    step: 10
                }),
                e("ZoomControl").setAll({
                    x: l.AQ,
                    centerX: l.AQ,
                    y: l.AQ,
                    centerY: l.AQ,
                    paddingRight: 10,
                    paddingBottom: 10
                })
            }
        }
        var ue, ce, he, pe, fe = n(5829), ge = n(7142), de = new c, me = new c, ye = {
            point: T,
            lineStart: T,
            lineEnd: T,
            polygonStart: function() {
                ye.lineStart = ve,
                ye.lineEnd = we
            },
            polygonEnd: function() {
                ye.lineStart = ye.lineEnd = ye.point = T,
                de.add(_(me)),
                me = new c
            },
            result: function() {
                var t = de / 2;
                return de = new c,
                t
            }
        };
        function ve() {
            ye.point = _e
        }
        function _e(t, e) {
            ye.point = be,
            ue = he = t,
            ce = pe = e
        }
        function be(t, e) {
            me.add(pe * t - he * e),
            he = t,
            pe = e
        }
        function we() {
            be(ue, ce)
        }
        var Pe, xe, De, Se, Me = ye, Ne = 0, je = 0, Ce = 0, Ee = 0, Ie = 0, Oe = 0, Te = 0, Le = 0, ke = 0, ze = {
            point: Re,
            lineStart: Ge,
            lineEnd: Xe,
            polygonStart: function() {
                ze.lineStart = Ae,
                ze.lineEnd = Ze
            },
            polygonEnd: function() {
                ze.point = Re,
                ze.lineStart = Ge,
                ze.lineEnd = Xe
            },
            result: function() {
                var t = ke ? [Te / ke, Le / ke] : Oe ? [Ee / Oe, Ie / Oe] : Ce ? [Ne / Ce, je / Ce] : [NaN, NaN];
                return Ne = je = Ce = Ee = Ie = Oe = Te = Le = ke = 0,
                t
            }
        };
        function Re(t, e) {
            Ne += t,
            je += e,
            ++Ce
        }
        function Ge() {
            ze.point = Ye
        }
        function Ye(t, e) {
            ze.point = Be,
            Re(De = t, Se = e)
        }
        function Be(t, e) {
            var n = t - De
              , i = e - Se
              , o = C(n * n + i * i);
            Ee += o * (De + t) / 2,
            Ie += o * (Se + e) / 2,
            Oe += o,
            Re(De = t, Se = e)
        }
        function Xe() {
            ze.point = Re
        }
        function Ae() {
            ze.point = We
        }
        function Ze() {
            Fe(Pe, xe)
        }
        function We(t, e) {
            ze.point = Fe,
            Re(Pe = De = t, xe = Se = e)
        }
        function Fe(t, e) {
            var n = t - De
              , i = e - Se
              , o = C(n * n + i * i);
            Ee += o * (De + t) / 2,
            Ie += o * (Se + e) / 2,
            Oe += o,
            Te += (o = Se * t - De * e) * (De + t),
            Le += o * (Se + e),
            ke += 3 * o,
            Re(De = t, Se = e)
        }
        var Ve = ze;
        function Je(t) {
            this._context = t
        }
        Je.prototype = {
            _radius: 4.5,
            pointRadius: function(t) {
                return this._radius = t,
                this
            },
            polygonStart: function() {
                this._line = 0
            },
            polygonEnd: function() {
                this._line = NaN
            },
            lineStart: function() {
                this._point = 0
            },
            lineEnd: function() {
                0 === this._line && this._context.closePath(),
                this._point = NaN
            },
            point: function(t, e) {
                switch (this._point) {
                case 0:
                    this._context.moveTo(t, e),
                    this._point = 1;
                    break;
                case 1:
                    this._context.lineTo(t, e);
                    break;
                default:
                    this._context.moveTo(t + this._radius, e),
                    this._context.arc(t, e, this._radius, 0, m)
                }
            },
            result: T
        };
        var $e, He, Qe, Ue, qe, Ke = new c, tn = {
            point: T,
            lineStart: function() {
                tn.point = en
            },
            lineEnd: function() {
                $e && nn(He, Qe),
                tn.point = T
            },
            polygonStart: function() {
                $e = !0
            },
            polygonEnd: function() {
                $e = null
            },
            result: function() {
                var t = +Ke;
                return Ke = new c,
                t
            }
        };
        function en(t, e) {
            tn.point = nn,
            He = Ue = t,
            Qe = qe = e
        }
        function nn(t, e) {
            Ue -= t,
            qe -= e,
            Ke.add(C(Ue * Ue + qe * qe)),
            Ue = t,
            qe = e
        }
        var on = tn;
        let rn, an, sn, ln;
        class un {
            constructor(t) {
                this._append = null == t ? cn : function(t) {
                    const e = Math.floor(t);
                    if (!(e >= 0))
                        throw new RangeError(`invalid digits: ${t}`);
                    if (e > 15)
                        return cn;
                    if (e !== rn) {
                        const t = 10 ** e;
                        rn = e,
                        an = function(e) {
                            let n = 1;
                            this._ += e[0];
                            for (const i = e.length; n < i; ++n)
                                this._ += Math.round(arguments[n] * t) / t + e[n]
                        }
                    }
                    return an
                }(t),
                this._radius = 4.5,
                this._ = ""
            }
            pointRadius(t) {
                return this._radius = +t,
                this
            }
            polygonStart() {
                this._line = 0
            }
            polygonEnd() {
                this._line = NaN
            }
            lineStart() {
                this._point = 0
            }
            lineEnd() {
                0 === this._line && (this._ += "Z"),
                this._point = NaN
            }
            point(t, e) {
                switch (this._point) {
                case 0:
                    this._append`M${t},${e}`,
                    this._point = 1;
                    break;
                case 1:
                    this._append`L${t},${e}`;
                    break;
                default:
                    if (this._append`M${t},${e}`,
                    this._radius !== sn || this._append !== an) {
                        const t = this._radius
                          , e = this._;
                        this._ = "",
                        this._append`m0,${t}a${t},${t} 0 1,1 0,${-2 * t}a${t},${t} 0 1,1 0,${2 * t}z`,
                        sn = t,
                        an = this._append,
                        ln = this._,
                        this._ = e
                    }
                    this._ += ln
                }
            }
            result() {
                const t = this._;
                return this._ = "",
                t.length ? t : null
            }
        }
        function cn(t) {
            let e = 1;
            this._ += t[0];
            for (const n = t.length; e < n; ++e)
                this._ += arguments[e] + t[e]
        }
        var hn, pn, fn, gn, dn, mn, yn, vn, _n, bn, wn, Pn, xn, Dn, Sn, Mn, Nn = n(1112), jn = n(3145), Cn = n(751), En = {
            sphere: T,
            point: In,
            lineStart: Tn,
            lineEnd: zn,
            polygonStart: function() {
                En.lineStart = Rn,
                En.lineEnd = Gn
            },
            polygonEnd: function() {
                En.lineStart = Tn,
                En.lineEnd = zn
            }
        };
        function In(t, e) {
            t *= v;
            var n = P(e *= v);
            On(n * P(t), n * N(t), N(e))
        }
        function On(t, e, n) {
            ++hn,
            fn += (t - fn) / hn,
            gn += (e - gn) / hn,
            dn += (n - dn) / hn
        }
        function Tn() {
            En.point = Ln
        }
        function Ln(t, e) {
            t *= v;
            var n = P(e *= v);
            Dn = n * P(t),
            Sn = n * N(t),
            Mn = N(e),
            En.point = kn,
            On(Dn, Sn, Mn)
        }
        function kn(t, e) {
            t *= v;
            var n = P(e *= v)
              , i = n * P(t)
              , o = n * N(t)
              , r = N(e)
              , a = w(C((a = Sn * r - Mn * o) * a + (a = Mn * i - Dn * r) * a + (a = Dn * o - Sn * i) * a), Dn * i + Sn * o + Mn * r);
            pn += a,
            mn += a * (Dn + (Dn = i)),
            yn += a * (Sn + (Sn = o)),
            vn += a * (Mn + (Mn = r)),
            On(Dn, Sn, Mn)
        }
        function zn() {
            En.point = In
        }
        function Rn() {
            En.point = Yn
        }
        function Gn() {
            Bn(Pn, xn),
            En.point = In
        }
        function Yn(t, e) {
            Pn = t,
            xn = e,
            t *= v,
            e *= v,
            En.point = Bn;
            var n = P(e);
            Dn = n * P(t),
            Sn = n * N(t),
            Mn = N(e),
            On(Dn, Sn, Mn)
        }
        function Bn(t, e) {
            t *= v;
            var n = P(e *= v)
              , i = n * P(t)
              , o = n * N(t)
              , r = N(e)
              , a = Sn * r - Mn * o
              , s = Mn * i - Dn * r
              , l = Dn * o - Sn * i
              , u = S(a, s, l)
              , c = I(u)
              , h = u && -c / u;
            _n.add(h * a),
            bn.add(h * s),
            wn.add(h * l),
            pn += c,
            mn += c * (Dn + (Dn = i)),
            yn += c * (Sn + (Sn = o)),
            vn += c * (Mn + (Mn = r)),
            On(Dn, Sn, Mn)
        }
        var Xn, An, Zn, Wn, Fn, Vn, Jn, $n, Hn, Qn, Un, qn, Kn, ti, ei, ni, ii = new c, oi = new c, ri = {
            point: T,
            lineStart: T,
            lineEnd: T,
            polygonStart: function() {
                ii = new c,
                ri.lineStart = ai,
                ri.lineEnd = si
            },
            polygonEnd: function() {
                var t = +ii;
                oi.add(t < 0 ? m + t : t),
                this.lineStart = this.lineEnd = this.point = T
            },
            sphere: function() {
                oi.add(m)
            }
        };
        function ai() {
            ri.point = li
        }
        function si() {
            ui(Xn, An)
        }
        function li(t, e) {
            ri.point = ui,
            Xn = t,
            An = e,
            Zn = t *= v,
            Wn = P(e = (e *= v) / 2 + d),
            Fn = N(e)
        }
        function ui(t, e) {
            var n = (t *= v) - Zn
              , i = n >= 0 ? 1 : -1
              , o = i * n
              , r = P(e = (e *= v) / 2 + d)
              , a = N(e)
              , s = Fn * a
              , l = Wn * r + s * P(o)
              , u = s * i * N(o);
            ii.add(w(u, l)),
            Zn = t,
            Wn = r,
            Fn = a
        }
        function ci(t) {
            return oi = new c,
            Z(t, ri),
            2 * oi
        }
        var hi = {
            point: pi,
            lineStart: gi,
            lineEnd: di,
            polygonStart: function() {
                hi.point = mi,
                hi.lineStart = yi,
                hi.lineEnd = vi,
                ti = new c,
                ri.polygonStart()
            },
            polygonEnd: function() {
                ri.polygonEnd(),
                hi.point = pi,
                hi.lineStart = gi,
                hi.lineEnd = di,
                ii < 0 ? (Vn = -($n = 180),
                Jn = -(Hn = 90)) : ti > h ? Hn = 90 : ti < -h && (Jn = -90),
                ni[0] = Vn,
                ni[1] = $n
            },
            sphere: function() {
                Vn = -($n = 180),
                Jn = -(Hn = 90)
            }
        };
        function pi(t, e) {
            ei.push(ni = [Vn = t, $n = t]),
            e < Jn && (Jn = e),
            e > Hn && (Hn = e)
        }
        function fi(t, e) {
            var n = bt([t * v, e * v]);
            if (Kn) {
                var i = Pt(Kn, n)
                  , o = Pt([i[1], -i[0], 0], i);
                St(o),
                o = _t(o);
                var r, a = t - Qn, s = a > 0 ? 1 : -1, l = o[0] * y * s, u = _(a) > 180;
                u ^ (s * Qn < l && l < s * t) ? (r = o[1] * y) > Hn && (Hn = r) : u ^ (s * Qn < (l = (l + 360) % 360 - 180) && l < s * t) ? (r = -o[1] * y) < Jn && (Jn = r) : (e < Jn && (Jn = e),
                e > Hn && (Hn = e)),
                u ? t < Qn ? _i(Vn, t) > _i(Vn, $n) && ($n = t) : _i(t, $n) > _i(Vn, $n) && (Vn = t) : $n >= Vn ? (t < Vn && (Vn = t),
                t > $n && ($n = t)) : t > Qn ? _i(Vn, t) > _i(Vn, $n) && ($n = t) : _i(t, $n) > _i(Vn, $n) && (Vn = t)
            } else
                ei.push(ni = [Vn = t, $n = t]);
            e < Jn && (Jn = e),
            e > Hn && (Hn = e),
            Kn = n,
            Qn = t
        }
        function gi() {
            hi.point = fi
        }
        function di() {
            ni[0] = Vn,
            ni[1] = $n,
            hi.point = pi,
            Kn = null
        }
        function mi(t, e) {
            if (Kn) {
                var n = t - Qn;
                ti.add(_(n) > 180 ? n + (n > 0 ? 360 : -360) : n)
            } else
                Un = t,
                qn = e;
            ri.point(t, e),
            fi(t, e)
        }
        function yi() {
            ri.lineStart()
        }
        function vi() {
            mi(Un, qn),
            ri.lineEnd(),
            _(ti) > h && (Vn = -($n = 180)),
            ni[0] = Vn,
            ni[1] = $n,
            Kn = null
        }
        function _i(t, e) {
            return (e -= t) < 0 ? e + 360 : e
        }
        function bi(t, e) {
            return t[0] - e[0]
        }
        function wi(t, e) {
            return t[0] <= t[1] ? t[0] <= e && e <= t[1] : e < t[0] || t[1] < e
        }
        function Pi(t, e) {
            return function() {
                var t, e, n = Ot([0, 0]), i = Ot(90), o = Ot(6), r = {
                    point: function(n, i) {
                        t.push(n = e(n, i)),
                        n[0] *= y,
                        n[1] *= y
                    }
                };
                function a() {
                    var a = n.apply(this, arguments)
                      , s = i.apply(this, arguments) * v
                      , l = o.apply(this, arguments) * v;
                    return t = [],
                    e = ct(-a[0] * v, -a[1] * v, 0).invert,
                    Tt(r, s, l, 1),
                    a = {
                        type: "Polygon",
                        coordinates: [t]
                    },
                    t = e = null,
                    a
                }
                return a.center = function(t) {
                    return arguments.length ? (n = "function" == typeof t ? t : Ot([+t[0], +t[1]]),
                    a) : n
                }
                ,
                a.radius = function(t) {
                    return arguments.length ? (i = "function" == typeof t ? t : Ot(+t),
                    a) : i
                }
                ,
                a.precision = function(t) {
                    return arguments.length ? (o = "function" == typeof t ? t : Ot(+t),
                    a) : o
                }
                ,
                a
            }().center([t.longitude, t.latitude]).radius(e)()
        }
        function xi(t) {
            const e = function(t) {
                hn = pn = fn = gn = dn = mn = yn = vn = 0,
                _n = new c,
                bn = new c,
                wn = new c,
                Z(t, En);
                var e = +_n
                  , n = +bn
                  , i = +wn
                  , o = S(e, n, i);
                return o < p && (e = mn,
                n = yn,
                i = vn,
                pn < h && (e = fn,
                n = gn,
                i = dn),
                (o = S(e, n, i)) < p) ? [NaN, NaN] : [w(n, e) * y, I(i / o) * y]
            }(t);
            return {
                longitude: e[0],
                latitude: e[1]
            }
        }
        function Di(t) {
            return ci(t)
        }
        function Si(t) {
            const e = function(t) {
                var e, n, i, o, r, a, s;
                if (Hn = $n = -(Vn = Jn = 1 / 0),
                ei = [],
                Z(t, hi),
                n = ei.length) {
                    for (ei.sort(bi),
                    e = 1,
                    r = [i = ei[0]]; e < n; ++e)
                        wi(i, (o = ei[e])[0]) || wi(i, o[1]) ? (_i(i[0], o[1]) > _i(i[0], i[1]) && (i[1] = o[1]),
                        _i(o[0], i[1]) > _i(i[0], i[1]) && (i[0] = o[0])) : r.push(i = o);
                    for (a = -1 / 0,
                    e = 0,
                    i = r[n = r.length - 1]; e <= n; i = o,
                    ++e)
                        o = r[e],
                        (s = _i(i[1], o[0])) > a && (a = s,
                        Vn = o[0],
                        $n = i[1])
                }
                return ei = ni = null,
                Vn === 1 / 0 || Jn === 1 / 0 ? [[NaN, NaN], [NaN, NaN]] : [[Vn, Jn], [$n, Hn]]
            }(t);
            if (e) {
                const t = {
                    left: e[0][0],
                    right: e[1][0],
                    top: e[1][1],
                    bottom: e[0][1]
                };
                return t.right < t.left && (t.right = 180,
                t.left = -180),
                t
            }
            return {
                left: 0,
                right: 0,
                top: 0,
                bottom: 0
            }
        }
        function Mi(t, e, n, i) {
            let o = [];
            i <= -180 && (i = -179.9999),
            n <= -90 && (n = -89.9999),
            t >= 90 && (t = 89.9999),
            e >= 180 && (e = 179.9999);
            let r = Math.min(90, (e - i) / Math.ceil((e - i) / 90))
              , a = (t - n) / Math.ceil((t - n) / 90);
            for (let s = i; s < e; s += r) {
                let i = [];
                o.push([i]),
                s + r > e && (r = e - s);
                for (let e = s; e <= s + r; e += 5)
                    i.push([e, t]);
                for (let e = t; e >= n; e -= a)
                    i.push([s + r, e]);
                for (let t = s + r; t >= s; t -= 5)
                    i.push([t, n]);
                for (let e = n; e <= t; e += a)
                    i.push([s, e])
            }
            return {
                type: "MultiPolygon",
                coordinates: o
            }
        }
        function Ni(t) {
            let e = ji(t.longitude)
              , n = Math.asin(Math.sin(t.latitude * Cn.RADIANS)) * Cn.DEGREES
              , i = ji(t.latitude);
            return Math.abs(i) > 90 && (e = ji(e + 180)),
            t.longitude = e,
            t.latitude = n,
            t
        }
        function ji(t) {
            return (t %= 360) > 180 && (t -= 360),
            t < -180 && (t += 360),
            t
        }
        var Ci = n(7652);
        class Ei extends fe.j {
            constructor() {
                super(...arguments),
                Object.defineProperty(this, "_downTranslateX", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: void 0
                }),
                Object.defineProperty(this, "_downTranslateY", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: void 0
                }),
                Object.defineProperty(this, "_downRotationX", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: void 0
                }),
                Object.defineProperty(this, "_downRotationY", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: void 0
                }),
                Object.defineProperty(this, "_downRotationZ", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: void 0
                }),
                Object.defineProperty(this, "_pLat", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: 0
                }),
                Object.defineProperty(this, "_pLon", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: 0
                }),
                Object.defineProperty(this, "_movePoints", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: {}
                }),
                Object.defineProperty(this, "_downZoomLevel", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: 1
                }),
                Object.defineProperty(this, "_doubleDownDistance", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: 0
                }),
                Object.defineProperty(this, "_dirtyGeometries", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: !1
                }),
                Object.defineProperty(this, "_geometryColection", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: {
                        type: "GeometryCollection",
                        geometries: []
                    }
                }),
                Object.defineProperty(this, "_centerLocation", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: null
                }),
                Object.defineProperty(this, "_za", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: void 0
                }),
                Object.defineProperty(this, "_rxa", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: void 0
                }),
                Object.defineProperty(this, "_rya", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: void 0
                }),
                Object.defineProperty(this, "_txa", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: void 0
                }),
                Object.defineProperty(this, "_tya", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: void 0
                }),
                Object.defineProperty(this, "_mapBounds", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: [[0, 0], [0, 0]]
                }),
                Object.defineProperty(this, "_geoCentroid", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: {
                        longitude: 0,
                        latitude: 0
                    }
                }),
                Object.defineProperty(this, "_geoBounds", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: {
                        left: 0,
                        right: 0,
                        top: 0,
                        bottom: 0
                    }
                }),
                Object.defineProperty(this, "_prevGeoBounds", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: {
                        left: 0,
                        right: 0,
                        top: 0,
                        bottom: 0
                    }
                }),
                Object.defineProperty(this, "_dispatchBounds", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: !1
                }),
                Object.defineProperty(this, "_wheelDp", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: void 0
                }),
                Object.defineProperty(this, "_pw", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: void 0
                }),
                Object.defineProperty(this, "_ph", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: void 0
                }),
                Object.defineProperty(this, "_mapFitted", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: !1
                }),
                Object.defineProperty(this, "_centerX", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: 0
                }),
                Object.defineProperty(this, "_centerY", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: 0
                })
            }
            _makeGeoPath() {
                const t = this.get("projection")
                  , e = function(t, e) {
                    let n, i, o = 3, r = 4.5;
                    function a(t) {
                        return t && ("function" == typeof r && i.pointRadius(+r.apply(this, arguments)),
                        Z(t, n(i))),
                        i.result()
                    }
                    return a.area = function(t) {
                        return Z(t, n(Me)),
                        Me.result()
                    }
                    ,
                    a.measure = function(t) {
                        return Z(t, n(on)),
                        on.result()
                    }
                    ,
                    a.bounds = function(t) {
                        return Z(t, n(Jt)),
                        Jt.result()
                    }
                    ,
                    a.centroid = function(t) {
                        return Z(t, n(Ve)),
                        Ve.result()
                    }
                    ,
                    a.projection = function(e) {
                        return arguments.length ? (n = null == e ? (t = null,
                        Yt) : (t = e).stream,
                        a) : t
                    }
                    ,
                    a.context = function(t) {
                        return arguments.length ? (i = null == t ? (e = null,
                        new un(o)) : new Je(e = t),
                        "function" != typeof r && i.pointRadius(r),
                        a) : e
                    }
                    ,
                    a.pointRadius = function(t) {
                        return arguments.length ? (r = "function" == typeof t ? t : (i.pointRadius(+t),
                        +t),
                        a) : r
                    }
                    ,
                    a.digits = function(t) {
                        if (!arguments.length)
                            return o;
                        if (null == t)
                            o = null;
                        else {
                            const e = Math.floor(t);
                            if (!(e >= 0))
                                throw new RangeError(`invalid digits: ${t}`);
                            o = e
                        }
                        return null === e && (i = new un(o)),
                        a
                    }
                    ,
                    a.projection(t).digits(o).context(e)
                }();
                e.projection(t),
                this.setPrivateRaw("geoPath", e)
            }
            geoPoint() {
                return this.invert(this.seriesContainer.toGlobal({
                    x: this.width() / 2,
                    y: this.height() / 2
                }))
            }
            geoCentroid() {
                return this._geoCentroid
            }
            geoBounds() {
                return this._geoBounds
            }
            _handleSetWheel() {
                const t = this.get("wheelX")
                  , e = this.get("wheelY")
                  , n = this.chartContainer;
                "none" != t || "none" != e ? (this._wheelDp && this._wheelDp.dispose(),
                this._wheelDp = n.events.on("wheel", (i => {
                    const o = this.get("wheelEasing")
                      , r = this.get("wheelSensitivity", 1)
                      , a = this.get("wheelDuration", 0)
                      , s = i.originalEvent;
                    if (!Ci.isLocalEvent(s, this))
                        return;
                    s.preventDefault();
                    const l = n._display.toLocal(i.point);
                    "zoom" == e ? this._handleWheelZoom(s.deltaY, l) : "rotateY" == e ? this._handleWheelRotateY(s.deltaY / 5 * r, a, o) : "rotateX" == e && this._handleWheelRotateX(s.deltaY / 5 * r, a, o),
                    "zoom" == t ? this._handleWheelZoom(s.deltaX, l) : "rotateY" == t ? this._handleWheelRotateY(s.deltaX / 5 * r, a, o) : "rotateX" == t && this._handleWheelRotateX(s.deltaX / 5 * r, a, o)
                }
                )),
                this._disposers.push(this._wheelDp)) : this._wheelDp && this._wheelDp.dispose()
            }
            _prepareChildren() {
                super._prepareChildren();
                const t = this.get("projection")
                  , e = this.innerWidth()
                  , n = this.innerHeight()
                  , i = this._geometryColection.geometries;
                if (this.isDirty("projection")) {
                    this._makeGeoPath(),
                    this.markDirtyProjection(),
                    this._fitMap(),
                    t.scale(this.getPrivate("mapScale") * this.get("zoomLevel", 1)),
                    t.rotate && t.rotate([this.get("rotationX", 0), this.get("rotationY", 0), this.get("rotationZ", 0)]);
                    let i = this._prevSettings.projection;
                    if (i && i != t) {
                        let o = e / 2
                          , r = n / 2;
                        if (i.invert) {
                            let e = i.invert([o, r]);
                            if (e) {
                                let n = t(e);
                                if (n) {
                                    let e = t.translate()
                                      , i = o - (n[0] - e[0])
                                      , a = r - (n[1] - e[1]);
                                    t.translate([i, a]),
                                    this.setRaw("translateX", i),
                                    this.setRaw("translateY", a)
                                }
                            }
                        }
                    }
                }
                if ((this.isDirty("wheelX") || this.isDirty("wheelY")) && this._handleSetWheel(),
                this._dirtyGeometries && (this._geometryColection.geometries = [],
                this.series.each((t => {
                    o.pushAll(this._geometryColection.geometries, t._geometries)
                }
                )),
                this._fitMap()),
                0 != i.length && (e != this._pw || n != this._ph || this._dirtyGeometries) && e > 0 && n > 0) {
                    let i = e / 2
                      , o = n / 2;
                    t.fitSize([e, n], this._geometryColection);
                    const r = t.scale();
                    if (this.setPrivateRaw("mapScale", r),
                    t.scale(r * this.get("zoomLevel", 1)),
                    this._centerLocation) {
                        let e = t(this._centerLocation);
                        if (e) {
                            let n = t.translate()
                              , r = i - (e[0] - n[0])
                              , a = o - (e[1] - n[1]);
                            t.translate([r, a]),
                            this.setRaw("translateX", r),
                            this.setRaw("translateY", a),
                            this._centerX = n[0],
                            this._centerY = n[1]
                        }
                    }
                    this.markDirtyProjection();
                    const a = this.getPrivate("geoPath");
                    this._mapBounds = a.bounds(this._geometryColection)
                }
                if (this._pw = e,
                this._ph = n,
                this.isDirty("zoomControl")) {
                    const t = this._prevSettings.zoomControl
                      , e = this.get("zoomControl");
                    e !== t && (this._disposeProperty("zoomControl"),
                    t && t.dispose(),
                    e && (e.setPrivate("chart", this),
                    this.children.push(e)),
                    this.setRaw("zoomControl", e))
                }
                this.isDirty("zoomLevel") && (t.scale(this.getPrivate("mapScale") * this.get("zoomLevel", 1)),
                this.markDirtyProjection(),
                this.series.each((t => {
                    t.isType("MapPointSeries") && t.get("autoScale") && o.each(t.dataItems, (t => {
                        const e = t.bullets;
                        e && o.each(e, (t => {
                            const e = t.get("sprite");
                            e && e.set("scale", this.get("zoomLevel"))
                        }
                        ))
                    }
                    ))
                }
                ))),
                (this.isDirty("translateX") || this.isDirty("translateY")) && (t.translate([this.get("translateX", this.width() / 2), this.get("translateY", this.height() / 2)]),
                this.markDirtyProjection()),
                t.rotate && (this.isDirty("rotationX") || this.isDirty("rotationY") || this.isDirty("rotationZ")) && (t.rotate([this.get("rotationX", 0), this.get("rotationY", 0), this.get("rotationZ", 0)]),
                this.markDirtyProjection()),
                (this.isDirty("pinchZoom") || this.get("panX") || this.get("panY")) && this._setUpTouch()
            }
            _fitMap() {
                const t = this.get("projection");
                let e = this.innerWidth()
                  , n = this.innerHeight();
                if (e > 0 && n > 0) {
                    t.fitSize([e, n], this._geometryColection),
                    this.setPrivateRaw("mapScale", t.scale());
                    const i = t.translate();
                    this.setRaw("translateX", i[0]),
                    this.setRaw("translateY", i[1]),
                    this._centerX = i[0],
                    this._centerY = i[1];
                    const o = this.getPrivate("geoPath");
                    this._mapBounds = o.bounds(this._geometryColection),
                    this._geoCentroid = xi(this._geometryColection);
                    const r = Si(this._geometryColection);
                    if (this._geoBounds = r,
                    this._geometryColection.geometries.length > 0) {
                        r.left = Cn.round(this._geoBounds.left, 3),
                        r.right = Cn.round(this._geoBounds.right, 3),
                        r.top = Cn.round(this._geoBounds.top, 3),
                        r.bottom = Cn.round(this._geoBounds.bottom, 3);
                        const t = this._prevGeoBounds;
                        t && !Ci.sameBounds(r, t) && (this._dispatchBounds = !0,
                        this._prevGeoBounds = r)
                    }
                    this._mapFitted = !0
                }
            }
            homeGeoPoint() {
                let t = this.get("homeGeoPoint");
                if (!t) {
                    const e = this.getPrivate("geoPath").bounds(this._geometryColection)
                      , n = e[0][0]
                      , i = e[0][1]
                      , o = e[1][0]
                      , r = e[1][1];
                    t = this.invert({
                        x: n + (o - n) / 2,
                        y: i + (r - i) / 2
                    })
                }
                return t
            }
            goHome(t) {
                this.zoomToGeoPoint(this.homeGeoPoint(), this.get("homeZoomLevel", 1), !0, t, this.get("homeRotationX"), this.get("homeRotationY"))
            }
            _updateChildren() {
                const t = this.get("projection");
                if (t.invert) {
                    let e = this.innerWidth()
                      , n = this.innerHeight();
                    e > 0 && n > 0 && (this._centerLocation = t.invert([this.innerWidth() / 2, this.innerHeight() / 2]))
                }
                super._updateChildren()
            }
            _afterChanged() {
                if (super._afterChanged(),
                this._dispatchBounds) {
                    this._dispatchBounds = !1;
                    const t = "geoboundschanged";
                    this.events.isEnabled(t) && this.events.dispatch(t, {
                        type: t,
                        target: this
                    })
                }
            }
            _setUpTouch() {
                this.chartContainer._display.cancelTouch || (this.chartContainer._display.cancelTouch = !!(this.get("pinchZoom") || this.get("panX") || this.get("panY")))
            }
            markDirtyGeometries() {
                this._dirtyGeometries = !0,
                this.markDirty()
            }
            markDirtyProjection() {
                this.series.each((t => {
                    t.markDirtyProjection()
                }
                ))
            }
            _afterNew() {
                this._defaultThemes.push(le.new(this._root)),
                this._settings.themeTags = Ci.mergeTags(this._settings.themeTags, ["map"]),
                this.children.push(this.bulletsContainer),
                super._afterNew(),
                this._makeGeoPath(),
                this.chartContainer.children.push(this.seriesContainer),
                null == this.get("translateX") && this.set("translateX", this.width() / 2),
                null == this.get("translateY") && this.set("translateY", this.height() / 2),
                this.chartContainer.set("interactive", !0),
                this.chartContainer.set("interactiveChildren", !1),
                this.chartContainer.set("background", ge.A.new(this._root, {
                    themeTags: ["map", "background"],
                    fill: Nn.Il.fromHex(0),
                    fillOpacity: 0
                })),
                this._disposers.push(this.chartContainer.events.on("pointerdown", (t => {
                    this._handleChartDown(t)
                }
                ))),
                this._disposers.push(this.chartContainer.events.on("globalpointerup", (t => {
                    this._handleChartUp(t)
                }
                ))),
                this._disposers.push(this.chartContainer.events.on("globalpointermove", (t => {
                    this._handleChartMove(t)
                }
                )));
                let t = !1;
                for (let e = 0; e < jn.i_.licenses.length; e++)
                    jn.i_.licenses[e].match(/^AM5M.{5,}/i) && (t = !0);
                t || this._root._showBranding(),
                this._setUpTouch()
            }
            _handleChartDown(t) {
                this._downZoomLevel = this.get("zoomLevel", 1);
                let e = r.keys(this.chartContainer._downPoints).length;
                if (1 == e) {
                    const n = this.chartContainer._downPoints[1];
                    n && n.x == t.point.x && n.y == t.point.y && (e = 0)
                }
                if (e > 0) {
                    this._downTranslateX = this.get("translateX"),
                    this._downTranslateY = this.get("translateY"),
                    this._downRotationX = this.get("rotationX"),
                    this._downRotationY = this.get("rotationY"),
                    this._downRotationZ = this.get("rotationZ");
                    const t = this.chartContainer._getDownPointId();
                    if (t) {
                        let e = this._movePoints[t];
                        e && (this.chartContainer._downPoints[t] = e)
                    }
                } else if (0 == e) {
                    let e = this.chartContainer.get("background");
                    if (e && e.events.enableType("click"),
                    this.get("panX") || this.get("panY")) {
                        this._za && this._za.stop(),
                        this._txa && this._txa.stop(),
                        this._tya && this._tya.stop(),
                        this._rxa && this._rxa.stop(),
                        this._rya && this._rya.stop();
                        const e = this.chartContainer._display.toLocal(t.point);
                        this._downTranslateX = this.get("translateX"),
                        this._downTranslateY = this.get("translateY"),
                        this._downRotationX = this.get("rotationX"),
                        this._downRotationY = this.get("rotationY"),
                        this._downRotationZ = this.get("rotationZ");
                        let n = this.get("projection");
                        if (n.invert) {
                            let t = n.invert([e.x, e.y])
                              , i = n.invert([e.x + 1, e.y + 1]);
                            t && i && (this._pLon = Math.abs(i[0] - t[0]),
                            this._pLat = Math.abs(i[1] - t[1]))
                        }
                    }
                }
            }
            invert(t) {
                let e = this.get("projection");
                if (e.invert) {
                    const n = e.invert([t.x, t.y]);
                    if (n)
                        return {
                            longitude: n[0],
                            latitude: n[1]
                        }
                }
                return {
                    longitude: 0,
                    latitude: 0
                }
            }
            convert(t, e, n) {
                let i, o = this.get("projection");
                if (o.rotate || (e = void 0,
                n = void 0),
                null != e || null != n) {
                    null == e && (e = 0),
                    null == n && (n = 0);
                    let r = o.rotate();
                    o.rotate([e, n, 0]),
                    i = o([t.longitude, t.latitude]),
                    o.rotate(r)
                } else
                    i = o([t.longitude, t.latitude]);
                return i ? {
                    x: i[0],
                    y: i[1]
                } : {
                    x: 0,
                    y: 0
                }
            }
            _handleChartUp(t) {
                this.chartContainer._downPoints = {}
            }
            _handlePinch() {
                const t = this.chartContainer;
                let e = 0
                  , n = []
                  , i = [];
                if (r.each(t._downPoints, ( (t, o) => {
                    n[e] = o;
                    let r = this._movePoints[t];
                    r && (i[e] = r),
                    e++
                }
                )),
                n.length > 1 && i.length > 1) {
                    const e = t._display;
                    let o = n[0]
                      , r = n[1]
                      , a = i[0]
                      , s = i[1];
                    if (o && r && a && s) {
                        o = e.toLocal(o),
                        r = e.toLocal(r),
                        a = e.toLocal(a),
                        s = e.toLocal(s);
                        let t = Math.hypot(r.x - o.x, r.y - o.y)
                          , n = Math.hypot(s.x - a.x, s.y - a.y) / t * this._downZoomLevel;
                        n = Cn.fitToRange(n, this.get("minZoomLevel", 1), this.get("maxZoomLevel", 32));
                        let i = {
                            x: a.x + (s.x - a.x) / 2,
                            y: a.y + (s.y - a.y) / 2
                        }
                          , l = {
                            x: o.x + (r.x - o.x) / 2,
                            y: o.y + (r.y - o.y) / 2
                        }
                          , u = this._downTranslateX || 0
                          , c = this._downTranslateY || 0
                          , h = this._downZoomLevel
                          , p = i.x - (-u + l.x) / h * n
                          , f = i.y - (-c + l.y) / h * n;
                        this.set("zoomLevel", n),
                        this.set("translateX", p),
                        this.set("translateY", f)
                    }
                }
            }
            _handleChartMove(t) {
                const e = this.chartContainer;
                let n = e._getDownPoint();
                const i = e._getDownPointId()
                  , o = t.originalEvent.pointerId;
                if (this.get("pinchZoom") && o && (this._movePoints[o] = t.point,
                r.keys(e._downPoints).length > 1))
                    this._handlePinch();
                else if ((!i || !o || o == i) && n) {
                    const i = this.get("panX")
                      , o = this.get("panY");
                    if ("none" != i || "none" != o) {
                        const r = e._display;
                        let a = r.toLocal(t.point);
                        n = r.toLocal(n);
                        let l = this._downTranslateX
                          , u = this._downTranslateY;
                        if (Math.hypot(n.x - a.x, n.y - a.y) > 5) {
                            let t = e.get("background");
                            if (t && t.events.disableType("click"),
                            s.isNumber(l) && s.isNumber(u)) {
                                let t = this.get("projection");
                                const e = this.get("zoomLevel", 1)
                                  , r = this.get("maxPanOut", .4)
                                  , s = this._mapBounds
                                  , c = this.width()
                                  , h = this.height()
                                  , p = s[1][0] - s[0][0]
                                  , f = s[1][1] - s[0][1];
                                if ("translateX" == i) {
                                    l += a.x - n.x;
                                    const t = c / 2 - (c / 2 - this._centerX) * e;
                                    l = Math.min(l, t + p * r * e),
                                    l = Math.max(l, t - p * r * e)
                                }
                                if ("translateY" == o) {
                                    u += a.y - n.y;
                                    const t = h / 2 - (h / 2 - this._centerY) * e;
                                    u = Math.min(u, t + f * r * e),
                                    u = Math.max(u, t - f * r * e)
                                }
                                if (this.set("translateX", l),
                                this.set("translateY", u),
                                t.invert) {
                                    let e = t.invert([n.x, n.y]);
                                    location && e && ("rotateX" == i && this.set("rotationX", this._downRotationX - (n.x - a.x) * this._pLon),
                                    "rotateY" == o && this.set("rotationY", this._downRotationY + (n.y - a.y) * this._pLat))
                                }
                            }
                        }
                    }
                }
            }
            _handleWheelRotateY(t, e, n) {
                this._rya = this.animate({
                    key: "rotationY",
                    to: this.get("rotationY", 0) - t,
                    duration: e,
                    easing: n
                })
            }
            _handleWheelRotateX(t, e, n) {
                this._rxa = this.animate({
                    key: "rotationX",
                    to: this.get("rotationX", 0) - t,
                    duration: e,
                    easing: n
                })
            }
            _handleWheelZoom(t, e) {
                let n = this.get("zoomStep", 2)
                  , i = this.get("zoomLevel", 1)
                  , o = i;
                t > 0 ? o = i / n : t < 0 && (o = i * n),
                o != i && this.zoomToPoint(e, o)
            }
            zoomToGeoBounds(t, e, n, i) {
                t.right < t.left && (t.right = 180,
                t.left = -180);
                const o = this.getPrivate("geoPath").bounds(this._geometryColection);
                let r = this.convert({
                    longitude: t.left,
                    latitude: t.top
                }, n, i)
                  , a = this.convert({
                    longitude: t.right,
                    latitude: t.bottom
                }, n, i);
                r.y < o[0][1] && (r.y = o[0][1]),
                a.y > o[1][1] && (a.y = o[1][1]);
                let s = this.get("zoomLevel", 1)
                  , l = r.x
                  , u = a.x
                  , c = r.y
                  , h = a.y
                  , p = this.seriesContainer
                  , f = .9 * Math.min(p.innerWidth() / (u - l) * s, p.innerHeight() / (h - c) * s)
                  , g = l + (u - l) / 2
                  , d = c + (h - c) / 2
                  , m = this.invert({
                    x: g,
                    y: d
                });
                return null == n && null == i || this.rotate(n, i),
                this.zoomToGeoPoint(m, f, !0, e)
            }
            zoomToPoint(t, e, n, i) {
                e && (e = Cn.fitToRange(e, this.get("minZoomLevel", 1), this.get("maxZoomLevel", 32))),
                s.isNumber(i) || (i = this.get("animationDuration", 0));
                const o = this.get("animationEasing")
                  , r = this.get("zoomLevel", 1);
                this.get("centerMapOnZoomOut") && e == this.get("homeZoomLevel", 1) && (t = this.convert(this.homeGeoPoint()),
                n = !0);
                let a = t.x
                  , l = t.y
                  , u = this.get("translateX", 0)
                  , c = this.get("translateY", 0)
                  , h = a
                  , p = l;
                n && (h = this.width() / 2,
                p = this.height() / 2);
                let f = h - (a - u) / r * e
                  , g = p - (l - c) / r * e;
                return this._txa = this.animate({
                    key: "translateX",
                    to: f,
                    duration: i,
                    easing: o
                }),
                this._tya = this.animate({
                    key: "translateY",
                    to: g,
                    duration: i,
                    easing: o
                }),
                this._za = this.animate({
                    key: "zoomLevel",
                    to: e,
                    duration: i,
                    easing: o
                }),
                r != e && this._root.readerAlert(this._t("Zoom level changed to %1", this._root.locale, s.numberToString(e))),
                this._za
            }
            zoomToGeoPoint(t, e, n, i, o, r) {
                let a = this.convert(t, o, r);
                if (null == o && null == r || this.rotate(o, r, i),
                a)
                    return this.zoomToPoint(a, e, n, i)
            }
            rotate(t, e, n) {
                if (this.get("projection").rotate) {
                    s.isNumber(n) || (n = this.get("animationDuration", 0));
                    const i = this.get("animationEasing");
                    null != t && this.animate({
                        key: "rotationX",
                        to: t,
                        duration: n,
                        easing: i
                    }),
                    null != e && this.animate({
                        key: "rotationY",
                        to: e,
                        duration: n,
                        easing: i
                    })
                }
            }
            zoomIn() {
                return this.zoomToPoint({
                    x: this.width() / 2,
                    y: this.height() / 2
                }, this.get("zoomLevel", 1) * this.get("zoomStep", 2))
            }
            zoomOut() {
                return this.zoomToPoint({
                    x: this.width() / 2,
                    y: this.height() / 2
                }, this.get("zoomLevel", 1) / this.get("zoomStep", 2))
            }
            _clearDirty() {
                super._clearDirty(),
                this._dirtyGeometries = !1,
                this._mapFitted = !1
            }
            getArea(t) {
                const e = this.getPrivate("geoPath")
                  , n = t.get("geometry");
                return n ? e.area(n) : 0
            }
        }
        Object.defineProperty(Ei, "className", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: "MapChart"
        }),
        Object.defineProperty(Ei, "classNames", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: fe.j.classNames.concat([Ei.className])
        });
        class Ii extends a {
            constructor() {
                super(...arguments),
                Object.defineProperty(this, "_types", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: ["Point", "MultiPoint"]
                }),
                Object.defineProperty(this, "_lineChangedDp", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: void 0
                })
            }
            _afterNew() {
                this.fields.push("polygonId", "lineId", "longitude", "latitude", "fixed"),
                super._afterNew()
            }
            markDirtyProjection() {
                this.markDirty()
            }
            markDirtyValues(t) {
                super.markDirtyValues(),
                t && this._positionBullets(t)
            }
            processDataItem(t) {
                super.processDataItem(t);
                let e = t.get("geometry");
                if (e) {
                    if ("Point" == e.type) {
                        const n = e.coordinates;
                        n && (t.set("longitude", n[0]),
                        t.set("latitude", n[1]))
                    } else if ("MultiPoint" == e.type) {
                        const n = e.coordinates;
                        n && n[0] && (t.set("longitude", n[0][0]),
                        t.set("latitude", n[0][1]))
                    }
                } else
                    e = {
                        type: "Point",
                        coordinates: [t.get("longitude", 0), t.get("latitude", 0)]
                    },
                    t.set("geometry", e);
                this._addGeometry(e, this)
            }
            _makeBullets(t) {
                t.bullets = [],
                this.bullets.each((e => {
                    const n = t.get("geometry");
                    if (n)
                        if ("Point" == n.type)
                            this._setBulletParent(this._makeBullet(t, e));
                        else if (n.type = "MultiPoint") {
                            let i = 0;
                            o.each(n.coordinates, ( () => {
                                this._setBulletParent(this._makeBullet(t, e, i)),
                                i++
                            }
                            ))
                        }
                }
                ))
            }
            _setBulletParent(t) {
                if (t) {
                    const e = t.get("sprite")
                      , n = this.chart;
                    if (e && n) {
                        const t = e.dataItem;
                        t && (t.get("fixed") ? e.parent != n.bulletsContainer && n.bulletsContainer.children.moveValue(e) : e.parent != this.bulletsContainer && this.bulletsContainer.children.moveValue(e))
                    }
                }
            }
            _positionBullet(t) {
                const e = t.get("sprite");
                if (e) {
                    const n = e.dataItem;
                    if (n && n.get("fixed"))
                        return;
                    const i = n.get("latitude")
                      , o = n.get("longitude")
                      , r = n.get("lineDataItem")
                      , a = n.get("fixed")
                      , l = this.chart;
                    let u;
                    if (r)
                        u = r.get("mapLine");
                    else {
                        const t = n.get("lineId");
                        t && l && l.series.each((e => {
                            if (e.isType("MapLineSeries")) {
                                let i = e.getDataItemById(t);
                                i && (n.set("lineDataItem", i),
                                u = i.get("mapLine"))
                            }
                        }
                        ))
                    }
                    this._lineChangedDp && this._lineChangedDp.dispose(),
                    u && (this._lineChangedDp = u.events.on("linechanged", ( () => {
                        this._positionBullets(n)
                    }
                    )));
                    const c = n.get("polygonDataItem");
                    let h;
                    if (c)
                        h = c.get("mapPolygon");
                    else {
                        const t = n.get("polygonId");
                        t && l && l.series.each((e => {
                            if (e.isType("MapPolygonSeries")) {
                                let i = e.getDataItemById(t);
                                i && (n.set("polygonDataItem", i),
                                h = i.get("mapPolygon"))
                            }
                        }
                        ))
                    }
                    const p = n.get("positionOnLine");
                    let f, g;
                    if (h) {
                        let t = h.visualCentroid();
                        f = [t.longitude, t.latitude],
                        n.setRaw("longitude", t.longitude),
                        n.setRaw("latitude", t.latitude)
                    } else if (u && s.isNumber(p)) {
                        let e = u.positionToGeoPoint(p);
                        if (f = [e.longitude, e.latitude],
                        n.get("autoRotate", t.get("autoRotate")) && l) {
                            const t = u.positionToGeoPoint(p - .002)
                              , e = u.positionToGeoPoint(p + .002)
                              , n = l.convert(t)
                              , i = l.convert(e);
                            g = Cn.getAngle(n, i)
                        }
                        n.setRaw("longitude", e.longitude),
                        n.setRaw("latitude", e.latitude)
                    } else if (s.isNumber(o) && s.isNumber(i))
                        f = [o, i];
                    else {
                        const e = n.get("geometry");
                        if (e)
                            if ("Point" == e.type)
                                this._positionBulletReal(t, e, e.coordinates, g);
                            else if ("MultiPoint" == e.type) {
                                let n = t._index || 0;
                                f = e.coordinates[n]
                            }
                    }
                    !a && f && this._positionBulletReal(t, {
                        type: "Point",
                        coordinates: f
                    }, f, g)
                }
            }
            _positionBulletReal(t, e, n, i) {
                const o = t.get("sprite")
                  , r = this.chart;
                if (r) {
                    const a = r.get("projection")
                      , s = r.getPrivate("geoPath")
                      , l = o.dataItem
                      , u = a(n);
                    u && o.setAll({
                        x: u[0],
                        y: u[1]
                    });
                    let c = !0;
                    s(e) ? this.get("clipFront") && (c = !1) : this.get("clipBack") && (c = !1),
                    o.setPrivate("visible", c),
                    l && null != i && l.get("autoRotate", t.get("autoRotate")) && o.set("rotation", i + l.get("autoRotateAngle", t.get("autoRotateAngle", 0)))
                }
            }
            zoomToDataItem(t, e, n) {
                const i = this.chart;
                if (i) {
                    const o = t.get("longitude", 0)
                      , r = t.get("latitude", 0);
                    return n ? i.zoomToGeoPoint({
                        longitude: o,
                        latitude: r
                    }, e, !0, void 0, -o, -r) : i.zoomToGeoPoint({
                        longitude: o,
                        latitude: r
                    }, e, !0)
                }
            }
            disposeDataItem(t) {
                const e = this.chart;
                e && e.series.each((e => {
                    e.isType("MapLineSeries") && o.each(e.dataItems, (n => {
                        const i = n.get("pointsToConnect");
                        i && o.each(i, (r => {
                            r == t && (o.remove(i, r),
                            e.markDirtyValues(n))
                        }
                        ))
                    }
                    ))
                }
                )),
                super.disposeDataItem(t)
            }
            _excludeDataItem(t) {
                super._excludeDataItem(t);
                const e = t.bullets;
                e && o.each(e, (t => {
                    const e = t.get("sprite");
                    e && e.setPrivate("visible", !1)
                }
                ))
            }
            _unexcludeDataItem(t) {
                super._unexcludeDataItem(t);
                const e = t.bullets;
                e && o.each(e, (t => {
                    const e = t.get("sprite");
                    e && e.setPrivate("visible", !0)
                }
                ))
            }
            _notIncludeDataItem(t) {
                super._notIncludeDataItem(t);
                const e = t.bullets;
                e && o.each(e, (t => {
                    const e = t.get("sprite");
                    e && e.setPrivate("visible", !1)
                }
                ))
            }
            _unNotIncludeDataItem(t) {
                super._unNotIncludeDataItem(t);
                const e = t.bullets;
                e && o.each(e, (t => {
                    const e = t.get("sprite");
                    e && e.setPrivate("visible", !0)
                }
                ))
            }
        }
        Object.defineProperty(Ii, "className", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: "MapPointSeries"
        }),
        Object.defineProperty(Ii, "classNames", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: a.classNames.concat([Ii.className])
        });
        var Oi = n(5417)
          , Ti = n.n(Oi);
        class Li extends u.T {
            constructor() {
                super(...arguments),
                Object.defineProperty(this, "_projectionDirty", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: !1
                }),
                Object.defineProperty(this, "series", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: void 0
                })
            }
            _beforeChanged() {
                if (super._beforeChanged(),
                this._projectionDirty || this.isDirty("geometry") || this.isDirty("precision")) {
                    const t = this.get("geometry");
                    if (t) {
                        const e = this.series;
                        if (e) {
                            const n = e.projection();
                            n && n.precision(this.get("precision", .5));
                            const i = e.geoPath();
                            i && (this._clear = !0,
                            this.set("draw", (e => {
                                i.context(this._display),
                                i(t),
                                i.context(null)
                            }
                            )),
                            this.isHover() && this.showTooltip())
                        }
                    }
                }
            }
            markDirtyProjection() {
                this.markDirty(),
                this._projectionDirty = !0
            }
            _clearDirty() {
                super._clearDirty(),
                this._projectionDirty = !1
            }
            geoCentroid() {
                const t = this.get("geometry");
                return t ? xi(t) : {
                    latitude: 0,
                    longitude: 0
                }
            }
            visualCentroid() {
                let t = 0
                  , e = [];
                const n = this.get("geometry");
                if (n) {
                    if ("Polygon" == n.type)
                        e = n.coordinates;
                    else if ("MultiPolygon" == n.type)
                        for (let i = 0; i < n.coordinates.length; i++) {
                            let o = n.coordinates[i]
                              , r = ci({
                                type: "Polygon",
                                coordinates: o
                            });
                            r > t && (e = o,
                            t = r)
                        }
                    let i = Ti()(e);
                    return {
                        longitude: i[0],
                        latitude: i[1]
                    }
                }
                return {
                    longitude: 0,
                    latitude: 0
                }
            }
            _getTooltipPoint() {
                const t = this.series;
                if (t) {
                    const e = t.projection();
                    if (e) {
                        const t = this.visualCentroid()
                          , n = e([t.longitude, t.latitude]);
                        if (n)
                            return {
                                x: n[0],
                                y: n[1]
                            }
                    }
                }
                return {
                    x: 0,
                    y: 0
                }
            }
        }
        Object.defineProperty(Li, "className", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: "MapPolygon"
        }),
        Object.defineProperty(Li, "classNames", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: u.T.classNames.concat([Li.className])
        });
        class ki extends a {
            constructor() {
                super(...arguments),
                Object.defineProperty(this, "mapPolygons", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: new K.o(tt.YS.new({}),( () => Li._new(this._root, {}, [this.mapPolygons.template])))
                }),
                Object.defineProperty(this, "_types", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: ["Polygon", "MultiPolygon"]
                })
            }
            makeMapPolygon(t) {
                const e = this.children.push(this.mapPolygons.make());
                return e._setDataItem(t),
                this.mapPolygons.push(e),
                e
            }
            markDirtyProjection() {
                o.each(this.dataItems, (t => {
                    let e = t.get("mapPolygon");
                    e && e.markDirtyProjection()
                }
                ))
            }
            _prepareChildren() {
                super._prepareChildren(),
                this.isDirty("fill") && this.mapPolygons.template.set("fill", this.get("fill")),
                this.isDirty("stroke") && this.mapPolygons.template.set("stroke", this.get("stroke"))
            }
            processDataItem(t) {
                super.processDataItem(t);
                let e = t.get("mapPolygon");
                e || (e = this.makeMapPolygon(t)),
                t.set("mapPolygon", e);
                let n = t.get("geometry");
                if (n) {
                    if (this.get("reverseGeodata") && n.coordinates)
                        for (let t = 0; t < n.coordinates.length; t++)
                            if ("MultiPolygon" == n.type)
                                for (let e = 0; e < n.coordinates[t].length; e++)
                                    n.coordinates[t][e].reverse();
                            else
                                n.coordinates[t].reverse();
                    e.set("geometry", n)
                }
                e.series = this,
                this._addGeometry(t.get("geometry"), this)
            }
            disposeDataItem(t) {
                super.disposeDataItem(t);
                const e = t.get("mapPolygon");
                e && (this.mapPolygons.removeValue(e),
                e.dispose()),
                this._removeGeometry(t.get("geometry"))
            }
            _excludeDataItem(t) {
                super._excludeDataItem(t);
                const e = t.get("mapPolygon");
                e && e.setPrivate("visible", !1)
            }
            _unexcludeDataItem(t) {
                super._unexcludeDataItem(t);
                const e = t.get("mapPolygon");
                e && e.setPrivate("visible", !0)
            }
            _notIncludeDataItem(t) {
                super._notIncludeDataItem(t);
                const e = t.get("mapPolygon");
                e && e.setPrivate("visible", !1)
            }
            _unNotIncludeDataItem(t) {
                super._unNotIncludeDataItem(t);
                const e = t.get("mapPolygon");
                e && e.setPrivate("visible", !0)
            }
            markDirtyValues(t) {
                if (super.markDirtyValues(),
                t) {
                    const e = t.get("mapPolygon");
                    e && e.set("geometry", t.get("geometry"))
                }
            }
            zoomToDataItem(t, e) {
                const n = t.get("mapPolygon");
                if (n) {
                    const t = n.get("geometry")
                      , i = this.chart;
                    if (t && i) {
                        if (e) {
                            const e = xi(t);
                            return i.rotate(-e.longitude, -e.latitude),
                            i.zoomToGeoBounds(Si(t), void 0, -e.longitude, -e.latitude)
                        }
                        return i.zoomToGeoBounds(Si(t))
                    }
                }
            }
        }
        Object.defineProperty(ki, "className", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: "MapPolygonSeries"
        }),
        Object.defineProperty(ki, "classNames", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: a.classNames.concat([ki.className])
        });
        var zi = n(8777)
          , Ri = n(8054)
          , Gi = n(7449);
        class Yi extends zi.W {
            constructor() {
                super(...arguments),
                Object.defineProperty(this, "plusButton", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: this.children.push(Ri.z.new(this._root, {
                        width: 36,
                        height: 36,
                        themeTags: ["plus"]
                    }))
                }),
                Object.defineProperty(this, "minusButton", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: this.children.push(Ri.z.new(this._root, {
                        width: 36,
                        height: 36,
                        themeTags: ["minus"]
                    }))
                }),
                Object.defineProperty(this, "_disposer", {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: void 0
                })
            }
            _afterNew() {
                super._afterNew(),
                this.set("position", "absolute"),
                this.set("layout", this._root.verticalLayout),
                this.set("themeTags", ["zoomcontrol"]),
                this.plusButton.setAll({
                    icon: u.T.new(this._root, {
                        themeTags: ["icon"]
                    }),
                    layout: void 0
                }),
                this.minusButton.setAll({
                    icon: u.T.new(this._root, {
                        themeTags: ["icon"]
                    }),
                    layout: void 0
                })
            }
            _prepareChildren() {
                if (super._prepareChildren(),
                this.isPrivateDirty("chart")) {
                    const t = this.getPrivate("chart")
                      , e = this._prevPrivateSettings.chart;
                    t && (this._disposer = new Gi.FV([this.plusButton.events.on("click", ( () => {
                        t.zoomIn()
                    }
                    )), this.minusButton.events.on("click", ( () => {
                        t.zoomOut()
                    }
                    ))])),
                    e && this._disposer && this._disposer.dispose()
                }
            }
        }
        function Bi(t, e) {
            return [P(e) * N(t), N(e)]
        }
        function Xi() {
            return ie(Bi).scale(249.5).clipAngle(90.000001)
        }
        function Ai(t, e) {
            return [t, e]
        }
        function Zi() {
            return ie(Ai).scale(152.63)
        }
        function Wi(t, e) {
            var n = N(t)
              , i = (n + N(e)) / 2;
            if (_(i) < h)
                return function(t) {
                    var e = P(t);
                    function n(t, n) {
                        return [t * e, N(n) / e]
                    }
                    return n.invert = function(t, n) {
                        return [t / e, I(n * e)]
                    }
                    ,
                    n
                }(t);
            var o = 1 + n * (2 * i - n)
              , r = C(o) / i;
            function a(t, e) {
                var n = C(o - 2 * i * N(e)) / i;
                return [n * N(t *= i), r - n * P(t)]
            }
            return a.invert = function(t, e) {
                var n = r - e
                  , a = w(t, _(n)) * j(n);
                return n * i < 0 && (a -= f * j(t) * j(n)),
                [a / i, I((o - (t * t + n * n) * i * i) / (2 * i))]
            }
            ,
            a
        }
        function Fi() {
            return function(t) {
                var e = 0
                  , n = f / 3
                  , i = oe(t)
                  , o = i(e, n);
                return o.parallels = function(t) {
                    return arguments.length ? i(e = t[0] * v, n = t[1] * v) : [e * y, n * y]
                }
                ,
                o
            }(Wi).scale(155.424).center([0, 33.6442])
        }
        function Vi() {
            var t, e, n, i, o, r, a = Fi().parallels([29.5, 45.5]).scale(1070).translate([480, 250]).rotate([96, 0]).center([-.6, 38.7]), s = Fi().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), l = Fi().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), u = {
                point: function(t, e) {
                    r = [t, e]
                }
            };
            function c(t) {
                var e = t[0]
                  , a = t[1];
                return r = null,
                n.point(e, a),
                r || (i.point(e, a),
                r) || (o.point(e, a),
                r)
            }
            function p() {
                return t = e = null,
                c
            }
            return c.invert = function(t) {
                var e = a.scale()
                  , n = a.translate()
                  , i = (t[0] - n[0]) / e
                  , o = (t[1] - n[1]) / e;
                return (o >= .12 && o < .234 && i >= -.425 && i < -.214 ? s : o >= .166 && o < .234 && i >= -.214 && i < -.115 ? l : a).invert(t)
            }
            ,
            c.stream = function(n) {
                return t && e === n ? t : (i = [a.stream(e = n), s.stream(n), l.stream(n)],
                o = i.length,
                t = {
                    point: function(t, e) {
                        for (var n = -1; ++n < o; )
                            i[n].point(t, e)
                    },
                    sphere: function() {
                        for (var t = -1; ++t < o; )
                            i[t].sphere()
                    },
                    lineStart: function() {
                        for (var t = -1; ++t < o; )
                            i[t].lineStart()
                    },
                    lineEnd: function() {
                        for (var t = -1; ++t < o; )
                            i[t].lineEnd()
                    },
                    polygonStart: function() {
                        for (var t = -1; ++t < o; )
                            i[t].polygonStart()
                    },
                    polygonEnd: function() {
                        for (var t = -1; ++t < o; )
                            i[t].polygonEnd()
                    }
                });
                var i, o
            }
            ,
            c.precision = function(t) {
                return arguments.length ? (a.precision(t),
                s.precision(t),
                l.precision(t),
                p()) : a.precision()
            }
            ,
            c.scale = function(t) {
                return arguments.length ? (a.scale(t),
                s.scale(.35 * t),
                l.scale(t),
                c.translate(a.translate())) : a.scale()
            }
            ,
            c.translate = function(t) {
                if (!arguments.length)
                    return a.translate();
                var e = a.scale()
                  , r = +t[0]
                  , c = +t[1];
                return n = a.translate(t).clipExtent([[r - .455 * e, c - .238 * e], [r + .455 * e, c + .238 * e]]).stream(u),
                i = s.translate([r - .307 * e, c + .201 * e]).clipExtent([[r - .425 * e + h, c + .12 * e + h], [r - .214 * e - h, c + .234 * e - h]]).stream(u),
                o = l.translate([r - .205 * e, c + .212 * e]).clipExtent([[r - .214 * e + h, c + .166 * e + h], [r - .115 * e - h, c + .234 * e - h]]).stream(u),
                p()
            }
            ,
            c.fitExtent = function(t, e) {
                return Ht(c, t, e)
            }
            ,
            c.fitSize = function(t, e) {
                return Qt(c, t, e)
            }
            ,
            c.fitWidth = function(t, e) {
                return Ut(c, t, e)
            }
            ,
            c.fitHeight = function(t, e) {
                return qt(c, t, e)
            }
            ,
            c.scale(1070)
        }
        Object.defineProperty(Yi, "className", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: "ZoomControl"
        }),
        Object.defineProperty(Yi, "classNames", {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: zi.W.classNames.concat([Yi.className])
        }),
        Bi.invert = function(t) {
            return function(e, n) {
                var i = C(e * e + n * n)
                  , o = t(i)
                  , r = N(o)
                  , a = P(o);
                return [w(e * r, i * a), I(i && n * r / i)]
            }
        }(I),
        Ai.invert = Ai;
        var Ji = 1.340264
          , $i = -.081106
          , Hi = 893e-6
          , Qi = .003796
          , Ui = C(3) / 2;
        function qi(t, e) {
            var n = I(Ui * N(e))
              , i = n * n
              , o = i * i * i;
            return [t * P(n) / (Ui * (Ji + 3 * $i * i + o * (7 * Hi + 9 * Qi * i))), n * (Ji + $i * i + o * (Hi + Qi * i))]
        }
        function Ki() {
            return ie(qi).scale(177.158)
        }
        function to(t, e) {
            var n = e * e
              , i = n * n;
            return [t * (.8707 - .131979 * n + i * (i * (.003971 * n - .001529 * i) - .013791)), e * (1.007226 + n * (.015085 + i * (.028874 * n - .044475 - .005916 * i)))]
        }
        function eo() {
            return ie(to).scale(175.295)
        }
        qi.invert = function(t, e) {
            for (var n, i = e, o = i * i, r = o * o * o, a = 0; a < 12 && (r = (o = (i -= n = (i * (Ji + $i * o + r * (Hi + Qi * o)) - e) / (Ji + 3 * $i * o + r * (7 * Hi + 9 * Qi * o))) * i) * o * o,
            !(_(n) < p)); ++a)
                ;
            return [Ui * t * (Ji + 3 * $i * o + r * (7 * Hi + 9 * Qi * o)) / P(i), I(N(i) / Ui)]
        }
        ,
        to.invert = function(t, e) {
            var n, i = e, o = 25;
            do {
                var r = i * i
                  , a = r * r;
                i -= n = (i * (1.007226 + r * (.015085 + a * (.028874 * r - .044475 - .005916 * a))) - e) / (1.007226 + r * (.045255 + a * (.259866 * r - .311325 - .005916 * 11 * a)))
            } while (_(n) > h && --o > 0);
            return [t / (.8707 + (r = i * i) * (r * (r * r * r * (.003971 - .001529 * r) - .013791) - .131979)), i]
        }
    },
    5417: function(t, e, n) {
        var i = n(2640);
        function o(t, e, n) {
            var o, s, l, u;
            e = e || 1;
            for (var c = 0; c < t[0].length; c++) {
                var h = t[0][c];
                (!c || h[0] < o) && (o = h[0]),
                (!c || h[1] < s) && (s = h[1]),
                (!c || h[0] > l) && (l = h[0]),
                (!c || h[1] > u) && (u = h[1])
            }
            var p = l - o
              , f = u - s
              , g = Math.min(p, f)
              , d = g / 2;
            if (0 === g) {
                var m = [o, s];
                return m.distance = 0,
                m
            }
            for (var y = new i(void 0,r), v = o; v < l; v += g)
                for (var _ = s; _ < u; _ += g)
                    y.push(new a(v + d,_ + d,d,t));
            var b = function(t) {
                for (var e = 0, n = 0, i = 0, o = t[0], r = 0, s = o.length, l = s - 1; r < s; l = r++) {
                    var u = o[r]
                      , c = o[l]
                      , h = u[0] * c[1] - c[0] * u[1];
                    n += (u[0] + c[0]) * h,
                    i += (u[1] + c[1]) * h,
                    e += 3 * h
                }
                return 0 === e ? new a(o[0][0],o[0][1],0,t) : new a(n / e,i / e,0,t)
            }(t)
              , w = new a(o + p / 2,s + f / 2,0,t);
            w.d > b.d && (b = w);
            for (var P = y.length; y.length; ) {
                var x = y.pop();
                x.d > b.d && (b = x,
                n && console.log("found best %d after %d probes", Math.round(1e4 * x.d) / 1e4, P)),
                x.max - b.d <= e || (d = x.h / 2,
                y.push(new a(x.x - d,x.y - d,d,t)),
                y.push(new a(x.x + d,x.y - d,d,t)),
                y.push(new a(x.x - d,x.y + d,d,t)),
                y.push(new a(x.x + d,x.y + d,d,t)),
                P += 4)
            }
            n && (console.log("num probes: " + P),
            console.log("best distance: " + b.d));
            var D = [b.x, b.y];
            return D.distance = b.d,
            D
        }
        function r(t, e) {
            return e.max - t.max
        }
        function a(t, e, n, i) {
            this.x = t,
            this.y = e,
            this.h = n,
            this.d = function(t, e, n) {
                for (var i = !1, o = 1 / 0, r = 0; r < n.length; r++)
                    for (var a = n[r], l = 0, u = a.length, c = u - 1; l < u; c = l++) {
                        var h = a[l]
                          , p = a[c];
                        h[1] > e != p[1] > e && t < (p[0] - h[0]) * (e - h[1]) / (p[1] - h[1]) + h[0] && (i = !i),
                        o = Math.min(o, s(t, e, h, p))
                    }
                return 0 === o ? 0 : (i ? 1 : -1) * Math.sqrt(o)
            }(t, e, i),
            this.max = this.d + this.h * Math.SQRT2
        }
        function s(t, e, n, i) {
            var o = n[0]
              , r = n[1]
              , a = i[0] - o
              , s = i[1] - r;
            if (0 !== a || 0 !== s) {
                var l = ((t - o) * a + (e - r) * s) / (a * a + s * s);
                l > 1 ? (o = i[0],
                r = i[1]) : l > 0 && (o += a * l,
                r += s * l)
            }
            return (a = t - o) * a + (s = e - r) * s
        }
        i.default && (i = i.default),
        t.exports = o,
        t.exports.default = o
    },
    2640: function(t, e, n) {
        n.r(e),
        n.d(e, {
            default: function() {
                return i
            }
        });
        class i {
            constructor(t=[], e=o) {
                if (this.data = t,
                this.length = this.data.length,
                this.compare = e,
                this.length > 0)
                    for (let t = (this.length >> 1) - 1; t >= 0; t--)
                        this._down(t)
            }
            push(t) {
                this.data.push(t),
                this.length++,
                this._up(this.length - 1)
            }
            pop() {
                if (0 === this.length)
                    return;
                const t = this.data[0]
                  , e = this.data.pop();
                return this.length--,
                this.length > 0 && (this.data[0] = e,
                this._down(0)),
                t
            }
            peek() {
                return this.data[0]
            }
            _up(t) {
                const {data: e, compare: n} = this
                  , i = e[t];
                for (; t > 0; ) {
                    const o = t - 1 >> 1
                      , r = e[o];
                    if (n(i, r) >= 0)
                        break;
                    e[t] = r,
                    t = o
                }
                e[t] = i
            }
            _down(t) {
                const {data: e, compare: n} = this
                  , i = this.length >> 1
                  , o = e[t];
                for (; t < i; ) {
                    let i = 1 + (t << 1)
                      , r = e[i];
                    const a = i + 1;
                    if (a < this.length && n(e[a], r) < 0 && (i = a,
                    r = e[a]),
                    n(r, o) >= 0)
                        break;
                    e[t] = r,
                    t = i
                }
                e[t] = o
            }
        }
        function o(t, e) {
            return t < e ? -1 : t > e ? 1 : 0
        }
    },
    2872: function(t, e, n) {
        n.r(e),
        n.d(e, {
            am5map: function() {
                return i
            }
        });
        const i = n(6970)
    }
}, function(t) {
    var e = (2872,
    t(t.s = 2872))
      , n = window;
    for (var i in e)
        n[i] = e[i];
    e.__esModule && Object.defineProperty(n, "__esModule", {
        value: !0
    })
}
]);
!function() {
    var e, t, i, r, n, s = {
        3145: function(e, t, i) {
            "use strict";
            i.d(t, {
                UZ: function() {
                    return s
                },
                cP: function() {
                    return n
                },
                i_: function() {
                    return r
                }
            });
            const r = new class {
                constructor() {
                    Object.defineProperty(this, "version", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "5.4.2"
                    }),
                    Object.defineProperty(this, "licenses", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    }),
                    Object.defineProperty(this, "entitiesById", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "rootElements", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    })
                }
            }
            ;
            function n(e) {
                r.licenses.push(e)
            }
            function s() {
                let e;
                for (; e = r.rootElements.pop(); )
                    e.dispose()
            }
        },
        6493: function(e, t, i) {
            "use strict";
            i.d(t, {
                f: function() {
                    return Ne
                }
            });
            var r = i(8777)
              , n = i(2036)
              , s = i(4431)
              , a = i(1706)
              , o = i(6881)
              , l = i(7449)
              , h = i(5071)
              , u = i(7652);
            class c {
                constructor() {
                    Object.defineProperty(this, "_observer", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_targets", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    }),
                    this._observer = new ResizeObserver((e => {
                        h.each(e, (e => {
                            h.each(this._targets, (t => {
                                t.target === e.target && t.callback()
                            }
                            ))
                        }
                        ))
                    }
                    ))
                }
                addTarget(e, t) {
                    this._observer.observe(e, {
                        box: "border-box"
                    }),
                    this._targets.push({
                        target: e,
                        callback: t
                    })
                }
                removeTarget(e) {
                    this._observer.unobserve(e),
                    h.keepIf(this._targets, (t => t.target !== e))
                }
            }
            class d {
                constructor() {
                    Object.defineProperty(this, "_timer", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: null
                    }),
                    Object.defineProperty(this, "_targets", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    })
                }
                addTarget(e, t) {
                    if (null === this._timer) {
                        let e = null;
                        const t = () => {
                            const i = Date.now();
                            (null === e || i > e + d.delay) && (e = i,
                            h.each(this._targets, (e => {
                                let t = e.target.getBoundingClientRect();
                                t.width === e.size.width && t.height === e.size.height || (e.size = t,
                                e.callback())
                            }
                            ))),
                            0 === this._targets.length ? this._timer = null : this._timer = requestAnimationFrame(t)
                        }
                        ;
                        this._timer = requestAnimationFrame(t)
                    }
                    this._targets.push({
                        target: e,
                        callback: t,
                        size: {
                            width: 0,
                            height: 0,
                            left: 0,
                            right: 0,
                            top: 0,
                            bottom: 0,
                            x: 0,
                            y: 0
                        }
                    })
                }
                removeTarget(e) {
                    h.keepIf(this._targets, (t => t.target !== e)),
                    0 === this._targets.length && null !== this._timer && (cancelAnimationFrame(this._timer),
                    this._timer = null)
                }
            }
            Object.defineProperty(d, "delay", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 200
            });
            let p = null;
            class f {
                constructor(e, t) {
                    Object.defineProperty(this, "_sensor", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_element", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_listener", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_disposed", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    this._sensor = (null === p && (p = "undefined" != typeof ResizeObserver ? new c : new d),
                    p),
                    this._element = e,
                    this._listener = u.onZoom(t),
                    this._sensor.addTarget(e, t)
                }
                isDisposed() {
                    return this._disposed
                }
                dispose() {
                    this._disposed || (this._disposed = !0,
                    this._sensor.removeTarget(this._element),
                    this._listener.dispose())
                }
                get sensor() {
                    return this._sensor
                }
            }
            var g = i(9821)
              , m = i(1479)
              , b = i(7142)
              , _ = i(2876)
              , v = i(780)
              , y = i(6460)
              , w = i(798)
              , x = i(6331)
              , O = i(256)
              , P = i(3100);
            class D extends x.JH {
                _setDefaults() {
                    this.setPrivate("defaultLocale", P.Z),
                    super._setDefaults()
                }
                translate(e, t, ...i) {
                    t || (t = this._root.locale || this.getPrivate("defaultLocale"));
                    let r = e
                      , n = t[e];
                    if (null === n)
                        r = "";
                    else if (null != n)
                        n && (r = n);
                    else if (t !== this.getPrivate("defaultLocale"))
                        return this.translate(e, this.getPrivate("defaultLocale"), ...i);
                    if (i.length)
                        for (let e = i.length, t = 0; t < e; ++t)
                            r = r.split("%" + (t + 1)).join(i[t]);
                    return r
                }
                translateAny(e, t, ...i) {
                    return this.translate(e, t, ...i)
                }
                setTranslationAny(e, t, i) {
                    (i || this._root.locale)[e] = t
                }
                setTranslationsAny(e, t) {
                    O.each(e, ( (e, i) => {
                        this.setTranslationAny(e, i, t)
                    }
                    ))
                }
                translateEmpty(e, t, ...i) {
                    let r = this.translate(e, t, ...i);
                    return r == e ? "" : r
                }
                translateFunc(e, t) {
                    return this._root.locale[e] ? this._root.locale[e] : t !== this.getPrivate("defaultLocale") ? this.translateFunc(e, this.getPrivate("defaultLocale")) : () => ""
                }
                translateAll(e, t) {
                    return this.isDefault() ? e : h.map(e, (e => this.translate(e, t)))
                }
                isDefault() {
                    return this.getPrivate("defaultLocale") === this._root.locale
                }
            }
            var k = i(9770)
              , T = i(3783)
              , M = i(4680)
              , E = i(1112);
            class S {
                constructor(e=1, t=0, i=0, r=1, n=0, s=0) {
                    Object.defineProperty(this, "a", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "b", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "c", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "d", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "tx", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "ty", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    this.a = e,
                    this.b = t,
                    this.c = i,
                    this.d = r,
                    this.tx = n,
                    this.ty = s
                }
                setTransform(e, t, i, r, n, s=1) {
                    this.a = Math.cos(n) * s,
                    this.b = Math.sin(n) * s,
                    this.c = -Math.sin(n) * s,
                    this.d = Math.cos(n) * s,
                    this.tx = e - (i * this.a + r * this.c),
                    this.ty = t - (i * this.b + r * this.d)
                }
                apply(e) {
                    return {
                        x: this.a * e.x + this.c * e.y + this.tx,
                        y: this.b * e.x + this.d * e.y + this.ty
                    }
                }
                applyInverse(e) {
                    const t = 1 / (this.a * this.d + this.c * -this.b);
                    return {
                        x: this.d * t * e.x + -this.c * t * e.y + (this.ty * this.c - this.tx * this.d) * t,
                        y: this.a * t * e.y + -this.b * t * e.x + (-this.ty * this.a + this.tx * this.b) * t
                    }
                }
                append(e) {
                    const t = this.a
                      , i = this.b
                      , r = this.c
                      , n = this.d;
                    this.a = e.a * t + e.b * r,
                    this.b = e.a * i + e.b * n,
                    this.c = e.c * t + e.d * r,
                    this.d = e.c * i + e.d * n,
                    this.tx = e.tx * t + e.ty * r + this.tx,
                    this.ty = e.tx * i + e.ty * n + this.ty
                }
                prepend(e) {
                    const t = this.tx;
                    if (1 !== e.a || 0 !== e.b || 0 !== e.c || 1 !== e.d) {
                        const t = this.a
                          , i = this.c;
                        this.a = t * e.a + this.b * e.c,
                        this.b = t * e.b + this.b * e.d,
                        this.c = i * e.a + this.d * e.c,
                        this.d = i * e.b + this.d * e.d
                    }
                    this.tx = t * e.a + this.ty * e.c + e.tx,
                    this.ty = t * e.b + this.ty * e.d + e.ty
                }
                copyFrom(e) {
                    this.a = e.a,
                    this.b = e.b,
                    this.c = e.c,
                    this.d = e.d,
                    this.tx = e.tx,
                    this.ty = e.ty
                }
            }
            var C = i(6245)
              , N = i(7255)
              , L = i(5040)
              , j = i(751)
              , A = 2 * Math.PI
              , R = function(e, t, i, r, n, s, a) {
                var o = e.x
                  , l = e.y;
                return {
                    x: r * (o *= t) - n * (l *= i) + s,
                    y: n * o + r * l + a
                }
            }
              , B = function(e, t) {
                var i = 1.5707963267948966 === t ? .551915024494 : -1.5707963267948966 === t ? -.551915024494 : 4 / 3 * Math.tan(t / 4)
                  , r = Math.cos(e)
                  , n = Math.sin(e)
                  , s = Math.cos(e + t)
                  , a = Math.sin(e + t);
                return [{
                    x: r - n * i,
                    y: n + r * i
                }, {
                    x: s + a * i,
                    y: a - s * i
                }, {
                    x: s,
                    y: a
                }]
            }
              , U = function(e, t, i, r) {
                var n = e * i + t * r;
                return n > 1 && (n = 1),
                n < -1 && (n = -1),
                (e * r - t * i < 0 ? -1 : 1) * Math.acos(n)
            }
              , F = function(e) {
                var t = e.px
                  , i = e.py
                  , r = e.cx
                  , n = e.cy
                  , s = e.rx
                  , a = e.ry
                  , o = e.xAxisRotation
                  , l = void 0 === o ? 0 : o
                  , h = e.largeArcFlag
                  , u = void 0 === h ? 0 : h
                  , c = e.sweepFlag
                  , d = void 0 === c ? 0 : c
                  , p = [];
                if (0 === s || 0 === a)
                    return [];
                var f = Math.sin(l * A / 360)
                  , g = Math.cos(l * A / 360)
                  , m = g * (t - r) / 2 + f * (i - n) / 2
                  , b = -f * (t - r) / 2 + g * (i - n) / 2;
                if (0 === m && 0 === b)
                    return [];
                s = Math.abs(s),
                a = Math.abs(a);
                var _ = Math.pow(m, 2) / Math.pow(s, 2) + Math.pow(b, 2) / Math.pow(a, 2);
                _ > 1 && (s *= Math.sqrt(_),
                a *= Math.sqrt(_));
                var v = function(e, t, i, r, n, s, a, o, l, h, u, c) {
                    var d = Math.pow(n, 2)
                      , p = Math.pow(s, 2)
                      , f = Math.pow(u, 2)
                      , g = Math.pow(c, 2)
                      , m = d * p - d * g - p * f;
                    m < 0 && (m = 0),
                    m /= d * g + p * f;
                    var b = (m = Math.sqrt(m) * (a === o ? -1 : 1)) * n / s * c
                      , _ = m * -s / n * u
                      , v = h * b - l * _ + (e + i) / 2
                      , y = l * b + h * _ + (t + r) / 2
                      , w = (u - b) / n
                      , x = (c - _) / s
                      , O = (-u - b) / n
                      , P = (-c - _) / s
                      , D = U(1, 0, w, x)
                      , k = U(w, x, O, P);
                    return 0 === o && k > 0 && (k -= A),
                    1 === o && k < 0 && (k += A),
                    [v, y, D, k]
                }(t, i, r, n, s, a, u, d, f, g, m, b)
                  , y = function(e, t) {
                    if (Array.isArray(e))
                        return e;
                    if (Symbol.iterator in Object(e))
                        return function(e, t) {
                            var i = []
                              , r = !0
                              , n = !1
                              , s = void 0;
                            try {
                                for (var a, o = e[Symbol.iterator](); !(r = (a = o.next()).done) && (i.push(a.value),
                                !t || i.length !== t); r = !0)
                                    ;
                            } catch (e) {
                                n = !0,
                                s = e
                            } finally {
                                try {
                                    !r && o.return && o.return()
                                } finally {
                                    if (n)
                                        throw s
                                }
                            }
                            return i
                        }(e, t);
                    throw new TypeError("Invalid attempt to destructure non-iterable instance")
                }(v, 4)
                  , w = y[0]
                  , x = y[1]
                  , O = y[2]
                  , P = y[3]
                  , D = Math.abs(P) / (A / 4);
                Math.abs(1 - D) < 1e-7 && (D = 1);
                var k = Math.max(Math.ceil(D), 1);
                P /= k;
                for (var T = 0; T < k; T++)
                    p.push(B(O, P)),
                    O += P;
                return p.map((function(e) {
                    var t = R(e[0], s, a, g, f, w, x)
                      , i = t.x
                      , r = t.y
                      , n = R(e[1], s, a, g, f, w, x)
                      , o = n.x
                      , l = n.y
                      , h = R(e[2], s, a, g, f, w, x);
                    return {
                        x1: i,
                        y1: r,
                        x2: o,
                        y2: l,
                        x: h.x,
                        y: h.y
                    }
                }
                ))
            };
            function I(e, t, i) {
                if (t !== i)
                    throw new Error("Required " + i + " arguments for " + e + " but got " + t)
            }
            function H(e, t, i) {
                if (t < i)
                    throw new Error("Required at least " + i + " arguments for " + e + " but got " + t)
            }
            function z(e, t, i) {
                if (H(e, t, i),
                t % i != 0)
                    throw new Error("Arguments for " + e + " must be in pairs of " + i)
            }
            function V(e) {
                for (let t = 0; t < e.length; t += 7) {
                    let i = t + 3
                      , r = e[i];
                    if (r.length > 1) {
                        const t = /^([01])([01])(.*)$/.exec(r);
                        null !== t && (e.splice(i, 0, t[1]),
                        ++i,
                        e.splice(i, 0, t[2]),
                        ++i,
                        t[3].length > 0 ? e[i] = t[3] : e.splice(i, 1))
                    }
                    if (++i,
                    r = e[i],
                    r.length > 1) {
                        const t = /^([01])(.+)$/.exec(r);
                        null !== t && (e.splice(i, 0, t[1]),
                        ++i,
                        e[i] = t[2])
                    }
                }
            }
            function G(e) {
                if (0 === e || 1 === e)
                    return e;
                throw new Error("Flag must be 0 or 1")
            }
            function Y(e, t) {
                for (; (!e.interactive || t(e)) && e._parent; )
                    e = e._parent
            }
            function W(e, t, i) {
                return u.addEventListener(e, u.getRendererEvent(t), (e => {
                    const t = u.getEventTarget(e);
                    let r = e.touches;
                    r ? (0 == r.length && (r = e.changedTouches),
                    i(h.copy(r), t)) : i([e], t)
                }
                ))
            }
            function X(e) {
                const t = document.createElement("canvas");
                t.width = 1,
                t.height = 1;
                const i = t.getContext("2d", {
                    willReadFrequently: !0
                });
                i.drawImage(e, 0, 0, 1, 1);
                try {
                    return i.getImageData(0, 0, 1, 1),
                    !1
                } catch (t) {
                    return console.warn('Image "' + e.src + '" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors'),
                    !0
                }
            }
            function $(e) {
                e.width = 0,
                e.height = 0,
                e.style.width = "0px",
                e.style.height = "0px"
            }
            class Z {
                constructor() {
                    Object.defineProperty(this, "_x", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_y", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    })
                }
                get x() {
                    return this._x
                }
                get y() {
                    return this._y
                }
                set x(e) {
                    this._x = e
                }
                set y(e) {
                    this._y = e
                }
            }
            class K extends l.KK {
                constructor(e) {
                    super(),
                    Object.defineProperty(this, "_layer", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "mask", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: null
                    }),
                    Object.defineProperty(this, "visible", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !0
                    }),
                    Object.defineProperty(this, "exportable", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !0
                    }),
                    Object.defineProperty(this, "interactive", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "inactive", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "wheelable", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "cancelTouch", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "isMeasured", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "buttonMode", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "alpha", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 1
                    }),
                    Object.defineProperty(this, "compoundAlpha", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 1
                    }),
                    Object.defineProperty(this, "angle", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "scale", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 1
                    }),
                    Object.defineProperty(this, "x", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "y", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "crisp", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "pivot", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new Z
                    }),
                    Object.defineProperty(this, "filter", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "cursorOverStyle", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_replacedCursorStyle", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_localMatrix", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new S
                    }),
                    Object.defineProperty(this, "_matrix", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new S
                    }),
                    Object.defineProperty(this, "_uMatrix", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new S
                    }),
                    Object.defineProperty(this, "_renderer", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_parent", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_localBounds", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_bounds", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_colorId", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    this._renderer = e
                }
                _dispose() {
                    this._renderer._removeObject(this),
                    this.getLayer().dirty = !0
                }
                getCanvas() {
                    return this.getLayer().view
                }
                getLayer() {
                    let e = this;
                    for (; ; ) {
                        if (e._layer)
                            return e._layer;
                        if (!e._parent)
                            return this._renderer.defaultLayer;
                        e = e._parent
                    }
                }
                setLayer(e, t) {
                    if (null == e)
                        this._layer = void 0;
                    else {
                        const i = !0;
                        this._layer = this._renderer.getLayer(e, i),
                        this._layer.visible = i,
                        this._layer.margin = t,
                        t && u.setInteractive(this._layer.view, !1),
                        this._renderer._ghostLayer.setMargin(this._renderer.layers),
                        this._parent && this._parent.registerChildLayer(this._layer),
                        this._layer.dirty = !0,
                        this._renderer.resizeLayer(this._layer),
                        this._renderer.resizeGhost()
                    }
                }
                markDirtyLayer() {
                    this.getLayer().dirty = !0
                }
                clear() {
                    this.invalidateBounds()
                }
                invalidateBounds() {
                    this._localBounds = void 0
                }
                _addBounds(e) {}
                _getColorId() {
                    return void 0 === this._colorId && (this._colorId = this._renderer.paintId(this)),
                    this._colorId
                }
                _isInteractive() {
                    return 0 == this.inactive && (this.interactive || this._renderer._forceInteractive > 0)
                }
                _isInteractiveMask() {
                    return this._isInteractive()
                }
                contains(e) {
                    for (; ; ) {
                        if (e === this)
                            return !0;
                        if (!e._parent)
                            return !1;
                        e = e._parent
                    }
                }
                toGlobal(e) {
                    return this._matrix.apply(e)
                }
                toLocal(e) {
                    return this._matrix.applyInverse(e)
                }
                getLocalMatrix() {
                    return this._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale),
                    this._uMatrix
                }
                getLocalBounds() {
                    if (!this._localBounds) {
                        const e = 1e7;
                        this._localBounds = {
                            left: e,
                            top: e,
                            right: -e,
                            bottom: -e
                        },
                        this._addBounds(this._localBounds)
                    }
                    return this._localBounds
                }
                getAdjustedBounds(e) {
                    this._setMatrix();
                    const t = this.getLocalMatrix()
                      , i = t.apply({
                        x: e.left,
                        y: e.top
                    })
                      , r = t.apply({
                        x: e.right,
                        y: e.top
                    })
                      , n = t.apply({
                        x: e.right,
                        y: e.bottom
                    })
                      , s = t.apply({
                        x: e.left,
                        y: e.bottom
                    });
                    return {
                        left: Math.min(i.x, r.x, n.x, s.x),
                        top: Math.min(i.y, r.y, n.y, s.y),
                        right: Math.max(i.x, r.x, n.x, s.x),
                        bottom: Math.max(i.y, r.y, n.y, s.y)
                    }
                }
                on(e, t, i) {
                    return this.interactive ? this._renderer._addEvent(this, e, t, i) : new l.ku(( () => {}
                    ))
                }
                _setMatrix() {
                    this._localMatrix.setTransform(this.x, this.y, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale),
                    this._matrix.copyFrom(this._localMatrix),
                    this._parent && this._matrix.prepend(this._parent._matrix)
                }
                _transform(e, t) {
                    const i = this._matrix;
                    let r = i.tx * t
                      , n = i.ty * t;
                    this.crisp && (r = Math.floor(r) + .5,
                    n = Math.floor(n) + .5),
                    e.setTransform(i.a * t, i.b * t, i.c * t, i.d * t, r, n)
                }
                _transformMargin(e, t, i) {
                    const r = this._matrix;
                    e.setTransform(r.a * t, r.b * t, r.c * t, r.d * t, (r.tx + i.left) * t, (r.ty + i.top) * t)
                }
                _transformLayer(e, t, i) {
                    i.margin ? this._transformMargin(e, i.scale || t, i.margin) : this._transform(e, i.scale || t)
                }
                render(e) {
                    if (this.visible && (!1 !== this.exportable || !this._renderer._omitTainted)) {
                        this._setMatrix();
                        const t = this._renderer.resolution
                          , i = this._renderer.layers
                          , r = this._renderer._ghostLayer
                          , n = r.context
                          , s = this.mask;
                        s && s._setMatrix(),
                        h.each(i, (e => {
                            if (e) {
                                const i = e.context;
                                i.save(),
                                s && (s._transformLayer(i, t, e),
                                s._runPath(i),
                                i.clip()),
                                i.globalAlpha = this.compoundAlpha * this.alpha,
                                this._transformLayer(i, t, e),
                                this.filter && (i.filter = this.filter)
                            }
                        }
                        )),
                        n.save(),
                        s && this._isInteractiveMask() && (s._transformMargin(n, t, r.margin),
                        s._runPath(n),
                        n.clip()),
                        this._transformMargin(n, t, r.margin),
                        this._render(e),
                        n.restore(),
                        h.each(i, (e => {
                            e && e.context.restore()
                        }
                        ))
                    }
                }
                _render(e) {
                    !1 === this.exportable && ((this._layer || e).tainted = !0)
                }
                hovering() {
                    return this._renderer._hovering.has(this)
                }
                dragging() {
                    return this._renderer._dragging.some((e => e.value === this))
                }
                shouldCancelTouch() {
                    const e = this._renderer;
                    return !(e.tapToActivate && !e._touchActive) && (!!this.cancelTouch || !!this._parent && this._parent.shouldCancelTouch())
                }
            }
            class q extends K {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "interactiveChildren", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !0
                    }),
                    Object.defineProperty(this, "_childLayers", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_children", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    })
                }
                _isInteractiveMask() {
                    return this.interactiveChildren || super._isInteractiveMask()
                }
                addChild(e) {
                    e._parent = this,
                    this._children.push(e),
                    e._layer && this.registerChildLayer(e._layer)
                }
                addChildAt(e, t) {
                    e._parent = this,
                    this._children.splice(t, 0, e),
                    e._layer && this.registerChildLayer(e._layer)
                }
                removeChild(e) {
                    e._parent = void 0,
                    h.removeFirst(this._children, e)
                }
                _render(e) {
                    super._render(e);
                    const t = this._renderer;
                    this.interactive && this.interactiveChildren && ++t._forceInteractive;
                    const i = this._layer || e;
                    h.each(this._children, (e => {
                        e.compoundAlpha = this.compoundAlpha * this.alpha,
                        e.render(i)
                    }
                    )),
                    this.interactive && this.interactiveChildren && --t._forceInteractive
                }
                registerChildLayer(e) {
                    this._childLayers || (this._childLayers = []),
                    h.pushOne(this._childLayers, e),
                    this._parent && this._parent.registerChildLayer(e)
                }
                markDirtyLayer(e=!1) {
                    super.markDirtyLayer(),
                    e && this._childLayers && h.each(this._childLayers, (e => e.dirty = !0))
                }
                _dispose() {
                    super._dispose(),
                    this._childLayers && h.each(this._childLayers, (e => {
                        e.dirty = !0
                    }
                    ))
                }
            }
            function Q(e, t) {
                e.left = Math.min(e.left, t.x),
                e.top = Math.min(e.top, t.y),
                e.right = Math.max(e.right, t.x),
                e.bottom = Math.max(e.bottom, t.y)
            }
            class J {
                colorize(e, t) {}
                path(e) {}
                addBounds(e) {}
            }
            class ee extends J {
                colorize(e, t) {
                    e.beginPath()
                }
            }
            class te extends J {
                constructor(e) {
                    super(),
                    Object.defineProperty(this, "color", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: e
                    })
                }
                colorize(e, t) {
                    e.fillStyle = void 0 !== t ? t : this.color
                }
            }
            class ie extends J {
                constructor(e) {
                    super(),
                    Object.defineProperty(this, "clearShadow", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: e
                    })
                }
                colorize(e, t) {
                    e.fill(),
                    this.clearShadow && (e.shadowColor = "",
                    e.shadowBlur = 0,
                    e.shadowOffsetX = 0,
                    e.shadowOffsetY = 0)
                }
            }
            class re extends J {
                colorize(e, t) {
                    e.stroke()
                }
            }
            class ne extends J {
                constructor(e, t, i) {
                    super(),
                    Object.defineProperty(this, "width", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: e
                    }),
                    Object.defineProperty(this, "color", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: t
                    }),
                    Object.defineProperty(this, "lineJoin", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: i
                    })
                }
                colorize(e, t) {
                    e.strokeStyle = void 0 !== t ? t : this.color,
                    e.lineWidth = this.width,
                    this.lineJoin && (e.lineJoin = this.lineJoin)
                }
            }
            class se extends J {
                constructor(e) {
                    super(),
                    Object.defineProperty(this, "dash", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: e
                    })
                }
                colorize(e, t) {
                    e.setLineDash(this.dash)
                }
            }
            class ae extends J {
                constructor(e) {
                    super(),
                    Object.defineProperty(this, "dashOffset", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: e
                    })
                }
                colorize(e, t) {
                    e.lineDashOffset = this.dashOffset
                }
            }
            class oe extends J {
                constructor(e, t, i, r) {
                    super(),
                    Object.defineProperty(this, "x", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: e
                    }),
                    Object.defineProperty(this, "y", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: t
                    }),
                    Object.defineProperty(this, "width", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: i
                    }),
                    Object.defineProperty(this, "height", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: r
                    })
                }
                path(e) {
                    e.rect(this.x, this.y, this.width, this.height)
                }
                addBounds(e) {
                    const t = this.x
                      , i = this.y
                      , r = t + this.width
                      , n = i + this.height;
                    Q(e, {
                        x: t,
                        y: i
                    }),
                    Q(e, {
                        x: r,
                        y: i
                    }),
                    Q(e, {
                        x: t,
                        y: n
                    }),
                    Q(e, {
                        x: r,
                        y: n
                    })
                }
            }
            class le extends J {
                constructor(e, t, i) {
                    super(),
                    Object.defineProperty(this, "x", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: e
                    }),
                    Object.defineProperty(this, "y", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: t
                    }),
                    Object.defineProperty(this, "radius", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: i
                    })
                }
                path(e) {
                    e.moveTo(this.x + this.radius, this.y),
                    e.arc(this.x, this.y, this.radius, 0, 2 * Math.PI)
                }
                addBounds(e) {
                    Q(e, {
                        x: this.x - this.radius,
                        y: this.y - this.radius
                    }),
                    Q(e, {
                        x: this.x + this.radius,
                        y: this.y + this.radius
                    })
                }
            }
            class he extends J {
                constructor(e, t, i, r) {
                    super(),
                    Object.defineProperty(this, "x", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: e
                    }),
                    Object.defineProperty(this, "y", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: t
                    }),
                    Object.defineProperty(this, "radiusX", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: i
                    }),
                    Object.defineProperty(this, "radiusY", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: r
                    })
                }
                path(e) {
                    e.ellipse(0, 0, this.radiusX, this.radiusY, 0, 0, 2 * Math.PI)
                }
                addBounds(e) {
                    Q(e, {
                        x: this.x - this.radiusX,
                        y: this.y - this.radiusY
                    }),
                    Q(e, {
                        x: this.x + this.radiusX,
                        y: this.y + this.radiusY
                    })
                }
            }
            class ue extends J {
                constructor(e, t, i, r, n, s) {
                    super(),
                    Object.defineProperty(this, "cx", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: e
                    }),
                    Object.defineProperty(this, "cy", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: t
                    }),
                    Object.defineProperty(this, "radius", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: i
                    }),
                    Object.defineProperty(this, "startAngle", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: r
                    }),
                    Object.defineProperty(this, "endAngle", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: n
                    }),
                    Object.defineProperty(this, "anticlockwise", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: s
                    })
                }
                path(e) {
                    this.radius > 0 && e.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise)
                }
                addBounds(e) {
                    let t = j.getArcBounds(this.cx, this.cy, this.startAngle * j.DEGREES, this.endAngle * j.DEGREES, this.radius);
                    Q(e, {
                        x: t.left,
                        y: t.top
                    }),
                    Q(e, {
                        x: t.right,
                        y: t.bottom
                    })
                }
            }
            class ce extends J {
                constructor(e, t, i, r, n) {
                    super(),
                    Object.defineProperty(this, "x1", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: e
                    }),
                    Object.defineProperty(this, "y1", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: t
                    }),
                    Object.defineProperty(this, "x2", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: i
                    }),
                    Object.defineProperty(this, "y2", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: r
                    }),
                    Object.defineProperty(this, "radius", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: n
                    })
                }
                path(e) {
                    this.radius > 0 && e.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius)
                }
                addBounds(e) {}
            }
            class de extends J {
                constructor(e, t) {
                    super(),
                    Object.defineProperty(this, "x", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: e
                    }),
                    Object.defineProperty(this, "y", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: t
                    })
                }
                path(e) {
                    e.lineTo(this.x, this.y)
                }
                addBounds(e) {
                    Q(e, {
                        x: this.x,
                        y: this.y
                    })
                }
            }
            class pe extends J {
                constructor(e, t) {
                    super(),
                    Object.defineProperty(this, "x", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: e
                    }),
                    Object.defineProperty(this, "y", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: t
                    })
                }
                path(e) {
                    e.moveTo(this.x, this.y)
                }
                addBounds(e) {
                    Q(e, {
                        x: this.x,
                        y: this.y
                    })
                }
            }
            class fe extends J {
                path(e) {
                    e.closePath()
                }
            }
            class ge extends J {
                constructor(e, t, i, r, n, s) {
                    super(),
                    Object.defineProperty(this, "cpX", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: e
                    }),
                    Object.defineProperty(this, "cpY", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: t
                    }),
                    Object.defineProperty(this, "cpX2", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: i
                    }),
                    Object.defineProperty(this, "cpY2", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: r
                    }),
                    Object.defineProperty(this, "toX", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: n
                    }),
                    Object.defineProperty(this, "toY", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: s
                    })
                }
                path(e) {
                    e.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY)
                }
                addBounds(e) {
                    Q(e, {
                        x: this.cpX,
                        y: this.cpY
                    }),
                    Q(e, {
                        x: this.cpX2,
                        y: this.cpY2
                    }),
                    Q(e, {
                        x: this.toX,
                        y: this.toY
                    })
                }
            }
            class me extends J {
                constructor(e, t, i, r) {
                    super(),
                    Object.defineProperty(this, "cpX", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: e
                    }),
                    Object.defineProperty(this, "cpY", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: t
                    }),
                    Object.defineProperty(this, "toX", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: i
                    }),
                    Object.defineProperty(this, "toY", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: r
                    })
                }
                path(e) {
                    e.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY)
                }
                addBounds(e) {
                    Q(e, {
                        x: this.cpX,
                        y: this.cpY
                    }),
                    Q(e, {
                        x: this.toX,
                        y: this.toY
                    })
                }
            }
            class be extends J {
                constructor(e, t, i, r, n) {
                    super(),
                    Object.defineProperty(this, "color", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: e
                    }),
                    Object.defineProperty(this, "blur", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: t
                    }),
                    Object.defineProperty(this, "offsetX", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: i
                    }),
                    Object.defineProperty(this, "offsetY", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: r
                    }),
                    Object.defineProperty(this, "opacity", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: n
                    })
                }
                colorize(e, t) {
                    this.opacity && (e.fillStyle = this.color),
                    e.shadowColor = this.color,
                    e.shadowBlur = this.blur,
                    e.shadowOffsetX = this.offsetX,
                    e.shadowOffsetY = this.offsetY
                }
            }
            class _e extends J {
                constructor(e, t, i, r, n) {
                    super(),
                    Object.defineProperty(this, "image", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: e
                    }),
                    Object.defineProperty(this, "width", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: t
                    }),
                    Object.defineProperty(this, "height", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: i
                    }),
                    Object.defineProperty(this, "x", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: r
                    }),
                    Object.defineProperty(this, "y", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: n
                    })
                }
                path(e) {
                    e.drawImage(this.image, this.x, this.y, this.width, this.height)
                }
                addBounds(e) {
                    Q(e, {
                        x: this.x,
                        y: this.y
                    }),
                    Q(e, {
                        x: this.width,
                        y: this.height
                    })
                }
            }
            class ve extends K {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "_operations", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    }),
                    Object.defineProperty(this, "blendMode", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: M.b.NORMAL
                    }),
                    Object.defineProperty(this, "_hasShadows", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_fillAlpha", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_strokeAlpha", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    })
                }
                clear() {
                    super.clear(),
                    this._operations.length = 0
                }
                _pushOp(e) {
                    this._operations.push(e)
                }
                beginFill(e, t=1) {
                    this._fillAlpha = t,
                    e ? e instanceof E.Il ? this._pushOp(new te(e.toCSS(t))) : (this.isMeasured = !0,
                    this._pushOp(new te(e))) : this._pushOp(new te("rgba(0, 0, 0, " + t + ")"))
                }
                endFill() {
                    this._pushOp(new ie(this._hasShadows))
                }
                endStroke() {
                    this._pushOp(new re)
                }
                beginPath() {
                    this._pushOp(new ee)
                }
                lineStyle(e=0, t, i=1, r) {
                    this._strokeAlpha = i,
                    t ? t instanceof E.Il ? this._pushOp(new ne(e,t.toCSS(i),r)) : this._pushOp(new ne(e,t,r)) : this._pushOp(new ne(e,"rgba(0, 0, 0, " + i + ")",r))
                }
                setLineDash(e) {
                    this._pushOp(new se(e || []))
                }
                setLineDashOffset(e=0) {
                    this._pushOp(new ae(e))
                }
                drawRect(e, t, i, r) {
                    this._pushOp(new oe(e,t,i,r))
                }
                drawCircle(e, t, i) {
                    this._pushOp(new le(e,t,i))
                }
                drawEllipse(e, t, i, r) {
                    this._pushOp(new he(e,t,i,r))
                }
                arc(e, t, i, r, n, s=!1) {
                    this._pushOp(new ue(e,t,i,r,n,s))
                }
                arcTo(e, t, i, r, n) {
                    this._pushOp(new ce(e,t,i,r,n))
                }
                lineTo(e, t) {
                    this._pushOp(new de(e,t))
                }
                moveTo(e, t) {
                    this._pushOp(new pe(e,t))
                }
                bezierCurveTo(e, t, i, r, n, s) {
                    this._pushOp(new ge(e,t,i,r,n,s))
                }
                quadraticCurveTo(e, t, i, r) {
                    this._pushOp(new me(e,t,i,r))
                }
                closePath() {
                    this._pushOp(new fe)
                }
                shadow(e, t=0, i=0, r=0, n) {
                    this._hasShadows = !0,
                    this._pushOp(new be(n ? e.toCSS(n) : e.toCSS(this._fillAlpha || this._strokeAlpha),t,i,r))
                }
                image(e, t, i, r, n) {
                    this._pushOp(new _e(e,t,i,r,n))
                }
                svgPath(e) {
                    let t = 0
                      , i = 0
                      , r = null
                      , n = null
                      , s = null
                      , a = null;
                    const o = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g
                      , l = /[\u0009\u0020\u000A\u000C\u000D]*([\+\-]?[0-9]*\.?[0-9]+(?:[eE][\+\-]?[0-9]+)?)[\u0009\u0020\u000A\u000C\u000D]*,?/g;
                    let u;
                    for (; null !== (u = o.exec(e)); ) {
                        const e = u[1]
                          , o = u[2]
                          , c = [];
                        for (; null !== (u = l.exec(o)); )
                            c.push(u[1]);
                        switch ("S" !== e && "s" !== e && "C" !== e && "c" !== e && (r = null,
                        n = null),
                        "Q" !== e && "q" !== e && "T" !== e && "t" !== e && (s = null,
                        a = null),
                        e) {
                        case "M":
                            z(e, c.length, 2),
                            t = +c[0],
                            i = +c[1],
                            this.moveTo(t, i);
                            for (let e = 2; e < c.length; e += 2)
                                t = +c[e],
                                i = +c[e + 1],
                                this.lineTo(t, i);
                            break;
                        case "m":
                            z(e, c.length, 2),
                            t += +c[0],
                            i += +c[1],
                            this.moveTo(t, i);
                            for (let e = 2; e < c.length; e += 2)
                                t += +c[e],
                                i += +c[e + 1],
                                this.lineTo(t, i);
                            break;
                        case "L":
                            z(e, c.length, 2);
                            for (let e = 0; e < c.length; e += 2)
                                t = +c[e],
                                i = +c[e + 1],
                                this.lineTo(t, i);
                            break;
                        case "l":
                            z(e, c.length, 2);
                            for (let e = 0; e < c.length; e += 2)
                                t += +c[e],
                                i += +c[e + 1],
                                this.lineTo(t, i);
                            break;
                        case "H":
                            H(e, c.length, 1);
                            for (let e = 0; e < c.length; ++e)
                                t = +c[e],
                                this.lineTo(t, i);
                            break;
                        case "h":
                            H(e, c.length, 1);
                            for (let e = 0; e < c.length; ++e)
                                t += +c[e],
                                this.lineTo(t, i);
                            break;
                        case "V":
                            H(e, c.length, 1);
                            for (let e = 0; e < c.length; ++e)
                                i = +c[e],
                                this.lineTo(t, i);
                            break;
                        case "v":
                            H(e, c.length, 1);
                            for (let e = 0; e < c.length; ++e)
                                i += +c[e],
                                this.lineTo(t, i);
                            break;
                        case "C":
                            z(e, c.length, 6);
                            for (let e = 0; e < c.length; e += 6) {
                                const s = +c[e]
                                  , a = +c[e + 1];
                                r = +c[e + 2],
                                n = +c[e + 3],
                                t = +c[e + 4],
                                i = +c[e + 5],
                                this.bezierCurveTo(s, a, r, n, t, i)
                            }
                            break;
                        case "c":
                            z(e, c.length, 6);
                            for (let e = 0; e < c.length; e += 6) {
                                const s = +c[e] + t
                                  , a = +c[e + 1] + i;
                                r = +c[e + 2] + t,
                                n = +c[e + 3] + i,
                                t += +c[e + 4],
                                i += +c[e + 5],
                                this.bezierCurveTo(s, a, r, n, t, i)
                            }
                            break;
                        case "S":
                            z(e, c.length, 4),
                            null !== r && null !== n || (r = t,
                            n = i);
                            for (let e = 0; e < c.length; e += 4) {
                                const s = 2 * t - r
                                  , a = 2 * i - n;
                                r = +c[e],
                                n = +c[e + 1],
                                t = +c[e + 2],
                                i = +c[e + 3],
                                this.bezierCurveTo(s, a, r, n, t, i)
                            }
                            break;
                        case "s":
                            z(e, c.length, 4),
                            null !== r && null !== n || (r = t,
                            n = i);
                            for (let e = 0; e < c.length; e += 4) {
                                const s = 2 * t - r
                                  , a = 2 * i - n;
                                r = +c[e] + t,
                                n = +c[e + 1] + i,
                                t += +c[e + 2],
                                i += +c[e + 3],
                                this.bezierCurveTo(s, a, r, n, t, i)
                            }
                            break;
                        case "Q":
                            z(e, c.length, 4);
                            for (let e = 0; e < c.length; e += 4)
                                s = +c[e],
                                a = +c[e + 1],
                                t = +c[e + 2],
                                i = +c[e + 3],
                                this.quadraticCurveTo(s, a, t, i);
                            break;
                        case "q":
                            z(e, c.length, 4);
                            for (let e = 0; e < c.length; e += 4)
                                s = +c[e] + t,
                                a = +c[e + 1] + i,
                                t += +c[e + 2],
                                i += +c[e + 3],
                                this.quadraticCurveTo(s, a, t, i);
                            break;
                        case "T":
                            z(e, c.length, 2),
                            null !== s && null !== a || (s = t,
                            a = i);
                            for (let e = 0; e < c.length; e += 2)
                                s = 2 * t - s,
                                a = 2 * i - a,
                                t = +c[e],
                                i = +c[e + 1],
                                this.quadraticCurveTo(s, a, t, i);
                            break;
                        case "t":
                            z(e, c.length, 2),
                            null !== s && null !== a || (s = t,
                            a = i);
                            for (let e = 0; e < c.length; e += 2)
                                s = 2 * t - s,
                                a = 2 * i - a,
                                t += +c[e],
                                i += +c[e + 1],
                                this.quadraticCurveTo(s, a, t, i);
                            break;
                        case "A":
                        case "a":
                            const o = "a" === e;
                            V(c),
                            z(e, c.length, 7);
                            for (let e = 0; e < c.length; e += 7) {
                                let r = +c[e + 5]
                                  , n = +c[e + 6];
                                o && (r += t,
                                n += i);
                                const s = F({
                                    px: t,
                                    py: i,
                                    rx: +c[e],
                                    ry: +c[e + 1],
                                    xAxisRotation: +c[e + 2],
                                    largeArcFlag: G(+c[e + 3]),
                                    sweepFlag: G(+c[e + 4]),
                                    cx: r,
                                    cy: n
                                });
                                h.each(s, (e => {
                                    this.bezierCurveTo(e.x1, e.y1, e.x2, e.y2, e.x, e.y),
                                    t = e.x,
                                    i = e.y
                                }
                                ))
                            }
                            break;
                        case "Z":
                        case "z":
                            I(e, c.length, 0),
                            this.closePath()
                        }
                    }
                }
                _runPath(e) {
                    e.beginPath(),
                    h.each(this._operations, (t => {
                        t.path(e)
                    }
                    ))
                }
                _render(e) {
                    super._render(e);
                    const t = this._layer || e
                      , i = t.dirty
                      , r = this._isInteractive();
                    if (i || r) {
                        const e = t.context
                          , n = this._renderer._ghostLayer.context;
                        let s;
                        i && (e.globalCompositeOperation = this.blendMode,
                        e.beginPath()),
                        r && (n.beginPath(),
                        s = this._getColorId()),
                        h.each(this._operations, (t => {
                            i && (t.path(e),
                            t.colorize(e, void 0)),
                            r && (t.path(n),
                            t.colorize(n, s))
                        }
                        ))
                    }
                }
                renderDetached(e) {
                    if (this.visible) {
                        this._setMatrix(),
                        e.save();
                        const t = this.mask;
                        t && (t._setMatrix(),
                        t._transform(e, 1),
                        t._runPath(e),
                        e.clip()),
                        e.globalAlpha = this.compoundAlpha * this.alpha,
                        this._transform(e, 1),
                        this.filter && (e.filter = this.filter),
                        e.globalCompositeOperation = this.blendMode,
                        e.beginPath(),
                        h.each(this._operations, (t => {
                            t.path(e),
                            t.colorize(e, void 0)
                        }
                        )),
                        e.restore()
                    }
                }
                _addBounds(e) {
                    this.visible && this.isMeasured && h.each(this._operations, (t => {
                        t.addBounds(e)
                    }
                    ))
                }
            }
            class ye extends K {
                constructor(e, t, i) {
                    super(e),
                    Object.defineProperty(this, "text", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "style", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "resolution", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 1
                    }),
                    Object.defineProperty(this, "textVisible", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !0
                    }),
                    Object.defineProperty(this, "_textInfo", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_originalScale", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 1
                    }),
                    this.text = t,
                    this.style = i
                }
                invalidateBounds() {
                    super.invalidateBounds(),
                    this._textInfo = void 0
                }
                _shared(e) {
                    this.style.textAlign && (e.textAlign = this.style.textAlign),
                    this.style.direction && (e.direction = this.style.direction),
                    this.style.textBaseline && (e.textBaseline = this.style.textBaseline)
                }
                _prerender(e, t=!1, i=!1) {
                    super._render(e);
                    const r = e.context
                      , n = this._renderer._ghostLayer.context
                      , s = this.style;
                    let a = this._getFontStyle(void 0, i);
                    r.font = a,
                    this._isInteractive() && !t && (n.font = a),
                    s.fill && (s.fill instanceof E.Il ? r.fillStyle = s.fill.toCSS(null != s.fillOpacity ? s.fillOpacity : 1) : r.fillStyle = s.fill),
                    s.shadowColor && (e.context.shadowColor = s.shadowColor.toCSS(s.shadowOpacity || 1)),
                    s.shadowBlur && (e.context.shadowBlur = s.shadowBlur),
                    s.shadowOffsetX && (e.context.shadowOffsetX = s.shadowOffsetX),
                    s.shadowOffsetY && (e.context.shadowOffsetY = s.shadowOffsetY),
                    this._shared(r),
                    this._isInteractive() && !t && (n.fillStyle = this._getColorId(),
                    this._shared(n))
                }
                _getFontStyle(e, t=!1) {
                    const i = this.style;
                    let r = [];
                    return e && e.fontVariant ? r.push(e.fontVariant) : i.fontVariant && r.push(i.fontVariant),
                    t || (e && e.fontWeight ? r.push(e.fontWeight) : i.fontWeight && r.push(i.fontWeight)),
                    e && e.fontStyle ? r.push(e.fontStyle) : i.fontStyle && r.push(i.fontStyle),
                    e && e.fontSize ? (L.isNumber(e.fontSize) && (e.fontSize = e.fontSize + "px"),
                    r.push(e.fontSize)) : i.fontSize && (L.isNumber(i.fontSize) && (i.fontSize = i.fontSize + "px"),
                    r.push(i.fontSize)),
                    e && e.fontFamily ? r.push(e.fontFamily) : i.fontFamily ? r.push(i.fontFamily) : r.length && r.push("Arial"),
                    r.join(" ")
                }
                _render(e) {
                    const t = this._layer || e;
                    if (this._textInfo || this._measure(t),
                    this.textVisible) {
                        const e = this._isInteractive()
                          , i = t.context
                          , r = t.dirty
                          , n = this._renderer._ghostLayer.context;
                        i.save(),
                        n.save(),
                        this._prerender(t),
                        h.each(this._textInfo, ( (t, s) => {
                            h.each(t.textChunks, ( (s, a) => {
                                if (s.style && (i.save(),
                                n.save(),
                                i.font = s.style,
                                this._isInteractive() && (n.font = s.style)),
                                s.fill && (i.save(),
                                i.fillStyle = s.fill.toCSS()),
                                r && i.fillText(s.text, s.offsetX, t.offsetY + s.offsetY),
                                "underline" == s.textDecoration || "line-through" == s.textDecoration) {
                                    let e, r = 1, n = 1, a = s.height, o = s.offsetX;
                                    switch (this.style.textAlign) {
                                    case "right":
                                    case "end":
                                        o -= s.width;
                                        break;
                                    case "center":
                                        o -= s.width / 2
                                    }
                                    if (s.style)
                                        switch (N.V.getTextStyle(s.style).fontWeight) {
                                        case "bolder":
                                        case "bold":
                                        case "700":
                                        case "800":
                                        case "900":
                                            r = 2
                                        }
                                    a && (n = a / 20),
                                    e = "line-through" == s.textDecoration ? r + t.offsetY + s.offsetY - s.height / 2 : r + 1.5 * n + t.offsetY + s.offsetY,
                                    i.save(),
                                    i.beginPath(),
                                    s.fill ? i.strokeStyle = s.fill.toCSS() : this.style.fill && this.style.fill instanceof E.Il && (i.strokeStyle = this.style.fill.toCSS()),
                                    i.lineWidth = r * n,
                                    i.moveTo(o, e),
                                    i.lineTo(o + s.width, e),
                                    i.stroke(),
                                    i.restore()
                                }
                                e && this.interactive && n.fillText(s.text, s.offsetX, t.offsetY + s.offsetY),
                                s.fill && i.restore(),
                                s.style && (i.restore(),
                                n.restore())
                            }
                            ))
                        }
                        )),
                        i.restore(),
                        n.restore()
                    }
                }
                _addBounds(e) {
                    if (this.visible && this.isMeasured) {
                        const t = this._measure(this.getLayer());
                        Q(e, {
                            x: t.left,
                            y: t.top
                        }),
                        Q(e, {
                            x: t.right,
                            y: t.bottom
                        })
                    }
                }
                _ignoreFontWeight() {
                    return /apple/i.test(navigator.vendor)
                }
                _measure(e) {
                    const t = e.context
                      , i = this._renderer._ghostLayer.context
                      , r = "rtl" == this.style.direction;
                    this._textInfo = [];
                    const n = this.style.oversizedBehavior
                      , s = this.style.maxWidth
                      , a = L.isNumber(s) && "truncate" == n
                      , o = L.isNumber(s) && ("wrap" == n || "wrap-no-break" == n);
                    t.save(),
                    i.save(),
                    this._prerender(e, !0, this._ignoreFontWeight());
                    const l = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 "
                      , c = this.text.toString().replace(/\r/g, "").split(/\n/);
                    let d, p = !0, f = 0, g = 0, m = 0;
                    h.each(c, ( (e, r) => {
                        let n;
                        for (n = "" == e ? [{
                            type: "value",
                            text: ""
                        }] : N.V.chunk(e, !1, this.style.ignoreFormatting); n.length > 0; ) {
                            let e = {
                                offsetY: m,
                                ascent: 0,
                                width: 0,
                                height: 0,
                                left: 0,
                                right: 0,
                                textChunks: []
                            };
                            const r = this._measureText(l, t)
                              , c = r.actualBoundingBoxAscent + r.actualBoundingBoxDescent;
                            let b;
                            e.height = c,
                            e.ascent = r.actualBoundingBoxAscent;
                            let _, v, y, w = this.style.textDecoration, x = !1, O = !0, P = [];
                            h.eachContinue(n, ( (r, h) => {
                                if ("format" == r.type)
                                    if ("[/]" == r.text)
                                        p || (t.restore(),
                                        i.restore(),
                                        p = !0),
                                        _ = void 0,
                                        d = void 0,
                                        v = void 0,
                                        w = this.style.textDecoration,
                                        y = void 0,
                                        b = r.text;
                                    else {
                                        p || (t.restore(),
                                        i.restore());
                                        let n = N.V.getTextStyle(r.text);
                                        const s = this._getFontStyle(n);
                                        t.save(),
                                        i.save(),
                                        t.font = s,
                                        d = s,
                                        b = r.text,
                                        n.textDecoration && (w = n.textDecoration),
                                        n.fill && (_ = n.fill),
                                        n.width && (v = L.toNumber(n.width)),
                                        n.verticalAlign && (y = n.verticalAlign),
                                        p = !1;
                                        const a = this._measureText(l, t)
                                          , o = a.actualBoundingBoxAscent + a.actualBoundingBoxDescent;
                                        o > e.height && (e.height = o),
                                        a.actualBoundingBoxAscent > e.ascent && (e.ascent = a.actualBoundingBoxAscent)
                                    }
                                else if ("value" == r.type && !x) {
                                    const i = this._measureText(r.text, t);
                                    let l = i.actualBoundingBoxLeft + i.actualBoundingBoxRight;
                                    if (a) {
                                        let i = O || this.style.breakWords || !1;
                                        const n = this.style.ellipsis || ""
                                          , a = this._measureText(n, t)
                                          , o = a.actualBoundingBoxLeft + a.actualBoundingBoxRight;
                                        if (e.width + l > s) {
                                            const a = s - e.width - o;
                                            r.text = this._truncateText(t, r.text, a, i),
                                            r.text += n,
                                            x = !0
                                        }
                                    } else if (o && e.width + l > s) {
                                        const i = s - e.width
                                          , a = this._truncateText(t, r.text, i, !1, O && "wrap-no-break" != this.style.oversizedBehavior);
                                        if ("" == a)
                                            return this.textVisible = !0,
                                            !1;
                                        P = n.slice(h + 1),
                                        u.trim(a) != u.trim(r.text) && (P.unshift({
                                            type: "value",
                                            text: r.text.substr(a.length)
                                        }),
                                        b && P.unshift({
                                            type: "format",
                                            text: b
                                        })),
                                        r.text = u.trim(a),
                                        n = [],
                                        x = !0
                                    }
                                    let c = 1
                                      , p = 1;
                                    if (d && v && v > l) {
                                        const e = l / v;
                                        switch (this.style.textAlign) {
                                        case "right":
                                        case "end":
                                            c = e;
                                            break;
                                        case "center":
                                            c = e,
                                            p = e;
                                            break;
                                        default:
                                            p = e
                                        }
                                        l = v
                                    }
                                    const f = i.actualBoundingBoxAscent + i.actualBoundingBoxDescent;
                                    f > e.height && (e.height = f),
                                    i.actualBoundingBoxAscent > e.ascent && (e.ascent = i.actualBoundingBoxAscent),
                                    e.width += l,
                                    e.left += i.actualBoundingBoxLeft / c,
                                    e.right += i.actualBoundingBoxRight / p,
                                    e.textChunks.push({
                                        style: d,
                                        fill: _,
                                        text: r.text,
                                        width: l,
                                        height: f,
                                        left: i.actualBoundingBoxLeft,
                                        right: i.actualBoundingBoxRight,
                                        ascent: i.actualBoundingBoxAscent,
                                        offsetX: 0,
                                        offsetY: 0,
                                        textDecoration: w,
                                        verticalAlign: y
                                    }),
                                    O = !1
                                }
                                return !0
                            }
                            )),
                            this.style.lineHeight instanceof C.gG ? (e.height *= this.style.lineHeight.value,
                            e.ascent *= this.style.lineHeight.value) : (e.height *= this.style.lineHeight || 1.2,
                            e.ascent *= this.style.lineHeight || 1.2),
                            f < e.left && (f = e.left),
                            g < e.right && (g = e.right),
                            this._textInfo.push(e),
                            m += e.height,
                            n = P || []
                        }
                    }
                    )),
                    p || (t.restore(),
                    i.restore()),
                    h.each(this._textInfo, ( (e, t) => {
                        let i = 0;
                        h.each(e.textChunks, (t => {
                            if (t.offsetX = i + t.left - e.left,
                            t.offsetY += e.height - e.height * (this.style.baselineRatio || .19),
                            i += t.width,
                            t.verticalAlign)
                                switch (t.verticalAlign) {
                                case "super":
                                    t.offsetY -= e.height / 2 - t.height / 2;
                                    break;
                                case "sub":
                                    t.offsetY += t.height / 2
                                }
                        }
                        ))
                    }
                    ));
                    const b = {
                        left: r ? -g : -f,
                        top: 0,
                        right: r ? f : g,
                        bottom: m
                    };
                    if ("none" !== n) {
                        const e = this._fitRatio(b);
                        if (e < 1)
                            if ("fit" == n)
                                L.isNumber(this.style.minScale) && e < this.style.minScale ? (this.textVisible = !1,
                                b.left = 0,
                                b.top = 0,
                                b.right = 0,
                                b.bottom = 0) : (this._originalScale && 1 != this._originalScale || (this._originalScale = this.scale),
                                this.scale = e,
                                this.textVisible = !0);
                            else if ("hide" == n)
                                this.textVisible = !1,
                                b.left = 0,
                                b.top = 0,
                                b.right = 0,
                                b.bottom = 0;
                            else {
                                switch (this.style.textAlign) {
                                case "right":
                                case "end":
                                    b.left = -s,
                                    b.right = 0;
                                    break;
                                case "center":
                                    b.left = -s / 2,
                                    b.right = s / 2;
                                    break;
                                default:
                                    b.left = 0,
                                    b.right = s
                                }
                                this.scale = this._originalScale || 1,
                                this._originalScale = void 0,
                                this.textVisible = !0
                            }
                        else
                            this.scale = this._originalScale || 1,
                            this._originalScale = void 0,
                            this.textVisible = !0
                    }
                    return t.restore(),
                    i.restore(),
                    b
                }
                _fitRatio(e) {
                    const t = this.style.maxWidth
                      , i = this.style.maxHeight;
                    if (!L.isNumber(t) && !L.isNumber(i))
                        return 1;
                    const r = e.right - e.left
                      , n = e.bottom - e.top;
                    return Math.min(t / r || 1, i / n || 1)
                }
                _truncateText(e, t, i, r=!1, n=!0) {
                    let s;
                    do {
                        if (r)
                            t = t.slice(0, -1);
                        else {
                            let e = t.replace(/[^,;:!?\\\/\s​]+[,;:!?\\\/\s​]*$/g, "");
                            if ("" != e && e !== t || !n) {
                                if ("" == e)
                                    return t;
                                t = e
                            } else
                                r = !0
                        }
                        const i = this._measureText(t, e);
                        s = i.actualBoundingBoxLeft + i.actualBoundingBoxRight
                    } while (s > i && "" != t);
                    return t
                }
                _measureText(e, t) {
                    let i = t.measureText(e)
                      , r = {};
                    if (null == i.actualBoundingBoxAscent) {
                        const t = document.createElement("div");
                        t.innerText = e,
                        t.style.visibility = "hidden",
                        t.style.position = "absolute",
                        t.style.top = "-1000000px;",
                        t.style.fontFamily = this.style.fontFamily || "",
                        t.style.fontSize = this.style.fontSize + "",
                        document.body.appendChild(t);
                        const n = t.getBoundingClientRect();
                        document.body.removeChild(t);
                        const s = n.height
                          , a = i.width;
                        r = {
                            actualBoundingBoxAscent: s,
                            actualBoundingBoxDescent: 0,
                            actualBoundingBoxLeft: 0,
                            actualBoundingBoxRight: a,
                            fontBoundingBoxAscent: s,
                            fontBoundingBoxDescent: 0,
                            width: a
                        }
                    } else
                        r = {
                            actualBoundingBoxAscent: i.actualBoundingBoxAscent,
                            actualBoundingBoxDescent: i.actualBoundingBoxDescent,
                            actualBoundingBoxLeft: i.actualBoundingBoxLeft,
                            actualBoundingBoxRight: i.actualBoundingBoxRight,
                            fontBoundingBoxAscent: i.actualBoundingBoxAscent,
                            fontBoundingBoxDescent: i.actualBoundingBoxDescent,
                            width: i.width
                        };
                    const n = i.width;
                    switch (this.style.textAlign) {
                    case "right":
                    case "end":
                        r.actualBoundingBoxLeft = n,
                        r.actualBoundingBoxRight = 0;
                        break;
                    case "center":
                        r.actualBoundingBoxLeft = n / 2,
                        r.actualBoundingBoxRight = n / 2;
                        break;
                    default:
                        r.actualBoundingBoxLeft = 0,
                        r.actualBoundingBoxRight = n
                    }
                    return r
                }
            }
            class we {
                constructor() {
                    Object.defineProperty(this, "fill", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "fillOpacity", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "textAlign", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "fontFamily", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "fontSize", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "fontWeight", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "fontStyle", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "fontVariant", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "textDecoration", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "shadowColor", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "shadowBlur", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "shadowOffsetX", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "shadowOffsetY", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "shadowOpacity", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "lineHeight", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: (0,
                        C.aQ)(120)
                    }),
                    Object.defineProperty(this, "baselineRatio", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: .19
                    }),
                    Object.defineProperty(this, "direction", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "textBaseline", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "oversizedBehavior", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "none"
                    }),
                    Object.defineProperty(this, "breakWords", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "ellipsis", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "…"
                    }),
                    Object.defineProperty(this, "maxWidth", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "maxHeight", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "minScale", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "ignoreFormatting", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    })
                }
            }
            class xe extends ye {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "textType", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "circular"
                    }),
                    Object.defineProperty(this, "radius", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "startAngle", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "inside", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "orientation", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "auto"
                    }),
                    Object.defineProperty(this, "kerning", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_textReversed", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    })
                }
                _render(e) {
                    "circular" === this.textType ? this._renderCircular(e) : super._render(e)
                }
                _renderCircular(e) {
                    if (this.textVisible) {
                        const t = this._layer || e;
                        this._prerender(t);
                        const i = this._isInteractive()
                          , r = t.context
                          , n = t.dirty
                          , s = this._renderer._ghostLayer.context;
                        r.save(),
                        i && s.save(),
                        this._textInfo || this._measure(t);
                        let a = this.radius || 0
                          , o = this.startAngle || 0
                          , l = 0
                          , u = this.orientation
                          , c = "auto" == u ? "auto" : "inward" == u;
                        const d = this.inside
                          , p = this.style.textAlign || "left"
                          , f = this.kerning || 0;
                        let g = "left" == p ? 1 : -1;
                        const m = !this._textReversed;
                        if ("auto" == c) {
                            let e = 0
                              , t = 0;
                            h.each(this._textInfo, ( (t, i) => {
                                const r = o + t.width / (a - t.height) / 2 * -g;
                                r > e && (e = r)
                            }
                            )),
                            t = "left" == p ? (e + l / 2) * j.DEGREES : "right" == p ? (e - l / 2) * j.DEGREES : o * j.DEGREES,
                            t = j.normalizeAngle(t),
                            c = t >= 270 || t <= 90
                        }
                        1 == c && m && (this._textInfo.reverse(),
                        this._textReversed = !0),
                        h.each(this._textInfo, ( (e, t) => {
                            const u = e.height;
                            d || (a += u),
                            (-1 == g && c || 1 == g && !c) && m && e.textChunks.reverse();
                            let b = o;
                            l = 0,
                            "center" == p && (b += e.width / (a - u) / 2 * -g,
                            l = b - o),
                            b += Math.PI * (c ? 0 : 1),
                            r.save(),
                            i && s.save(),
                            r.rotate(b),
                            i && s.rotate(b);
                            let _ = 0;
                            h.each(e.textChunks, ( (e, t) => {
                                const o = e.text
                                  , l = e.width;
                                _ = l / 2 / (a - u) * g,
                                r.rotate(_),
                                i && s.rotate(_),
                                e.style && (r.save(),
                                s.save(),
                                r.font = e.style,
                                i && (s.font = e.style)),
                                e.fill && (r.save(),
                                r.fillStyle = e.fill.toCSS()),
                                r.textBaseline = "middle",
                                r.textAlign = "center",
                                i && (s.textBaseline = "middle",
                                s.textAlign = "center"),
                                n && r.fillText(o, 0, (c ? 1 : -1) * (0 - a + u / 2)),
                                i && s.fillText(o, 0, (c ? 1 : -1) * (0 - a + u / 2)),
                                e.fill && r.restore(),
                                e.style && (r.restore(),
                                s.restore()),
                                _ = (l / 2 + f) / (a - u) * g,
                                r.rotate(_),
                                i && s.rotate(_)
                            }
                            )),
                            r.restore(),
                            i && s.restore(),
                            d && (a -= u)
                        }
                        )),
                        r.restore(),
                        i && s.restore()
                    }
                }
                _measure(e) {
                    return "circular" === this.textType ? this._measureCircular(e) : super._measure(e)
                }
                _measureCircular(e) {
                    const t = e.context
                      , i = this._renderer._ghostLayer.context
                      , r = "rtl" == this.style.direction
                      , n = this.style.oversizedBehavior
                      , s = this.style.maxWidth
                      , a = L.isNumber(s) && "truncate" == n
                      , o = this.style.ellipsis || "";
                    let l;
                    this.textVisible = !0,
                    this._textInfo = [],
                    this._textReversed = !1,
                    t.save(),
                    i.save(),
                    this._prerender(e, !0);
                    const u = this.text.toString().replace(/\r/g, "").split(/\n/);
                    let c = !0
                      , d = 0
                      , p = 0;
                    return h.each(u, ( (e, n) => {
                        let u, f, g, m = N.V.chunk(e, !1, this.style.ignoreFormatting), b = {
                            offsetY: p,
                            ascent: 0,
                            width: 0,
                            height: 0,
                            left: 0,
                            right: 0,
                            textChunks: []
                        };
                        h.each(m, ( (e, n) => {
                            if ("format" == e.type) {
                                if ("[/]" == e.text)
                                    c || (t.restore(),
                                    i.restore(),
                                    c = !0),
                                    f = void 0,
                                    u = void 0,
                                    g = void 0;
                                else {
                                    let r = N.V.getTextStyle(e.text);
                                    const n = this._getFontStyle(r);
                                    t.save(),
                                    i.save(),
                                    t.font = n,
                                    u = n,
                                    r.fill && (f = r.fill),
                                    r.width && (g = L.toNumber(r.width)),
                                    c = !1
                                }
                                a && (l = this._measureText(o, t))
                            } else if ("value" == e.type) {
                                const i = e.text.match(/./gu) || [];
                                r && i.reverse();
                                for (let e = 0; e < i.length; e++) {
                                    const n = i[e]
                                      , h = this._measureText(n, t);
                                    let c = h.width;
                                    u && g && g > c && (c = g);
                                    const p = h.actualBoundingBoxAscent + h.actualBoundingBoxDescent;
                                    if (p > b.height && (b.height = p),
                                    h.actualBoundingBoxAscent > b.ascent && (b.ascent = h.actualBoundingBoxAscent),
                                    b.width += c,
                                    b.left += h.actualBoundingBoxLeft,
                                    b.right += h.actualBoundingBoxRight,
                                    b.textChunks.push({
                                        style: u,
                                        fill: f,
                                        text: n,
                                        width: c,
                                        height: p + h.actualBoundingBoxDescent,
                                        left: h.actualBoundingBoxLeft,
                                        right: h.actualBoundingBoxRight,
                                        ascent: h.actualBoundingBoxAscent,
                                        offsetX: 0,
                                        offsetY: p,
                                        textDecoration: void 0
                                    }),
                                    d += c,
                                    a) {
                                        l || (l = this._measureText(o, t));
                                        const e = l.actualBoundingBoxLeft + l.actualBoundingBoxRight;
                                        if (d += e,
                                        d + e > s) {
                                            1 == b.textChunks.length ? this.textVisible = !1 : (b.width += e,
                                            b.left += l.actualBoundingBoxLeft,
                                            b.right += l.actualBoundingBoxRight,
                                            b.textChunks.push({
                                                style: u,
                                                fill: f,
                                                text: o,
                                                width: e,
                                                height: p + l.actualBoundingBoxDescent,
                                                left: l.actualBoundingBoxLeft,
                                                right: l.actualBoundingBoxRight,
                                                ascent: l.actualBoundingBoxAscent,
                                                offsetX: 0,
                                                offsetY: p,
                                                textDecoration: void 0
                                            }));
                                            break
                                        }
                                    }
                                    if (r)
                                        break
                                }
                            }
                        }
                        )),
                        this.style.lineHeight instanceof C.gG ? b.height *= this.style.lineHeight.value : b.height *= this.style.lineHeight || 1.2,
                        this._textInfo.push(b),
                        p += b.height
                    }
                    )),
                    c || (t.restore(),
                    i.restore()),
                    "hide" == n && d > s && (this.textVisible = !1),
                    h.each(this._textInfo, (e => {
                        h.each(e.textChunks, (t => {
                            t.offsetY += Math.round((e.height - t.height + (e.ascent - t.ascent)) / 2)
                        }
                        ))
                    }
                    )),
                    t.restore(),
                    i.restore(),
                    {
                        left: 0,
                        top: 0,
                        right: 0,
                        bottom: 0
                    }
                }
            }
            class Oe extends K {
                constructor(e, t) {
                    super(e),
                    Object.defineProperty(this, "width", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "height", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "image", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "tainted", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "shadowColor", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "shadowBlur", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "shadowOffsetX", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "shadowOffsetY", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "shadowOpacity", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_imageMask", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    this.image = t
                }
                _dispose() {
                    super._dispose(),
                    this._imageMask && $(this._imageMask)
                }
                getLocalBounds() {
                    if (!this._localBounds) {
                        let e = 0
                          , t = 0;
                        this.width && (e = this.width),
                        this.height && (t = this.height),
                        this._localBounds = {
                            left: 0,
                            top: 0,
                            right: e,
                            bottom: t
                        },
                        this._addBounds(this._localBounds)
                    }
                    return this._localBounds
                }
                _render(e) {
                    if (super._render(e),
                    this.image) {
                        const t = this._layer || e;
                        if (void 0 === this.tainted && (this.tainted = X(this.image),
                        t.tainted = !0),
                        this.tainted && this._renderer._omitTainted)
                            return;
                        if (t.dirty) {
                            this.shadowColor && (t.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1)),
                            this.shadowBlur && (t.context.shadowBlur = this.shadowBlur),
                            this.shadowOffsetX && (t.context.shadowOffsetX = this.shadowOffsetX),
                            this.shadowOffsetY && (t.context.shadowOffsetY = this.shadowOffsetY);
                            const e = this.width || this.image.naturalWidth
                              , i = this.height || this.image.naturalHeight;
                            t.context.drawImage(this.image, 0, 0, e, i)
                        }
                        if (this.interactive && this._isInteractive()) {
                            const e = this._getMask(this.image);
                            this._renderer._ghostLayer.context.drawImage(e, 0, 0)
                        }
                    }
                }
                clear() {
                    super.clear(),
                    this.image = void 0,
                    this._imageMask = void 0
                }
                _getMask(e) {
                    if (void 0 === this._imageMask) {
                        const t = this.width || e.naturalWidth
                          , i = this.height || e.naturalHeight
                          , r = document.createElement("canvas");
                        r.width = t,
                        r.height = i;
                        const n = r.getContext("2d");
                        n.imageSmoothingEnabled = !1,
                        n.fillStyle = this._getColorId(),
                        n.fillRect(0, 0, t, i),
                        X(e) || (n.globalCompositeOperation = "destination-in",
                        n.drawImage(e, 0, 0, t, i)),
                        this._imageMask = r
                    }
                    return this._imageMask
                }
            }
            class Pe {
                constructor(e, t, i, r) {
                    Object.defineProperty(this, "event", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: e
                    }),
                    Object.defineProperty(this, "originalPoint", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: t
                    }),
                    Object.defineProperty(this, "point", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: i
                    }),
                    Object.defineProperty(this, "bbox", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: r
                    }),
                    Object.defineProperty(this, "id", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "simulated", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "native", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !0
                    }),
                    u.supports("touchevents") && e instanceof Touch ? this.id = e.identifier : this.id = null
                }
            }
            class De extends l.rk {
                constructor(e) {
                    if (super(),
                    Object.defineProperty(this, "view", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: document.createElement("div")
                    }),
                    Object.defineProperty(this, "_layerDom", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: document.createElement("div")
                    }),
                    Object.defineProperty(this, "layers", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    }),
                    Object.defineProperty(this, "_dirtyLayers", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    }),
                    Object.defineProperty(this, "defaultLayer", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this.getLayer(0)
                    }),
                    Object.defineProperty(this, "_ghostLayer", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new ke
                    }),
                    Object.defineProperty(this, "_patternCanvas", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: document.createElement("canvas")
                    }),
                    Object.defineProperty(this, "_patternContext", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this._patternCanvas.getContext("2d")
                    }),
                    Object.defineProperty(this, "_realWidth", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_realHeight", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_calculatedWidth", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_calculatedHeight", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "resolution", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "interactionsEnabled", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !0
                    }),
                    Object.defineProperty(this, "_listeners", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_events", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_colorId", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_colorMap", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_forceInteractive", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_omitTainted", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_hovering", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new Set
                    }),
                    Object.defineProperty(this, "_dragging", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    }),
                    Object.defineProperty(this, "_mousedown", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    }),
                    Object.defineProperty(this, "_lastPointerMoveEvent", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "tapToActivate", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "tapToActivateTimeout", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 3e3
                    }),
                    Object.defineProperty(this, "_touchActive", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_touchActiveTimeout", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    this.resolution = null == e ? window.devicePixelRatio : e,
                    this.view.style.position = "absolute",
                    this.view.setAttribute("aria-hidden", "true"),
                    this.view.appendChild(this._layerDom),
                    this._disposers.push(new l.ku(( () => {
                        O.each(this._events, ( (e, t) => {
                            t.disposer.dispose()
                        }
                        )),
                        h.each(this.layers, (e => {
                            $(e.view),
                            e.exportableView && $(e.exportableView)
                        }
                        )),
                        $(this._ghostLayer.view),
                        $(this._patternCanvas)
                    }
                    ))),
                    this._disposers.push(u.onZoom(( () => {
                        null == e && (this.resolution = window.devicePixelRatio)
                    }
                    ))),
                    u.supports("touchevents")) {
                        const e = e => {
                            0 !== this._dragging.length && h.eachContinue(this._dragging, (t => !t.value.shouldCancelTouch() || (e.preventDefault(),
                            !1))),
                            this._touchActiveTimeout && this._delayTouchDeactivate()
                        }
                        ;
                        this._disposers.push(u.addEventListener(window, "touchstart", e, {
                            passive: !1
                        })),
                        this._disposers.push(u.addEventListener(this.view, "touchstart", e, {
                            passive: !1
                        })),
                        this._disposers.push(u.addEventListener(this.view, "touchmove", ( () => {
                            this._touchActiveTimeout && this._delayTouchDeactivate()
                        }
                        ), {
                            passive: !0
                        })),
                        this._disposers.push(u.addEventListener(window, "click", (e => {
                            this._touchActive = !1
                        }
                        ), {
                            passive: !0
                        })),
                        this._disposers.push(u.addEventListener(this.view, "click", (e => {
                            window.setTimeout(( () => {
                                this._touchActive = !0,
                                this._delayTouchDeactivate()
                            }
                            ), 100)
                        }
                        ), {
                            passive: !0
                        }))
                    }
                    u.supports("wheelevents") && this._disposers.push(u.addEventListener(this.view, "wheel", (e => {
                        let t = !1;
                        this._hovering.forEach((e => {
                            if (e.wheelable)
                                return t = !0,
                                !1
                        }
                        )),
                        t && e.preventDefault()
                    }
                    ), {
                        passive: !1
                    }))
                }
                _delayTouchDeactivate() {
                    this._touchActiveTimeout && clearTimeout(this._touchActiveTimeout),
                    this.tapToActivateTimeout > 0 && (this._touchActiveTimeout = window.setTimeout(( () => {
                        this._touchActive = !1
                    }
                    ), this.tapToActivateTimeout))
                }
                get debugGhostView() {
                    return !!this._ghostLayer.view.parentNode
                }
                set debugGhostView(e) {
                    e ? this._ghostLayer.view.parentNode || this.view.appendChild(this._ghostLayer.view) : this._ghostLayer.view.parentNode && this._ghostLayer.view.parentNode.removeChild(this._ghostLayer.view)
                }
                createLinearGradient(e, t, i, r) {
                    return this.defaultLayer.context.createLinearGradient(e, t, i, r)
                }
                createRadialGradient(e, t, i, r, n, s) {
                    return this.defaultLayer.context.createRadialGradient(e, t, i, r, n, s)
                }
                createPattern(e, t, i, r, n) {
                    return this._patternCanvas.width = r,
                    this._patternCanvas.height = n,
                    this._patternContext.clearRect(0, 0, r, n),
                    t.renderDetached(this._patternContext),
                    e.renderDetached(this._patternContext),
                    this._patternContext.createPattern(this._patternCanvas, i)
                }
                makeContainer() {
                    return new q(this)
                }
                makeGraphics() {
                    return new ve(this)
                }
                makeText(e, t) {
                    return new ye(this,e,t)
                }
                makeTextStyle() {
                    return new we
                }
                makeRadialText(e, t) {
                    return new xe(this,e,t)
                }
                makePicture(e) {
                    return new Oe(this,e)
                }
                resizeLayer(e) {
                    e.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution)
                }
                resizeGhost() {
                    this._ghostLayer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution)
                }
                resize(e, t, i, r) {
                    this._realWidth = e,
                    this._realHeight = t,
                    this._calculatedWidth = i,
                    this._calculatedHeight = r,
                    h.each(this.layers, (e => {
                        e && (e.dirty = !0,
                        this.resizeLayer(e))
                    }
                    )),
                    this.resizeGhost(),
                    this.view.style.width = i + "px",
                    this.view.style.height = r + "px"
                }
                createDetachedLayer(e=!1) {
                    const t = document.createElement("canvas")
                      , i = t.getContext("2d", {
                        willReadFrequently: e
                    })
                      , r = new Te(t,i);
                    return t.style.position = "absolute",
                    t.style.top = "0px",
                    t.style.left = "0px",
                    r
                }
                getLayerByOrder(e) {
                    const t = this.layers
                      , i = t.length;
                    for (let r = 0; r < i; r++) {
                        const i = t[r];
                        if (i.order == e)
                            return i
                    }
                }
                getLayer(e, t=!0) {
                    let i = this.getLayerByOrder(e);
                    if (i)
                        return i;
                    const r = this.createDetachedLayer(99 == e);
                    r.order = e,
                    r.visible = t,
                    r.visible && this.resizeLayer(r);
                    const n = this.layers;
                    n.push(r),
                    n.sort(( (e, t) => e.order > t.order ? 1 : e.order < t.order ? -1 : 0));
                    const s = n.length;
                    let a;
                    for (let e = h.indexOf(n, r) + 1; e < s; e++)
                        if (n[e].visible) {
                            a = n[e];
                            break
                        }
                    return r.visible && (void 0 === a ? this._layerDom.appendChild(r.view) : this._layerDom.insertBefore(r.view, a.view)),
                    r
                }
                render(e) {
                    if (this._dirtyLayers.length = 0,
                    h.each(this.layers, (e => {
                        e && e.dirty && e.visible && (this._dirtyLayers.push(e),
                        e.clear())
                    }
                    )),
                    this._ghostLayer.clear(),
                    e.render(this.defaultLayer),
                    this._ghostLayer.context.restore(),
                    h.each(this.layers, (e => {
                        if (e) {
                            const t = e.context;
                            t.beginPath(),
                            t.moveTo(0, 0),
                            t.stroke()
                        }
                    }
                    )),
                    h.each(this._dirtyLayers, (e => {
                        e.context.restore(),
                        e.dirty = !1
                    }
                    )),
                    this._hovering.size && this._lastPointerMoveEvent) {
                        const {events: e, target: t, native: i} = this._lastPointerMoveEvent;
                        h.each(e, (e => {
                            this._dispatchGlobalMousemove(e, t, i)
                        }
                        ))
                    }
                }
                paintId(e) {
                    const t = function(e) {
                        const t = [0, 0, 0];
                        for (let i = 0; i < 24; i++)
                            t[i % 3] <<= 1,
                            t[i % 3] |= 1 & e,
                            e >>= 1;
                        return (0 | t[2]) + (t[1] << 8) + (t[0] << 16)
                    }(++this._colorId)
                      , i = E.Il.fromHex(t).toCSS();
                    return this._colorMap[i] = e,
                    i
                }
                _removeObject(e) {
                    void 0 !== e._colorId && delete this._colorMap[e._colorId]
                }
                _adjustBoundingBox(e) {
                    const t = this._ghostLayer.margin;
                    return new DOMRect(-t.left,-t.top,e.width + t.left + t.right,e.height + t.top + t.bottom)
                }
                getEvent(e, t=!0) {
                    const i = this.view.getBoundingClientRect()
                      , r = e.clientX || 0
                      , n = e.clientY || 0
                      , s = this._calculatedWidth / this._realWidth
                      , a = this._calculatedHeight / this._realHeight
                      , o = {
                        x: r - i.left,
                        y: n - i.top
                    }
                      , l = {
                        x: (r - (t ? i.left : 0)) * s,
                        y: (n - (t ? i.top : 0)) * a
                    };
                    return new Pe(e,o,l,this._adjustBoundingBox(i))
                }
                _getHitTarget(e, t, i) {
                    if (0 === t.width || 0 === t.height || e.x < t.left || e.x > t.right || e.y < t.top || e.y > t.bottom)
                        return;
                    if (!i || !this._layerDom.contains(i))
                        return;
                    const r = this._ghostLayer.getImageData(e, t);
                    if (0 === r.data[0] && 0 === r.data[1] && 0 === r.data[2])
                        return !1;
                    const n = E.Il.fromRGB(r.data[0], r.data[1], r.data[2]).toCSS();
                    return this._colorMap[n]
                }
                _withEvents(e, t) {
                    const i = this._events[e];
                    if (void 0 !== i) {
                        i.dispatching = !0;
                        try {
                            t(i)
                        } finally {
                            i.dispatching = !1,
                            i.cleanup && (i.cleanup = !1,
                            h.keepIf(i.callbacks, (e => !e.disposed)),
                            0 === i.callbacks.length && (i.disposer.dispose(),
                            delete this._events[e]))
                        }
                    }
                }
                _dispatchEventAll(e, t) {
                    this.interactionsEnabled && this._withEvents(e, (e => {
                        h.each(e.callbacks, (e => {
                            e.disposed || e.callback.call(e.context, t)
                        }
                        ))
                    }
                    ))
                }
                _dispatchEvent(e, t, i) {
                    if (!this.interactionsEnabled)
                        return !1;
                    let r = !1;
                    return this._withEvents(e, (e => {
                        h.each(e.callbacks, (e => {
                            e.disposed || e.object !== t || (e.callback.call(e.context, i),
                            r = !0)
                        }
                        ))
                    }
                    )),
                    r
                }
                _dispatchMousedown(e, t) {
                    const i = e.button;
                    if (0 != i && 2 != i && 1 != i && void 0 !== i)
                        return;
                    const r = this.getEvent(e)
                      , n = this._getHitTarget(r.originalPoint, r.bbox, t);
                    if (n) {
                        const e = r.id;
                        let t = !1;
                        Y(n, (i => {
                            const n = {
                                id: e,
                                value: i
                            };
                            return this._mousedown.push(n),
                            !t && this._dispatchEvent("pointerdown", i, r) && (t = !0,
                            this._dragging.some((t => t.value === i && t.id === e)) || this._dragging.push(n)),
                            !0
                        }
                        ))
                    }
                }
                _dispatchGlobalMousemove(e, t, i) {
                    const r = this.getEvent(e)
                      , n = this._getHitTarget(r.originalPoint, r.bbox, t);
                    r.native = i,
                    n ? (this._hovering.forEach((e => {
                        e.contains(n) || (this._hovering.delete(e),
                        e.cursorOverStyle && u.setStyle(document.body, "cursor", e._replacedCursorStyle),
                        this._dispatchEvent("pointerout", e, r))
                    }
                    )),
                    r.native && Y(n, (e => (this._hovering.has(e) || (this._hovering.add(e),
                    e.cursorOverStyle && (e._replacedCursorStyle = u.getStyle(document.body, "cursor"),
                    u.setStyle(document.body, "cursor", e.cursorOverStyle)),
                    this._dispatchEvent("pointerover", e, r)),
                    !0)))) : (this._hovering.forEach((e => {
                        e.cursorOverStyle && u.setStyle(document.body, "cursor", e._replacedCursorStyle),
                        this._dispatchEvent("pointerout", e, r)
                    }
                    )),
                    this._hovering.clear()),
                    this._dispatchEventAll("globalpointermove", r)
                }
                _dispatchGlobalMouseup(e, t) {
                    const i = this.getEvent(e);
                    i.native = t,
                    this._dispatchEventAll("globalpointerup", i)
                }
                _dispatchDragMove(e) {
                    if (0 !== this._dragging.length) {
                        const t = this.getEvent(e)
                          , i = t.id;
                        this._dragging.forEach((e => {
                            e.id === i && this._dispatchEvent("pointermove", e.value, t)
                        }
                        ))
                    }
                }
                _dispatchDragEnd(e, t) {
                    const i = e.button;
                    let r;
                    if (0 == i || void 0 === i)
                        r = "click";
                    else if (2 == i)
                        r = "rightclick";
                    else {
                        if (1 != i)
                            return;
                        r = "middleclick"
                    }
                    const n = this.getEvent(e)
                      , s = n.id;
                    if (0 !== this._mousedown.length) {
                        const e = this._getHitTarget(n.originalPoint, n.bbox, t);
                        e && this._mousedown.forEach((t => {
                            t.id === s && t.value.contains(e) && this._dispatchEvent(r, t.value, n)
                        }
                        )),
                        this._mousedown.length = 0
                    }
                    0 !== this._dragging.length && (this._dragging.forEach((e => {
                        e.id === s && this._dispatchEvent("pointerup", e.value, n)
                    }
                    )),
                    this._dragging.length = 0)
                }
                _dispatchDoubleClick(e, t) {
                    const i = this.getEvent(e)
                      , r = this._getHitTarget(i.originalPoint, i.bbox, t);
                    r && Y(r, (e => !this._dispatchEvent("dblclick", e, i)))
                }
                _dispatchWheel(e, t) {
                    const i = this.getEvent(e)
                      , r = this._getHitTarget(i.originalPoint, i.bbox, t);
                    r && Y(r, (e => !this._dispatchEvent("wheel", e, i)))
                }
                _makeSharedEvent(e, t) {
                    if (void 0 === this._listeners[e]) {
                        const i = t();
                        this._listeners[e] = new l.DM(( () => {
                            delete this._listeners[e],
                            i.dispose()
                        }
                        ))
                    }
                    return this._listeners[e].increment()
                }
                _onPointerEvent(e, t) {
                    let i = !1
                      , r = null;
                    function n() {
                        r = null,
                        i = !1
                    }
                    return new l.FV([new l.ku(( () => {
                        null !== r && clearTimeout(r),
                        n()
                    }
                    )), u.addEventListener(this.view, u.getRendererEvent(e), (e => {
                        i = !0,
                        null !== r && clearTimeout(r),
                        r = window.setTimeout(n, 0)
                    }
                    )), W(window, e, ( (e, n) => {
                        null !== r && (clearTimeout(r),
                        r = null),
                        t(e, n, i),
                        i = !1
                    }
                    ))])
                }
                _initEvent(e) {
                    switch (e) {
                    case "globalpointermove":
                    case "pointerover":
                    case "pointerout":
                        return this._makeSharedEvent("pointermove", ( () => {
                            const e = (e, t, i) => {
                                this._lastPointerMoveEvent = {
                                    events: e,
                                    target: t,
                                    native: i
                                },
                                h.each(e, (e => {
                                    this._dispatchGlobalMousemove(e, t, i)
                                }
                                ))
                            }
                            ;
                            return new l.FV([this._onPointerEvent("pointerdown", e), this._onPointerEvent("pointermove", e)])
                        }
                        ));
                    case "globalpointerup":
                        return this._makeSharedEvent("pointerup", ( () => {
                            const e = this._onPointerEvent("pointerup", ( (e, t, i) => {
                                h.each(e, (e => {
                                    this._dispatchGlobalMouseup(e, i)
                                }
                                )),
                                this._lastPointerMoveEvent = {
                                    events: e,
                                    target: t,
                                    native: i
                                }
                            }
                            ))
                              , t = this._onPointerEvent("pointercancel", ( (e, t, i) => {
                                h.each(e, (e => {
                                    this._dispatchGlobalMouseup(e, i)
                                }
                                )),
                                this._lastPointerMoveEvent = {
                                    events: e,
                                    target: t,
                                    native: i
                                }
                            }
                            ));
                            return new l.ku(( () => {
                                e.dispose(),
                                t.dispose()
                            }
                            ))
                        }
                        ));
                    case "click":
                    case "rightclick":
                    case "middleclick":
                    case "pointerdown":
                    case "pointermove":
                    case "pointerup":
                        return this._makeSharedEvent("pointerdown", ( () => {
                            const e = this._onPointerEvent("pointerdown", ( (e, t) => {
                                h.each(e, (e => {
                                    this._dispatchMousedown(e, t)
                                }
                                ))
                            }
                            ))
                              , t = this._onPointerEvent("pointermove", (e => {
                                h.each(e, (e => {
                                    this._dispatchDragMove(e)
                                }
                                ))
                            }
                            ))
                              , i = this._onPointerEvent("pointerup", ( (e, t) => {
                                h.each(e, (e => {
                                    this._dispatchDragEnd(e, t)
                                }
                                ))
                            }
                            ))
                              , r = this._onPointerEvent("pointercancel", ( (e, t) => {
                                h.each(e, (e => {
                                    this._dispatchDragEnd(e, t)
                                }
                                ))
                            }
                            ));
                            return new l.ku(( () => {
                                e.dispose(),
                                t.dispose(),
                                i.dispose(),
                                r.dispose()
                            }
                            ))
                        }
                        ));
                    case "dblclick":
                        return this._makeSharedEvent("dblclick", ( () => this._onPointerEvent("dblclick", ( (e, t) => {
                            h.each(e, (e => {
                                this._dispatchDoubleClick(e, t)
                            }
                            ))
                        }
                        ))));
                    case "wheel":
                        return this._makeSharedEvent("wheel", ( () => u.addEventListener(window, u.getRendererEvent("wheel"), (e => {
                            this._dispatchWheel(e, u.getEventTarget(e))
                        }
                        ), {
                            passive: !1
                        })))
                    }
                }
                _addEvent(e, t, i, r) {
                    let n = this._events[t];
                    void 0 === n && (n = this._events[t] = {
                        disposer: this._initEvent(t),
                        callbacks: [],
                        dispatching: !1,
                        cleanup: !1
                    });
                    const s = {
                        object: e,
                        context: r,
                        callback: i,
                        disposed: !1
                    };
                    return n.callbacks.push(s),
                    new l.ku(( () => {
                        s.disposed = !0,
                        n.dispatching ? n.cleanup = !0 : (h.removeFirst(n.callbacks, s),
                        0 === n.callbacks.length && (n.disposer.dispose(),
                        delete this._events[t]))
                    }
                    ))
                }
                getCanvas(e, t) {
                    this.render(e),
                    t || (t = {});
                    let i = this.resolution
                      , r = Math.floor(this._calculatedWidth * this.resolution)
                      , n = Math.floor(this._calculatedHeight * this.resolution);
                    if (t.minWidth && t.minWidth > r) {
                        let e = t.minWidth / r;
                        e > i && (i = e * this.resolution)
                    }
                    if (t.minHeight && t.minHeight > n) {
                        let e = t.minHeight / n;
                        e > i && (i = e * this.resolution)
                    }
                    if (t.maxWidth && t.maxWidth < r) {
                        let e = t.maxWidth / r;
                        e < i && (i = e * this.resolution)
                    }
                    if (t.maxHeight && t.maxHeight > n) {
                        let e = t.maxHeight / n;
                        e < i && (i = e * this.resolution)
                    }
                    t.maintainPixelRatio && (i /= this.resolution);
                    const s = [];
                    let a = !1;
                    const o = document.createElement("canvas");
                    i != this.resolution && (a = !0,
                    r = r * i / this.resolution,
                    n = n * i / this.resolution),
                    o.width = r,
                    o.height = n,
                    o.style.position = "fixed",
                    o.style.top = "-10000px",
                    this.view.appendChild(o),
                    s.push(o);
                    const l = o.getContext("2d");
                    let u = 0
                      , c = 0
                      , d = !1;
                    return h.each(this.layers, (e => {
                        if (e && e.visible && (e.tainted || a)) {
                            d = !0,
                            e.exportableView = e.view,
                            e.exportableContext = e.context,
                            e.view = document.createElement("canvas"),
                            e.view.style.position = "fixed",
                            e.view.style.top = "-10000px",
                            this.view.appendChild(e.view),
                            s.push(e.view);
                            let t = 0
                              , a = 0;
                            e.margin && (t += e.margin.left || 0 + e.margin.right || 0,
                            a += e.margin.top || 0 + e.margin.bottom || 0),
                            e.view.width = r + t,
                            e.view.height = n + a,
                            e.context = e.view.getContext("2d"),
                            e.dirty = !0,
                            e.scale = i
                        }
                    }
                    )),
                    d && (this._omitTainted = !0,
                    this.render(e),
                    this._omitTainted = !1),
                    h.each(this.layers, (e => {
                        if (e && e.visible) {
                            let t = 0
                              , i = 0;
                            e.margin && (t = -(e.margin.left || 0) * this.resolution,
                            i = -(e.margin.top || 0) * this.resolution),
                            l.drawImage(e.view, t, i),
                            e.exportableView && (e.view = e.exportableView,
                            e.exportableView = void 0),
                            e.exportableContext && (e.context = e.exportableContext,
                            e.exportableContext = void 0),
                            u < e.view.clientWidth && (u = e.view.clientWidth),
                            c < e.view.clientHeight && (c = e.view.clientHeight),
                            e.scale = void 0
                        }
                    }
                    )),
                    o.style.width = u + "px",
                    o.style.height = c + "px",
                    h.each(s, (e => {
                        e.style.position = "",
                        e.style.top = "",
                        this.view.removeChild(e)
                    }
                    )),
                    o
                }
            }
            class ke {
                constructor() {
                    Object.defineProperty(this, "view", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "context", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "margin", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {
                            left: 0,
                            right: 0,
                            top: 0,
                            bottom: 0
                        }
                    }),
                    Object.defineProperty(this, "_width", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_height", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    this.view = document.createElement("canvas"),
                    this.context = this.view.getContext("2d", {
                        alpha: !1,
                        willReadFrequently: !0
                    }),
                    this.context.imageSmoothingEnabled = !1,
                    this.view.style.position = "absolute",
                    this.view.style.top = "0px",
                    this.view.style.left = "0px"
                }
                resize(e, t, i, r, n) {
                    e += this.margin.left + this.margin.right,
                    t += this.margin.top + this.margin.bottom,
                    i += this.margin.left + this.margin.right,
                    r += this.margin.top + this.margin.bottom,
                    this.view.style.left = -this.margin.left + "px",
                    this.view.style.top = -this.margin.top + "px",
                    this._width = Math.floor(e * n),
                    this._height = Math.floor(t * n),
                    this.view.width = this._width,
                    this.view.style.width = i + "px",
                    this.view.height = this._height,
                    this.view.style.height = r + "px"
                }
                getImageData(e, t) {
                    return this.context.getImageData(Math.round((e.x - t.left) / t.width * this._width), Math.round((e.y - t.top) / t.height * this._height), 1, 1)
                }
                setMargin(e) {
                    this.margin.left = 0,
                    this.margin.right = 0,
                    this.margin.top = 0,
                    this.margin.bottom = 0,
                    h.each(e, (e => {
                        e.margin && (this.margin.left = Math.max(this.margin.left, e.margin.left),
                        this.margin.right = Math.max(this.margin.right, e.margin.right),
                        this.margin.top = Math.max(this.margin.top, e.margin.top),
                        this.margin.bottom = Math.max(this.margin.bottom, e.margin.bottom))
                    }
                    ))
                }
                clear() {
                    this.context.save(),
                    this.context.fillStyle = "#000",
                    this.context.fillRect(0, 0, this._width, this._height)
                }
            }
            class Te {
                constructor(e, t) {
                    Object.defineProperty(this, "view", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "context", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "tainted", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !0
                    }),
                    Object.defineProperty(this, "margin", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "order", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "visible", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !0
                    }),
                    Object.defineProperty(this, "width", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "height", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "scale", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "dirty", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !0
                    }),
                    Object.defineProperty(this, "exportableView", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "exportableContext", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_width", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_height", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    this.view = e,
                    this.context = t
                }
                resize(e, t, i, r, n) {
                    null != this.width && (e = this.width,
                    i = this.width),
                    null != this.height && (t = this.height,
                    r = this.height),
                    this.margin ? (e += this.margin.left + this.margin.right,
                    t += this.margin.top + this.margin.bottom,
                    i += this.margin.left + this.margin.right,
                    r += this.margin.top + this.margin.bottom,
                    this.view.style.left = -this.margin.left + "px",
                    this.view.style.top = -this.margin.top + "px") : (this.view.style.left = "0px",
                    this.view.style.top = "0px"),
                    this._width = Math.floor(e * n),
                    this._height = Math.floor(t * n),
                    this.view.width = this._width,
                    this.view.style.width = i + "px",
                    this.view.height = this._height,
                    this.view.style.height = r + "px"
                }
                clear() {
                    this.context.save(),
                    this.context.clearRect(0, 0, this._width, this._height)
                }
            }
            var Me = i(2132)
              , Ee = i(3145)
              , Se = i(3540);
            function Ce(e, t) {
                null == e ? requestAnimationFrame(t) : setTimeout(( () => {
                    requestAnimationFrame(t)
                }
                ), 1e3 / e)
            }
            class Ne {
                constructor(e, t={}, i) {
                    if (Object.defineProperty(this, "dom", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_inner", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_settings", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_isDirty", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_isDirtyParents", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_dirty", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_dirtyParents", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_dirtyBounds", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_dirtyPositions", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_ticker", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: null
                    }),
                    Object.defineProperty(this, "_tickers", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    }),
                    Object.defineProperty(this, "_updateTick", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !0
                    }),
                    Object.defineProperty(this, "events", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new k.p
                    }),
                    Object.defineProperty(this, "animationTime", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: null
                    }),
                    Object.defineProperty(this, "_animations", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    }),
                    Object.defineProperty(this, "_renderer", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_rootContainer", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "container", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "tooltipContainer", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_tooltipContainerSettings", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_tooltip", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "language", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: D.new(this, {})
                    }),
                    Object.defineProperty(this, "locale", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: P.Z
                    }),
                    Object.defineProperty(this, "utc", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "timezone", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "fps", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "numberFormatter", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: v.e.new(this, {})
                    }),
                    Object.defineProperty(this, "dateFormatter", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: y.C.new(this, {})
                    }),
                    Object.defineProperty(this, "durationFormatter", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: w.$.new(this, {})
                    }),
                    Object.defineProperty(this, "tabindex", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_tabindexes", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    }),
                    Object.defineProperty(this, "_a11yD", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_focusElementDirty", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_focusElementContainer", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_focusedSprite", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_isShift", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_keyboardDragPoint", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_tooltipElementContainer", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_readerAlertElement", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_logo", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_tooltipDiv", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "nonce", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "interfaceColors", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "verticalLayout", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: a.Z.new(this, {})
                    }),
                    Object.defineProperty(this, "horizontalLayout", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: s.G.new(this, {})
                    }),
                    Object.defineProperty(this, "gridLayout", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: o.M.new(this, {})
                    }),
                    Object.defineProperty(this, "_paused", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "autoResize", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !0
                    }),
                    Object.defineProperty(this, "_fontHash", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: ""
                    }),
                    Object.defineProperty(this, "_isDisposed", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_disposers", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    }),
                    Object.defineProperty(this, "_resizeSensorDisposer", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_tooltips", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    }),
                    Object.defineProperty(this, "_htmlElementContainer", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_htmlEnabledContainers", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    }),
                    !i)
                        throw new Error("You cannot use `new Class()`, instead use `Class.new()`");
                    let r, n;
                    if (this._settings = t,
                    0 == t.accessible && (this._a11yD = !0),
                    null == t.useSafeResolution && (t.useSafeResolution = !0),
                    t.useSafeResolution && (r = u.getSafeResolution()),
                    this._renderer = new De(r),
                    n = e instanceof HTMLElement ? e : document.getElementById(e),
                    h.each(Ee.i_.rootElements, (e => {
                        if (e.dom === n)
                            throw new Error("You cannot have multiple Roots on the same DOM node")
                    }
                    )),
                    this.interfaceColors = g.v.new(this, {}),
                    null === n)
                        throw new Error("Could not find HTML element with id `" + e + "`");
                    this.dom = n;
                    let l = document.createElement("div");
                    l.style.position = "relative",
                    l.style.height = "100%",
                    n.appendChild(l);
                    const c = t.tooltipContainerBounds;
                    c && (this._tooltipContainerSettings = c),
                    this._inner = l,
                    this._updateComputedStyles(),
                    Ee.i_.rootElements.push(this)
                }
                static new(e, t) {
                    const i = new Ne(e,t,!0);
                    return i._init(),
                    i
                }
                moveDOM(e) {
                    let t;
                    if (t = e instanceof HTMLElement ? e : document.getElementById(e),
                    t) {
                        for (; this.dom.childNodes.length > 0; )
                            t.appendChild(this.dom.childNodes[0]);
                        this.dom = t,
                        this._initResizeSensor(),
                        this.resize()
                    }
                }
                _handleLogo() {
                    if (this._logo) {
                        const e = this._inner.offsetWidth
                          , t = this._inner.offsetHeight;
                        e <= 150 || t <= 60 ? this._logo.hide() : this._logo.show()
                    }
                }
                _showBranding() {
                    if (!this._logo) {
                        const e = this.tooltipContainer.children.push(r.W.new(this, {
                            interactive: !0,
                            interactiveChildren: !1,
                            position: "absolute",
                            setStateOnChildren: !0,
                            paddingTop: 9,
                            paddingRight: 9,
                            paddingBottom: 9,
                            paddingLeft: 9,
                            scale: .6,
                            y: (0,
                            C.aQ)(100),
                            centerY: C.AQ,
                            tooltipText: "Created using amCharts 5",
                            tooltipX: C.AQ,
                            cursorOverStyle: "pointer",
                            background: b.A.new(this, {
                                fill: (0,
                                E.$_)(4671320),
                                fillOpacity: 0,
                                tooltipY: 5
                            })
                        }))
                          , t = _.u.new(this, {
                            pointerOrientation: "horizontal",
                            paddingTop: 4,
                            paddingRight: 7,
                            paddingBottom: 4,
                            paddingLeft: 7
                        });
                        t.label.setAll({
                            fontSize: 12
                        }),
                        t.get("background").setAll({
                            fill: this.interfaceColors.get("background"),
                            stroke: this.interfaceColors.get("grid"),
                            strokeOpacity: .3
                        }),
                        e.set("tooltip", t),
                        e.events.on("click", ( () => {
                            window.open("https://www.amcharts.com/", "_blank")
                        }
                        )),
                        e.states.create("hover", {}),
                        e.children.push(m.T.new(this, {
                            stroke: (0,
                            E.$_)(13421772),
                            strokeWidth: 3,
                            svgPath: "M5 25 L13 25h13.6c3.4 0 6 0 10.3-4.3s5.2-12 8.6-12c3.4 0 4.3 8.6 7.7 8.6M83.4 25H79.8c-3.4 0-6 0-10.3-4.3s-5.2-12-8.6-12-4.3 8.6-7.7 8.6"
                        })).states.create("hover", {
                            stroke: (0,
                            E.$_)(3976191)
                        }),
                        e.children.push(m.T.new(this, {
                            stroke: (0,
                            E.$_)(8947848),
                            strokeWidth: 3,
                            svgPath: "M83.4 25h-31C37 25 39.5 4.4 28.4 4.4S18.9 24.2 4.3 25H0"
                        })).states.create("hover", {
                            stroke: (0,
                            E.$_)(4671320)
                        }),
                        this._logo = e,
                        this._handleLogo()
                    }
                }
                _getRealSize() {
                    return this._inner.getBoundingClientRect()
                }
                _getCalculatedSize(e) {
                    return this._settings.calculateSize ? this._settings.calculateSize(e) : {
                        width: e.width,
                        height: e.height
                    }
                }
                _init() {
                    const e = this._settings;
                    !1 !== e.accessible && (e.focusable && (this._inner.setAttribute("focusable", "true"),
                    this._inner.setAttribute("tabindex", this.tabindex + "")),
                    e.ariaLabel && this._inner.setAttribute("aria-label", e.ariaLabel));
                    const t = this._renderer
                      , i = this._getRealSize()
                      , n = this._getCalculatedSize(i)
                      , s = Math.floor(n.width)
                      , a = Math.floor(n.height)
                      , o = Math.floor(i.width)
                      , l = Math.floor(i.height)
                      , h = r.W.new(this, {
                        visible: !0,
                        width: s,
                        height: a
                    });
                    this._rootContainer = h,
                    this._rootContainer._defaultThemes.push(T.X.new(this));
                    const c = h.children.push(r.W.new(this, {
                        visible: !0,
                        width: C.AQ,
                        height: C.AQ
                    }));
                    this.container = c,
                    t.resize(o, l, s, a),
                    this._inner.appendChild(t.view),
                    this._initResizeSensor();
                    const d = document.createElement("div");
                    if (this._htmlElementContainer = d,
                    d.className = "am5-html-container",
                    d.style.position = "absolute",
                    d.style.pointerEvents = "none",
                    this._tooltipContainerSettings || (d.style.overflow = "hidden"),
                    this._inner.appendChild(d),
                    !0 !== this._a11yD) {
                        const e = document.createElement("div");
                        e.className = "am5-reader-container",
                        e.setAttribute("role", "alert"),
                        e.style.position = "absolute",
                        e.style.width = "1px",
                        e.style.height = "1px",
                        e.style.overflow = "hidden",
                        e.style.clip = "rect(1px, 1px, 1px, 1px)",
                        this._readerAlertElement = e,
                        this._inner.appendChild(this._readerAlertElement);
                        const i = document.createElement("div");
                        i.className = "am5-focus-container",
                        i.style.position = "absolute",
                        i.style.pointerEvents = "none",
                        i.style.top = "0px",
                        i.style.left = "0px",
                        i.style.overflow = "hidden",
                        i.style.width = s + "px",
                        i.style.height = a + "px",
                        i.setAttribute("role", "graphics-document"),
                        u.setInteractive(i, !1),
                        this._focusElementContainer = i,
                        this._inner.appendChild(this._focusElementContainer);
                        const r = document.createElement("div");
                        this._tooltipElementContainer = r,
                        r.className = "am5-tooltip-container",
                        this._inner.appendChild(r),
                        u.supports("keyboardevents") && (this._disposers.push(u.addEventListener(window, "keydown", (e => {
                            16 == e.keyCode ? this._isShift = !0 : 9 == e.keyCode && (this._isShift = e.shiftKey)
                        }
                        ))),
                        this._disposers.push(u.addEventListener(window, "keyup", (e => {
                            16 == e.keyCode && (this._isShift = !1)
                        }
                        ))),
                        this._disposers.push(u.addEventListener(i, "keydown", (e => {
                            const i = this._focusedSprite;
                            if (i) {
                                27 == e.keyCode && (u.blur(),
                                this._focusedSprite = void 0);
                                let r = 0
                                  , n = 0;
                                switch (e.keyCode) {
                                case 13:
                                    e.preventDefault();
                                    const s = t.getEvent(new MouseEvent("click"));
                                    return void i.events.dispatch("click", {
                                        type: "click",
                                        originalEvent: s.event,
                                        point: s.point,
                                        simulated: !0,
                                        target: i
                                    });
                                case 37:
                                    r = -6;
                                    break;
                                case 39:
                                    r = 6;
                                    break;
                                case 38:
                                    n = -6;
                                    break;
                                case 40:
                                    n = 6;
                                    break;
                                default:
                                    return
                                }
                                if (0 != r || 0 != n) {
                                    if (e.preventDefault(),
                                    !i.isDragging()) {
                                        this._keyboardDragPoint = {
                                            x: 0,
                                            y: 0
                                        };
                                        const e = t.getEvent(new MouseEvent("mousedown",{
                                            clientX: 0,
                                            clientY: 0
                                        }));
                                        i.events.isEnabled("pointerdown") && i.events.dispatch("pointerdown", {
                                            type: "pointerdown",
                                            originalEvent: e.event,
                                            point: e.point,
                                            simulated: !0,
                                            target: i
                                        })
                                    }
                                    const s = this._keyboardDragPoint;
                                    s.x += r,
                                    s.y += n;
                                    const a = t.getEvent(new MouseEvent("mousemove",{
                                        clientX: s.x,
                                        clientY: s.y
                                    }), !1);
                                    i.events.isEnabled("globalpointermove") && i.events.dispatch("globalpointermove", {
                                        type: "globalpointermove",
                                        originalEvent: a.event,
                                        point: a.point,
                                        simulated: !0,
                                        target: i
                                    })
                                }
                            }
                        }
                        ))),
                        this._disposers.push(u.addEventListener(i, "keyup", (e => {
                            if (this._focusedSprite) {
                                const i = this._focusedSprite
                                  , r = e.keyCode;
                                switch (r) {
                                case 37:
                                case 39:
                                case 38:
                                case 40:
                                    if (i.isDragging()) {
                                        const e = this._keyboardDragPoint
                                          , r = t.getEvent(new MouseEvent("mouseup",{
                                            clientX: e.x,
                                            clientY: e.y
                                        }));
                                        return i.events.isEnabled("globalpointerup") && i.events.dispatch("globalpointerup", {
                                            type: "globalpointerup",
                                            originalEvent: r.event,
                                            point: r.point,
                                            simulated: !0,
                                            target: i
                                        }),
                                        void (this._keyboardDragPoint = void 0)
                                    }
                                    if (i.get("focusableGroup")) {
                                        const e = i.get("focusableGroup")
                                          , t = this._tabindexes.filter((t => t.get("focusableGroup") == e && !1 !== t.getPrivate("focusable")));
                                        let n = t.indexOf(i);
                                        const s = t.length - 1;
                                        n += 39 == r || 40 == r ? 1 : -1,
                                        n < 0 ? n = s : n > s && (n = 0),
                                        u.focus(t[n].getPrivate("focusElement").dom)
                                    }
                                }
                            }
                        }
                        ))))
                    }
                    this._startTicker(),
                    this.setThemes([]),
                    this._addTooltip(),
                    this._hasLicense() || this._showBranding()
                }
                _initResizeSensor() {
                    this._resizeSensorDisposer && this._resizeSensorDisposer.dispose(),
                    this._resizeSensorDisposer = new f(this.dom,( () => {
                        this.autoResize && this.resize()
                    }
                    )),
                    this._disposers.push(this._resizeSensorDisposer)
                }
                resize() {
                    const e = this._getRealSize()
                      , t = this._getCalculatedSize(e)
                      , i = Math.floor(t.width)
                      , r = Math.floor(t.height);
                    if (i > 0 && r > 0) {
                        const t = Math.floor(e.width)
                          , n = Math.floor(e.height)
                          , s = this._htmlElementContainer;
                        if (s.style.width = i + "px",
                        s.style.height = r + "px",
                        !0 !== this._a11yD) {
                            const e = this._focusElementContainer;
                            e.style.width = i + "px",
                            e.style.height = r + "px"
                        }
                        this._renderer.resize(t, n, i, r);
                        const a = this._rootContainer;
                        a.setPrivate("width", i),
                        a.setPrivate("height", r),
                        this._render(),
                        this._handleLogo()
                    }
                }
                _render() {
                    this._renderer.render(this._rootContainer._display),
                    this._focusElementDirty && (this._updateCurrentFocus(),
                    this._focusElementDirty = !1)
                }
                _runTickers(e) {
                    h.each(this._tickers, (t => {
                        t(e)
                    }
                    ))
                }
                _runAnimations(e) {
                    h.keepIf(this._animations, (t => t._runAnimation(e)))
                }
                _runDirties() {
                    let e = {};
                    for (; this._isDirtyParents; )
                        this._isDirtyParents = !1,
                        O.keys(this._dirtyParents).forEach((t => {
                            const i = this._dirtyParents[t];
                            delete this._dirtyParents[t],
                            i.isDisposed() || (e[i.uid] = i,
                            i._prepareChildren())
                        }
                        ));
                    O.keys(e).forEach((t => {
                        e[t]._updateChildren()
                    }
                    ));
                    const t = [];
                    O.keys(this._dirty).forEach((e => {
                        const i = this._dirty[e];
                        i.isDisposed() ? delete this._dirty[i.uid] : (t.push(i),
                        i._beforeChanged())
                    }
                    )),
                    t.forEach((e => {
                        e._changed(),
                        delete this._dirty[e.uid],
                        e._clearDirty()
                    }
                    )),
                    this._isDirty = !1;
                    const i = {}
                      , r = [];
                    O.keys(this._dirtyBounds).forEach((e => {
                        const t = this._dirtyBounds[e];
                        delete this._dirtyBounds[e],
                        t.isDisposed() || (i[t.uid] = t.depth(),
                        r.push(t))
                    }
                    )),
                    this._positionHTMLElements(),
                    r.sort(( (e, t) => Se.qu(i[t.uid], i[e.uid]))),
                    r.forEach((e => {
                        e._updateBounds()
                    }
                    ));
                    const n = this._dirtyPositions;
                    O.keys(n).forEach((e => {
                        const t = n[e];
                        delete n[e],
                        t.isDisposed() || t._updatePosition()
                    }
                    )),
                    t.forEach((e => {
                        e._afterChanged()
                    }
                    ))
                }
                _renderFrame(e) {
                    return !this._updateTick || (this.events.isEnabled("framestarted") && this.events.dispatch("framestarted", {
                        type: "framestarted",
                        target: this,
                        timestamp: e
                    }),
                    this._checkComputedStyles(),
                    this._runTickers(e),
                    this._runAnimations(e),
                    this._runDirties(),
                    this._render(),
                    this._positionHTMLElements(),
                    this.events.isEnabled("frameended") && this.events.dispatch("frameended", {
                        type: "frameended",
                        target: this,
                        timestamp: e
                    }),
                    0 === this._tickers.length && 0 === this._animations.length && !this._isDirty)
                }
                _runTicker(e, t) {
                    this.isDisposed() || (this.animationTime = e,
                    this._renderFrame(e) ? (this._ticker = null,
                    this.animationTime = null) : this._paused || (t ? this._ticker : Ce(this.fps, this._ticker)))
                }
                _runTickerNow(e=1e4) {
                    if (!this.isDisposed()) {
                        const t = performance.now() + e;
                        for (; ; ) {
                            const e = performance.now();
                            if (e >= t) {
                                this.animationTime = null;
                                break
                            }
                            if (this.animationTime = e,
                            this._renderFrame(e)) {
                                this.animationTime = null;
                                break
                            }
                        }
                    }
                }
                _startTicker() {
                    null === this._ticker && (this.animationTime = null,
                    this._ticker = e => {
                        this._runTicker(e)
                    }
                    ,
                    Ce(this.fps, this._ticker))
                }
                get updateTick() {
                    return this._updateTick
                }
                set updateTick(e) {
                    this._updateTick = e,
                    e && this._startTicker()
                }
                _addDirtyEntity(e) {
                    void 0 === this._dirty[e.uid] && (this._isDirty = !0,
                    this._dirty[e.uid] = e,
                    this._startTicker())
                }
                _addDirtyParent(e) {
                    void 0 === this._dirtyParents[e.uid] && (this._isDirty = !0,
                    this._isDirtyParents = !0,
                    this._dirtyParents[e.uid] = e,
                    this._startTicker())
                }
                _addDirtyBounds(e) {
                    void 0 === this._dirtyBounds[e.uid] && (this._isDirty = !0,
                    this._dirtyBounds[e.uid] = e,
                    this._startTicker())
                }
                _addDirtyPosition(e) {
                    void 0 === this._dirtyPositions[e.uid] && (this._isDirty = !0,
                    this._dirtyPositions[e.uid] = e,
                    this._startTicker())
                }
                _addAnimation(e) {
                    -1 === this._animations.indexOf(e) && (this._animations.push(e),
                    this._startTicker())
                }
                _markDirty() {
                    this._isDirty = !0
                }
                _markDirtyRedraw() {
                    this.events.once("frameended", ( () => {
                        this._isDirty = !0,
                        this._startTicker()
                    }
                    ))
                }
                eachFrame(e) {
                    return this._tickers.push(e),
                    this._startTicker(),
                    new l.ku(( () => {
                        h.removeFirst(this._tickers, e)
                    }
                    ))
                }
                markDirtyGlobal(e) {
                    e || (e = this.container),
                    e.walkChildren((e => {
                        e instanceof r.W && this.markDirtyGlobal(e),
                        e.markDirty(),
                        e.markDirtyBounds()
                    }
                    ))
                }
                width() {
                    return Math.floor(this._getCalculatedSize(this._getRealSize()).width)
                }
                height() {
                    return Math.floor(this._getCalculatedSize(this._getRealSize()).height)
                }
                dispose() {
                    this._isDisposed || (this._isDisposed = !0,
                    this._rootContainer.dispose(),
                    this._renderer.dispose(),
                    this.horizontalLayout.dispose(),
                    this.verticalLayout.dispose(),
                    this.interfaceColors.dispose(),
                    h.each(this._disposers, (e => {
                        e.dispose()
                    }
                    )),
                    this._inner && u.removeElement(this._inner),
                    h.remove(Ee.i_.rootElements, this))
                }
                isDisposed() {
                    return this._isDisposed
                }
                readerAlert(e) {
                    !0 !== this._a11yD && (this._readerAlertElement.innerHTML = u.stripTags(e))
                }
                setThemes(e) {
                    this._rootContainer.set("themes", e);
                    const t = this.tooltipContainer;
                    t && t._applyThemes();
                    const i = this.interfaceColors;
                    i && i._applyThemes()
                }
                _addTooltip() {
                    if (!this.tooltipContainer) {
                        const e = this._tooltipContainerSettings
                          , t = this._rootContainer.children.push(r.W.new(this, {
                            position: "absolute",
                            isMeasured: !1,
                            width: C.AQ,
                            height: C.AQ,
                            layer: e ? 35 : 30,
                            layerMargin: e || void 0
                        }));
                        this.tooltipContainer = t;
                        const i = _.u.new(this, {});
                        this.container.set("tooltip", i),
                        i.hide(0),
                        this._tooltip = i
                    }
                }
                _registerTabindexOrder(e) {
                    1 != this._a11yD && (e.get("focusable") ? h.pushOne(this._tabindexes, e) : h.remove(this._tabindexes, e),
                    this._invalidateTabindexes())
                }
                _unregisterTabindexOrder(e) {
                    1 != this._a11yD && (h.remove(this._tabindexes, e),
                    this._invalidateTabindexes())
                }
                _invalidateTabindexes() {
                    if (1 == this._a11yD)
                        return;
                    this._tabindexes.sort(( (e, t) => {
                        const i = e.get("tabindexOrder", 0)
                          , r = t.get("tabindexOrder", 0);
                        return i == r ? 0 : i > r ? 1 : -1
                    }
                    ));
                    const e = [];
                    h.each(this._tabindexes, ( (t, i) => {
                        t.getPrivate("focusElement") ? this._moveFocusElement(i, t) : this._makeFocusElement(i, t);
                        const r = t.get("focusableGroup");
                        r && !1 !== t.getPrivate("focusable") && (-1 !== e.indexOf(r) ? t.getPrivate("focusElement").dom.setAttribute("tabindex", "-1") : e.push(r))
                    }
                    ))
                }
                _updateCurrentFocus() {
                    1 != this._a11yD && this._focusedSprite && (this._decorateFocusElement(this._focusedSprite),
                    this._positionFocusElement(this._focusedSprite))
                }
                _decorateFocusElement(e, t) {
                    if (1 == this._a11yD)
                        return;
                    if (t || (t = e.getPrivate("focusElement").dom),
                    !t)
                        return;
                    e.get("visible") && "tooltip" != e.get("role") && !e.isHidden() && !1 !== e.getPrivate("focusable") ? "-1" != t.getAttribute("tabindex") && t.setAttribute("tabindex", "" + this.tabindex) : t.removeAttribute("tabindex");
                    const i = e.get("role");
                    i ? t.setAttribute("role", i) : t.removeAttribute("role");
                    const r = e.get("ariaLabel");
                    if (r) {
                        const i = (0,
                        Me.q)(e, r);
                        t.setAttribute("aria-label", i)
                    } else
                        t.removeAttribute("aria-label");
                    const n = e.get("ariaLive");
                    n ? t.setAttribute("aria-live", n) : t.removeAttribute("aria-live");
                    const s = e.get("ariaChecked");
                    null != s ? t.setAttribute("aria-checked", s ? "true" : "false") : t.removeAttribute("aria-checked"),
                    e.get("ariaHidden") ? t.setAttribute("aria-hidden", "hidden") : t.removeAttribute("aria-hidden");
                    const a = e.get("ariaOrientation");
                    a ? t.setAttribute("aria-orientation", a) : t.removeAttribute("aria-orientation");
                    const o = e.get("ariaValueNow");
                    o ? t.setAttribute("aria-valuenow", o) : t.removeAttribute("aria-valuenow");
                    const l = e.get("ariaValueMin");
                    l ? t.setAttribute("aria-valuemin", l) : t.removeAttribute("aria-valuemin");
                    const h = e.get("ariaValueMax");
                    h ? t.setAttribute("aria-valuemax", h) : t.removeAttribute("aria-valuemax");
                    const u = e.get("ariaValueText");
                    u ? t.setAttribute("aria-valuetext", u) : t.removeAttribute("aria-valuetext");
                    const c = e.get("ariaControls");
                    c ? t.setAttribute("aria-controls", c) : t.removeAttribute("aria-controls")
                }
                _makeFocusElement(e, t) {
                    if (t.getPrivate("focusElement") || 1 == this._a11yD)
                        return;
                    const i = document.createElement("div");
                    "tooltip" != t.get("role") && (i.tabIndex = this.tabindex),
                    i.style.position = "absolute",
                    u.setInteractive(i, !1);
                    const r = [];
                    t.setPrivate("focusElement", {
                        dom: i,
                        disposers: r
                    }),
                    this._decorateFocusElement(t),
                    r.push(u.addEventListener(i, "focus", (t => {
                        this._handleFocus(t, e)
                    }
                    ))),
                    r.push(u.addEventListener(i, "blur", (t => {
                        this._handleBlur(t, e)
                    }
                    ))),
                    this._moveFocusElement(e, t)
                }
                _removeFocusElement(e) {
                    if (1 == this._a11yD)
                        return;
                    h.remove(this._tabindexes, e);
                    const t = e.getPrivate("focusElement");
                    t && (this._focusElementContainer.removeChild(t.dom),
                    h.each(t.disposers, (e => {
                        e.dispose()
                    }
                    )))
                }
                _hideFocusElement(e) {
                    1 != this._a11yD && (e.getPrivate("focusElement").dom.style.display = "none")
                }
                _moveFocusElement(e, t) {
                    if (1 == this._a11yD)
                        return;
                    const i = this._focusElementContainer
                      , r = t.getPrivate("focusElement").dom;
                    if (r === this._focusElementContainer.children[e])
                        return;
                    const n = this._focusElementContainer.children[e + 1];
                    n ? i.insertBefore(r, n) : i.append(r)
                }
                _positionFocusElement(e) {
                    if (1 == this._a11yD)
                        return;
                    const t = e.globalBounds();
                    let i = t.right == t.left ? e.width() : t.right - t.left
                      , r = t.top == t.bottom ? e.height() : t.bottom - t.top
                      , n = t.left - 2
                      , s = t.top - 2;
                    i < 0 && (n += i,
                    i = Math.abs(i)),
                    r < 0 && (s += r,
                    r = Math.abs(r));
                    const a = e.getPrivate("focusElement").dom;
                    a.style.top = s + "px",
                    a.style.left = n + "px",
                    a.style.width = i + 4 + "px",
                    a.style.height = r + 4 + "px"
                }
                _handleFocus(e, t) {
                    if (1 == this._a11yD)
                        return;
                    const i = this._tabindexes[t];
                    i.isVisibleDeep() ? (this._positionFocusElement(i),
                    this._focusedSprite = i,
                    i.events.isEnabled("focus") && i.events.dispatch("focus", {
                        type: "focus",
                        originalEvent: e,
                        target: i
                    })) : this._focusNext(e.target, this._isShift ? -1 : 1)
                }
                _focusNext(e, t) {
                    if (1 == this._a11yD)
                        return;
                    const i = Array.from(document.querySelectorAll(["a[href]", "area[href]", "button:not([disabled])", "details", "input:not([disabled])", "iframe:not([disabled])", "select:not([disabled])", "textarea:not([disabled])", '[contentEditable=""]', '[contentEditable="true"]', '[contentEditable="TRUE"]', '[tabindex]:not([tabindex^="-"])'].join(",")));
                    let r = i.indexOf(e) + t;
                    r < 0 ? r = i.length - 1 : r >= i.length && (r = 0),
                    i[r].focus()
                }
                _handleBlur(e, t) {
                    if (1 == this._a11yD)
                        return;
                    const i = this._focusedSprite;
                    i && i.events.isEnabled("blur") && i.events.dispatch("blur", {
                        type: "blur",
                        originalEvent: e,
                        target: i
                    }),
                    this._focusedSprite = void 0
                }
                updateTooltip(e) {
                    if (1 == this._a11yD)
                        return;
                    const t = u.stripTags(e._getText());
                    let i = e.getPrivate("tooltipElement");
                    "tooltip" == e.get("role") && "" != t ? (i || (i = this._makeTooltipElement(e)),
                    i.innerHTML != t && (i.innerHTML = t)) : i && (i.remove(),
                    e.removePrivate("tooltipElement"))
                }
                _makeTooltipElement(e) {
                    const t = this._tooltipElementContainer
                      , i = document.createElement("div");
                    return i.style.position = "absolute",
                    i.style.width = "1px",
                    i.style.height = "1px",
                    i.style.overflow = "hidden",
                    i.style.clip = "rect(1px, 1px, 1px, 1px)",
                    u.setInteractive(i, !1),
                    this._decorateFocusElement(e, i),
                    t.append(i),
                    e.setPrivate("tooltipElement", i),
                    i
                }
                _removeTooltipElement(e) {
                    if (1 == this._a11yD)
                        return;
                    const t = e.getPrivate("tooltipElement");
                    if (t) {
                        const e = t.parentElement;
                        e && e.removeChild(t)
                    }
                }
                _invalidateAccessibility(e) {
                    if (1 == this._a11yD)
                        return;
                    this._focusElementDirty = !0;
                    const t = e.getPrivate("focusElement");
                    e.get("focusable") ? t && (this._decorateFocusElement(e),
                    this._positionFocusElement(e)) : t && this._removeFocusElement(e)
                }
                focused(e) {
                    return this._focusedSprite === e
                }
                documentPointToRoot(e) {
                    const t = this._getRealSize()
                      , i = this._getCalculatedSize(t)
                      , r = i.width / t.width
                      , n = i.height / t.height;
                    return {
                        x: (e.x - t.left) * r,
                        y: (e.y - t.top) * n
                    }
                }
                rootPointToDocument(e) {
                    const t = this._getRealSize()
                      , i = this._getCalculatedSize(t)
                      , r = i.width / t.width
                      , n = i.height / t.height;
                    return {
                        x: e.x / r + t.left,
                        y: e.y / n + t.top
                    }
                }
                addDisposer(e) {
                    return this._disposers.push(e),
                    e
                }
                _updateComputedStyles() {
                    const e = window.getComputedStyle(this.dom);
                    let t = "";
                    O.each(e, ( (e, i) => {
                        L.isString(e) && e.match(/^font/) && (t += i)
                    }
                    ));
                    const i = t != this._fontHash;
                    return i && (this._fontHash = t),
                    i
                }
                _checkComputedStyles() {
                    this._updateComputedStyles() && this._invalidateLabelBounds(this.container)
                }
                _invalidateLabelBounds(e) {
                    e instanceof r.W ? e.children.each((e => {
                        this._invalidateLabelBounds(e)
                    }
                    )) : e instanceof n.x && e.markDirtyBounds()
                }
                _hasLicense() {
                    for (let e = 0; e < Ee.i_.licenses.length; e++)
                        if (Ee.i_.licenses[e].match(/^AM5C.{5,}/i))
                            return !0;
                    return !1
                }
                _licenseApplied() {
                    this._logo && this._logo.set("forceHidden", !0)
                }
                get debugGhostView() {
                    return this._renderer.debugGhostView
                }
                set debugGhostView(e) {
                    this._renderer.debugGhostView = e
                }
                set tapToActivate(e) {
                    this._renderer.tapToActivate = e
                }
                get tapToActivate() {
                    return this._renderer.tapToActivate
                }
                set tapToActivateTimeout(e) {
                    this._renderer.tapToActivateTimeout = e
                }
                get tapToActivateTimeout() {
                    return this._renderer.tapToActivateTimeout
                }
                _makeHTMLElement(e) {
                    const t = this._htmlElementContainer
                      , i = document.createElement("div");
                    return e.setPrivate("htmlElement", i),
                    i.style.position = "absolute",
                    i.style.overflow = "auto",
                    i.style.boxSizing = "border-box",
                    u.setInteractive(i, e.get("interactive", !1)),
                    e.events.isEnabled("click") && (u.setInteractive(i, !0),
                    this._disposers.push(u.addEventListener(i, "click", (t => {
                        const i = this._renderer.getEvent(t);
                        e.events.dispatch("click", {
                            type: "click",
                            originalEvent: i.event,
                            point: i.point,
                            simulated: !1,
                            target: e
                        })
                    }
                    )))),
                    this._positionHTMLElement(e),
                    t.append(i),
                    h.pushOne(this._htmlEnabledContainers, e),
                    i
                }
                _positionHTMLElements() {
                    h.each(this._htmlEnabledContainers, (e => {
                        this._positionHTMLElement(e)
                    }
                    ))
                }
                _positionHTMLElement(e) {
                    const t = e.getPrivate("htmlElement");
                    if (t) {
                        const i = ["paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "minWidth", "minHeight", "maxWidth", "maxHeight"];
                        h.each(i, (i => {
                            const r = e.get(i);
                            t.style[i] = r ? r + "px" : ""
                        }
                        ));
                        const r = e.compositeOpacity();
                        setTimeout(( () => {
                            t.style.opacity = r + ""
                        }
                        ), 10);
                        const n = e.isVisibleDeep();
                        n && (t.style.display = "block");
                        const s = e.globalBounds();
                        t.style.top = s.top + "px",
                        t.style.left = s.left + "px";
                        const a = e.get("width")
                          , o = e.get("height");
                        let l = 0
                          , u = 0;
                        if (a && (l = e.width()),
                        o && (u = e.height()),
                        a && o)
                            e.removePrivate("minWidth"),
                            e.removePrivate("minHeight");
                        else {
                            t.style.position = "fixed",
                            t.style.width = "",
                            t.style.height = "";
                            const i = t.getBoundingClientRect();
                            t.style.position = "absolute",
                            l = i.width,
                            u = i.height,
                            e._adjustedLocalBounds = {
                                left: 0,
                                right: 0,
                                top: 0,
                                bottom: 0
                            },
                            e.setPrivate("minWidth", l),
                            e.setPrivate("minHeight", u)
                        }
                        l > 0 && (t.style.minWidth = l + "px"),
                        u > 0 && (t.style.minHeight = u + "px"),
                        n && 0 != r || (t.style.display = "none")
                    }
                }
                _setHTMLContent(e, t) {
                    let i = e.getPrivate("htmlElement");
                    i || (i = this._makeHTMLElement(e)),
                    i.innerHTML != t && (i.innerHTML = t)
                }
                _removeHTMLContent(e) {
                    let t = e.getPrivate("htmlElement");
                    t && this._htmlElementContainer.removeChild(t),
                    h.remove(this._htmlEnabledContainers, e)
                }
            }
        },
        3409: function(e, t, i) {
            "use strict";
            i.d(t, {
                Q: function() {
                    return a
                }
            });
            var r = i(5769)
              , n = i(3540)
              , s = i(5071);
            class a {
                constructor(e, t) {
                    if (Object.defineProperty(this, "_root", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_rules", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    this._root = e,
                    !t)
                        throw new Error("You cannot use `new Class()`, instead use `Class.new()`")
                }
                static new(e) {
                    const t = new this(e,!0);
                    return t.setupDefaultRules(),
                    t
                }
                setupDefaultRules() {}
                _lookupRules(e) {
                    return this._rules[e]
                }
                ruleRaw(e, t=[]) {
                    let i = this._rules[e];
                    i || (i = this._rules[e] = []),
                    t.sort(n.qu);
                    const {index: a, found: o} = s.getSortedIndex(i, (e => {
                        const i = n.qu(e.tags.length, t.length);
                        return 0 === i ? n.wq(e.tags, t, n.qu) : i
                    }
                    ));
                    if (o)
                        return i[a].template;
                    {
                        const e = r.YS.new({});
                        return i.splice(a, 0, {
                            tags: t,
                            template: e
                        }),
                        e
                    }
                }
                rule(e, t=[]) {
                    return this.ruleRaw(e, t)
                }
            }
        },
        5108: function(e, t, i) {
            "use strict";
            i.d(t, {
                g: function() {
                    return n
                }
            });
            var r = i(6331);
            class n extends r.JH {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "_index", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "series", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    })
                }
                _afterNew() {
                    super._afterNewApplyThemes()
                }
                _beforeChanged() {
                    if (super._beforeChanged(),
                    this.isDirty("sprite")) {
                        const e = this.get("sprite");
                        e && (e.setAll({
                            position: "absolute",
                            role: "figure"
                        }),
                        this._disposers.push(e))
                    }
                    (this.isDirty("locationX") || this.isDirty("locationY")) && this.series && this.series._positionBullet(this)
                }
            }
            Object.defineProperty(n, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Bullet"
            }),
            Object.defineProperty(n, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.JH.classNames.concat([n.className])
            })
        },
        8054: function(e, t, i) {
            "use strict";
            i.d(t, {
                z: function() {
                    return a
                }
            });
            var r = i(3497)
              , n = i(8777)
              , s = i(7652);
            class a extends n.W {
                _afterNew() {
                    this._settings.themeTags = s.mergeTags(this._settings.themeTags, ["button"]),
                    super._afterNew(),
                    this._settings.background || this.set("background", r.c.new(this._root, {
                        themeTags: s.mergeTags(this._settings.themeTags, ["background"])
                    }))
                }
                _prepareChildren() {
                    if (super._prepareChildren(),
                    this.isDirty("icon")) {
                        const e = this._prevSettings.icon
                          , t = this.get("icon");
                        t !== e && (this._disposeProperty("icon"),
                        e && e.dispose(),
                        t && this.children.push(t),
                        this._prevSettings.icon = t)
                    }
                    if (this.isDirty("label")) {
                        const e = this._prevSettings.label
                          , t = this.get("label");
                        t !== e && (this._disposeProperty("label"),
                        e && e.dispose(),
                        t && this.children.push(t),
                        this._prevSettings.label = t)
                    }
                }
            }
            Object.defineProperty(a, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Button"
            }),
            Object.defineProperty(a, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: n.W.classNames.concat([a.className])
            })
        },
        1337: function(e, t, i) {
            "use strict";
            i.d(t, {
                k: function() {
                    return s
                }
            });
            var r = i(8777)
              , n = i(6245);
            class s extends r.W {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "chartContainer", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this.children.push(r.W.new(this._root, {
                            width: n.AQ,
                            height: n.AQ,
                            interactiveChildren: !1
                        }))
                    }),
                    Object.defineProperty(this, "bulletsContainer", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: r.W.new(this._root, {
                            interactiveChildren: !1,
                            isMeasured: !1,
                            position: "absolute",
                            width: n.AQ,
                            height: n.AQ
                        })
                    })
                }
            }
            Object.defineProperty(s, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Chart"
            }),
            Object.defineProperty(s, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.W.classNames.concat([s.className])
            })
        },
        8035: function(e, t, i) {
            "use strict";
            i.d(t, {
                C: function() {
                    return n
                }
            });
            var r = i(1479);
            class n extends r.T {
                _beforeChanged() {
                    super._beforeChanged(),
                    this.isDirty("radius") && (this._clear = !0)
                }
                _changed() {
                    super._changed(),
                    this._clear && this._display.drawCircle(0, 0, this.get("radius", 10))
                }
            }
            Object.defineProperty(n, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Circle"
            }),
            Object.defineProperty(n, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.T.classNames.concat([n.className])
            })
        },
        9361: function(e, t, i) {
            "use strict";
            i.d(t, {
                w: function() {
                    return u
                },
                z: function() {
                    return h
                }
            });
            var r = i(5125)
              , n = i(6331)
              , s = i(8777)
              , a = i(9582)
              , o = i(5071)
              , l = i(256);
            class h extends n.Zr {
                constructor(e, t, i) {
                    super(i),
                    Object.defineProperty(this, "component", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "dataContext", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "bullets", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "open", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "close", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    this.dataContext = t,
                    this.component = e,
                    this._settings.visible = !0,
                    this._checkDirty()
                }
                markDirty() {
                    this.component.markDirtyValues(this)
                }
                _startAnimation() {
                    this.component._root._addAnimation(this)
                }
                _animationTime() {
                    return this.component._root.animationTime
                }
                _dispose() {
                    this.component && this.component.disposeDataItem(this),
                    super._dispose()
                }
                show(e) {
                    this.setRaw("visible", !0),
                    this.component && this.component.showDataItem(this, e)
                }
                hide(e) {
                    this.setRaw("visible", !1),
                    this.component && this.component.hideDataItem(this, e)
                }
                isHidden() {
                    return !this.get("visible")
                }
            }
            class u extends s.W {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "_data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new a.k
                    }),
                    Object.defineProperty(this, "_dataItems", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    }),
                    Object.defineProperty(this, "_mainDataItems", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this._dataItems
                    }),
                    Object.defineProperty(this, "valueFields", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    }),
                    Object.defineProperty(this, "fields", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: ["id"]
                    }),
                    Object.defineProperty(this, "_valueFields", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_valueFieldsF", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_fields", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_fieldsF", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_valuesDirty", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_dataChanged", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_dataGrouped", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "inited", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    })
                }
                set data(e) {
                    e.incrementRef(),
                    this._data.decrementRef(),
                    this._data = e
                }
                get data() {
                    return this._data
                }
                _dispose() {
                    super._dispose(),
                    this._data.decrementRef()
                }
                _onDataClear() {}
                _afterNew() {
                    super._afterNew(),
                    this._data.incrementRef(),
                    this._updateFields(),
                    this._disposers.push(this.data.events.onAll((e => {
                        const t = this._mainDataItems;
                        if (this.markDirtyValues(),
                        this._markDirtyGroup(),
                        this._dataChanged = !0,
                        "clear" === e.type)
                            o.each(t, (e => {
                                e.dispose()
                            }
                            )),
                            t.length = 0,
                            this._onDataClear();
                        else if ("push" === e.type) {
                            const i = new h(this,e.newValue,this._makeDataItem(e.newValue));
                            t.push(i),
                            this.processDataItem(i)
                        } else if ("setIndex" === e.type) {
                            const i = t[e.index]
                              , r = this._makeDataItem(e.newValue);
                            i.bullets && 0 == i.bullets.length && (i.bullets = void 0),
                            l.keys(r).forEach((e => {
                                i.animate({
                                    key: e,
                                    to: r[e],
                                    duration: this.get("interpolationDuration", 0),
                                    easing: this.get("interpolationEasing")
                                })
                            }
                            )),
                            i.dataContext = e.newValue
                        } else if ("insertIndex" === e.type) {
                            const i = new h(this,e.newValue,this._makeDataItem(e.newValue));
                            t.splice(e.index, 0, i),
                            this.processDataItem(i)
                        } else if ("removeIndex" === e.type)
                            t[e.index].dispose(),
                            t.splice(e.index, 1);
                        else {
                            if ("moveIndex" !== e.type)
                                throw new Error("Unknown IStreamEvent type");
                            {
                                const i = t[e.oldIndex];
                                t.splice(e.oldIndex, 1),
                                t.splice(e.newIndex, 0, i)
                            }
                        }
                        this._afterDataChange()
                    }
                    )))
                }
                _updateFields() {
                    this.valueFields && (this._valueFields = [],
                    this._valueFieldsF = {},
                    o.each(this.valueFields, (e => {
                        this.get(e + "Field") && (this._valueFields.push(e),
                        this._valueFieldsF[e] = {
                            fieldKey: e + "Field",
                            workingKey: e + "Working"
                        })
                    }
                    ))),
                    this.fields && (this._fields = [],
                    this._fieldsF = {},
                    o.each(this.fields, (e => {
                        this.get(e + "Field") && (this._fields.push(e),
                        this._fieldsF[e] = e + "Field")
                    }
                    )))
                }
                get dataItems() {
                    return this._dataItems
                }
                processDataItem(e) {}
                _makeDataItem(e) {
                    const t = {};
                    return this._valueFields && o.each(this._valueFields, (i => {
                        const r = this.get(this._valueFieldsF[i].fieldKey);
                        t[i] = e[r],
                        t[this._valueFieldsF[i].workingKey] = t[i]
                    }
                    )),
                    this._fields && o.each(this._fields, (i => {
                        const r = this.get(this._fieldsF[i]);
                        t[i] = e[r]
                    }
                    )),
                    t
                }
                makeDataItem(e) {
                    let t = new h(this,void 0,e);
                    return this.processDataItem(t),
                    t
                }
                pushDataItem(e) {
                    const t = this.makeDataItem(e);
                    return this._mainDataItems.push(t),
                    t
                }
                disposeDataItem(e) {}
                showDataItem(e, t) {
                    return (0,
                    r.mG)(this, void 0, void 0, (function*() {
                        e.set("visible", !0)
                    }
                    ))
                }
                hideDataItem(e, t) {
                    return (0,
                    r.mG)(this, void 0, void 0, (function*() {
                        e.set("visible", !1)
                    }
                    ))
                }
                _clearDirty() {
                    super._clearDirty(),
                    this._valuesDirty = !1
                }
                _afterDataChange() {}
                _afterChanged() {
                    if (super._afterChanged(),
                    this._dataChanged) {
                        const e = "datavalidated";
                        this.events.isEnabled(e) && this.events.dispatch(e, {
                            type: e,
                            target: this
                        }),
                        this._dataChanged = !1
                    }
                    this.inited = !0
                }
                markDirtyValues(e) {
                    this.markDirty(),
                    this._valuesDirty = !0
                }
                _markDirtyGroup() {
                    this._dataGrouped = !1
                }
                markDirtySize() {
                    this._sizeDirty = !0,
                    this.markDirty()
                }
            }
            Object.defineProperty(u, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Component"
            }),
            Object.defineProperty(u, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: s.W.classNames.concat([u.className])
            })
        },
        8777: function(e, t, i) {
            "use strict";
            i.d(t, {
                W: function() {
                    return g
                }
            });
            var r = i(7144)
              , n = i(5071);
            class s extends r.aV {
                constructor(e) {
                    super(),
                    Object.defineProperty(this, "_disposed", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_container", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_events", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    this._container = e,
                    this._events = this.events.onAll((e => {
                        if ("clear" === e.type)
                            n.each(e.oldValues, (e => {
                                this._onRemoved(e)
                            }
                            ));
                        else if ("push" === e.type)
                            this._onInserted(e.newValue);
                        else if ("setIndex" === e.type)
                            this._onRemoved(e.oldValue),
                            this._onInserted(e.newValue, e.index);
                        else if ("insertIndex" === e.type)
                            this._onInserted(e.newValue, e.index);
                        else if ("removeIndex" === e.type)
                            this._onRemoved(e.oldValue);
                        else {
                            if ("moveIndex" !== e.type)
                                throw new Error("Unknown IListEvent type");
                            this._onRemoved(e.value),
                            this._onInserted(e.value, e.newIndex)
                        }
                    }
                    ))
                }
                _onInserted(e, t) {
                    e._setParent(this._container, !0);
                    const i = this._container._childrenDisplay;
                    void 0 === t ? i.addChild(e._display) : i.addChildAt(e._display, t)
                }
                _onRemoved(e) {
                    this._container._childrenDisplay.removeChild(e._display),
                    this._container.markDirtyBounds(),
                    this._container.markDirty()
                }
                isDisposed() {
                    return this._disposed
                }
                dispose() {
                    this._disposed || (this._disposed = !0,
                    this._events.dispose(),
                    n.each(this.values, (e => {
                        e.dispose()
                    }
                    )))
                }
            }
            var a = i(6245)
              , o = i(4596)
              , l = i(7142)
              , h = i(4431)
              , u = i(1706)
              , c = i(6881)
              , d = i(2132)
              , p = i(5040)
              , f = i(7652);
            class g extends o.j {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "_display", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this._root._renderer.makeContainer()
                    }),
                    Object.defineProperty(this, "_childrenDisplay", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this._root._renderer.makeContainer()
                    }),
                    Object.defineProperty(this, "children", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new s(this)
                    }),
                    Object.defineProperty(this, "_percentageSizeChildren", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    }),
                    Object.defineProperty(this, "_percentagePositionChildren", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    }),
                    Object.defineProperty(this, "_prevWidth", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_prevHeight", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_contentWidth", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_contentHeight", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_contentMask", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_vsbd0", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_vsbd1", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    })
                }
                _afterNew() {
                    super._afterNew(),
                    this._display.addChild(this._childrenDisplay)
                }
                _dispose() {
                    n.eachReverse(this.allChildren(), (e => {
                        e.dispose()
                    }
                    )),
                    this.getPrivate("htmlElement") && this._root._removeHTMLContent(this),
                    super._dispose()
                }
                _changed() {
                    if (super._changed(),
                    this.isDirty("interactiveChildren") && (this._display.interactiveChildren = this.get("interactiveChildren", !1)),
                    this.isDirty("layout") && (this._prevWidth = 0,
                    this._prevHeight = 0,
                    this.markDirtyBounds(),
                    this._prevSettings.layout && this.children.each((e => {
                        e.removePrivate("x"),
                        e.removePrivate("y")
                    }
                    ))),
                    (this.isDirty("paddingTop") || this.isDirty("paddingBottom") || this.isDirty("paddingLeft") || this.isDirty("paddingRight")) && this.children.each((e => {
                        e.markDirtyPosition()
                    }
                    )),
                    this.isDirty("maskContent")) {
                        const e = this._childrenDisplay;
                        let t = this._contentMask;
                        this.get("maskContent") ? t || (t = l.A.new(this._root, {
                            x: -.5,
                            y: -.5,
                            width: this.width() + 1,
                            height: this.height() + 1
                        }),
                        this._contentMask = t,
                        e.addChildAt(t._display, 0),
                        e.mask = t._display) : t && (e.removeChild(t._display),
                        e.mask = null,
                        t.dispose(),
                        this._contentMask = void 0)
                    }
                }
                _updateSize() {
                    super._updateSize(),
                    n.each(this._percentageSizeChildren, (e => {
                        e._updateSize()
                    }
                    )),
                    n.each(this._percentagePositionChildren, (e => {
                        e.markDirtyPosition(),
                        e._updateSize()
                    }
                    )),
                    this.updateBackground()
                }
                updateBackground() {
                    const e = this.get("background");
                    let t = this._localBounds;
                    if (t && !this.isHidden()) {
                        let i = t.left
                          , r = t.top
                          , n = t.right - i
                          , s = t.bottom - r
                          , a = this.get("maxWidth")
                          , o = this.get("maxHeight");
                        o && s > o && (s = o),
                        a && n > a && (n = a);
                        let l = this.width()
                          , h = this.height();
                        e && (e.setAll({
                            width: n,
                            height: s,
                            x: i,
                            y: r
                        }),
                        this._display.interactive && (e._display.interactive = !0));
                        const u = this._contentMask;
                        u && u.setAll({
                            width: l + 1,
                            height: h + 1
                        });
                        const c = this.get("verticalScrollbar");
                        if (c) {
                            c.set("height", h),
                            c.set("x", l - c.width() - c.get("marginRight", 0)),
                            c.set("end", c.get("start", 0) + h / this._contentHeight);
                            const e = c.get("background");
                            e && e.setAll({
                                width: c.width(),
                                height: h
                            });
                            let t = !0;
                            this._contentHeight <= h && (t = !1),
                            c.setPrivate("visible", t)
                        }
                    }
                }
                _applyThemes() {
                    return !!super._applyThemes() && (this.eachChildren((e => {
                        e._applyThemes()
                    }
                    )),
                    !0)
                }
                _applyState(e) {
                    super._applyState(e),
                    this.get("setStateOnChildren") && this.eachChildren((t => {
                        t.states.apply(e)
                    }
                    ))
                }
                _applyStateAnimated(e, t) {
                    super._applyStateAnimated(e, t),
                    this.get("setStateOnChildren") && this.eachChildren((i => {
                        i.states.applyAnimate(e, t)
                    }
                    ))
                }
                innerWidth() {
                    return this.width() - this.get("paddingRight", 0) - this.get("paddingLeft", 0)
                }
                innerHeight() {
                    return this.height() - this.get("paddingTop", 0) - this.get("paddingBottom", 0)
                }
                _getBounds() {
                    let e = this.get("width")
                      , t = this.get("height")
                      , i = this.getPrivate("width")
                      , r = this.getPrivate("height")
                      , n = {
                        left: 0,
                        top: 0,
                        right: this.width(),
                        bottom: this.height()
                    }
                      , s = this.get("layout")
                      , a = !1
                      , o = !1;
                    if ((s instanceof h.G || s instanceof c.M) && (a = !0),
                    s instanceof u.Z && (o = !0),
                    null == e && null == i || null == t && null == r || this.get("verticalScrollbar")) {
                        let e = Number.MAX_VALUE
                          , t = e
                          , i = -e
                          , r = e
                          , s = -e;
                        const l = this.get("paddingLeft", 0)
                          , h = this.get("paddingTop", 0)
                          , u = this.get("paddingRight", 0)
                          , c = this.get("paddingBottom", 0);
                        this.children.each((e => {
                            if ("absolute" != e.get("position") && e.get("isMeasured")) {
                                let n = e.adjustedLocalBounds()
                                  , l = e.x()
                                  , h = e.y()
                                  , u = l + n.left
                                  , c = l + n.right
                                  , d = h + n.top
                                  , p = h + n.bottom;
                                a && (u -= e.get("marginLeft", 0),
                                c += e.get("marginRight", 0)),
                                o && (d -= e.get("marginTop", 0),
                                p += e.get("marginBottom", 0)),
                                u < t && (t = u),
                                c > i && (i = c),
                                d < r && (r = d),
                                p > s && (s = p)
                            }
                        }
                        )),
                        t == e && (t = 0),
                        i == -e && (i = 0),
                        r == e && (r = 0),
                        s == -e && (s = 0),
                        n.left = t - l,
                        n.top = r - h,
                        n.right = i + u,
                        n.bottom = s + c
                    }
                    this._contentWidth = n.right - n.left,
                    this._contentHeight = n.bottom - n.top,
                    p.isNumber(e) && (n.left = 0,
                    n.right = e),
                    p.isNumber(i) && (n.left = 0,
                    n.right = i),
                    p.isNumber(t) && (n.top = 0,
                    n.bottom = t),
                    p.isNumber(r) && (n.top = 0,
                    n.bottom = r),
                    this._localBounds = n
                }
                _updateBounds() {
                    const e = this.get("layout");
                    e && e.updateContainer(this),
                    super._updateBounds(),
                    this.updateBackground()
                }
                markDirty() {
                    super.markDirty(),
                    this._root._addDirtyParent(this)
                }
                _prepareChildren() {
                    const e = this.innerWidth()
                      , t = this.innerHeight();
                    if (e != this._prevWidth || t != this._prevHeight) {
                        let i = this.get("layout")
                          , r = !1
                          , s = !1;
                        i && ((i instanceof h.G || i instanceof c.M) && (r = !0),
                        i instanceof u.Z && (s = !0)),
                        n.each(this._percentageSizeChildren, (i => {
                            if (!r) {
                                let t = i.get("width");
                                t instanceof a.gG && i.setPrivate("width", t.value * e)
                            }
                            if (!s) {
                                let e = i.get("height");
                                e instanceof a.gG && i.setPrivate("height", e.value * t)
                            }
                        }
                        )),
                        n.each(this._percentagePositionChildren, (e => {
                            e.markDirtyPosition(),
                            e.markDirtyBounds()
                        }
                        )),
                        this._prevWidth = e,
                        this._prevHeight = t,
                        this._sizeDirty = !0,
                        this.updateBackground()
                    }
                    this._handleStates()
                }
                _updateChildren() {
                    if (this.isDirty("html")) {
                        const e = this.get("html");
                        e && "" !== e ? this._root._setHTMLContent(this, (0,
                        d.q)(this, this.get("html", ""))) : this._root._removeHTMLContent(this),
                        this._root._positionHTMLElement(this)
                    }
                    if (this.isDirty("verticalScrollbar")) {
                        const e = this.get("verticalScrollbar");
                        if (e) {
                            e._setParent(this),
                            e.startGrip.setPrivate("visible", !1),
                            e.endGrip.setPrivate("visible", !1),
                            this.set("maskContent", !0),
                            this.set("paddingRight", e.width() + e.get("marginRight", 0) + e.get("marginLeft", 0));
                            let t = this.get("background");
                            t || (t = this.set("background", l.A.new(this._root, {
                                themeTags: ["background"],
                                fillOpacity: 0,
                                fill: this._root.interfaceColors.get("alternativeBackground")
                            }))),
                            this._vsbd0 = this.events.on("wheel", (t => {
                                const i = t.originalEvent;
                                if (!f.isLocalEvent(i, this))
                                    return;
                                i.preventDefault();
                                let r = i.deltaY / 5e3;
                                const n = e.get("start", 0)
                                  , s = e.get("end", 1);
                                n + r <= 0 && (r = -n),
                                s + r >= 1 && (r = 1 - s),
                                n + r >= 0 && s + r <= 1 && (e.set("start", n + r),
                                e.set("end", s + r))
                            }
                            )),
                            this._disposers.push(this._vsbd0),
                            this._vsbd1 = e.events.on("rangechanged", ( () => {
                                let t = this._contentHeight;
                                const i = this._childrenDisplay
                                  , r = this._contentMask;
                                i.y = -e.get("start") * t,
                                i.markDirtyLayer(),
                                r && (r._display.y = -i.y,
                                i.mask = r._display)
                            }
                            )),
                            this._disposers.push(this._vsbd1),
                            this._display.addChild(e._display)
                        } else {
                            const e = this._prevSettings.verticalScrollbar;
                            e && (this._display.removeChild(e._display),
                            this._vsbd0 && this._vsbd0.dispose(),
                            this._vsbd1 && this._vsbd1.dispose(),
                            this._childrenDisplay.y = 0,
                            this.setPrivate("height", void 0),
                            this.set("maskContent", !1),
                            this.set("paddingRight", void 0))
                        }
                    }
                    if (this.isDirty("background")) {
                        const e = this._prevSettings.background;
                        e && this._display.removeChild(e._display);
                        const t = this.get("background");
                        t instanceof o.j && (t.set("isMeasured", !1),
                        t._setParent(this),
                        this._display.addChildAt(t._display, 0))
                    }
                    if (this.isDirty("mask")) {
                        const e = this.get("mask")
                          , t = this._prevSettings.mask;
                        if (t && (this._display.removeChild(t._display),
                        t != e && t.dispose()),
                        e) {
                            const t = e.parent;
                            t && t.children.removeValue(e),
                            e._setParent(this),
                            this._display.addChildAt(e._display, 0),
                            this._childrenDisplay.mask = e._display
                        }
                    }
                }
                _processTemplateField() {
                    super._processTemplateField(),
                    this.children.each((e => {
                        e._processTemplateField()
                    }
                    ))
                }
                walkChildren(e) {
                    this.children.each((t => {
                        t instanceof g && t.walkChildren(e),
                        e(t)
                    }
                    ))
                }
                eachChildren(e) {
                    const t = this.get("background");
                    t && e(t);
                    const i = this.get("verticalScrollbar");
                    i && e(i);
                    const r = this.get("mask");
                    r && e(r),
                    this.children.values.forEach((t => {
                        e(t)
                    }
                    ))
                }
                allChildren() {
                    const e = [];
                    return this.eachChildren((t => {
                        e.push(t)
                    }
                    )),
                    e
                }
                _setDataItem(e) {
                    const t = e !== this._dataItem;
                    super._setDataItem(e);
                    const i = this.get("html", "");
                    i && "" !== i && t && this._root._setHTMLContent(this, (0,
                    d.q)(this, i))
                }
            }
            Object.defineProperty(g, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Container"
            }),
            Object.defineProperty(g, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: o.j.classNames.concat([g.className])
            })
        },
        2433: function(e, t, i) {
            "use strict";
            i.d(t, {
                P: function() {
                    return n
                }
            });
            var r = i(1479);
            class n extends r.T {
                _beforeChanged() {
                    super._beforeChanged(),
                    (this.isDirty("radiusX") || this.isDirty("radiusY") || this.isDirty("rotation")) && (this._clear = !0)
                }
                _changed() {
                    super._changed(),
                    this._clear && this._display.drawEllipse(0, 0, Math.abs(this.get("radiusX")), Math.abs(this.get("radiusY")))
                }
            }
            Object.defineProperty(n, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Ellipse"
            }),
            Object.defineProperty(n, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.T.classNames.concat([n.className])
            })
        },
        1479: function(e, t, i) {
            "use strict";
            i.d(t, {
                T: function() {
                    return h
                },
                u: function() {
                    return l
                }
            });
            var r = i(4429)
              , n = i(4596)
              , s = i(4680)
              , a = i(5040)
              , o = i(5071);
            const l = ["fill", "fillOpacity", "stroke", "strokeWidth", "strokeOpacity", "fillPattern", "strokePattern", "fillGradient", "strokeGradient", "strokeDasharray", "strokeDashoffset"];
            class h extends n.j {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "_display", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this._root._renderer.makeGraphics()
                    }),
                    Object.defineProperty(this, "_clear", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    })
                }
                _beforeChanged() {
                    if (super._beforeChanged(),
                    (this.isDirty("draw") || this.isDirty("svgPath")) && this.markDirtyBounds(),
                    (this.isDirty("fill") || this.isDirty("stroke") || this.isDirty("visible") || this.isDirty("forceHidden") || this.isDirty("scale") || this.isDirty("fillGradient") || this.isDirty("strokeGradient") || this.isDirty("fillPattern") || this.isDirty("strokePattern") || this.isDirty("fillOpacity") || this.isDirty("strokeOpacity") || this.isDirty("strokeWidth") || this.isDirty("draw") || this.isDirty("blendMode") || this.isDirty("strokeDasharray") || this.isDirty("strokeDashoffset") || this.isDirty("svgPath") || this.isDirty("lineJoin") || this.isDirty("shadowColor") || this.isDirty("shadowBlur") || this.isDirty("shadowOffsetX") || this.isDirty("shadowOffsetY")) && (this._clear = !0),
                    this._display.crisp = this.get("crisp", !1),
                    this.isDirty("fillGradient")) {
                        const e = this.get("fillGradient");
                        if (e) {
                            this._display.isMeasured = !0;
                            const t = e.get("target");
                            t && (this._disposers.push(t.events.on("boundschanged", ( () => {
                                this._markDirtyKey("fill")
                            }
                            ))),
                            this._disposers.push(t.events.on("positionchanged", ( () => {
                                this._markDirtyKey("fill")
                            }
                            ))))
                        }
                    }
                    if (this.isDirty("strokeGradient")) {
                        const e = this.get("strokeGradient");
                        if (e) {
                            this._display.isMeasured = !0;
                            const t = e.get("target");
                            t && (this._disposers.push(t.events.on("boundschanged", ( () => {
                                this._markDirtyKey("stroke")
                            }
                            ))),
                            this._disposers.push(t.events.on("positionchanged", ( () => {
                                this._markDirtyKey("stroke")
                            }
                            ))))
                        }
                    }
                }
                _changed() {
                    if (super._changed(),
                    this._clear) {
                        this.markDirtyBounds(),
                        this.markDirtyLayer(),
                        this._display.clear();
                        let e = this.get("strokeDasharray");
                        a.isNumber(e) && (e = e < .5 ? [0] : [e]),
                        this._display.setLineDash(e);
                        const t = this.get("strokeDashoffset");
                        t && this._display.setLineDashOffset(t);
                        const i = this.get("blendMode", s.b.NORMAL);
                        this._display.blendMode = i;
                        const r = this.get("draw");
                        r && r(this._display, this);
                        const n = this.get("svgPath");
                        null != n && this._display.svgPath(n)
                    }
                }
                _afterChanged() {
                    if (super._afterChanged(),
                    this._clear) {
                        const e = this.get("fill")
                          , t = this.get("fillGradient")
                          , i = this.get("fillPattern")
                          , n = this.get("fillOpacity")
                          , s = this.get("stroke")
                          , a = this.get("strokeGradient")
                          , l = this.get("strokePattern")
                          , h = this.get("shadowColor")
                          , u = this.get("shadowBlur")
                          , c = this.get("shadowOffsetX")
                          , d = this.get("shadowOffsetY")
                          , p = this.get("shadowOpacity");
                        if (h && (u || c || d) && this._display.shadow(h, u, c, d, p),
                        i) {
                            let t = !1;
                            !e || i.get("fill") && !i.get("fillInherited") || (i.set("fill", e),
                            i.set("fillInherited", !0),
                            t = !0),
                            !s || i.get("color") && !i.get("colorInherited") || (i.set("color", s),
                            i.set("colorInherited", !0),
                            t = !0),
                            t && i._changed();
                            const a = i.pattern;
                            a && (this._display.beginFill(a, n),
                            this._display.endFill(),
                            i instanceof r.v && i.events.once("loaded", ( () => {
                                this._clear = !0,
                                this.markDirty()
                            }
                            )))
                        } else if (t) {
                            if (e) {
                                const i = t.get("stops", []);
                                i.length && o.each(i, (t => {
                                    t.color && !t.colorInherited || !e || (t.color = e,
                                    t.colorInherited = !0),
                                    (null == t.opacity || t.opacityInherited) && (t.opacity = n,
                                    t.opacityInherited = !0)
                                }
                                ))
                            }
                            const i = t.getFill(this);
                            i && (this._display.beginFill(i, n),
                            this._display.endFill())
                        } else
                            e && (this._display.beginFill(e, n),
                            this._display.endFill());
                        if (s || a || l) {
                            const e = this.get("strokeOpacity");
                            let t = this.get("strokeWidth", 1);
                            this.get("nonScalingStroke") && (t /= this.get("scale", 1)),
                            this.get("crisp") && (t /= this._root._renderer.resolution);
                            const i = this.get("lineJoin");
                            if (l) {
                                let n = !1;
                                !s || l.get("color") && !l.get("colorInherited") || (l.set("color", s),
                                l.set("colorInherited", !0),
                                n = !0),
                                n && l._changed();
                                const a = l.pattern;
                                a && (this._display.lineStyle(t, a, e, i),
                                this._display.endStroke(),
                                l instanceof r.v && l.events.once("loaded", ( () => {
                                    this._clear = !0,
                                    this.markDirty()
                                }
                                )))
                            } else if (a) {
                                const r = a.get("stops", []);
                                r.length && o.each(r, (t => {
                                    t.color && !t.colorInherited || !s || (t.color = s,
                                    t.colorInherited = !0),
                                    (null == t.opacity || t.opacityInherited) && (t.opacity = e,
                                    t.opacityInherited = !0)
                                }
                                ));
                                const n = a.getFill(this);
                                n && (this._display.lineStyle(t, n, e, i),
                                this._display.endStroke())
                            } else
                                s && (this._display.lineStyle(t, s, e, i),
                                this._display.endStroke())
                        }
                        this.getPrivate("showingTooltip") && this.showTooltip()
                    }
                    this._clear = !1
                }
            }
            Object.defineProperty(h, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Graphics"
            }),
            Object.defineProperty(h, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: n.j.classNames.concat([h.className])
            })
        },
        6881: function(e, t, i) {
            "use strict";
            i.d(t, {
                M: function() {
                    return a
                }
            });
            var r = i(2010)
              , n = i(5071)
              , s = i(751);
            class a extends r.A {
                _afterNew() {
                    this._setRawDefault("maxColumns", Number.MAX_VALUE),
                    super._afterNew()
                }
                updateContainer(e) {
                    let t = e.get("paddingLeft", 0)
                      , i = e.get("paddingRight", 0)
                      , n = e.get("paddingTop", 0)
                      , a = e.maxWidth() - t - i
                      , o = a
                      , l = 1;
                    (0,
                    r.j)(e, (e => {
                        if (e.get("visible") && e.getPrivate("visible") && !e.get("forceHidden") && "absolute" != e.get("position")) {
                            let t = e.width();
                            t < o && (o = t),
                            t > l && (l = t)
                        }
                    }
                    )),
                    o = s.fitToRange(o, 1, a),
                    l = s.fitToRange(l, 1, a);
                    let h = 1;
                    h = this.get("fixedWidthGrid") ? a / l : a / o,
                    h = Math.max(1, Math.floor(h)),
                    h = Math.min(this.get("maxColumns", Number.MAX_VALUE), h);
                    let u = this.getColumnWidths(e, h, l, a)
                      , c = n
                      , d = 0
                      , p = 0;
                    h = u.length;
                    let f = t;
                    (0,
                    r.j)(e, (e => {
                        if ("relative" == e.get("position") && e.isVisible()) {
                            const i = e.get("marginTop", 0)
                              , r = e.get("marginBottom", 0);
                            let n = e.adjustedLocalBounds()
                              , s = e.get("marginLeft", 0)
                              , a = e.get("marginRight", 0)
                              , o = f + s - n.left
                              , l = c + i - n.top;
                            e.setPrivate("x", o),
                            e.setPrivate("y", l),
                            f += u[d] + a,
                            p = Math.max(p, e.height() + i + r),
                            d++,
                            d >= h && (d = 0,
                            f = t,
                            c += p)
                        }
                    }
                    ))
                }
                getColumnWidths(e, t, i, s) {
                    let a = 0
                      , o = []
                      , l = 0;
                    return (0,
                    r.j)(e, (r => {
                        let n = r.adjustedLocalBounds();
                        "absolute" != r.get("position") && r.isVisible() && (this.get("fixedWidthGrid") ? o[l] = i : o[l] = Math.max(0 | o[l], n.right - n.left + r.get("marginLeft", 0) + r.get("marginRight", 0)),
                        l < e.children.length - 1 && (l++,
                        l == t && (l = 0)))
                    }
                    )),
                    n.each(o, (e => {
                        a += e
                    }
                    )),
                    a > s ? t > 2 ? (t -= 1,
                    this.getColumnWidths(e, t, i, s)) : [s] : o
                }
            }
            Object.defineProperty(a, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "GridLayout"
            }),
            Object.defineProperty(a, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.A.classNames.concat([a.className])
            })
        },
        4431: function(e, t, i) {
            "use strict";
            i.d(t, {
                G: function() {
                    return a
                }
            });
            var r = i(2010)
              , n = i(5040)
              , s = i(6245);
            class a extends r.A {
                updateContainer(e) {
                    let t = e.get("paddingLeft", 0)
                      , i = e.innerWidth()
                      , a = 0;
                    (0,
                    r.j)(e, (e => {
                        if (e.isVisible() && "relative" == e.get("position")) {
                            let t = e.get("width");
                            if (t instanceof s.gG) {
                                a += t.value;
                                let r = i * t.value
                                  , n = e.get("minWidth", e.getPrivate("minWidth", -1 / 0));
                                n > r && (i -= n,
                                a -= t.value);
                                let s = e.get("maxWidth", e.getPrivate("maxWidth", 1 / 0));
                                r > s && (i -= s,
                                a -= t.value)
                            } else
                                n.isNumber(t) || (t = e.width()),
                                i -= t + e.get("marginLeft", 0) + e.get("marginRight", 0)
                        }
                    }
                    )),
                    (i <= 0 || i == 1 / 0) && (i = .1),
                    (0,
                    r.j)(e, (e => {
                        if (e.isVisible() && "relative" == e.get("position")) {
                            let t = e.get("width");
                            if (t instanceof s.gG) {
                                let r = i * t.value / a - e.get("marginLeft", 0) - e.get("marginRight", 0)
                                  , n = e.get("minWidth", e.getPrivate("minWidth", -1 / 0))
                                  , s = e.get("maxWidth", e.getPrivate("maxWidth", 1 / 0));
                                r = Math.min(Math.max(n, r), s),
                                e.setPrivate("width", r)
                            } else
                                e._prevSettings.width instanceof s.gG && e.setPrivate("width", void 0)
                        }
                    }
                    ));
                    let o = t;
                    (0,
                    r.j)(e, (e => {
                        if ("relative" == e.get("position"))
                            if (e.isVisible()) {
                                let t = e.adjustedLocalBounds()
                                  , i = e.get("marginLeft", 0)
                                  , r = e.get("marginRight", 0)
                                  , n = e.get("maxWidth")
                                  , s = t.left
                                  , a = t.right;
                                n && a - s > n && (a = s + n);
                                let l = o + i - s;
                                e.setPrivate("x", l),
                                o = l + a + r
                            } else
                                e.setPrivate("x", void 0)
                    }
                    ))
                }
            }
            Object.defineProperty(a, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "HorizontalLayout"
            }),
            Object.defineProperty(a, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.A.classNames.concat([a.className])
            })
        },
        962: function(e, t, i) {
            "use strict";
            i.d(t, {
                _: function() {
                    return l
                }
            });
            var r = i(2036)
              , n = i(6245)
              , s = i(8777)
              , a = i(5071)
              , o = i(5040);
            class l extends s.W {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "_text", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_textKeys", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: ["text", "fill", "fillOpacity", "textAlign", "fontFamily", "fontSize", "fontStyle", "fontWeight", "fontStyle", "fontVariant", "textDecoration", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY", "shadowOpacity", "lineHeight", "baselineRatio", "direction", "textBaseline", "oversizedBehavior", "breakWords", "ellipsis", "minScale", "populateText", "role", "ignoreFormatting"]
                    })
                }
                get text() {
                    return this._text
                }
                _afterNew() {
                    super._afterNew(),
                    this._makeText(),
                    a.each(this._textKeys, (e => {
                        const t = this.get(e);
                        null != t && this._text.set(e, t)
                    }
                    )),
                    "" !== this.get("html", "") && this._text.set("text", ""),
                    this.onPrivate("maxWidth", ( () => {
                        this._setMaxDimentions()
                    }
                    )),
                    this.onPrivate("maxHeight", ( () => {
                        this._setMaxDimentions()
                    }
                    ))
                }
                _makeText() {
                    this._text = this.children.push(r.x.new(this._root, {}))
                }
                _updateChildren() {
                    if (super._updateChildren(),
                    a.each(this._textKeys, (e => {
                        this._text.set(e, this.get(e))
                    }
                    )),
                    this.isDirty("maxWidth") && this._setMaxDimentions(),
                    this.isDirty("maxHeight") && this._setMaxDimentions(),
                    this.isDirty("rotation") && this._setMaxDimentions(),
                    "" !== this.get("html", "") ? this._text.set("text", "") : this._text.set("text", this.get("text")),
                    this.isDirty("textAlign") || this.isDirty("width")) {
                        const e = this.get("textAlign");
                        let t;
                        null != this.get("width") ? t = "right" == e ? n.AQ : "center" == e ? n.CI : 0 : "left" == e || "start" == e ? t = this.get("paddingLeft") : "right" != e && "end" != e || (t = -this.get("paddingRight")),
                        this.text.set("x", t)
                    }
                }
                _setMaxDimentions() {
                    const e = this.get("rotation")
                      , t = 90 == e || 270 == e || -90 == e
                      , i = this.get("maxWidth", this.getPrivate("maxWidth", 1 / 0));
                    o.isNumber(i) ? this.text.set(t ? "maxHeight" : "maxWidth", i - this.get("paddingLeft", 0) - this.get("paddingRight", 0)) : this.text.set(t ? "maxHeight" : "maxWidth", void 0);
                    const r = this.get("maxHeight", this.getPrivate("maxHeight", 1 / 0));
                    o.isNumber(r) ? this.text.set(t ? "maxWidth" : "maxHeight", r - this.get("paddingTop", 0) - this.get("paddingBottom", 0)) : this.text.set(t ? "maxWidth" : "maxHeight", void 0)
                }
                _setDataItem(e) {
                    super._setDataItem(e),
                    this._markDirtyKey("text"),
                    this.text.get("populateText") && this.text.markDirtyText()
                }
                getText() {
                    return this._text._getText()
                }
            }
            Object.defineProperty(l, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Label"
            }),
            Object.defineProperty(l, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: s.W.classNames.concat([l.className])
            })
        },
        2010: function(e, t, i) {
            "use strict";
            i.d(t, {
                A: function() {
                    return s
                },
                j: function() {
                    return n
                }
            });
            var r = i(6331);
            function n(e, t) {
                e.get("reverseChildren", !1) ? e.children.eachReverse(t) : e.children.each(t)
            }
            class s extends r.JH {
            }
            Object.defineProperty(s, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Layout"
            }),
            Object.defineProperty(s, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.JH.classNames.concat([s.className])
            })
        },
        3105: function(e, t, i) {
            "use strict";
            i.d(t, {
                D: function() {
                    return u
                }
            });
            var r = i(3399)
              , n = i(8777)
              , s = i(962)
              , a = i(3497)
              , o = i(5769)
              , l = i(7144)
              , h = i(7652);
            class u extends r.F {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "itemContainers", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new l.o(o.YS.new({}),( () => n.W._new(this._root, {
                            themeTags: h.mergeTags(this.itemContainers.template.get("themeTags", []), ["legend", "item"]),
                            themeTagsSelf: h.mergeTags(this.itemContainers.template.get("themeTagsSelf", []), ["itemcontainer"]),
                            background: a.c.new(this._root, {
                                themeTags: h.mergeTags(this.itemContainers.template.get("themeTags", []), ["legend", "item", "background"]),
                                themeTagsSelf: h.mergeTags(this.itemContainers.template.get("themeTagsSelf", []), ["itemcontainer"])
                            })
                        }, [this.itemContainers.template])))
                    }),
                    Object.defineProperty(this, "markers", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new l.o(o.YS.new({}),( () => n.W._new(this._root, {
                            themeTags: h.mergeTags(this.markers.template.get("themeTags", []), ["legend", "marker"])
                        }, [this.markers.template])))
                    }),
                    Object.defineProperty(this, "labels", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new l.o(o.YS.new({}),( () => s._._new(this._root, {
                            themeTags: h.mergeTags(this.labels.template.get("themeTags", []), ["legend", "label"])
                        }, [this.labels.template])))
                    }),
                    Object.defineProperty(this, "valueLabels", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new l.o(o.YS.new({}),( () => s._._new(this._root, {
                            themeTags: h.mergeTags(this.valueLabels.template.get("themeTags", []), ["legend", "label", "value"])
                        }, [this.valueLabels.template])))
                    }),
                    Object.defineProperty(this, "markerRectangles", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new l.o(o.YS.new({}),( () => a.c._new(this._root, {
                            themeTags: h.mergeTags(this.markerRectangles.template.get("themeTags", []), ["legend", "marker", "rectangle"])
                        }, [this.markerRectangles.template])))
                    })
                }
                _afterNew() {
                    this._settings.themeTags = h.mergeTags(this._settings.themeTags, ["legend"]),
                    this.fields.push("name", "stroke", "fill"),
                    super._afterNew()
                }
                makeItemContainer(e) {
                    const t = this.children.push(this.itemContainers.make());
                    return t._setDataItem(e),
                    this.itemContainers.push(t),
                    t.states.create("disabled", {}),
                    t
                }
                makeMarker() {
                    const e = this.markers.make();
                    return this.markers.push(e),
                    e.states.create("disabled", {}),
                    e
                }
                makeLabel() {
                    const e = this.labels.make();
                    return e.states.create("disabled", {}),
                    e
                }
                makeValueLabel() {
                    const e = this.valueLabels.make();
                    return e.states.create("disabled", {}),
                    e
                }
                makeMarkerRectangle() {
                    const e = this.markerRectangles.make();
                    return e.states.create("disabled", {}),
                    e
                }
                processDataItem(e) {
                    super.processDataItem(e);
                    const t = this.makeItemContainer(e)
                      , i = this.get("nameField")
                      , r = this.get("fillField")
                      , n = this.get("strokeField");
                    if (t) {
                        const s = this.get("clickTarget", "itemContainer")
                          , a = e.dataContext;
                        a && a.set && a.set("legendDataItem", e),
                        t._setDataItem(e),
                        e.set("itemContainer", t);
                        const o = this.makeMarker();
                        if (o) {
                            t.children.push(o),
                            o._setDataItem(e),
                            e.set("marker", o);
                            const i = this.get("useDefaultMarker")
                              , s = o.children.push(this.makeMarkerRectangle());
                            let l = e.get("fill")
                              , h = e.get("stroke");
                            e.set("markerRectangle", s),
                            a && a.get && (l = a.get(r, l),
                            h = a.get(n, h)),
                            h || (h = l),
                            i ? a.on && (a.on(r, ( () => {
                                s.set("fill", a.get(r))
                            }
                            )),
                            a.on(n, ( () => {
                                s.set("stroke", a.get(n))
                            }
                            ))) : a && a.createLegendMarker && a.createLegendMarker(),
                            s.setAll({
                                fill: l,
                                stroke: h
                            });
                            const u = a.component;
                            u && u.updateLegendMarker && u.updateLegendMarker(a)
                        }
                        const l = this.makeLabel();
                        if (l) {
                            t.children.push(l),
                            l._setDataItem(e),
                            e.set("label", l),
                            l.text.on("text", ( () => {
                                t.setRaw("ariaLabel", l.text._getText() + ("none" !== this.get("clickTarget") ? "; " + this._t("Press ENTER to toggle") : "")),
                                t.markDirtyAccessibility()
                            }
                            )),
                            a && a.get && e.set("name", a.get(i));
                            let r = e.get("name");
                            r && l.set("text", r)
                        }
                        const h = this.makeValueLabel();
                        if (h && (t.children.push(h),
                        h._setDataItem(e),
                        e.set("valueLabel", h)),
                        a && a.show && (a.on("visible", (e => {
                            t.set("disabled", !e)
                        }
                        )),
                        a.get("visible") || t.set("disabled", !0),
                        "none" != s)) {
                            let i = t;
                            "marker" == s && (i = o),
                            this._addClickEvents(i, a, e)
                        }
                        this.children.values.sort(( (e, t) => {
                            const i = e.dataItem.dataContext
                              , r = t.dataItem.dataContext;
                            if (i && r) {
                                const e = this.data.indexOf(i)
                                  , t = this.data.indexOf(r);
                                if (e > t)
                                    return 1;
                                if (e < t)
                                    return -1
                            }
                            return 0
                        }
                        )),
                        a && a.updateLegendValue && a.updateLegendValue()
                    }
                }
                _addClickEvents(e, t, i) {
                    e.set("cursorOverStyle", "pointer"),
                    e.events.on("pointerover", ( () => {
                        const e = t.component;
                        e && e.hoverDataItem && e.hoverDataItem(t)
                    }
                    )),
                    e.events.on("pointerout", ( () => {
                        const e = t.component;
                        e && e.hoverDataItem && e.unhoverDataItem(t)
                    }
                    )),
                    e.events.on("click", ( () => {
                        const r = i.get("label").text._getText();
                        t.show && t.isHidden && (t.isHidden() || !1 === t.get("visible")) ? (t.show(),
                        e.set("disabled", !1),
                        this._root.readerAlert(this._t("%1 shown", this._root.locale, r))) : t.hide && (t.hide(),
                        e.set("disabled", !0),
                        this._root.readerAlert(this._t("%1 hidden", this._root.locale, r)))
                    }
                    ))
                }
                disposeDataItem(e) {
                    super.disposeDataItem(e);
                    const t = e.dataContext;
                    t && t.get && t.get("legendDataItem") == e && t.set("legendDataItem", void 0);
                    let i = e.get("itemContainer");
                    i && (this.itemContainers.removeValue(i),
                    i.dispose());
                    let r = e.get("marker");
                    r && (this.markers.removeValue(r),
                    r.dispose());
                    let n = e.get("markerRectangle");
                    n && (this.markerRectangles.removeValue(n),
                    n.dispose());
                    let s = e.get("label");
                    s && (this.labels.removeValue(s),
                    s.dispose());
                    let a = e.get("valueLabel");
                    a && (this.valueLabels.removeValue(a),
                    a.dispose())
                }
            }
            Object.defineProperty(u, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Legend"
            }),
            Object.defineProperty(u, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.F.classNames.concat([u.className])
            })
        },
        2077: function(e, t, i) {
            "use strict";
            i.d(t, {
                x: function() {
                    return a
                }
            });
            var r = i(1479);
            function n(e, t) {
                for (let i = 0, r = t.length; i < r; i++) {
                    const r = t[i];
                    if (r.length > 0) {
                        let t = r[0];
                        if (t.length > 0) {
                            let i = t[0];
                            e.moveTo(i.x, i.y);
                            for (let t = 0, i = r.length; t < i; t++)
                                s(e, r[t])
                        }
                    }
                }
            }
            function s(e, t) {
                for (let i = 0, r = t.length; i < r; i++) {
                    const r = t[i];
                    e.lineTo(r.x, r.y)
                }
            }
            class a extends r.T {
                _beforeChanged() {
                    super._beforeChanged(),
                    (this.isDirty("points") || this.isDirty("segments") || this._sizeDirty || this.isPrivateDirty("width") || this.isPrivateDirty("height")) && (this._clear = !0)
                }
                _changed() {
                    if (super._changed(),
                    this._clear) {
                        const e = this.get("points")
                          , t = this.get("segments");
                        if (e && e.length > 0) {
                            let t = e[0];
                            this._display.moveTo(t.x, t.y),
                            n(this._display, [[e]])
                        } else if (t)
                            n(this._display, t);
                        else if (!this.get("draw")) {
                            let e = this.width()
                              , t = this.height();
                            this._display.moveTo(0, 0),
                            this._display.lineTo(e, t)
                        }
                    }
                }
            }
            Object.defineProperty(a, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Line"
            }),
            Object.defineProperty(a, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.T.classNames.concat([a.className])
            })
        },
        8289: function(e, t, i) {
            "use strict";
            i.d(t, {
                G: function() {
                    return n
                }
            });
            class r {
                constructor(e, t) {
                    Object.defineProperty(this, "_line", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_point", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_context", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_x0", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_x1", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_y0", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_y1", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_t0", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_tension", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    this._context = e,
                    this._tension = t
                }
                areaStart() {
                    this._line = 0
                }
                areaEnd() {
                    this._line = NaN
                }
                lineStart() {
                    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN,
                    this._point = 0
                }
                lineEnd() {
                    switch (this._point) {
                    case 2:
                        this._context.lineTo(this._x1, this._y1);
                        break;
                    case 3:
                        l(this, this._t0, o(this, this._t0))
                    }
                    (this._line || 0 !== this._line && 1 === this._point) && this._context.closePath(),
                    this._line = 1 - this._line
                }
                point(e, t) {
                    let i = NaN;
                    if (t = +t,
                    (e = +e) !== this._x1 || t !== this._y1) {
                        switch (this._point) {
                        case 0:
                            this._point = 1,
                            this._line ? this._context.lineTo(e, t) : this._context.moveTo(e, t);
                            break;
                        case 1:
                            this._point = 2;
                            break;
                        case 2:
                            this._point = 3,
                            l(this, o(this, i = a(this, e, t)), i);
                            break;
                        default:
                            l(this, this._t0, i = a(this, e, t))
                        }
                        this._x0 = this._x1,
                        this._x1 = e,
                        this._y0 = this._y1,
                        this._y1 = t,
                        this._t0 = i
                    }
                }
            }
            function n(e) {
                return function(t) {
                    return new r(t,e)
                }
            }
            function s(e) {
                return e < 0 ? -1 : 1
            }
            function a(e, t, i) {
                let r = e._x1 - e._x0
                  , n = t - e._x1
                  , a = (e._y1 - e._y0) / (r || n < 0 && -0)
                  , o = (i - e._y1) / (n || r < 0 && -0)
                  , l = (a * n + o * r) / (r + n);
                return (s(a) + s(o)) * Math.min(Math.abs(a), Math.abs(o), .5 * Math.abs(l)) || 0
            }
            function o(e, t) {
                let i = e._x1 - e._x0;
                return i ? (3 * (e._y1 - e._y0) / i - t) / 2 : t
            }
            function l(e, t, i) {
                let r = e._x0
                  , n = e._y0
                  , s = e._x1
                  , a = e._y1
                  , o = (s - r) / 1.5 * (1 - e._tension);
                e._context.bezierCurveTo(r + o, n + o * t, s - o, a - o * i, s, a)
            }
        },
        5892: function(e, t, i) {
            "use strict";
            i.d(t, {
                $: function() {
                    return n
                }
            });
            class r {
                constructor(e, t) {
                    Object.defineProperty(this, "_line", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_point", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_context", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_x0", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_x1", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_y0", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_y1", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_t0", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_tension", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    this._context = e,
                    this._tension = t
                }
                areaStart() {
                    this._line = 0
                }
                areaEnd() {
                    this._line = NaN
                }
                lineStart() {
                    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN,
                    this._point = 0
                }
                lineEnd() {
                    switch (this._point) {
                    case 2:
                        this._context.lineTo(this._x1, this._y1);
                        break;
                    case 3:
                        l(this, this._t0, o(this, this._t0))
                    }
                    (this._line || 0 !== this._line && 1 === this._point) && this._context.closePath(),
                    this._line = 1 - this._line
                }
                point(e, t) {
                    [e,t] = [t, e];
                    let i = NaN;
                    if (t = +t,
                    (e = +e) !== this._x1 || t !== this._y1) {
                        switch (this._point) {
                        case 0:
                            this._point = 1,
                            this._line ? this._context.lineTo(t, e) : this._context.moveTo(t, e);
                            break;
                        case 1:
                            this._point = 2;
                            break;
                        case 2:
                            this._point = 3,
                            l(this, o(this, i = a(this, e, t)), i);
                            break;
                        default:
                            l(this, this._t0, i = a(this, e, t))
                        }
                        this._x0 = this._x1,
                        this._x1 = e,
                        this._y0 = this._y1,
                        this._y1 = t,
                        this._t0 = i
                    }
                }
            }
            function n(e) {
                function t(t) {
                    return new r(t,e)
                }
                return t.tension = function(e) {
                    return n(+e)
                }
                ,
                t
            }
            function s(e) {
                return e < 0 ? -1 : 1
            }
            function a(e, t, i) {
                let r = e._x1 - e._x0
                  , n = t - e._x1
                  , a = (e._y1 - e._y0) / (r || n < 0 && -0)
                  , o = (i - e._y1) / (n || r < 0 && -0)
                  , l = (a * n + o * r) / (r + n);
                return (s(a) + s(o)) * Math.min(Math.abs(a), Math.abs(o), .5 * Math.abs(l)) || 0
            }
            function o(e, t) {
                let i = e._x1 - e._x0;
                return i ? (3 * (e._y1 - e._y0) / i - t) / 2 : t
            }
            function l(e, t, i) {
                let r = e._x0
                  , n = e._y0
                  , s = e._x1
                  , a = e._y1
                  , o = (s - r) / 1.5 * (1 - e._tension);
                e._context.bezierCurveTo(n + o * t, r + o, a - o * i, s - o, a, s)
            }
        },
        5021: function(e, t, i) {
            "use strict";
            i.d(t, {
                t: function() {
                    return s
                }
            });
            var r = i(4596)
              , n = i(5040);
            class s extends r.j {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "_display", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this._root._renderer.makePicture(void 0)
                    })
                }
                _changed() {
                    if (super._changed(),
                    this.isDirty("width")) {
                        const e = this.get("width");
                        this._display.width = n.isNumber(e) ? e : void 0
                    }
                    if (this.isDirty("height")) {
                        const e = this.get("height");
                        this._display.height = n.isNumber(e) ? e : void 0
                    }
                    if (this.isDirty("shadowColor")) {
                        this._display.clear();
                        const e = this.get("shadowColor");
                        this._display.shadowColor = null == e ? void 0 : e
                    }
                    this.isDirty("shadowBlur") && (this._display.clear(),
                    this._display.shadowBlur = this.get("shadowBlur")),
                    this.isDirty("shadowOffsetX") && (this._display.clear(),
                    this._display.shadowOffsetX = this.get("shadowOffsetX")),
                    this.isDirty("shadowOffsetY") && (this._display.clear(),
                    this._display.shadowOffsetY = this.get("shadowOffsetY")),
                    this.isDirty("shadowOpacity") && (this._display.clear(),
                    this._display.shadowOpacity = this.get("shadowOpacity")),
                    (this.isDirty("src") || this.isDirty("cors")) && (this._display.clear(),
                    this._load())
                }
                _load() {
                    const e = this.get("src");
                    if (e) {
                        let t = "loaded";
                        const i = new Image;
                        i.crossOrigin = this.get("cors", "anonymous"),
                        i.src = e,
                        i.decode().then(( () => {
                            this._display.image = i,
                            this._updateSize()
                        }
                        )).catch((e => {
                            t = "loaderror"
                        }
                        )),
                        this.events.isEnabled(t) && this.events.dispatch(t, {
                            type: t,
                            target: this
                        })
                    }
                }
                _updateSize() {
                    super._updateSize();
                    const e = this._display.image;
                    if (e) {
                        let t = this.getPrivate("width", this.get("width"))
                          , i = this.getPrivate("height", this.get("height"));
                        const r = e.width && e.height ? e.width / e.height : 0;
                        n.isNumber(t) && n.isNumber(i) ? (this._display.width = t,
                        this._display.height = i) : n.isNumber(t) && r ? i = t / r : n.isNumber(i) && r ? t = i * r : (t = e.width,
                        i = e.height),
                        n.isNumber(t) && (this._display.width = t),
                        n.isNumber(i) && (this._display.height = i),
                        this.markDirtyBounds(),
                        this.markDirty()
                    }
                }
            }
            Object.defineProperty(s, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Picture"
            }),
            Object.defineProperty(s, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.j.classNames.concat([s.className])
            })
        },
        8931: function(e, t, i) {
            "use strict";
            i.d(t, {
                i: function() {
                    return s
                }
            });
            var r = i(1479)
              , n = i(751);
            class s extends r.T {
                _beforeChanged() {
                    super._beforeChanged(),
                    (this.isDirty("pointerBaseWidth") || this.isDirty("cornerRadius") || this.isDirty("pointerLength") || this.isDirty("pointerX") || this.isDirty("pointerY") || this.isDirty("width") || this.isDirty("height")) && (this._clear = !0)
                }
                _changed() {
                    if (super._changed(),
                    this._clear) {
                        this.markDirtyBounds();
                        let e = this.width()
                          , t = this.height();
                        if (e > 0 && t > 0) {
                            let i = this.get("cornerRadius", 8);
                            i = n.fitToRange(i, 0, Math.min(e / 2, t / 2));
                            let r = this.get("pointerX", 0)
                              , s = this.get("pointerY", 0)
                              , a = this.get("pointerBaseWidth", 15) / 2
                              , o = 0
                              , l = 0
                              , h = 0
                              , u = (r - o) * (t - l) - (s - l) * (e - o)
                              , c = (r - h) * (0 - t) - (s - t) * (e - h);
                            const d = this._display;
                            if (d.moveTo(i, 0),
                            u > 0 && c > 0) {
                                let t = Math.round(n.fitToRange(r, i + a, e - a - i));
                                s = n.fitToRange(s, -1 / 0, 0),
                                d.lineTo(t - a, 0),
                                d.lineTo(r, s),
                                d.lineTo(t + a, 0)
                            }
                            if (d.lineTo(e - i, 0),
                            d.arcTo(e, 0, e, i, i),
                            u > 0 && c < 0) {
                                let o = Math.round(n.fitToRange(s, i + a, t - a - i));
                                r = n.fitToRange(r, e, 1 / 0),
                                d.lineTo(e, i),
                                d.lineTo(e, Math.max(o - a, i)),
                                d.lineTo(r, s),
                                d.lineTo(e, o + a)
                            }
                            if (d.lineTo(e, t - i),
                            d.arcTo(e, t, e - i, t, i),
                            u < 0 && c < 0) {
                                let o = Math.round(n.fitToRange(r, i + a, e - a - i));
                                s = n.fitToRange(s, t, 1 / 0),
                                d.lineTo(e - i, t),
                                d.lineTo(o + a, t),
                                d.lineTo(r, s),
                                d.lineTo(o - a, t)
                            }
                            if (d.lineTo(i, t),
                            d.arcTo(0, t, 0, t - i, i),
                            u < 0 && c > 0) {
                                let e = Math.round(n.fitToRange(s, i + a, t - i - a));
                                r = n.fitToRange(r, -1 / 0, 0),
                                d.lineTo(0, t - i),
                                d.lineTo(0, e + a),
                                d.lineTo(r, s),
                                d.lineTo(0, Math.max(e - a, i))
                            }
                            d.lineTo(0, i),
                            d.arcTo(0, 0, i, 0, i),
                            d.closePath()
                        }
                    }
                }
            }
            Object.defineProperty(s, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "PointedRectangle"
            }),
            Object.defineProperty(s, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.T.classNames.concat([s.className])
            })
        },
        7770: function(e, t, i) {
            "use strict";
            i.d(t, {
                m: function() {
                    return s
                }
            });
            var r = i(1479)
              , n = i(5071);
            class s extends r.T {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "morphAnimation", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    })
                }
                _beforeChanged() {
                    if (super._beforeChanged(),
                    this.isDirty("coordinates")) {
                        const e = []
                          , t = this.get("coordinates");
                        t && n.each(t, (t => {
                            e.push({
                                x: t[0],
                                y: t[1]
                            })
                        }
                        )),
                        this.set("points", e)
                    }
                    if (this.isPrivateDirty("points") && (this._clear = !0),
                    this.isDirty("points")) {
                        this._clear = !0;
                        const e = this.get("points")
                          , t = this._prevSettings.points;
                        if (t) {
                            if (e) {
                                let i = n.copy(e)
                                  , r = n.copy(t)
                                  , s = i.length
                                  , a = r.length;
                                if (s > a) {
                                    let e = n.copy(i);
                                    for (let t = 0; t < s; t++) {
                                        let i = Math.floor(t / s * a);
                                        e[t] = {
                                            x: r[i].x,
                                            y: r[i].y
                                        }
                                    }
                                    r = e
                                } else if (a > s) {
                                    let e = n.copy(r);
                                    for (let t = 0; t < a; t++) {
                                        let r = Math.floor(t / a * s);
                                        e[t] = {
                                            x: i[r].x,
                                            y: i[r].y
                                        }
                                    }
                                    i = e
                                }
                                this.setPrivateRaw("previousPoints", r),
                                this.setPrivateRaw("points", i),
                                this.morphAnimation = this.animatePrivate({
                                    key: "morphProgress",
                                    from: 0,
                                    to: 1,
                                    duration: this.get("animationDuration", 0),
                                    easing: this.get("animationEasing")
                                })
                            }
                        } else
                            this.setPrivateRaw("previousPoints", e),
                            this.setPrivateRaw("points", e);
                        let i = 1 / 0
                          , r = -1 / 0
                          , s = 1 / 0
                          , a = -1 / 0;
                        if (e)
                            for (let t = 1, n = e.length; t < n; t++) {
                                const n = e[t];
                                i = Math.min(i, n.x),
                                r = Math.max(r, n.x),
                                s = Math.min(s, n.y),
                                a = Math.max(a, n.y)
                            }
                        this.setPrivate("minX", i),
                        this.setPrivate("maxX", r),
                        this.setPrivate("minY", s),
                        this.setPrivate("maxY", s)
                    }
                    this.isPrivateDirty("morphProgress") && (this._clear = !0)
                }
                _changed() {
                    super._changed(),
                    this._clear && this._draw()
                }
                _draw() {
                    const e = this.getPrivate("previousPoints")
                      , t = this.getPrivate("points")
                      , i = this.getPrivate("morphProgress", 1);
                    if (t && e) {
                        const r = t[0]
                          , n = e[0];
                        r && this._display.moveTo(n.x + (r.x - n.x) * i, n.y + (r.y - n.y) * i);
                        for (let r = 1, n = t.length; r < n; r++) {
                            const n = t[r]
                              , s = e[r];
                            this._display.lineTo(s.x + (n.x - s.x) * i, s.y + (n.y - s.y) * i)
                        }
                        this._display.closePath()
                    }
                }
                _updateSize() {
                    this.markDirty(),
                    this._clear = !0
                }
            }
            Object.defineProperty(s, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Polygon"
            }),
            Object.defineProperty(s, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.T.classNames.concat([s.className])
            })
        },
        815: function(e, t, i) {
            "use strict";
            i.d(t, {
                x: function() {
                    return l
                }
            });
            var r = i(6245)
              , n = i(962)
              , s = i(4244)
              , a = i(751)
              , o = i(7652);
            class l extends n._ {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "_flipped", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    })
                }
                _afterNew() {
                    this._textKeys.push("textType", "kerning"),
                    super._afterNew()
                }
                _makeText() {
                    this._text = this.children.push(s.f.new(this._root, {}))
                }
                baseRadius() {
                    const e = this.getPrivate("radius", 0)
                      , t = this.getPrivate("innerRadius", 0)
                      , i = this.get("baseRadius", 0);
                    return t + o.relativeToValue(i, e - t)
                }
                radius() {
                    const e = this.get("inside", !1);
                    return this.baseRadius() + this.get("radius", 0) * (e ? -1 : 1)
                }
                _updateChildren() {
                    if (super._updateChildren(),
                    this.isDirty("baseRadius") || this.isPrivateDirty("radius") || this.isPrivateDirty("innerRadius") || this.isDirty("labelAngle") || this.isDirty("radius") || this.isDirty("inside") || this.isDirty("orientation") || this.isDirty("textType")) {
                        const e = this.get("textType", "adjusted")
                          , t = this.get("inside", !1)
                          , i = this.get("orientation");
                        let n = a.normalizeAngle(this.get("labelAngle", 0));
                        this._text.set("startAngle", this.get("labelAngle", 0)),
                        this._text.set("inside", t);
                        const s = a.sin(n)
                          , o = a.cos(n);
                        let l = this.baseRadius()
                          , h = this.radius();
                        if (this._display.angle = 0,
                        "circular" == e)
                            this.setAll({
                                paddingTop: 0,
                                paddingBottom: 0,
                                paddingLeft: 0,
                                paddingRight: 0
                            }),
                            this._text.set("orientation", i),
                            this._text.set("radius", h);
                        else {
                            0 == l && (n = 0,
                            h = 0);
                            let t = h * o
                              , a = h * s;
                            "radial" == e ? (this.setRaw("x", t),
                            this.setRaw("y", a),
                            n < 90 || n > 270 || "auto" != i ? (this._display.angle = n,
                            this._flipped = !1) : (this._display.angle = n + 180,
                            this._flipped = !0),
                            this._dirty.rotation = !1) : "adjusted" == e ? (this.setRaw("centerX", r.CI),
                            this.setRaw("centerY", r.CI),
                            this.setRaw("x", t),
                            this.setRaw("y", a)) : "regular" == e && (this.setRaw("x", t),
                            this.setRaw("y", a))
                        }
                        this.markDirtyPosition(),
                        this.markDirtyBounds()
                    }
                }
                _updatePosition() {
                    const e = this.get("textType", "regular")
                      , t = this.get("inside", !1);
                    let i = 0
                      , n = 0
                      , s = this.get("labelAngle", 0)
                      , o = this.localBounds()
                      , l = o.right - o.left
                      , h = o.bottom - o.top;
                    if ("radial" == e) {
                        if (this._flipped) {
                            let e = this.get("centerX");
                            e instanceof r.gG && (l *= 1 - 2 * e.value),
                            i = l * a.cos(s),
                            n = l * a.sin(s)
                        }
                    } else
                        t || "adjusted" != e || (i = l / 2 * a.cos(s),
                        n = h / 2 * a.sin(s));
                    this.setRaw("dx", i),
                    this.setRaw("dy", n),
                    super._updatePosition()
                }
                get text() {
                    return this._text
                }
            }
            Object.defineProperty(l, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "RadialLabel"
            }),
            Object.defineProperty(l, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: n._.classNames.concat([l.className])
            })
        },
        4244: function(e, t, i) {
            "use strict";
            i.d(t, {
                f: function() {
                    return s
                }
            });
            var r = i(2036)
              , n = i(751);
            class s extends r.x {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "_display", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this._root._renderer.makeRadialText("", this.textStyle)
                    })
                }
                _afterNew() {
                    super._afterNew()
                }
                _beforeChanged() {
                    super._beforeChanged(),
                    this._display.clear(),
                    this.isDirty("textType") && (this._display.textType = this.get("textType"),
                    this.markDirtyBounds()),
                    this.isDirty("radius") && (this._display.radius = this.get("radius"),
                    this.markDirtyBounds()),
                    this.isDirty("startAngle") && (this._display.startAngle = (this.get("startAngle", 0) + 90) * n.RADIANS,
                    this.markDirtyBounds()),
                    this.isDirty("inside") && (this._display.inside = this.get("inside"),
                    this.markDirtyBounds()),
                    this.isDirty("orientation") && (this._display.orientation = this.get("orientation"),
                    this.markDirtyBounds()),
                    this.isDirty("kerning") && (this._display.kerning = this.get("kerning"),
                    this.markDirtyBounds())
                }
            }
            Object.defineProperty(s, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "RadialText"
            }),
            Object.defineProperty(s, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.x.classNames.concat([s.className])
            })
        },
        7142: function(e, t, i) {
            "use strict";
            i.d(t, {
                A: function() {
                    return n
                }
            });
            var r = i(1479);
            class n extends r.T {
                _beforeChanged() {
                    super._beforeChanged(),
                    (this.isDirty("width") || this.isDirty("height") || this.isPrivateDirty("width") || this.isPrivateDirty("height")) && (this._clear = !0)
                }
                _changed() {
                    super._changed(),
                    this._clear && !this.get("draw") && this._draw()
                }
                _draw() {
                    this._display.drawRect(0, 0, this.width(), this.height())
                }
                _updateSize() {
                    this.markDirty(),
                    this._clear = !0
                }
            }
            Object.defineProperty(n, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Rectangle"
            }),
            Object.defineProperty(n, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.T.classNames.concat([n.className])
            })
        },
        3497: function(e, t, i) {
            "use strict";
            i.d(t, {
                c: function() {
                    return o
                }
            });
            var r = i(5040)
              , n = i(751)
              , s = i(7652)
              , a = i(7142);
            class o extends a.A {
                _beforeChanged() {
                    super._beforeChanged(),
                    (this.isDirty("cornerRadiusTL") || this.isDirty("cornerRadiusTR") || this.isDirty("cornerRadiusBR") || this.isDirty("cornerRadiusBL")) && (this._clear = !0)
                }
                _draw() {
                    let e = this.width()
                      , t = this.height()
                      , i = e
                      , a = t
                      , o = i / Math.abs(e)
                      , l = a / Math.abs(t);
                    if (r.isNumber(i) && r.isNumber(a)) {
                        let e = Math.min(i, a) / 2
                          , t = s.relativeToValue(this.get("cornerRadiusTL", 8), e)
                          , r = s.relativeToValue(this.get("cornerRadiusTR", 8), e)
                          , h = s.relativeToValue(this.get("cornerRadiusBR", 8), e)
                          , u = s.relativeToValue(this.get("cornerRadiusBL", 8), e)
                          , c = Math.min(Math.abs(i / 2), Math.abs(a / 2));
                        t = n.fitToRange(t, 0, c),
                        r = n.fitToRange(r, 0, c),
                        h = n.fitToRange(h, 0, c),
                        u = n.fitToRange(u, 0, c);
                        const d = this._display;
                        d.moveTo(t * o, 0),
                        d.lineTo(i - r * o, 0),
                        r > 0 && d.arcTo(i, 0, i, r * l, r),
                        d.lineTo(i, a - h * l),
                        h > 0 && d.arcTo(i, a, i - h * o, a, h),
                        d.lineTo(u * o, a),
                        u > 0 && d.arcTo(0, a, 0, a - u * l, u),
                        d.lineTo(0, t * l),
                        t > 0 && d.arcTo(0, 0, t * o, 0, t),
                        d.closePath()
                    }
                }
            }
            Object.defineProperty(o, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "RoundedRectangle"
            }),
            Object.defineProperty(o, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a.A.classNames.concat([o.className])
            })
        },
        6001: function(e, t, i) {
            "use strict";
            i.d(t, {
                L: function() {
                    return h
                }
            });
            var r = i(3497)
              , n = i(8777)
              , s = i(1479)
              , a = i(8054)
              , o = i(5040)
              , l = i(7652);
            class h extends n.W {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "thumb", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this._makeThumb()
                    }),
                    Object.defineProperty(this, "startGrip", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this._makeButton()
                    }),
                    Object.defineProperty(this, "endGrip", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this._makeButton()
                    }),
                    Object.defineProperty(this, "_thumbBusy", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_startDown", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_endDown", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_thumbDown", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_gripDown", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    })
                }
                _addOrientationClass() {
                    this._settings.themeTags = l.mergeTags(this._settings.themeTags, ["scrollbar", this._settings.orientation]),
                    this._settings.background || (this._settings.background = r.c.new(this._root, {
                        themeTags: l.mergeTags(this._settings.themeTags, ["main", "background"])
                    }))
                }
                _makeButton() {
                    return this.children.push(a.z.new(this._root, {
                        themeTags: ["resize", "button", this.get("orientation")],
                        icon: s.T.new(this._root, {
                            themeTags: ["icon"]
                        })
                    }))
                }
                _makeThumb() {
                    return this.children.push(r.c.new(this._root, {
                        themeTags: ["thumb", this.get("orientation")]
                    }))
                }
                _handleAnimation(e) {
                    e && this._disposers.push(e.events.on("stopped", ( () => {
                        this.setPrivateRaw("isBusy", !1),
                        this._thumbBusy = !1
                    }
                    )))
                }
                _afterNew() {
                    this._addOrientationClass(),
                    super._afterNew();
                    const e = this.startGrip
                      , t = this.endGrip
                      , i = this.thumb
                      , r = this.get("background");
                    r && this._disposers.push(r.events.on("click", (e => {
                        this.setPrivateRaw("isBusy", !0);
                        const t = this._display.toLocal(e.point)
                          , r = this.width()
                          , n = this.height()
                          , s = this.get("orientation");
                        let a, o, l;
                        a = "vertical" == s ? (t.y - i.height() / 2) / n : (t.x - i.width() / 2) / r,
                        "vertical" == s ? (o = a * n,
                        l = "y") : (o = a * r,
                        l = "x");
                        const h = this.get("animationDuration", 0);
                        h > 0 ? (this._thumbBusy = !0,
                        this._handleAnimation(this.thumb.animate({
                            key: l,
                            to: o,
                            duration: h,
                            easing: this.get("animationEasing")
                        }))) : (this.thumb.set(l, o),
                        this._root.events.once("frameended", ( () => {
                            this.setPrivateRaw("isBusy", !1)
                        }
                        )))
                    }
                    ))),
                    this._disposers.push(i.events.on("dblclick", (e => {
                        if (!l.isLocalEvent(e.originalEvent, this))
                            return;
                        const t = this.get("animationDuration", 0)
                          , i = this.get("animationEasing");
                        this.animate({
                            key: "start",
                            to: 0,
                            duration: t,
                            easing: i
                        }),
                        this.animate({
                            key: "end",
                            to: 1,
                            duration: t,
                            easing: i
                        })
                    }
                    ))),
                    this._disposers.push(e.events.on("pointerdown", ( () => {
                        this.setPrivateRaw("isBusy", !0),
                        this._startDown = !0,
                        this._gripDown = "start"
                    }
                    ))),
                    this._disposers.push(t.events.on("pointerdown", ( () => {
                        this.setPrivateRaw("isBusy", !0),
                        this._endDown = !0,
                        this._gripDown = "end"
                    }
                    ))),
                    this._disposers.push(i.events.on("pointerdown", ( () => {
                        this.setPrivateRaw("isBusy", !0),
                        this._thumbDown = !0,
                        this._gripDown = void 0
                    }
                    ))),
                    this._disposers.push(e.events.on("globalpointerup", ( () => {
                        this._startDown && this.setPrivateRaw("isBusy", !1),
                        this._startDown = !1
                    }
                    ))),
                    this._disposers.push(t.events.on("globalpointerup", ( () => {
                        this._endDown && this.setPrivateRaw("isBusy", !1),
                        this._endDown = !1
                    }
                    ))),
                    this._disposers.push(i.events.on("globalpointerup", ( () => {
                        this._thumbDown && this.setPrivateRaw("isBusy", !1),
                        this._thumbDown = !1
                    }
                    ))),
                    this._disposers.push(e.on("x", ( () => {
                        this._updateThumb()
                    }
                    ))),
                    this._disposers.push(t.on("x", ( () => {
                        this._updateThumb()
                    }
                    ))),
                    this._disposers.push(e.on("y", ( () => {
                        this._updateThumb()
                    }
                    ))),
                    this._disposers.push(t.on("y", ( () => {
                        this._updateThumb()
                    }
                    ))),
                    this._disposers.push(i.events.on("positionchanged", ( () => {
                        this._updateGripsByThumb()
                    }
                    ))),
                    "vertical" == this.get("orientation") ? (e.set("x", 0),
                    t.set("x", 0),
                    this._disposers.push(i.adapters.add("y", (e => Math.max(Math.min(Number(e), this.height() - i.height()), 0)))),
                    this._disposers.push(i.adapters.add("x", (e => this.width() / 2))),
                    this._disposers.push(e.adapters.add("x", (e => this.width() / 2))),
                    this._disposers.push(t.adapters.add("x", (e => this.width() / 2))),
                    this._disposers.push(e.adapters.add("y", (e => Math.max(Math.min(Number(e), this.height()), 0)))),
                    this._disposers.push(t.adapters.add("y", (e => Math.max(Math.min(Number(e), this.height()), 0))))) : (e.set("y", 0),
                    t.set("y", 0),
                    this._disposers.push(i.adapters.add("x", (e => Math.max(Math.min(Number(e), this.width() - i.width()), 0)))),
                    this._disposers.push(i.adapters.add("y", (e => this.height() / 2))),
                    this._disposers.push(e.adapters.add("y", (e => this.height() / 2))),
                    this._disposers.push(t.adapters.add("y", (e => this.height() / 2))),
                    this._disposers.push(e.adapters.add("x", (e => Math.max(Math.min(Number(e), this.width()), 0)))),
                    this._disposers.push(t.adapters.add("x", (e => Math.max(Math.min(Number(e), this.width()), 0)))))
                }
                _updateChildren() {
                    super._updateChildren(),
                    (this.isDirty("end") || this.isDirty("start") || this._sizeDirty) && this.updateGrips()
                }
                _changed() {
                    if (super._changed(),
                    this.isDirty("start") || this.isDirty("end")) {
                        const e = "rangechanged";
                        this.events.isEnabled(e) && this.events.dispatch(e, {
                            type: e,
                            target: this,
                            start: this.get("start", 0),
                            end: this.get("end", 1),
                            grip: this._gripDown
                        })
                    }
                }
                updateGrips() {
                    const e = this.startGrip
                      , t = this.endGrip
                      , i = this.get("orientation")
                      , r = this.height()
                      , n = this.width();
                    "vertical" == i ? (e.set("y", r * this.get("start", 0)),
                    t.set("y", r * this.get("end", 1))) : (e.set("x", n * this.get("start", 0)),
                    t.set("x", n * this.get("end", 1)));
                    const s = this.getPrivate("positionTextFunction")
                      , a = Math.round(100 * this.get("start", 0))
                      , o = Math.round(100 * this.get("end", 0));
                    let l, h;
                    s ? (l = s.call(this, this.get("start", 0)),
                    h = s.call(this, this.get("end", 0))) : (l = a + "%",
                    h = o + "%"),
                    e.set("ariaLabel", this._t("From %1", void 0, l)),
                    e.set("ariaValueNow", "" + a),
                    e.set("ariaValueText", a + "%"),
                    e.set("ariaValueMin", "0"),
                    e.set("ariaValueMax", "100"),
                    t.set("ariaLabel", this._t("To %1", void 0, h)),
                    t.set("ariaValueNow", "" + o),
                    t.set("ariaValueText", o + "%"),
                    t.set("ariaValueMin", "0"),
                    t.set("ariaValueMax", "100")
                }
                _updateThumb() {
                    const e = this.thumb
                      , t = this.startGrip
                      , i = this.endGrip
                      , r = this.height()
                      , n = this.width();
                    let s = t.x()
                      , a = i.x()
                      , l = t.y()
                      , h = i.y()
                      , u = 0
                      , c = 1;
                    "vertical" == this.get("orientation") ? o.isNumber(l) && o.isNumber(h) && (this._thumbBusy || e.isDragging() || (e.set("height", h - l),
                    e.set("y", l)),
                    u = l / r,
                    c = h / r) : o.isNumber(s) && o.isNumber(a) && (this._thumbBusy || e.isDragging() || (e.set("width", a - s),
                    e.set("x", s)),
                    u = s / n,
                    c = a / n),
                    !this.getPrivate("isBusy") || this.get("start") == u && this.get("end") == c || (this.set("start", u),
                    this.set("end", c));
                    const d = this.getPrivate("positionTextFunction")
                      , p = Math.round(100 * this.get("start", 0))
                      , f = Math.round(100 * this.get("end", 0));
                    let g, m;
                    d ? (g = d.call(this, this.get("start", 0)),
                    m = d.call(this, this.get("end", 0))) : (g = p + "%",
                    m = f + "%"),
                    e.set("ariaLabel", this._t("From %1 to %2", void 0, g, m)),
                    e.set("ariaValueNow", "" + p),
                    e.set("ariaValueText", p + "%")
                }
                _updateGripsByThumb() {
                    const e = this.thumb
                      , t = this.startGrip
                      , i = this.endGrip;
                    if ("vertical" == this.get("orientation")) {
                        const r = e.height();
                        t.set("y", e.y()),
                        i.set("y", e.y() + r)
                    } else {
                        const r = e.width();
                        t.set("x", e.x()),
                        i.set("x", e.x() + r)
                    }
                }
            }
            Object.defineProperty(h, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Scrollbar"
            }),
            Object.defineProperty(h, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: n.W.classNames.concat([h.className])
            })
        },
        5829: function(e, t, i) {
            "use strict";
            i.d(t, {
                j: function() {
                    return l
                }
            });
            var r = i(1337)
              , n = i(8777)
              , s = i(7144)
              , a = i(6245)
              , o = i(5071);
            class l extends r.k {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "seriesContainer", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: n.W.new(this._root, {
                            width: a.AQ,
                            height: a.AQ,
                            isMeasured: !1
                        })
                    }),
                    Object.defineProperty(this, "series", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new s.dn
                    })
                }
                _afterNew() {
                    super._afterNew(),
                    this._disposers.push(this.series);
                    const e = this.seriesContainer.children;
                    this._disposers.push(this.series.events.onAll((t => {
                        if ("clear" === t.type) {
                            o.each(t.oldValues, (e => {
                                this._removeSeries(e)
                            }
                            ));
                            const e = this.get("colors");
                            e && e.reset()
                        } else if ("push" === t.type)
                            e.moveValue(t.newValue),
                            this._processSeries(t.newValue);
                        else if ("setIndex" === t.type)
                            e.setIndex(t.index, t.newValue),
                            this._processSeries(t.newValue);
                        else if ("insertIndex" === t.type)
                            e.insertIndex(t.index, t.newValue),
                            this._processSeries(t.newValue);
                        else if ("removeIndex" === t.type)
                            this._removeSeries(t.oldValue);
                        else {
                            if ("moveIndex" !== t.type)
                                throw new Error("Unknown IListEvent type");
                            e.moveValue(t.value, t.newIndex),
                            this._processSeries(t.value)
                        }
                    }
                    )))
                }
                _processSeries(e) {
                    e.chart = this,
                    e._placeBulletsContainer(this)
                }
                _removeSeries(e) {
                    e.isDisposed() || (this.seriesContainer.children.removeValue(e),
                    e._removeBulletsContainer())
                }
            }
            Object.defineProperty(l, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "SerialChart"
            }),
            Object.defineProperty(l, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.k.classNames.concat([l.className])
            })
        },
        3399: function(e, t, i) {
            "use strict";
            i.d(t, {
                F: function() {
                    return f
                }
            });
            var r = i(5125)
              , n = i(9361)
              , s = i(7144)
              , a = i(1112)
              , o = i(6490)
              , l = i(6245)
              , h = i(5071)
              , u = i(5040)
              , c = i(1926)
              , d = i(8777)
              , p = i(962);
            class f extends n.w {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "_aggregatesCalculated", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_selectionAggregatesCalculated", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_dataProcessed", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_psi", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_pei", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "chart", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "bullets", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new s.aV
                    }),
                    Object.defineProperty(this, "bulletsContainer", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: d.W.new(this._root, {
                            width: l.AQ,
                            height: l.AQ,
                            position: "absolute"
                        })
                    })
                }
                _afterNew() {
                    this.valueFields.push("value"),
                    super._afterNew(),
                    this.setPrivate("customData", {}),
                    this._disposers.push(this.bullets.events.onAll((e => {
                        if ("clear" === e.type)
                            this._handleBullets(this.dataItems);
                        else if ("push" === e.type)
                            this._handleBullets(this.dataItems);
                        else if ("setIndex" === e.type)
                            this._handleBullets(this.dataItems);
                        else if ("insertIndex" === e.type)
                            this._handleBullets(this.dataItems);
                        else if ("removeIndex" === e.type)
                            this._handleBullets(this.dataItems);
                        else {
                            if ("moveIndex" !== e.type)
                                throw new Error("Unknown IListEvent type");
                            this._handleBullets(this.dataItems)
                        }
                    }
                    )))
                }
                _dispose() {
                    this.bulletsContainer.dispose(),
                    super._dispose()
                }
                startIndex() {
                    let e = this.dataItems.length;
                    return Math.min(this.getPrivate("startIndex", 0), e)
                }
                endIndex() {
                    let e = this.dataItems.length;
                    return Math.min(this.getPrivate("endIndex", e), e)
                }
                _handleBullets(e) {
                    h.each(e, (e => {
                        const t = e.bullets;
                        t && (h.each(t, (e => {
                            e.dispose()
                        }
                        )),
                        e.bullets = void 0)
                    }
                    )),
                    this.markDirtyValues()
                }
                getDataItemById(e) {
                    return h.find(this.dataItems, (t => t.get("id") == e))
                }
                _makeBullets(e) {
                    this._shouldMakeBullet(e) && (e.bullets = [],
                    this.bullets.each((t => {
                        this._makeBullet(e, t)
                    }
                    )))
                }
                _shouldMakeBullet(e) {
                    return !0
                }
                _makeBullet(e, t, i) {
                    const r = t(this._root, this, e);
                    if (r) {
                        let t = r.get("sprite");
                        t && (t._setDataItem(e),
                        t.setRaw("position", "absolute"),
                        this.bulletsContainer.children.push(t)),
                        r._index = i,
                        r.series = this,
                        e.bullets.push(r)
                    }
                    return r
                }
                _clearDirty() {
                    super._clearDirty(),
                    this._aggregatesCalculated = !1,
                    this._selectionAggregatesCalculated = !1
                }
                _prepareChildren() {
                    super._prepareChildren();
                    let e = this.startIndex()
                      , t = this.endIndex();
                    if (this.isDirty("heatRules") && (this._valuesDirty = !0),
                    this.isPrivateDirty("baseValueSeries")) {
                        const e = this.getPrivate("baseValueSeries");
                        e && this._disposers.push(e.onPrivate("startIndex", ( () => {
                            this.markDirtyValues()
                        }
                        )))
                    }
                    if (this.get("calculateAggregates") && (this._valuesDirty && !this._dataProcessed && (this._aggregatesCalculated || (this._calculateAggregates(0, this.dataItems.length),
                    this._aggregatesCalculated = !0)),
                    this._psi == e && this._pei == t || this._selectionAggregatesCalculated || (0 === e && t === this.dataItems.length && this._aggregatesCalculated || this._calculateAggregates(e, t),
                    this._selectionAggregatesCalculated = !0)),
                    this.isDirty("tooltip")) {
                        let e = this.get("tooltip");
                        e && (e.hide(0),
                        e.set("tooltipTarget", this))
                    }
                    if (this.isDirty("fill") || this.isDirty("stroke")) {
                        let e;
                        const t = this.get("legendDataItem");
                        if (t && (e = t.get("markerRectangle"),
                        e && this.isVisible())) {
                            if (this.isDirty("stroke")) {
                                let t = this.get("stroke");
                                e.set("stroke", t)
                            }
                            if (this.isDirty("fill")) {
                                let t = this.get("fill");
                                e.set("fill", t)
                            }
                        }
                        this.updateLegendMarker(void 0)
                    }
                    if (this.bullets.length > 0) {
                        let e = this.startIndex()
                          , t = this.endIndex();
                        t < this.dataItems.length && t++;
                        for (let i = e; i < t; i++) {
                            let e = this.dataItems[i];
                            e.bullets || this._makeBullets(e)
                        }
                    }
                }
                _calculateAggregates(e, t) {
                    let i = this._valueFields;
                    if (!i)
                        throw new Error("No value fields are set for the series.");
                    const r = {}
                      , n = {}
                      , s = {}
                      , a = {}
                      , o = {}
                      , l = {}
                      , u = {}
                      , c = {}
                      , d = {};
                    h.each(i, (e => {
                        r[e] = 0,
                        n[e] = 0,
                        s[e] = 0
                    }
                    )),
                    h.each(i, (i => {
                        let h = i + "Change"
                          , p = i + "ChangePercent"
                          , f = i + "ChangePrevious"
                          , g = i + "ChangePreviousPercent"
                          , m = i + "ChangeSelection"
                          , b = i + "ChangeSelectionPercent"
                          , _ = "valueY";
                        "valueX" != i && "openValueX" != i && "lowValueX" != i && "highValueX" != i || (_ = "valueX");
                        const v = this.getPrivate("baseValueSeries");
                        for (let y = e; y < t; y++) {
                            const t = this.dataItems[y];
                            let w = t.get(i);
                            null != w && (s[i]++,
                            r[i] += w,
                            n[i] += Math.abs(w),
                            c[i] = r[i] / s[i],
                            (a[i] > w || null == a[i]) && (a[i] = w),
                            (o[i] < w || null == o[i]) && (o[i] = w),
                            u[i] = w,
                            null == l[i] && (l[i] = w,
                            d[i] = w,
                            v && (l[_] = v._getBase(_))),
                            0 === e && (t.setRaw(h, w - l[_]),
                            t.setRaw(p, (w - l[_]) / l[_] * 100)),
                            t.setRaw(f, w - d[_]),
                            t.setRaw(g, (w - d[_]) / d[_] * 100),
                            t.setRaw(m, w - l[_]),
                            t.setRaw(b, (w - l[_]) / l[_] * 100),
                            d[i] = w)
                        }
                    }
                    )),
                    h.each(i, (e => {
                        this.setPrivate(e + "AverageSelection", c[e]),
                        this.setPrivate(e + "CountSelection", s[e]),
                        this.setPrivate(e + "SumSelection", r[e]),
                        this.setPrivate(e + "AbsoluteSumSelection", n[e]),
                        this.setPrivate(e + "LowSelection", a[e]),
                        this.setPrivate(e + "HighSelection", o[e]),
                        this.setPrivate(e + "OpenSelection", l[e]),
                        this.setPrivate(e + "CloseSelection", u[e])
                    }
                    )),
                    0 === e && t === this.dataItems.length && h.each(i, (e => {
                        this.setPrivate(e + "Average", c[e]),
                        this.setPrivate(e + "Count", s[e]),
                        this.setPrivate(e + "Sum", r[e]),
                        this.setPrivate(e + "AbsoluteSum", n[e]),
                        this.setPrivate(e + "Low", a[e]),
                        this.setPrivate(e + "High", o[e]),
                        this.setPrivate(e + "Open", l[e]),
                        this.setPrivate(e + "Close", u[e])
                    }
                    ))
                }
                _updateChildren() {
                    super._updateChildren(),
                    this._psi = this.startIndex(),
                    this._pei = this.endIndex(),
                    this.isDirty("visible") && this.bulletsContainer.set("visible", this.get("visible"));
                    const e = this.get("heatRules");
                    if (this._valuesDirty && e && e.length > 0 && h.each(e, (e => {
                        const t = e.minValue || this.getPrivate(e.dataField + "Low") || 0
                          , i = e.maxValue || this.getPrivate(e.dataField + "High") || 0;
                        h.each(e.target._entities, (r => {
                            const n = r.dataItem.get(e.dataField);
                            if (u.isNumber(n))
                                if (e.customFunction)
                                    e.customFunction.call(this, r, t, i, n);
                                else {
                                    let s, h;
                                    s = e.logarithmic ? (Math.log(n) * Math.LOG10E - Math.log(t) * Math.LOG10E) / (Math.log(i) * Math.LOG10E - Math.log(t) * Math.LOG10E) : (n - t) / (i - t),
                                    !u.isNumber(n) || u.isNumber(s) && Math.abs(s) != 1 / 0 || (s = .5),
                                    u.isNumber(e.min) ? h = e.min + (e.max - e.min) * s : e.min instanceof a.Il ? h = a.Il.interpolate(s, e.min, e.max) : e.min instanceof l.gG && (h = (0,
                                    o.Wn)(s, e.min, e.max)),
                                    r.set(e.key, h)
                                }
                            else
                                e.neutral && r.set(e.key, e.neutral)
                        }
                        ))
                    }
                    )),
                    this.get("visible") && this.bullets.length > 0) {
                        let e = this.dataItems.length
                          , t = this.startIndex()
                          , i = this.endIndex();
                        i < e && i++,
                        t > 0 && t--;
                        for (let e = 0; e < t; e++)
                            this._hideBullets(this.dataItems[e]);
                        for (let e = t; e < i; e++)
                            this._positionBullets(this.dataItems[e]);
                        for (let t = i; t < e; t++)
                            this._hideBullets(this.dataItems[t])
                    }
                }
                _positionBullets(e) {
                    e.bullets && h.each(e.bullets, (e => {
                        this._positionBullet(e);
                        const t = e.get("sprite");
                        e.get("dynamic") && (t && (t._markDirtyKey("fill"),
                        t.markDirtySize()),
                        t instanceof d.W && t.walkChildren((e => {
                            e._markDirtyKey("fill"),
                            e.markDirtySize(),
                            e instanceof p._ && e.text.markDirtyText()
                        }
                        ))),
                        t instanceof p._ && t.get("populateText") && t.text.markDirtyText()
                    }
                    ))
                }
                _hideBullets(e) {
                    e.bullets && h.each(e.bullets, (e => {
                        let t = e.get("sprite");
                        t && t.setPrivate("visible", !1)
                    }
                    ))
                }
                _positionBullet(e) {}
                _placeBulletsContainer(e) {
                    e.bulletsContainer.children.moveValue(this.bulletsContainer)
                }
                _removeBulletsContainer() {
                    const e = this.bulletsContainer;
                    e.parent && e.parent.children.removeValue(e)
                }
                disposeDataItem(e) {
                    const t = e.bullets;
                    t && h.each(t, (e => {
                        e.dispose()
                    }
                    ))
                }
                _getItemReaderLabel() {
                    return ""
                }
                showDataItem(e, t) {
                    const i = Object.create(null, {
                        showDataItem: {
                            get: () => super.showDataItem
                        }
                    });
                    return (0,
                    r.mG)(this, void 0, void 0, (function*() {
                        const r = [i.showDataItem.call(this, e, t)]
                          , n = e.bullets;
                        n && h.each(n, (e => {
                            r.push(e.get("sprite").show(t))
                        }
                        )),
                        yield Promise.all(r)
                    }
                    ))
                }
                hideDataItem(e, t) {
                    const i = Object.create(null, {
                        hideDataItem: {
                            get: () => super.hideDataItem
                        }
                    });
                    return (0,
                    r.mG)(this, void 0, void 0, (function*() {
                        const r = [i.hideDataItem.call(this, e, t)]
                          , n = e.bullets;
                        n && h.each(n, (e => {
                            r.push(e.get("sprite").hide(t))
                        }
                        )),
                        yield Promise.all(r)
                    }
                    ))
                }
                _sequencedShowHide(e, t) {
                    return (0,
                    r.mG)(this, void 0, void 0, (function*() {
                        if (this.get("sequencedInterpolation"))
                            if (u.isNumber(t) || (t = this.get("interpolationDuration", 0)),
                            t > 0) {
                                const i = this.startIndex()
                                  , n = this.endIndex();
                                yield Promise.all(h.map(this.dataItems, ( (s, a) => (0,
                                r.mG)(this, void 0, void 0, (function*() {
                                    let r = t || 0;
                                    (a < i - 10 || a > n + 10) && (r = 0);
                                    let o = this.get("sequencedDelay", 0) + r / (n - i);
                                    yield c.sleep(o * (a - i)),
                                    e ? yield this.showDataItem(s, r) : yield this.hideDataItem(s, r)
                                }
                                )))))
                            } else
                                yield Promise.all(h.map(this.dataItems, (t => e ? this.showDataItem(t, 0) : this.hideDataItem(t, 0))))
                    }
                    ))
                }
                updateLegendValue(e) {
                    if (e) {
                        const t = e.get("legendDataItem");
                        if (t) {
                            const i = t.get("valueLabel");
                            if (i) {
                                const t = i.text;
                                let r = "";
                                i._setDataItem(e),
                                r = this.get("legendValueText", t.get("text", "")),
                                i.set("text", r),
                                t.markDirtyText()
                            }
                            const r = t.get("label");
                            if (r) {
                                const t = r.text;
                                let i = "";
                                r._setDataItem(e),
                                i = this.get("legendLabelText", t.get("text", "")),
                                r.set("text", i),
                                t.markDirtyText()
                            }
                        }
                    }
                }
                updateLegendMarker(e) {}
                _onHide() {
                    super._onHide();
                    const e = this.getTooltip();
                    e && e.hide()
                }
                hoverDataItem(e) {}
                unhoverDataItem(e) {}
                _getBase(e) {
                    const t = this.dataItems[this.startIndex()];
                    return t ? t.get(e) : 0
                }
            }
            Object.defineProperty(f, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Series"
            }),
            Object.defineProperty(f, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: n.w.classNames.concat([f.className])
            })
        },
        5863: function(e, t, i) {
            "use strict";
            i.d(t, {
                p: function() {
                    return l
                }
            });
            var r = i(1479)
              , n = i(5040)
              , s = i(6245)
              , a = i(832)
              , o = i(751);
            class l extends r.T {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "ix", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "iy", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_generator", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: (0,
                        a.Z)()
                    })
                }
                _getTooltipPoint() {
                    let e = this.get("tooltipX")
                      , t = this.get("tooltipY")
                      , i = 0
                      , r = 0;
                    n.isNumber(e) && (i = e),
                    n.isNumber(t) && (r = t);
                    let a = this.get("radius", 0)
                      , o = this.get("innerRadius", 0);
                    return a += this.get("dRadius", 0),
                    o += this.get("dInnerRadius", 0),
                    o < 0 && (o = a + o),
                    e instanceof s.gG && (i = this.ix * (o + (a - o) * e.value)),
                    t instanceof s.gG && (r = this.iy * (o + (a - o) * t.value)),
                    this.get("arc") >= 360 && 0 == o && (i = 0,
                    r = 0),
                    {
                        x: i,
                        y: r
                    }
                }
                _beforeChanged() {
                    super._beforeChanged(),
                    (this.isDirty("radius") || this.isDirty("arc") || this.isDirty("innerRadius") || this.isDirty("startAngle") || this.isDirty("dRadius") || this.isDirty("dInnerRadius") || this.isDirty("cornerRadius")) && (this._clear = !0)
                }
                _changed() {
                    if (super._changed(),
                    this._clear) {
                        let e = this.get("startAngle", 0)
                          , t = this.get("arc", 0);
                        const i = this._generator;
                        t < 0 && (e += t,
                        t *= -1),
                        t > .1 && i.cornerRadius(this.get("cornerRadius", 0)),
                        i.context(this._display);
                        let r = this.get("radius", 0)
                          , n = this.get("innerRadius", 0);
                        r += this.get("dRadius", 0),
                        n += this.get("dInnerRadius", 0),
                        n < 0 && (n = r + n),
                        i({
                            innerRadius: n,
                            outerRadius: r,
                            startAngle: (e + 90) * o.RADIANS,
                            endAngle: (e + t + 90) * o.RADIANS
                        });
                        let s = e + t / 2;
                        this.ix = o.cos(s),
                        this.iy = o.sin(s)
                    }
                    if (this.isDirty("shiftRadius")) {
                        const e = this.get("shiftRadius", 0);
                        this.setRaw("dx", this.ix * e),
                        this.setRaw("dy", this.iy * e),
                        this.markDirtyPosition()
                    }
                }
            }
            Object.defineProperty(l, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Slice"
            }),
            Object.defineProperty(l, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.T.classNames.concat([l.className])
            })
        },
        4596: function(e, t, i) {
            "use strict";
            i.d(t, {
                j: function() {
                    return m
                }
            });
            var r = i(5125)
              , n = i(6331)
              , s = i(5769)
              , a = i(6245)
              , o = i(9770)
              , l = i(7449)
              , h = i(6490)
              , u = i(7652)
              , c = i(5071)
              , d = i(5040)
              , p = i(256)
              , f = i(751);
            class g extends o.p {
                constructor(e) {
                    super(),
                    Object.defineProperty(this, "_sprite", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_rendererDisposers", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_dispatchParents", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !0
                    }),
                    this._sprite = e
                }
                _makePointerEvent(e, t) {
                    return {
                        type: e,
                        originalEvent: t.event,
                        point: t.point,
                        simulated: t.simulated,
                        native: t.native,
                        target: this._sprite
                    }
                }
                _onRenderer(e, t) {
                    this._sprite.set("interactive", !0),
                    this._sprite._display.interactive = !0;
                    let i = this._rendererDisposers[e];
                    if (void 0 === i) {
                        const r = this._sprite._display.on(e, (e => {
                            t.call(this, e)
                        }
                        ));
                        i = this._rendererDisposers[e] = new l.DM(( () => {
                            delete this._rendererDisposers[e],
                            r.dispose()
                        }
                        ))
                    }
                    return i.increment()
                }
                _on(e, t, i, r, n, s) {
                    const a = super._on(e, t, i, r, n, s)
                      , o = g.RENDERER_EVENTS[t];
                    return void 0 !== o && (a.disposer = new l.FV([a.disposer, this._onRenderer(t, o)])),
                    a
                }
                stopParentDispatch() {
                    this._dispatchParents = !1
                }
                dispatchParents(e, t) {
                    const i = this._dispatchParents;
                    this._dispatchParents = !0;
                    try {
                        this.dispatch(e, t),
                        this._dispatchParents && this._sprite.parent && this._sprite.parent.events.dispatchParents(e, t)
                    } finally {
                        this._dispatchParents = i
                    }
                }
            }
            Object.defineProperty(g, "RENDERER_EVENTS", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: {
                    click: function(e) {
                        this.isEnabled("click") && !this._sprite.isDragging() && this._sprite._hasDown() && !this._sprite._hasMoved(this._makePointerEvent("click", e)) && this.dispatch("click", this._makePointerEvent("click", e))
                    },
                    rightclick: function(e) {
                        this.isEnabled("rightclick") && this.dispatch("rightclick", this._makePointerEvent("rightclick", e))
                    },
                    middleclick: function(e) {
                        this.isEnabled("middleclick") && this.dispatch("middleclick", this._makePointerEvent("middleclick", e))
                    },
                    dblclick: function(e) {
                        this.dispatchParents("dblclick", this._makePointerEvent("dblclick", e))
                    },
                    pointerover: function(e) {
                        this.isEnabled("pointerover") && this.dispatch("pointerover", this._makePointerEvent("pointerover", e))
                    },
                    pointerout: function(e) {
                        this.isEnabled("pointerout") && this.dispatch("pointerout", this._makePointerEvent("pointerout", e))
                    },
                    pointerdown: function(e) {
                        this.dispatchParents("pointerdown", this._makePointerEvent("pointerdown", e))
                    },
                    pointerup: function(e) {
                        this.isEnabled("pointerup") && this.dispatch("pointerup", this._makePointerEvent("pointerup", e))
                    },
                    globalpointerup: function(e) {
                        this.isEnabled("globalpointerup") && this.dispatch("globalpointerup", this._makePointerEvent("globalpointerup", e))
                    },
                    globalpointermove: function(e) {
                        this.isEnabled("globalpointermove") && this.dispatch("globalpointermove", this._makePointerEvent("globalpointermove", e))
                    },
                    wheel: function(e) {
                        this.dispatchParents("wheel", {
                            type: "wheel",
                            target: this._sprite,
                            originalEvent: e.event,
                            point: e.point
                        })
                    }
                }
            });
            class m extends n.JH {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "_adjustedLocalBounds", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {
                            left: 0,
                            right: 0,
                            top: 0,
                            bottom: 0
                        }
                    }),
                    Object.defineProperty(this, "_localBounds", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {
                            left: 0,
                            right: 0,
                            top: 0,
                            bottom: 0
                        }
                    }),
                    Object.defineProperty(this, "_parent", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_dataItem", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_templateField", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_sizeDirty", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_isDragging", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_dragEvent", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_dragPoint", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_isHidden", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_isShowing", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_isHiding", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_isDown", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_downPoint", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_downPoints", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_toggleDp", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_dragDp", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_tooltipDp", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_hoverDp", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_focusDp", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_tooltipMoveDp", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_tooltipPointerDp", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_statesHandled", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    })
                }
                _afterNew() {
                    this.setPrivateRaw("visible", !0),
                    super._afterNew()
                }
                _markDirtyKey(e) {
                    super._markDirtyKey(e),
                    "x" != e && "y" != e && "dx" != e && "dy" != e || (this.markDirtyBounds(),
                    this._addPercentagePositionChildren(),
                    this.markDirtyPosition())
                }
                _markDirtyPrivateKey(e) {
                    super._markDirtyPrivateKey(e),
                    "x" != e && "y" != e || this.markDirtyPosition()
                }
                _removeTemplateField() {
                    this._templateField && this._templateField._removeObjectTemplate(this)
                }
                _createEvents() {
                    return new g(this)
                }
                _processTemplateField() {
                    let e;
                    const t = this.get("templateField");
                    if (t) {
                        const i = this.dataItem;
                        if (i) {
                            const r = i.dataContext;
                            r && (e = r[t],
                            e instanceof s.YS || !e || (e = s.YS.new(e)))
                        }
                    }
                    this._templateField !== e && (this._removeTemplateField(),
                    this._templateField = e,
                    e && e._setObjectTemplate(this),
                    this._applyTemplates())
                }
                _setDataItem(e) {
                    const t = this._dataItem;
                    this._dataItem = e,
                    this._processTemplateField();
                    const i = "dataitemchanged";
                    e != t && this.events.isEnabled(i) && this.events.dispatch(i, {
                        type: i,
                        target: this,
                        oldDataItem: t,
                        newDataItem: e
                    })
                }
                set dataItem(e) {
                    this._setDataItem(e)
                }
                get dataItem() {
                    if (this._dataItem)
                        return this._dataItem;
                    {
                        let e = this._parent;
                        for (; e; ) {
                            if (e._dataItem)
                                return e._dataItem;
                            e = e._parent
                        }
                    }
                }
                _addPercentageSizeChildren() {
                    let e = this.parent;
                    e && (this.get("width")instanceof a.gG || this.get("height")instanceof a.gG ? c.pushOne(e._percentageSizeChildren, this) : c.removeFirst(e._percentageSizeChildren, this))
                }
                _addPercentagePositionChildren() {
                    let e = this.parent;
                    e && (this.get("x")instanceof a.gG || this.get("y")instanceof a.gG ? c.pushOne(e._percentagePositionChildren, this) : c.removeFirst(e._percentagePositionChildren, this))
                }
                markDirtyPosition() {
                    this._root._addDirtyPosition(this)
                }
                updatePivotPoint() {
                    const e = this._localBounds;
                    if (e) {
                        const t = this.get("centerX");
                        null != t && (this._display.pivot.x = e.left + u.relativeToValue(t, e.right - e.left));
                        const i = this.get("centerY");
                        null != i && (this._display.pivot.y = e.top + u.relativeToValue(i, e.bottom - e.top))
                    }
                }
                _beforeChanged() {
                    if (super._beforeChanged(),
                    this._handleStates(),
                    this.isDirty("tooltip")) {
                        const e = this._prevSettings.tooltip;
                        e && e.dispose()
                    }
                    if ((this.isDirty("layer") || this.isDirty("layerMargin")) && (this._display.setLayer(this.get("layer"), this.get("layerMargin")),
                    this.markDirtyLayer()),
                    this.isDirty("tooltipPosition")) {
                        const e = this._tooltipMoveDp;
                        e && (e.dispose(),
                        this._tooltipMoveDp = void 0);
                        const t = this._tooltipPointerDp;
                        t && (t.dispose(),
                        this._tooltipPointerDp = void 0),
                        "pointer" == this.get("tooltipPosition") && (this.isHover() && (this._tooltipMoveDp = this.events.on("globalpointermove", (e => {
                            this.showTooltip(e.point)
                        }
                        ))),
                        this._tooltipPointerDp = new l.FV([this.events.on("pointerover", ( () => {
                            this._tooltipMoveDp = this.events.on("globalpointermove", (e => {
                                this.showTooltip(e.point)
                            }
                            ))
                        }
                        )), this.events.on("pointerout", ( () => {
                            const e = this._tooltipMoveDp;
                            e && (e.dispose(),
                            this._tooltipMoveDp = void 0)
                        }
                        ))]))
                    }
                }
                _handleStates() {
                    this._statesHandled || (this.isDirty("active") && (this.get("active") ? (this.states.applyAnimate("active"),
                    this.set("ariaChecked", !0)) : (this.isHidden() || this.states.applyAnimate("default"),
                    this.set("ariaChecked", !1)),
                    this.markDirtyAccessibility()),
                    this.isDirty("disabled") && (this.get("disabled") ? (this.states.applyAnimate("disabled"),
                    this.set("ariaChecked", !1)) : (this.isHidden() || this.states.applyAnimate("default"),
                    this.set("ariaChecked", !0)),
                    this.markDirtyAccessibility()),
                    this._statesHandled = !0)
                }
                _changed() {
                    super._changed();
                    const e = this._display
                      , t = this.events;
                    if (this.isDirty("draggable")) {
                        const i = this.get("draggable");
                        i ? (this.set("interactive", !0),
                        this._dragDp = new l.FV([t.on("pointerdown", (e => {
                            this.dragStart(e)
                        }
                        )), t.on("globalpointermove", (e => {
                            this.dragMove(e)
                        }
                        )), t.on("globalpointerup", (e => {
                            this.dragStop(e)
                        }
                        ))])) : this._dragDp && (this._dragDp.dispose(),
                        this._dragDp = void 0),
                        e.cancelTouch = !!i
                    }
                    if (this.isDirty("tooltipText") || this.isDirty("tooltipHTML") || this.isDirty("showTooltipOn")) {
                        const e = this.get("tooltipText")
                          , i = this.get("tooltipHTML")
                          , r = this.get("showTooltipOn", "hover");
                        this._tooltipDp && (this._tooltipDp.dispose(),
                        this._tooltipDp = void 0),
                        (e || i) && ("click" == r ? (this._tooltipDp = new l.FV([t.on("click", ( () => {
                            this.setTimeout(( () => this.showTooltip()), 10)
                        }
                        )), u.addEventListener(document, "click", (e => {
                            this.hideTooltip()
                        }
                        ))]),
                        this._disposers.push(this._tooltipDp)) : "always" == r || (this._tooltipDp = new l.FV([t.on("pointerover", ( () => {
                            this.showTooltip()
                        }
                        )), t.on("pointerout", ( () => {
                            this.hideTooltip()
                        }
                        ))]),
                        this._disposers.push(this._tooltipDp)))
                    }
                    if (this.isDirty("toggleKey")) {
                        let e = this.get("toggleKey");
                        e && "none" != e ? this._toggleDp = t.on("click", ( () => {
                            this._isDragging || this.set(e, !this.get(e))
                        }
                        )) : this._toggleDp && (this._toggleDp.dispose(),
                        this._toggleDp = void 0)
                    }
                    if (this.isDirty("opacity") && (e.alpha = Math.max(0, this.get("opacity", 1))),
                    this.isDirty("rotation") && (this.markDirtyBounds(),
                    e.angle = this.get("rotation", 0)),
                    this.isDirty("scale") && (this.markDirtyBounds(),
                    e.scale = this.get("scale", 0)),
                    (this.isDirty("centerX") || this.isDirty("centerY")) && (this.markDirtyBounds(),
                    this.updatePivotPoint()),
                    (this.isDirty("visible") || this.isPrivateDirty("visible") || this.isDirty("forceHidden")) && (this.get("visible") && this.getPrivate("visible") && !this.get("forceHidden") ? e.visible = !0 : (e.visible = !1,
                    this.hideTooltip()),
                    this.markDirtyBounds(),
                    this.get("focusable") && this.markDirtyAccessibility()),
                    this.isDirty("width") || this.isDirty("height")) {
                        this.markDirtyBounds(),
                        this._addPercentageSizeChildren();
                        const e = this.parent;
                        e && (this.isDirty("width") && this.get("width")instanceof a.gG || this.isDirty("height") && this.get("height")instanceof a.gG) && (e.markDirty(),
                        e._prevWidth = 0),
                        this._sizeDirty = !0
                    }
                    if ((this.isDirty("maxWidth") || this.isDirty("maxHeight") || this.isPrivateDirty("width") || this.isPrivateDirty("height") || this.isDirty("minWidth") || this.isDirty("minHeight") || this.isPrivateDirty("maxWidth") || this.isPrivateDirty("maxHeight") || this.isPrivateDirty("minWidth") || this.isPrivateDirty("minHeight")) && (this.markDirtyBounds(),
                    this._sizeDirty = !0),
                    this._sizeDirty && this._updateSize(),
                    this.isDirty("wheelable")) {
                        const t = this.get("wheelable");
                        t && this.set("interactive", !0),
                        e.wheelable = !!t
                    }
                    if ((this.isDirty("tabindexOrder") || this.isDirty("focusableGroup")) && (this.get("focusable") ? this._root._registerTabindexOrder(this) : this._root._unregisterTabindexOrder(this)),
                    this.isDirty("filter") && (e.filter = this.get("filter")),
                    this.isDirty("cursorOverStyle") && (e.cursorOverStyle = this.get("cursorOverStyle")),
                    this.isDirty("hoverOnFocus") && (this.get("hoverOnFocus") ? this._focusDp = new l.FV([t.on("focus", ( () => {
                        this.showTooltip()
                    }
                    )), t.on("blur", ( () => {
                        this.hideTooltip()
                    }
                    ))]) : this._focusDp && (this._focusDp.dispose(),
                    this._focusDp = void 0)),
                    this.isDirty("focusable") && (this.get("focusable") ? this._root._registerTabindexOrder(this) : this._root._unregisterTabindexOrder(this),
                    this.markDirtyAccessibility()),
                    this.isPrivateDirty("focusable") && this.markDirtyAccessibility(),
                    (this.isDirty("role") || this.isDirty("ariaLive") || this.isDirty("ariaChecked") || this.isDirty("ariaHidden") || this.isDirty("ariaOrientation") || this.isDirty("ariaValueNow") || this.isDirty("ariaValueMin") || this.isDirty("ariaValueMax") || this.isDirty("ariaValueText") || this.isDirty("ariaLabel") || this.isDirty("ariaControls")) && this.markDirtyAccessibility(),
                    this.isDirty("exportable") && (e.exportable = this.get("exportable")),
                    this.isDirty("interactive")) {
                        const e = this.events;
                        this.get("interactive") ? this._hoverDp = new l.FV([e.on("click", (e => {
                            u.isTouchEvent(e.originalEvent) && (this.getPrivate("touchHovering") || this.setTimeout(( () => {
                                this._handleOver(),
                                (this.get("tooltipText") || this.get("tooltipHTML")) && this.showTooltip(),
                                this.setPrivateRaw("touchHovering", !0),
                                this.events.dispatch("pointerover", {
                                    type: "pointerover",
                                    target: e.target,
                                    originalEvent: e.originalEvent,
                                    point: e.point,
                                    simulated: e.simulated
                                })
                            }
                            ), 10))
                        }
                        )), e.on("globalpointerup", (e => {
                            u.isTouchEvent(e.originalEvent) && this.getPrivate("touchHovering") && (this._handleOut(),
                            (this.get("tooltipText") || this.get("tooltipHTML")) && this.hideTooltip(),
                            this.setPrivateRaw("touchHovering", !1),
                            this.events.dispatch("pointerout", {
                                type: "pointerout",
                                target: e.target,
                                originalEvent: e.originalEvent,
                                point: e.point,
                                simulated: e.simulated
                            })),
                            this._isDown && this._handleUp(e)
                        }
                        )), e.on("pointerover", ( () => {
                            this._handleOver()
                        }
                        )), e.on("pointerout", ( () => {
                            this._handleOut()
                        }
                        )), e.on("pointerdown", (e => {
                            this._handleDown(e)
                        }
                        ))]) : (this._display.interactive = !1,
                        this._hoverDp && (this._hoverDp.dispose(),
                        this._hoverDp = void 0))
                    }
                    this.isDirty("forceInactive") && (this._display.inactive = this.get("forceInactive", !1)),
                    "always" == this.get("showTooltipOn") && this._display.visible && this.showTooltip()
                }
                dragStart(e) {
                    this._dragEvent = e,
                    this.events.stopParentDispatch()
                }
                dragStop(e) {
                    if (this._dragEvent = void 0,
                    this._dragPoint = void 0,
                    this.events.stopParentDispatch(),
                    this._isDragging) {
                        this._isDragging = !1;
                        const t = "dragstop";
                        this.events.isEnabled(t) && this.events.dispatch(t, {
                            type: t,
                            target: this,
                            originalEvent: e.originalEvent,
                            point: e.point,
                            simulated: e.simulated
                        })
                    }
                }
                _handleOver() {
                    this.isHidden() || (this.get("active") && this.states.lookup("hoverActive") ? this.states.applyAnimate("hoverActive") : this.get("disabled") && this.states.lookup("hoverDisabled") ? this.states.applyAnimate("hoverDisabled") : this.states.applyAnimate("hover"),
                    this.get("draggable") && this._isDown && this.states.lookup("down") && this.states.applyAnimate("down"))
                }
                _handleOut() {
                    this.isHidden() || (this.get("active") && this.states.lookup("active") ? this.states.applyAnimate("active") : this.get("disabled") && this.states.lookup("disabled") ? this.states.applyAnimate("disabled") : (this.states.lookup("hover") || this.states.lookup("hoverActive")) && this.states.applyAnimate("default"),
                    this.get("draggable") && this._isDown && this.states.lookup("down") && this.states.applyAnimate("down"))
                }
                _handleUp(e) {
                    if (!this.isHidden()) {
                        this.get("active") && this.states.lookup("active") ? this.states.applyAnimate("active") : this.get("disabled") && this.states.lookup("disabled") ? this.states.applyAnimate("disabled") : this.states.lookup("down") && (this.isHover() ? this.states.applyAnimate("hover") : this.states.applyAnimate("default")),
                        this._downPoint = void 0;
                        const t = u.getPointerId(e.originalEvent);
                        delete this._downPoints[t],
                        0 == p.keys(this._downPoints).length && (this._isDown = !1)
                    }
                }
                _hasMoved(e) {
                    const t = u.getPointerId(e.originalEvent)
                      , i = this._downPoints[t];
                    if (i) {
                        const t = Math.abs(i.x - e.point.x)
                          , r = Math.abs(i.y - e.point.y);
                        return t > 5 || r > 5
                    }
                    return !1
                }
                _hasDown() {
                    return p.keys(this._downPoints).length > 0
                }
                _handleDown(e) {
                    const t = this.parent;
                    if (t && !this.get("draggable") && t._handleDown(e),
                    this.get("interactive") && !this.isHidden()) {
                        this.states.lookup("down") && this.states.applyAnimate("down"),
                        this._downPoint = {
                            x: e.point.x,
                            y: e.point.y
                        },
                        this._isDown = !0;
                        const t = u.getPointerId(e.originalEvent);
                        this._downPoints[t] = {
                            x: e.point.x,
                            y: e.point.y
                        }
                    }
                }
                dragMove(e) {
                    let t = this._dragEvent;
                    if (t) {
                        if (t.simulated && !e.simulated)
                            return !0;
                        let i = 0
                          , r = this.parent;
                        for (; null != r; )
                            i += r.get("rotation", 0),
                            r = r.parent;
                        let n = e.point.x - t.point.x
                          , s = e.point.y - t.point.y;
                        const a = this.events;
                        if (t.simulated && !this._isDragging) {
                            this._isDragging = !0,
                            this._dragEvent = e,
                            this._dragPoint = {
                                x: this.x(),
                                y: this.y()
                            };
                            const t = "dragstart";
                            a.isEnabled(t) && a.dispatch(t, {
                                type: t,
                                target: this,
                                originalEvent: e.originalEvent,
                                point: e.point,
                                simulated: e.simulated
                            })
                        }
                        if (this._isDragging) {
                            let t = this._dragPoint;
                            this.set("x", t.x + n * f.cos(i) + s * f.sin(i)),
                            this.set("y", t.y + s * f.cos(i) - n * f.sin(i));
                            const r = "dragged";
                            a.isEnabled(r) && a.dispatch(r, {
                                type: r,
                                target: this,
                                originalEvent: e.originalEvent,
                                point: e.point,
                                simulated: e.simulated
                            })
                        } else if (Math.hypot(n, s) > 5) {
                            this._isDragging = !0,
                            this._dragEvent = e,
                            this._dragPoint = {
                                x: this.x(),
                                y: this.y()
                            };
                            const t = "dragstart";
                            a.isEnabled(t) && a.dispatch(t, {
                                type: t,
                                target: this,
                                originalEvent: e.originalEvent,
                                point: e.point,
                                simulated: e.simulated
                            })
                        }
                    }
                }
                _updateSize() {}
                _getBounds() {
                    this._localBounds = this._display.getLocalBounds()
                }
                depth() {
                    let e = this.parent
                      , t = 0;
                    for (; ; ) {
                        if (!e)
                            return t;
                        ++t,
                        e = e.parent
                    }
                }
                markDirtySize() {
                    this._sizeDirty = !0,
                    this.markDirty()
                }
                markDirtyBounds() {
                    const e = this._display;
                    if (this.get("isMeasured")) {
                        this._root._addDirtyBounds(this),
                        e.isMeasured = !0,
                        e.invalidateBounds();
                        const t = this.parent;
                        t && "absolute" != this.get("position") && (null == t.get("width") || null == t.get("height") || t.get("layout")) && t.markDirtyBounds(),
                        this.get("focusable") && this.isFocus() && this.markDirtyAccessibility()
                    }
                }
                markDirtyAccessibility() {
                    this._root._invalidateAccessibility(this)
                }
                markDirtyLayer() {
                    this._display.markDirtyLayer(!0)
                }
                markDirty() {
                    super.markDirty(),
                    this.markDirtyLayer()
                }
                _updateBounds() {
                    const e = this._adjustedLocalBounds;
                    let t;
                    if (this.get("visible") && this.getPrivate("visible") && !this.get("forceHidden") ? (this._getBounds(),
                    this._fixMinBounds(this._localBounds),
                    this.updatePivotPoint(),
                    this._adjustedLocalBounds = this._display.getAdjustedBounds(this._localBounds),
                    t = this._adjustedLocalBounds) : (t = {
                        left: 0,
                        right: 0,
                        top: 0,
                        bottom: 0
                    },
                    this._localBounds = t,
                    this._adjustedLocalBounds = t),
                    !e || e.left !== t.left || e.top !== t.top || e.right !== t.right || e.bottom !== t.bottom) {
                        const e = "boundschanged";
                        this.events.isEnabled(e) && this.events.dispatch(e, {
                            type: e,
                            target: this
                        }),
                        this.parent && (this.parent.markDirty(),
                        this.parent.markDirtyBounds())
                    }
                }
                _fixMinBounds(e) {
                    let t = this.get("minWidth", this.getPrivate("minWidth"))
                      , i = this.get("minHeight", this.getPrivate("minHeight"));
                    d.isNumber(t) && e.right - e.left < t && (e.right = e.left + t),
                    d.isNumber(i) && e.bottom - e.top < i && (e.bottom = e.top + i);
                    let r = this.getPrivate("width")
                      , n = this.getPrivate("height");
                    d.isNumber(r) && (r > 0 ? e.right = e.left + r : e.left = e.right + r),
                    d.isNumber(n) && (n > 0 ? e.bottom = e.top + n : e.top = e.bottom + n)
                }
                _removeParent(e) {
                    e && (e.children.removeValue(this),
                    c.removeFirst(e._percentageSizeChildren, this),
                    c.removeFirst(e._percentagePositionChildren, this))
                }
                _clearDirty() {
                    super._clearDirty(),
                    this._sizeDirty = !1,
                    this._statesHandled = !1
                }
                hover() {
                    this.showTooltip(),
                    this._handleOver()
                }
                unhover() {
                    this.hideTooltip(),
                    this._handleOut()
                }
                showTooltip(e) {
                    const t = this.getTooltip()
                      , i = this.get("tooltipText")
                      , r = this.get("tooltipHTML");
                    if ((i || r) && t) {
                        const n = this.get("tooltipPosition")
                          , s = this.getPrivate("tooltipTarget", this);
                        "fixed" != n && e || (this._display._setMatrix(),
                        e = this.toGlobal(s._getTooltipPoint())),
                        t.set("pointTo", e),
                        t.set("tooltipTarget", s),
                        t.get("x") || t.set("x", e.x),
                        t.get("y") || t.set("y", e.y),
                        i && t.label.set("text", i),
                        r && t.label.set("html", r);
                        const a = this.dataItem;
                        if (a && t.label._setDataItem(a),
                        "always" == this.get("showTooltipOn") && (e.x < 0 || e.x > this._root.width() || e.y < 0 || e.y > this._root.height()))
                            return void this.hideTooltip();
                        t.label.text.markDirtyText();
                        const o = t.show();
                        return this.setPrivateRaw("showingTooltip", !0),
                        o
                    }
                }
                hideTooltip() {
                    const e = this.getTooltip();
                    if (e && (e.get("tooltipTarget") == this.getPrivate("tooltipTarget", this) || this.get("tooltip") == e)) {
                        let t = e.get("keepTargetHover") && 0 == e.get("stateAnimationDuration", 0) ? 400 : void 0;
                        const i = e.hide(t);
                        return this.setPrivateRaw("showingTooltip", !1),
                        i
                    }
                }
                _getTooltipPoint() {
                    const e = this._localBounds;
                    if (e) {
                        let t = 0
                          , i = 0;
                        return this.get("isMeasured") ? (t = e.left + u.relativeToValue(this.get("tooltipX", 0), e.right - e.left),
                        i = e.top + u.relativeToValue(this.get("tooltipY", 0), e.bottom - e.top)) : (t = u.relativeToValue(this.get("tooltipX", 0), this.width()),
                        i = u.relativeToValue(this.get("tooltipY", 0), this.height())),
                        {
                            x: t,
                            y: i
                        }
                    }
                    return {
                        x: 0,
                        y: 0
                    }
                }
                getTooltip() {
                    let e = this.get("tooltip");
                    if (e)
                        return e;
                    {
                        let e = this.parent;
                        if (e)
                            return e.getTooltip()
                    }
                }
                _updatePosition() {
                    const e = this.parent;
                    let t = this.get("dx", 0)
                      , i = this.get("dy", 0)
                      , r = this.get("x")
                      , n = this.getPrivate("x")
                      , s = 0
                      , o = 0;
                    const l = this.get("position");
                    r instanceof a.gG && (r = e ? e.innerWidth() * r.value + e.get("paddingLeft", 0) : 0),
                    d.isNumber(r) ? s = r + t : null != n ? s = n : e && "relative" == l && (s = e.get("paddingLeft", 0) + t);
                    let h = this.get("y")
                      , u = this.getPrivate("y");
                    h instanceof a.gG && (h = e ? e.innerHeight() * h.value + e.get("paddingTop", 0) : 0),
                    d.isNumber(h) ? o = h + i : null != u ? o = u : e && "relative" == l && (o = e.get("paddingTop", 0) + i);
                    const c = this._display;
                    if (c.x != s || c.y != o) {
                        c.invalidateBounds(),
                        c.x = s,
                        c.y = o;
                        const e = "positionchanged";
                        this.events.isEnabled(e) && this.events.dispatch(e, {
                            type: e,
                            target: this
                        })
                    }
                    this.getPrivate("showingTooltip") && this.showTooltip()
                }
                x() {
                    let e = this.get("x")
                      , t = this.getPrivate("x");
                    const i = this.parent;
                    return i ? e instanceof a.gG ? u.relativeToValue(e, i.innerWidth()) + i.get("paddingLeft", 0) : d.isNumber(e) ? e : null != t ? t : i.get("paddingLeft", this._display.x) : this._display.x
                }
                y() {
                    let e = this.getPrivate("y");
                    if (null != e)
                        return e;
                    let t = this.get("y");
                    const i = this.parent;
                    return i ? t instanceof a.gG ? u.relativeToValue(t, i.innerHeight()) + i.get("paddingTop", 0) : d.isNumber(t) ? t : null != e ? e : i.get("paddingTop", this._display.y) : this._display.y
                }
                _dispose() {
                    super._dispose(),
                    this._display.dispose(),
                    this._removeTemplateField(),
                    this._removeParent(this.parent),
                    this._root._removeFocusElement(this);
                    const e = this.get("tooltip");
                    e && e.dispose(),
                    this.markDirty()
                }
                adjustedLocalBounds() {
                    return this._fixMinBounds(this._adjustedLocalBounds),
                    this._adjustedLocalBounds
                }
                localBounds() {
                    return this._localBounds
                }
                bounds() {
                    const e = this._adjustedLocalBounds
                      , t = this.x()
                      , i = this.y();
                    return {
                        left: e.left + t,
                        right: e.right + t,
                        top: e.top + i,
                        bottom: e.bottom + i
                    }
                }
                globalBounds() {
                    const e = this.localBounds()
                      , t = this.toGlobal({
                        x: e.left,
                        y: e.top
                    })
                      , i = this.toGlobal({
                        x: e.right,
                        y: e.top
                    })
                      , r = this.toGlobal({
                        x: e.right,
                        y: e.bottom
                    })
                      , n = this.toGlobal({
                        x: e.left,
                        y: e.bottom
                    });
                    return {
                        left: Math.min(t.x, i.x, r.x, n.x),
                        top: Math.min(t.y, i.y, r.y, n.y),
                        right: Math.max(t.x, i.x, r.x, n.x),
                        bottom: Math.max(t.y, i.y, r.y, n.y)
                    }
                }
                _onShow(e) {}
                _onHide(e) {}
                appear(e, t) {
                    return (0,
                    r.mG)(this, void 0, void 0, (function*() {
                        return yield this.hide(0),
                        t ? new Promise(( (i, r) => {
                            this.setTimeout(( () => {
                                i(this.show(e))
                            }
                            ), t)
                        }
                        )) : this.show(e)
                    }
                    ))
                }
                show(e) {
                    return (0,
                    r.mG)(this, void 0, void 0, (function*() {
                        if (!this._isShowing) {
                            this._isHidden = !1,
                            this._isShowing = !0,
                            this._isHiding = !1,
                            this.states.lookup("default").get("visible") && this.set("visible", !0),
                            this._onShow(e);
                            const t = this.states.applyAnimate("default", e);
                            yield(0,
                            h.ne)(t),
                            this._isShowing = !1
                        }
                    }
                    ))
                }
                hide(e) {
                    return (0,
                    r.mG)(this, void 0, void 0, (function*() {
                        if (!this._isHiding && !this._isHidden) {
                            this._isHiding = !0,
                            this._isShowing = !1;
                            let t = this.states.lookup("hidden");
                            t || (t = this.states.create("hidden", {
                                opacity: 0,
                                visible: !1
                            })),
                            this._isHidden = !0,
                            this._onHide(e);
                            const i = this.states.applyAnimate("hidden", e);
                            yield(0,
                            h.ne)(i),
                            this._isHiding = !1
                        }
                    }
                    ))
                }
                isHidden() {
                    return this._isHidden
                }
                isShowing() {
                    return this._isShowing
                }
                isHiding() {
                    return this._isHiding
                }
                isHover() {
                    return this._display.hovering()
                }
                isFocus() {
                    return this._root.focused(this)
                }
                isDragging() {
                    return this._isDragging
                }
                isVisible() {
                    return !(!this.get("visible") || !this.getPrivate("visible") || this.get("forceHidden"))
                }
                isVisibleDeep() {
                    return this._parent ? this._parent.isVisibleDeep() && this.isVisible() : this.isVisible()
                }
                compositeOpacity() {
                    const e = this.get("opacity", 1);
                    return this._parent ? this._parent.compositeOpacity() * e : e
                }
                width() {
                    let e = this.get("width")
                      , t = this.get("maxWidth", this.getPrivate("maxWidth"))
                      , i = this.get("minWidth", this.getPrivate("minWidth"))
                      , r = this.getPrivate("width")
                      , n = 0;
                    if (d.isNumber(r))
                        n = r;
                    else if (null == e)
                        this._adjustedLocalBounds && (n = this._adjustedLocalBounds.right - this._adjustedLocalBounds.left);
                    else if (e instanceof a.gG) {
                        const t = this.parent;
                        n = t ? t.innerWidth() * e.value : this._root.width() * e.value
                    } else
                        d.isNumber(e) && (n = e);
                    return d.isNumber(i) && (n = Math.max(i, n)),
                    d.isNumber(t) && (n = Math.min(t, n)),
                    n
                }
                maxWidth() {
                    let e = this.get("maxWidth", this.getPrivate("maxWidth"));
                    if (d.isNumber(e))
                        return e;
                    {
                        let e = this.get("width");
                        if (d.isNumber(e))
                            return e
                    }
                    const t = this.parent;
                    return t ? t.innerWidth() : this._root.width()
                }
                maxHeight() {
                    let e = this.get("maxHeight", this.getPrivate("maxHeight"));
                    if (d.isNumber(e))
                        return e;
                    {
                        let e = this.get("height");
                        if (d.isNumber(e))
                            return e
                    }
                    const t = this.parent;
                    return t ? t.innerHeight() : this._root.height()
                }
                height() {
                    let e = this.get("height")
                      , t = this.get("maxHeight", this.getPrivate("maxHeight"))
                      , i = this.get("minHeight", this.getPrivate("minHeight"))
                      , r = this.getPrivate("height")
                      , n = 0;
                    if (d.isNumber(r))
                        n = r;
                    else if (null == e)
                        this._adjustedLocalBounds && (n = this._adjustedLocalBounds.bottom - this._adjustedLocalBounds.top);
                    else if (e instanceof a.gG) {
                        const t = this.parent;
                        n = t ? t.innerHeight() * e.value : this._root.height() * e.value
                    } else
                        d.isNumber(e) && (n = e);
                    return d.isNumber(i) && (n = Math.max(i, n)),
                    d.isNumber(t) && (n = Math.min(t, n)),
                    n
                }
                _findStaticTemplate(e) {
                    return this._templateField && e(this._templateField) ? this._templateField : super._findStaticTemplate(e)
                }
                _walkParents(e) {
                    this._parent && this._walkParent(e)
                }
                _walkParent(e) {
                    this._parent && this._parent._walkParent(e),
                    e(this)
                }
                get parent() {
                    return this._parent
                }
                _setParent(e, t=!1) {
                    const i = this._parent;
                    e !== i && (this.markDirtyBounds(),
                    e.markDirty(),
                    this._parent = e,
                    t && (this._removeParent(i),
                    e && (this._addPercentageSizeChildren(),
                    this._addPercentagePositionChildren())),
                    this.markDirtyPosition(),
                    this._applyThemes())
                }
                getNumberFormatter() {
                    return this.get("numberFormatter", this._root.numberFormatter)
                }
                getDateFormatter() {
                    return this.get("dateFormatter", this._root.dateFormatter)
                }
                getDurationFormatter() {
                    return this.get("durationFormatter", this._root.durationFormatter)
                }
                toGlobal(e) {
                    return this._display.toGlobal(e)
                }
                toLocal(e) {
                    return this._display.toLocal(e)
                }
                _getDownPoint() {
                    const e = this._getDownPointId();
                    if (e)
                        return this._downPoints[e]
                }
                _getDownPointId() {
                    if (this._downPoints)
                        return p.keysOrdered(this._downPoints, ( (e, t) => e > t ? 1 : e < t ? -1 : 0))[0]
                }
                toFront() {
                    const e = this.parent;
                    e && e.children.moveValue(this, e.children.length - 1)
                }
                toBack() {
                    const e = this.parent;
                    e && e.children.moveValue(this, 0)
                }
            }
            Object.defineProperty(m, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Sprite"
            }),
            Object.defineProperty(m, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: n.JH.classNames.concat([m.className])
            })
        },
        1195: function(e, t, i) {
            "use strict";
            i.d(t, {
                b: function() {
                    return h
                }
            });
            var r = i(8777)
              , n = i(6245)
              , s = i(3497)
              , a = i(7142)
              , o = i(1112)
              , l = i(751);
            class h extends r.W {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "rectangle", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this.children.push(a.A.new(this._root, {
                            themeTags: ["rectangle"],
                            fillOpacity: 0,
                            fill: (0,
                            o.$_)(16777215)
                        }))
                    }),
                    Object.defineProperty(this, "gripL", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this._createGrip("left")
                    }),
                    Object.defineProperty(this, "gripR", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this._createGrip("right")
                    }),
                    Object.defineProperty(this, "gripT", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this._createGrip("top")
                    }),
                    Object.defineProperty(this, "gripB", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this._createGrip("bottom")
                    }),
                    Object.defineProperty(this, "_is", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 1
                    }),
                    Object.defineProperty(this, "_ix", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_iw", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_positionDP", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_isHover", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    })
                }
                _afterNew() {
                    super._afterNew(),
                    this.addTag("resizer"),
                    this.set("visible", !1),
                    this.gripL.events.on("dragged", (e => {
                        this._resize(e.target, -1)
                    }
                    )),
                    this.gripR.events.on("dragged", (e => {
                        this._resize(e.target, 1)
                    }
                    )),
                    this.gripL.events.on("dragstart", (e => {
                        this._resizeStart(e.target)
                    }
                    )),
                    this.gripR.events.on("dragstart", (e => {
                        this._resizeStart(e.target)
                    }
                    )),
                    this.gripT.events.on("dragged", (e => {
                        this._rotate(e, 90)
                    }
                    )),
                    this.gripB.events.on("dragged", (e => {
                        this._rotate(e, -90)
                    }
                    )),
                    this.gripT.events.on("dragstart", (e => {
                        this._resizeStart(e.target)
                    }
                    )),
                    this.gripB.events.on("dragstart", (e => {
                        this._resizeStart(e.target)
                    }
                    ))
                }
                _resizeStart(e) {
                    const t = this.get("sprite");
                    t && (this._is = t.get("scale", 1),
                    this._ix = e.x(),
                    this._iw = this.width() / 2)
                }
                _resize(e, t) {
                    const i = this.get("sprite")
                      , r = this.get("spriteTemplate");
                    if (i) {
                        const n = Math.max(.01, this._is * (1 + t * (e.x() - this._ix) / this._iw));
                        r ? r.set("scale", n) : i.set("scale", n),
                        i.states.lookup("default").set("scale", n),
                        this._updatePositions()
                    }
                }
                _rotate(e, t) {
                    const i = this.get("sprite")
                      , r = this.get("spriteTemplate");
                    if (i) {
                        const n = this.parent;
                        if (n) {
                            const s = this.get("rotationStep", 10);
                            let a = Math.round((l.getAngle({
                                x: this.x(),
                                y: this.y()
                            }, n.toLocal(e.point)) + t) / s) * s;
                            r ? r.set("rotation", a) : i.set("rotation", a),
                            i.states.lookup("default").set("rotation", a),
                            this._updatePositions()
                        }
                    }
                }
                _createGrip(e) {
                    const t = this.children.push(r.W.new(this._root, {
                        themeTags: ["grip", e],
                        setStateOnChildren: !0,
                        draggable: !0
                    }));
                    return t.children.push(s.c.new(this._root, {
                        themeTags: ["outline"],
                        centerX: n.CI,
                        centerY: n.CI
                    })),
                    t.children.push(s.c.new(this._root, {
                        centerX: n.CI,
                        centerY: n.CI
                    })),
                    t
                }
                _updateChildren() {
                    if (super._updateChildren(),
                    this.isDirty("sprite")) {
                        const e = this.get("sprite");
                        if (e) {
                            this.show(0),
                            this.setPrivate("visible", !0),
                            this._updatePositions();
                            const t = e.parent;
                            t && t.children.moveValue(this, 0),
                            this._positionDP = e.events.on("positionchanged", ( () => {
                                this._updatePositions()
                            }
                            ))
                        } else
                            this.hide(0),
                            this.setPrivate("visible", !1),
                            this._positionDP && this._positionDP.dispose()
                    }
                    (this.isDirty("width") || this.isDirty("height") || this.isDirty("rotation")) && this._updatePositions()
                }
                _updatePositions() {
                    const e = this.get("sprite");
                    if (e) {
                        let t = e.localBounds()
                          , i = e.get("scale", 1)
                          , r = 20
                          , s = (t.right - t.left) * i + r
                          , a = (t.bottom - t.top) * i + r
                          , o = e.get("rotation", 0);
                        const h = this.rectangle;
                        let u = e.get("centerX", n.CI)
                          , c = e.get("centerY", n.CI)
                          , d = 0;
                        u instanceof n.gG && (d = u.value);
                        let p = 0;
                        c instanceof n.gG && (p = c.value),
                        h.setAll({
                            centerX: u,
                            centerY: c,
                            width: s,
                            height: a
                        }),
                        this.setAll({
                            x: e.x() + r * (d - .5) * l.cos(o) - r * (p - .5) * l.sin(o),
                            y: e.y() + r * (p - .5) * l.cos(o) + r * (d - .5) * l.sin(o),
                            width: s,
                            height: a,
                            rotation: o
                        }),
                        this.gripT.setAll({
                            x: (.5 - d) * s,
                            y: -p * a
                        }),
                        this.gripB.setAll({
                            x: (.5 - d) * s,
                            y: (1 - p) * a
                        }),
                        this.gripL.setAll({
                            x: -d * s,
                            y: (.5 - p) * a
                        }),
                        this.gripR.setAll({
                            x: (1 - d) * s,
                            y: (.5 - p) * a
                        }),
                        this.rectangle.setAll({
                            width: s,
                            height: a
                        })
                    }
                }
            }
            Object.defineProperty(h, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "SpriteResizer"
            }),
            Object.defineProperty(h, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.W.classNames.concat([h.className])
            })
        },
        2036: function(e, t, i) {
            "use strict";
            i.d(t, {
                x: function() {
                    return o
                }
            });
            var r = i(4596)
              , n = i(2132)
              , s = i(5071)
              , a = i(7449);
            class o extends r.j {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "textStyle", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this._root._renderer.makeTextStyle()
                    }),
                    Object.defineProperty(this, "_display", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this._root._renderer.makeText("", this.textStyle)
                    }),
                    Object.defineProperty(this, "_textStyles", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: ["textAlign", "fontFamily", "fontSize", "fontStyle", "fontWeight", "fontStyle", "fontVariant", "textDecoration", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY", "shadowOpacity", "lineHeight", "baselineRatio", "direction", "textBaseline", "oversizedBehavior", "breakWords", "ellipsis", "minScale"]
                    }),
                    Object.defineProperty(this, "_originalScale", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    })
                }
                _updateBounds() {
                    if (this.get("text"))
                        super._updateBounds();
                    else {
                        let e = {
                            left: 0,
                            right: 0,
                            top: 0,
                            bottom: 0
                        };
                        this._adjustedLocalBounds = e
                    }
                }
                _changed() {
                    super._changed(),
                    this._display.clear();
                    let e = this.textStyle;
                    if (this.isDirty("opacity")) {
                        let e = this.get("opacity", 1);
                        this._display.alpha = e
                    }
                    if ((this.isDirty("text") || this.isDirty("populateText")) && (this._display.text = this._getText(),
                    this.markDirtyBounds(),
                    "tooltip" == this.get("role") && this._root.updateTooltip(this)),
                    this.isPrivateDirty("tooltipElement") && this.getPrivate("tooltipElement") && this._disposers.push(new a.ku(( () => {
                        this._root._removeTooltipElement(this)
                    }
                    ))),
                    this.isDirty("width") && (e.wordWrapWidth = this.width(),
                    this.markDirtyBounds()),
                    this.isDirty("oversizedBehavior") && (e.oversizedBehavior = this.get("oversizedBehavior", "none"),
                    this.markDirtyBounds()),
                    this.isDirty("breakWords") && (e.breakWords = this.get("breakWords", !1),
                    this.markDirtyBounds()),
                    this.isDirty("ellipsis") && (e.ellipsis = this.get("ellipsis"),
                    this.markDirtyBounds()),
                    this.isDirty("ignoreFormatting") && (e.ignoreFormatting = this.get("ignoreFormatting", !1),
                    this.markDirtyBounds()),
                    this.isDirty("minScale") && (e.minScale = this.get("minScale", 0),
                    this.markDirtyBounds()),
                    this.isDirty("fill")) {
                        let t = this.get("fill");
                        t && (e.fill = t)
                    }
                    if (this.isDirty("fillOpacity")) {
                        let t = this.get("fillOpacity", 1);
                        t && (e.fillOpacity = t)
                    }
                    (this.isDirty("maxWidth") || this.isPrivateDirty("maxWidth")) && (e.maxWidth = this.get("maxWidth", this.getPrivate("maxWidth")),
                    this.markDirtyBounds()),
                    (this.isDirty("maxHeight") || this.isPrivateDirty("maxHeight")) && (e.maxHeight = this.get("maxHeight", this.getPrivate("maxHeight")),
                    this.markDirtyBounds()),
                    s.each(this._textStyles, (t => {
                        this._dirty[t] && (e[t] = this.get(t),
                        this.markDirtyBounds())
                    }
                    )),
                    e.fontSize = this.get("fontSize"),
                    e.fontFamily = this.get("fontFamily"),
                    this._display.style = e,
                    this.isDirty("role") && "tooltip" == this.get("role") && this._root.updateTooltip(this)
                }
                _getText() {
                    const e = this.get("text", "");
                    return this.get("populateText") ? (0,
                    n.q)(this, e) : e
                }
                markDirtyText() {
                    this._display.text = this._getText(),
                    "tooltip" == this.get("role") && this._root.updateTooltip(this),
                    this.markDirtyBounds(),
                    this.markDirty()
                }
                _setDataItem(e) {
                    super._setDataItem(e),
                    this.get("populateText") && this.markDirtyText()
                }
                getNumberFormatter() {
                    return this.parent ? this.parent.getNumberFormatter() : super.getNumberFormatter()
                }
                getDateFormatter() {
                    return this.parent ? this.parent.getDateFormatter() : super.getDateFormatter()
                }
                getDurationFormatter() {
                    return this.parent ? this.parent.getDurationFormatter() : super.getDurationFormatter()
                }
            }
            Object.defineProperty(o, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Text"
            }),
            Object.defineProperty(o, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.j.classNames.concat([o.className])
            })
        },
        2438: function(e, t, i) {
            "use strict";
            i.d(t, {
                d: function() {
                    return n
                }
            });
            var r = i(2077);
            class n extends r.x {
            }
            Object.defineProperty(n, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Tick"
            }),
            Object.defineProperty(n, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.x.classNames.concat([n.className])
            })
        },
        2876: function(e, t, i) {
            "use strict";
            i.d(t, {
                u: function() {
                    return d
                }
            });
            var r = i(7449)
              , n = i(962)
              , s = i(8931)
              , a = i(8777)
              , o = i(6245)
              , l = i(1112)
              , h = i(751)
              , u = i(5071)
              , c = i(7652);
            class d extends a.W {
                constructor(e, t, i, r=[]) {
                    super(e, t, i, r),
                    Object.defineProperty(this, "_fx", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_fy", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_label", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_fillDp", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_strokeDp", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_labelDp", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_w", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_h", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_keepHoverDp", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_htmlContentHovered", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    })
                }
                _afterNew() {
                    this._settings.themeTags = c.mergeTags(this._settings.themeTags, ["tooltip"]),
                    super._afterNew(),
                    this.set("background", s.i.new(this._root, {
                        themeTags: ["tooltip", "background"]
                    })),
                    this._label = this.children.push(n._.new(this._root, {})),
                    this._disposers.push(this._label.events.on("boundschanged", ( () => {
                        this._updateBackground()
                    }
                    ))),
                    this._disposers.push(this.on("bounds", ( () => {
                        this._updateBackground()
                    }
                    ))),
                    this._updateTextColor(),
                    this._root.tooltipContainer.children.push(this),
                    this.hide(0),
                    this._disposers.push(this.label.onPrivate("htmlElement", (e => {
                        e && (c.addEventListener(e, "pointerover", (e => {
                            this._htmlContentHovered = !0
                        }
                        )),
                        c.addEventListener(e, "pointerout", (e => {
                            this._htmlContentHovered = !1
                        }
                        )))
                    }
                    ))),
                    this._root._tooltips.push(this)
                }
                get label() {
                    return this._label
                }
                dispose() {
                    super.dispose(),
                    u.remove(this._root._tooltips, this)
                }
                _updateChildren() {
                    super._updateChildren(),
                    (this.isDirty("pointerOrientation") || this.isPrivateDirty("minWidth") || this.isPrivateDirty("minHeight")) && this.get("background")._markDirtyKey("width"),
                    null != this.get("labelText") && this.label.set("text", this.get("labelText")),
                    null != this.get("labelHTML") && this.label.set("html", this.get("labelHTML"))
                }
                _changed() {
                    if (super._changed(),
                    (this.isDirty("pointTo") || this.isDirty("pointerOrientation")) && this._updateBackground(),
                    this.isDirty("tooltipTarget") && this.updateBackgroundColor(),
                    this.isDirty("keepTargetHover"))
                        if (this.get("keepTargetHover")) {
                            const e = this.get("background");
                            this._keepHoverDp = new r.FV([e.events.on("pointerover", (e => {
                                let t = this.get("tooltipTarget");
                                t && (t.parent && t.parent.getPrivate("tooltipTarget") == t && (t = t.parent),
                                t.hover())
                            }
                            )), e.events.on("pointerout", (e => {
                                let t = this.get("tooltipTarget");
                                t && (t.parent && t.parent.getPrivate("tooltipTarget") == t && (t = t.parent),
                                this._htmlContentHovered || t.unhover())
                            }
                            ))]),
                            this.label.onPrivate("htmlElement", (t => {
                                this._keepHoverDp && t && this._keepHoverDp.disposers.push(c.addEventListener(t, "pointerleave", (t => {
                                    const i = this.root._renderer.getEvent(t);
                                    e.events.dispatch("pointerout", {
                                        type: "pointerout",
                                        originalEvent: i.event,
                                        point: i.point,
                                        simulated: !1,
                                        target: e
                                    })
                                }
                                )))
                            }
                            ))
                        } else
                            this._keepHoverDp && (this._keepHoverDp.dispose(),
                            this._keepHoverDp = void 0)
                }
                _onShow() {
                    super._onShow(),
                    this.updateBackgroundColor()
                }
                updateBackgroundColor() {
                    let e = this.get("tooltipTarget");
                    const t = this.get("background");
                    let i, r;
                    e && t && (i = e.get("fill"),
                    r = e.get("stroke"),
                    null == i && (i = r),
                    this.get("getFillFromSprite") && (this._fillDp && this._fillDp.dispose(),
                    null != i && t.set("fill", i),
                    this._fillDp = e.on("fill", (e => {
                        null != e && (t.set("fill", e),
                        this._updateTextColor(e))
                    }
                    )),
                    this._disposers.push(this._fillDp)),
                    this.get("getStrokeFromSprite") && (this._strokeDp && this._strokeDp.dispose(),
                    null != i && t.set("stroke", i),
                    this._strokeDp = e.on("fill", (e => {
                        null != e && t.set("stroke", e)
                    }
                    )),
                    this._disposers.push(this._strokeDp)),
                    this.get("getLabelFillFromSprite") && (this._labelDp && this._labelDp.dispose(),
                    null != i && this.label.set("fill", i),
                    this._labelDp = e.on("fill", (e => {
                        null != e && this.label.set("fill", e)
                    }
                    )),
                    this._disposers.push(this._labelDp))),
                    this._updateTextColor(i)
                }
                _updateTextColor(e) {
                    this.get("autoTextColor") && (null == e && (e = this.get("background").get("fill")),
                    null == e && (e = this._root.interfaceColors.get("background")),
                    e instanceof l.Il && this.label.set("fill", l.Il.alternative(e, this._root.interfaceColors.get("alternativeText"), this._root.interfaceColors.get("text"))))
                }
                _setDataItem(e) {
                    super._setDataItem(e),
                    this.label._setDataItem(e)
                }
                _updateBackground() {
                    super.updateBackground();
                    const e = this._root.container;
                    if (e) {
                        let t = .5
                          , i = .5
                          , r = this.get("centerX");
                        r instanceof o.gG && (t = r.value);
                        let n = this.get("centerY");
                        n instanceof o.gG && (i = n.value);
                        let a = e.width()
                          , l = e.height()
                          , u = this.parent
                          , c = 0
                          , d = 0;
                        if (u) {
                            c = u.x(),
                            d = u.y();
                            const e = u.get("layerMargin");
                            e && (c += e.left || 0,
                            d += e.top || 0,
                            a += (e.left || 0) + (e.right || 0),
                            l += (e.top || 0) + (e.bottom || 0))
                        }
                        const p = this.get("bounds", {
                            left: -c,
                            top: -d,
                            right: a - c,
                            bottom: l - d
                        });
                        this._updateBounds();
                        let f = this.width()
                          , g = this.height();
                        0 === f && (f = this._w),
                        0 === g && (g = this._h);
                        let m = this.get("pointTo", {
                            x: a / 2,
                            y: l / 2
                        })
                          , b = m.x
                          , _ = m.y
                          , v = this.get("pointerOrientation")
                          , y = this.get("background")
                          , w = 0
                          , x = 0
                          , O = 0;
                        y instanceof s.i && (w = y.get("pointerLength", 0),
                        x = y.get("strokeWidth", 0) / 2,
                        O = x,
                        y.set("width", f),
                        y.set("height", g));
                        let P = 0
                          , D = 0
                          , k = p.right - p.left
                          , T = p.bottom - p.top;
                        "horizontal" == v || "left" == v || "right" == v ? (x = 0,
                        "horizontal" == v ? b > p.left + k / 2 ? (b -= f * (1 - t) + w,
                        O *= -1) : b += f * t + w : "left" == v ? b += f * (1 - t) + w : (b -= f * t + w,
                        O *= -1)) : (O = 0,
                        "vertical" == v ? _ > p.top + g / 2 + w ? _ -= g * (1 - i) + w : (_ += g * i + w,
                        x *= -1) : "down" == v ? _ -= g * (1 - i) + w : (_ += g * i + w,
                        x *= -1)),
                        b = h.fitToRange(b, p.left + f * t, p.left + k - f * (1 - t)) + O,
                        _ = h.fitToRange(_, p.top + g * i, p.top + T - g * (1 - i)) - x,
                        P = m.x - b + f * t + O,
                        D = m.y - _ + g * i - x,
                        this._fx = b,
                        this._fy = _;
                        const M = this.get("animationDuration", 0);
                        if (M > 0 && this.get("visible") && this.get("opacity") > .1) {
                            const e = this.get("animationEasing");
                            this.animate({
                                key: "x",
                                to: b,
                                duration: M,
                                easing: e
                            }),
                            this.animate({
                                key: "y",
                                to: _,
                                duration: M,
                                easing: e
                            })
                        } else
                            this.set("x", b),
                            this.set("y", _);
                        y instanceof s.i && (y.set("pointerX", P),
                        y.set("pointerY", D)),
                        f > 0 && (this._w = f),
                        g > 0 && (this._h = g)
                    }
                }
            }
            Object.defineProperty(d, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Tooltip"
            }),
            Object.defineProperty(d, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: a.W.classNames.concat([d.className])
            })
        },
        1706: function(e, t, i) {
            "use strict";
            i.d(t, {
                Z: function() {
                    return a
                }
            });
            var r = i(2010)
              , n = i(5040)
              , s = i(6245);
            class a extends r.A {
                updateContainer(e) {
                    let t = e.get("paddingTop", 0)
                      , i = e.innerHeight()
                      , a = 0;
                    (0,
                    r.j)(e, (e => {
                        if (e.isVisible() && "relative" == e.get("position")) {
                            let t = e.get("height");
                            if (t instanceof s.gG) {
                                a += t.value;
                                let r = i * t.value
                                  , n = e.get("minHeight", e.getPrivate("minHeight", -1 / 0));
                                n > r && (i -= n,
                                a -= t.value);
                                let s = e.get("maxHeight", e.getPrivate("maxHeight", 1 / 0));
                                r > s && (i -= s,
                                a -= t.value)
                            } else
                                n.isNumber(t) || (t = e.height()),
                                i -= t + e.get("marginTop", 0) + e.get("marginBottom", 0)
                        }
                    }
                    )),
                    (i <= 0 || i == 1 / 0) && (i = .1),
                    (0,
                    r.j)(e, (e => {
                        if (e.isVisible() && "relative" == e.get("position")) {
                            let t = e.get("height");
                            if (t instanceof s.gG) {
                                let r = i * t.value / a - e.get("marginTop", 0) - e.get("marginBottom", 0)
                                  , n = e.get("minHeight", e.getPrivate("minHeight", -1 / 0))
                                  , s = e.get("maxHeight", e.getPrivate("maxHeight", 1 / 0));
                                r = Math.min(Math.max(n, r), s),
                                e.setPrivate("height", r)
                            } else
                                e._prevSettings.height instanceof s.gG && e.setPrivate("height", void 0)
                        }
                    }
                    ));
                    let o = t;
                    (0,
                    r.j)(e, (e => {
                        if ("relative" == e.get("position"))
                            if (e.isVisible()) {
                                let t = e.adjustedLocalBounds()
                                  , i = e.get("marginTop", 0)
                                  , r = t.top
                                  , n = t.bottom
                                  , s = e.get("maxHeight");
                                s && n - r > s && (n = r + s);
                                let a = e.get("marginBottom", 0)
                                  , l = o + i - r;
                                e.setPrivate("y", l),
                                o = l + n + a
                            } else
                                e.setPrivate("y", void 0)
                    }
                    ))
                }
            }
            Object.defineProperty(a, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "VerticalLayout"
            }),
            Object.defineProperty(a, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.A.classNames.concat([a.className])
            })
        },
        4680: function(e, t, i) {
            "use strict";
            var r;
            i.d(t, {
                b: function() {
                    return r
                }
            }),
            function(e) {
                e.ADD = "lighter",
                e.COLOR = "color",
                e.COLOR_BURN = "color-burn",
                e.COLOR_DODGE = "color-dodge",
                e.DARKEN = "darken",
                e.DIFFERENCE = "difference",
                e.DST_OVER = "destination-over",
                e.EXCLUSION = "exclusion",
                e.HARD_LIGHT = "hard-light",
                e.HUE = "hue",
                e.LIGHTEN = "lighten",
                e.LUMINOSITY = "luminosity",
                e.MULTIPLY = "multiply",
                e.NORMAL = "source-over",
                e.OVERLAY = "overlay",
                e.SATURATION = "saturation",
                e.SCREEN = "screen",
                e.SOFT_LIGHT = "soft-light",
                e.SRC_ATOP = "source-atop",
                e.XOR = "xor"
            }(r || (r = {}))
        },
        1437: function(e, t, i) {
            "use strict";
            i.d(t, {
                p: function() {
                    return n
                }
            });
            var r = i(6331);
            class n extends r.JH {
                _afterNew() {
                    super._afterNewApplyThemes()
                }
                getFill(e) {
                    return {
                        addColorStop: (e, t) => {}
                    }
                }
                _changed() {
                    super._changed()
                }
                getBounds(e) {
                    const t = this.get("target");
                    if (t) {
                        let i = t.globalBounds();
                        const r = e.toLocal({
                            x: i.left,
                            y: i.top
                        })
                          , n = e.toLocal({
                            x: i.right,
                            y: i.top
                        })
                          , s = e.toLocal({
                            x: i.right,
                            y: i.bottom
                        })
                          , a = e.toLocal({
                            x: i.left,
                            y: i.bottom
                        });
                        return {
                            left: Math.min(r.x, n.x, s.x, a.x),
                            top: Math.min(r.y, n.y, s.y, a.y),
                            right: Math.max(r.x, n.x, s.x, a.x),
                            bottom: Math.max(r.y, n.y, s.y, a.y)
                        }
                    }
                    return e._display.getLocalBounds()
                }
            }
            Object.defineProperty(n, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Gradient"
            }),
            Object.defineProperty(n, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.JH.classNames.concat([n.className])
            })
        },
        1747: function(e, t, i) {
            "use strict";
            i.d(t, {
                o: function() {
                    return l
                }
            });
            var r = i(1437)
              , n = i(1112)
              , s = i(5071)
              , a = i(5040)
              , o = i(751);
            class l extends r.p {
                getFill(e) {
                    const t = this.get("rotation", 0);
                    let i = this.getBounds(e)
                      , r = i.left || 0
                      , l = i.right || 0
                      , h = i.top || 0
                      , u = i.bottom || 0
                      , c = o.cos(t)
                      , d = o.sin(t)
                      , p = c * (l - r)
                      , f = d * (u - h)
                      , g = Math.max(p, f);
                    const m = this._root._renderer.createLinearGradient(r, h, r + g * c, h + g * d)
                      , b = this.get("stops");
                    if (b) {
                        let e = 0;
                        s.each(b, (t => {
                            let i = t.offset;
                            a.isNumber(i) || (i = e / (b.length - 1));
                            let r = t.opacity;
                            a.isNumber(r) || (r = 1);
                            let s = t.color;
                            if (s) {
                                const e = t.lighten;
                                e && (s = n.Il.lighten(s, e));
                                const a = t.brighten;
                                a && (s = n.Il.brighten(s, a)),
                                m.addColorStop(i, "rgba(" + s.r + "," + s.g + "," + s.b + "," + r + ")")
                            }
                            e++
                        }
                        ))
                    }
                    return m
                }
            }
            Object.defineProperty(l, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "LinearGradient"
            }),
            Object.defineProperty(l, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.p.classNames.concat([l.className])
            })
        },
        3437: function(e, t, i) {
            "use strict";
            i.d(t, {
                c: function() {
                    return n
                }
            });
            var r = i(6331);
            class n extends r.JH {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "_display", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this._root._renderer.makeGraphics()
                    }),
                    Object.defineProperty(this, "_backgroundDisplay", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this._root._renderer.makeGraphics()
                    }),
                    Object.defineProperty(this, "_clear", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_pattern", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    })
                }
                _afterNew() {
                    super._afterNewApplyThemes()
                }
                get pattern() {
                    return this._pattern
                }
                _draw() {}
                _beforeChanged() {
                    super._beforeChanged(),
                    (this.isDirty("repetition") || this.isDirty("width") || this.isDirty("height") || this.isDirty("rotation") || this.isDirty("color") || this.isDirty("strokeWidth") || this.isDirty("strokeDasharray") || this.isDirty("strokeDashoffset") || this.isDirty("colorOpacity") || this.isDirty("fill") || this.isDirty("fillOpacity")) && (this._clear = !0)
                }
                _changed() {
                    if (super._changed(),
                    this._clear) {
                        const e = this.get("repetition", "")
                          , t = this.get("width", 100)
                          , i = this.get("height", 100)
                          , r = this.get("fill")
                          , n = this.get("fillOpacity", 1);
                        this._display.clear(),
                        this._backgroundDisplay.clear(),
                        r && n > 0 && (this._backgroundDisplay.beginFill(r, n),
                        this._backgroundDisplay.drawRect(0, 0, t, i),
                        this._backgroundDisplay.endFill()),
                        this._display.angle = this.get("rotation", 0),
                        this._draw(),
                        this._pattern = this._root._renderer.createPattern(this._display, this._backgroundDisplay, e, t, i)
                    }
                }
            }
            Object.defineProperty(n, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Pattern"
            }),
            Object.defineProperty(n, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.JH.classNames.concat([n.className])
            })
        },
        4429: function(e, t, i) {
            "use strict";
            i.d(t, {
                v: function() {
                    return n
                }
            });
            var r = i(3437);
            class n extends r.c {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "_image", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    })
                }
                _beforeChanged() {
                    super._beforeChanged(),
                    this._clear = !0,
                    this.isDirty("src") && this._load()
                }
                _draw() {
                    super._draw();
                    const e = this._image;
                    if (e) {
                        const t = this.get("width", 100)
                          , i = this.get("height", 100)
                          , r = this.get("fit", "image");
                        let n = 0
                          , s = 0;
                        "pattern" == r ? (n = t,
                        s = i) : (n = e.width,
                        s = e.height,
                        "image" == r && (this.set("width", n),
                        this.set("height", s)));
                        let a = 0
                          , o = 0;
                        this.get("centered", !0) && (a = t / 2 - n / 2,
                        o = i / 2 - s / 2),
                        this._display.image(e, n, s, a, o)
                    }
                }
                _load() {
                    const e = this.get("src");
                    if (e) {
                        const t = new Image;
                        t.src = e,
                        t.decode().then(( () => {
                            this._image = t,
                            this._draw(),
                            this.events.isEnabled("loaded") && this.events.dispatch("loaded", {
                                type: "loaded",
                                target: this
                            })
                        }
                        )).catch((e => {}
                        ))
                    }
                }
            }
            Object.defineProperty(n, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "PicturePattern"
            }),
            Object.defineProperty(n, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.c.classNames.concat([n.className])
            })
        },
        6490: function(e, t, i) {
            "use strict";
            i.d(t, {
                Wn: function() {
                    return u
                },
                XG: function() {
                    return d
                },
                ne: function() {
                    return o
                },
                w6: function() {
                    return l
                }
            });
            var r = i(5125)
              , n = i(6245)
              , s = i(1112)
              , a = i(256);
            function o(e) {
                return (0,
                r.mG)(this, void 0, void 0, (function*() {
                    if (void 0 !== e) {
                        const t = [];
                        a.each(e, ( (e, i) => {
                            t.push(i.waitForStop())
                        }
                        )),
                        yield Promise.all(t)
                    }
                }
                ))
            }
            function l(e, t, i) {
                return t + e * (i - t)
            }
            function h(e, t, i) {
                return e >= 1 ? i : t
            }
            function u(e, t, i) {
                return new n.gG(l(e, t.percent, i.percent))
            }
            function c(e, t, i) {
                return s.Il.interpolate(e, t, i)
            }
            function d(e, t) {
                return "number" == typeof e && "number" == typeof t ? l : e instanceof n.gG && t instanceof n.gG ? u : e instanceof s.Il && t instanceof s.Il ? c : h
            }
        },
        5071: function(e, t, i) {
            "use strict";
            i.r(t),
            i.d(t, {
                add: function() {
                    return v
                },
                any: function() {
                    return s
                },
                copy: function() {
                    return P
                },
                each: function() {
                    return o
                },
                eachContinue: function() {
                    return h
                },
                eachReverse: function() {
                    return l
                },
                find: function() {
                    return S
                },
                findIndex: function() {
                    return M
                },
                findIndexReverse: function() {
                    return E
                },
                findMap: function() {
                    return N
                },
                findReverse: function() {
                    return C
                },
                first: function() {
                    return d
                },
                getFirstSortedIndex: function() {
                    return A
                },
                getSortedIndex: function() {
                    return j
                },
                has: function() {
                    return O
                },
                indexOf: function() {
                    return n
                },
                insert: function() {
                    return p
                },
                insertIndex: function() {
                    return k
                },
                keepIf: function() {
                    return R
                },
                last: function() {
                    return c
                },
                map: function() {
                    return a
                },
                move: function() {
                    return _
                },
                pushAll: function() {
                    return g
                },
                pushOne: function() {
                    return y
                },
                remove: function() {
                    return m
                },
                removeFirst: function() {
                    return b
                },
                removeIndex: function() {
                    return T
                },
                replace: function() {
                    return w
                },
                setIndex: function() {
                    return f
                },
                shiftLeft: function() {
                    return u
                },
                shuffle: function() {
                    return L
                },
                slice: function() {
                    return D
                },
                toArray: function() {
                    return x
                }
            });
            var r = i(5040);
            function n(e, t) {
                const i = e.length;
                for (let r = 0; r < i; ++r)
                    if (e[r] === t)
                        return r;
                return -1
            }
            function s(e, t) {
                const i = e.length;
                for (let r = 0; r < i; ++r)
                    if (t(e[r]))
                        return !0;
                return !1
            }
            function a(e, t) {
                const i = e.length
                  , r = new Array(i);
                for (let n = 0; n < i; ++n)
                    r[n] = t(e[n], n);
                return r
            }
            function o(e, t) {
                const i = e.length;
                for (let r = 0; r < i; ++r)
                    t(e[r], r)
            }
            function l(e, t) {
                let i = e.length;
                for (; i > 0; )
                    --i,
                    t(e[i], i)
            }
            function h(e, t) {
                const i = e.length;
                for (let r = 0; r < i && t(e[r], r); ++r)
                    ;
            }
            function u(e, t) {
                const i = e.length;
                for (let r = t; r < i; ++r)
                    e[r - t] = e[r];
                e.length = i - t
            }
            function c(e) {
                const t = e.length;
                return t ? e[t - 1] : void 0
            }
            function d(e) {
                return e[0]
            }
            function p(e, t, i) {
                i = Math.max(0, Math.min(i, e.length)),
                e.splice(i, 0, t)
            }
            function f(e, t, i) {
                m(e, t),
                p(e, t, i)
            }
            function g(e, t) {
                const i = t.length;
                for (let r = 0; r < i; ++r)
                    e.push(t[r])
            }
            function m(e, t) {
                let i = !1
                  , r = 0;
                for (; ; ) {
                    if (r = e.indexOf(t, r),
                    -1 === r)
                        return i;
                    i = !0,
                    e.splice(r, 1)
                }
            }
            function b(e, t) {
                let i = e.indexOf(t);
                return -1 !== i && (e.splice(i, 1),
                !0)
            }
            function _(e, t, i) {
                let r = n(e, t);
                -1 !== r && T(e, r),
                null == i ? e.push(t) : k(e, i, t)
            }
            function v(e, t, i) {
                r.isNumber(i) ? 0 === i ? e.unshift(t) : e.splice(i, 0, t) : e.push(t)
            }
            function y(e, t) {
                -1 === e.indexOf(t) && e.push(t)
            }
            function w(e, t, i) {
                let n = e.indexOf(t);
                -1 !== n && e.splice(n, 1),
                r.isNumber(i) ? e.splice(i, 0, t) : e.push(t)
            }
            function x(e) {
                return Array.isArray(e) ? e : [e]
            }
            function O(e, t) {
                return -1 !== n(e, t)
            }
            function P(e) {
                const t = e.length
                  , i = new Array(t);
                for (let r = 0; r < t; ++r)
                    i[r] = e[r];
                return i
            }
            function D(e, t, i=e.length) {
                const r = new Array(i - t);
                for (let n = t; n < i; ++n)
                    r[n - t] = e[n];
                return r
            }
            function k(e, t, i) {
                e.splice(t, 0, i)
            }
            function T(e, t) {
                e.splice(t, 1)
            }
            function M(e, t) {
                const i = e.length;
                for (let r = 0; r < i; ++r)
                    if (t(e[r], r))
                        return r;
                return -1
            }
            function E(e, t) {
                let i = e.length;
                for (; i > 0; )
                    if (--i,
                    t(e[i], i))
                        return i;
                return -1
            }
            function S(e, t) {
                const i = M(e, t);
                if (-1 !== i)
                    return e[i]
            }
            function C(e, t) {
                const i = E(e, t);
                if (-1 !== i)
                    return e[i]
            }
            function N(e, t) {
                const i = e.length;
                for (let r = 0; r < i; ++r) {
                    const i = t(e[r], r);
                    if (void 0 !== i)
                        return i
                }
            }
            function L(e) {
                let t, i, r = e.length;
                for (; 0 !== r; )
                    i = Math.floor(Math.random() * r),
                    r -= 1,
                    t = e[r],
                    e[r] = e[i],
                    e[i] = t
            }
            function j(e, t) {
                let i = 0
                  , r = e.length
                  , n = !1;
                for (; i < r; ) {
                    const s = i + r >> 1
                      , a = t(e[s]);
                    a < 0 ? i = s + 1 : 0 === a ? (n = !0,
                    i = s + 1) : r = s
                }
                return {
                    found: n,
                    index: n ? i - 1 : i
                }
            }
            function A(e, t) {
                let i = 0
                  , r = e.length
                  , n = !1;
                for (; i < r; ) {
                    const s = i + r >> 1
                      , a = t(e[s]);
                    a < 0 ? i = s + 1 : 0 === a ? (n = !0,
                    r = s) : r = s
                }
                return {
                    found: n,
                    index: i
                }
            }
            function R(e, t) {
                let i = e.length;
                for (; i > 0; )
                    --i,
                    t(e[i]) || e.splice(i, 1)
            }
        },
        1112: function(e, t, i) {
            "use strict";
            i.d(t, {
                $_: function() {
                    return o
                },
                Il: function() {
                    return l
                }
            });
            var r = i(6490)
              , n = i(7652)
              , s = i(5040);
            function a(e) {
                return "#" === e[0] && (e = e.substr(1)),
                3 == e.length && (e = e[0].repeat(2) + e[1].repeat(2) + e[2].repeat(2)),
                parseInt(e, 16)
            }
            function o(e) {
                return l.fromAny(e)
            }
            class l {
                constructor(e) {
                    Object.defineProperty(this, "_hex", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    this._hex = 0 | e
                }
                get hex() {
                    return this._hex
                }
                get r() {
                    return this._hex >>> 16
                }
                get g() {
                    return this._hex >> 8 & 255
                }
                get b() {
                    return 255 & this._hex
                }
                toCSS(e=1) {
                    return "rgba(" + this.r + ", " + this.g + ", " + this.b + ", " + e + ")"
                }
                toCSSHex() {
                    return "#" + n.padString(this.r.toString(16), 2) + n.padString(this.g.toString(16), 2) + n.padString(this.b.toString(16), 2)
                }
                toHSL(e=1) {
                    return n.rgbToHsl({
                        r: this.r,
                        g: this.g,
                        b: this.b,
                        a: e
                    })
                }
                static fromHSL(e, t, i) {
                    const r = n.hslToRgb({
                        h: e,
                        s: t,
                        l: i
                    });
                    return this.fromRGB(r.r, r.g, r.b)
                }
                toString() {
                    return this.toCSSHex()
                }
                static fromHex(e) {
                    return new l(e)
                }
                static fromRGB(e, t, i) {
                    return new l((0 | i) + (t << 8) + (e << 16))
                }
                static fromString(e) {
                    return new l(a(e))
                }
                static fromCSS(e) {
                    return new l(function(e) {
                        let t = (e = e.replace(/[ ]/g, "")).match(/^rgb\(([0-9]*),([0-9]*),([0-9]*)\)/i);
                        if (t)
                            t.push("1");
                        else if (t = e.match(/^rgba\(([0-9]*),([0-9]*),([0-9]*),([.0-9]*)\)/i),
                        !t)
                            return 0;
                        let i = "";
                        for (let e = 1; e <= 3; e++) {
                            let r = parseInt(t[e]).toString(16);
                            1 == r.length && (r = "0" + r),
                            i += r
                        }
                        return a(i)
                    }(e))
                }
                static fromAny(e) {
                    if (s.isString(e)) {
                        if ("#" == e[0])
                            return l.fromString(e);
                        if ("rgb" == e.substr(0, 3))
                            return l.fromCSS(e)
                    } else {
                        if (s.isNumber(e))
                            return l.fromHex(e);
                        if (e instanceof l)
                            return l.fromHex(e.hex)
                    }
                    throw new Error("Unknown color syntax: " + e)
                }
                static alternative(e, t, i) {
                    const r = n.alternativeColor({
                        r: e.r,
                        g: e.g,
                        b: e.b
                    }, t ? {
                        r: t.r,
                        g: t.g,
                        b: t.b
                    } : void 0, i ? {
                        r: i.r,
                        g: i.g,
                        b: i.b
                    } : void 0);
                    return this.fromRGB(r.r, r.g, r.b)
                }
                static interpolate(e, t, i, n="rgb") {
                    if ("hsl" == n) {
                        const n = t.toHSL()
                          , s = i.toHSL();
                        return l.fromHSL((0,
                        r.w6)(e, n.h, s.h), (0,
                        r.w6)(e, n.s, s.s), (0,
                        r.w6)(e, n.l, s.l))
                    }
                    return l.fromRGB((0,
                    r.w6)(e, t.r, i.r), (0,
                    r.w6)(e, t.g, i.g), (0,
                    r.w6)(e, t.b, i.b))
                }
                static lighten(e, t) {
                    const i = n.lighten({
                        r: e.r,
                        g: e.g,
                        b: e.b
                    }, t);
                    return l.fromRGB(i.r, i.g, i.b)
                }
                static brighten(e, t) {
                    const i = n.brighten({
                        r: e.r,
                        g: e.g,
                        b: e.b
                    }, t);
                    return l.fromRGB(i.r, i.g, i.b)
                }
                static saturate(e, t) {
                    const i = n.saturate({
                        r: e.r,
                        g: e.g,
                        b: e.b
                    }, t);
                    return l.fromRGB(i.r, i.g, i.b)
                }
            }
        },
        2754: function(e, t, i) {
            "use strict";
            i.d(t, {
                U: function() {
                    return s
                }
            });
            var r = i(6331)
              , n = i(1112);
            class s extends r.JH {
                _afterNew() {
                    super._afterNewApplyThemes(),
                    this._dirty.colors = !1
                }
                _beforeChanged() {
                    this.isDirty("colors") && this.reset()
                }
                generateColors() {
                    this.setPrivate("currentPass", this.getPrivate("currentPass", 0) + 1);
                    const e = this.getPrivate("currentPass")
                      , t = this.get("colors", [this.get("baseColor", n.Il.fromHex(16711680))]);
                    this.getPrivate("numColors") || this.setPrivate("numColors", t.length);
                    const i = this.getPrivate("numColors")
                      , r = this.get("passOptions")
                      , s = this.get("reuse");
                    for (let a = 0; a < i; a++)
                        if (s)
                            t.push(t[a]);
                        else {
                            const i = t[a].toHSL();
                            let s = i.h + (r.hue || 0) * e;
                            for (; s > 1; )
                                s -= 1;
                            let o = i.s + (r.saturation || 0) * e;
                            o > 1 && (o = 1),
                            o < 0 && (o = 0);
                            let l = i.l + (r.lightness || 0) * e;
                            for (; l > 1; )
                                l -= 1;
                            t.push(n.Il.fromHSL(s, o, l))
                        }
                }
                getIndex(e) {
                    const t = this.get("colors", [])
                      , i = this.get("saturation");
                    return e >= t.length ? (this.generateColors(),
                    this.getIndex(e)) : null != i ? n.Il.saturate(t[e], i) : t[e]
                }
                next() {
                    let e = this.getPrivate("currentStep", this.get("startIndex", 0));
                    return this.setPrivate("currentStep", e + this.get("step", 1)),
                    this.getIndex(e)
                }
                reset() {
                    this.setPrivate("currentStep", this.get("startIndex", 0)),
                    this.setPrivate("currentPass", 0)
                }
            }
            Object.defineProperty(s, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "ColorSet"
            }),
            Object.defineProperty(s, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.JH.classNames.concat([s.className])
            })
        },
        9582: function(e, t, i) {
            "use strict";
            i.d(t, {
                Q: function() {
                    return s
                },
                k: function() {
                    return n
                }
            });
            var r = i(7144);
            class n extends r.aV {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "processor", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    })
                }
                incrementRef() {}
                decrementRef() {}
                _onPush(e) {
                    this.processor && this.processor.processRow(e),
                    super._onPush(e)
                }
                _onInsertIndex(e, t) {
                    this.processor && this.processor.processRow(t),
                    super._onInsertIndex(e, t)
                }
                _onSetIndex(e, t, i) {
                    this.processor && this.processor.processRow(i),
                    super._onSetIndex(e, t, i)
                }
            }
            class s {
                constructor(e) {
                    Object.defineProperty(this, "processor", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_value", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    this._value = e
                }
                incrementRef() {}
                decrementRef() {}
            }
        },
        6460: function(e, t, i) {
            "use strict";
            i.d(t, {
                C: function() {
                    return l
                }
            });
            var r = i(6331)
              , n = i(7255)
              , s = i(462)
              , a = i(5040)
              , o = i(7652);
            class l extends r.JH {
                _setDefaults() {
                    this._setDefault("capitalize", !0),
                    this._setDefault("dateFormat", "yyyy-MM-dd"),
                    super._setDefaults()
                }
                _beforeChanged() {
                    super._beforeChanged()
                }
                format(e, t) {
                    let i;
                    void 0 !== t && "" !== t || (t = this.get("dateFormat", "yyyy-MM-dd"));
                    let r = e;
                    if (a.isObject(t))
                        try {
                            const e = this.get("intlLocales");
                            return e ? new Intl.DateTimeFormat(e,t).format(r) : new Intl.DateTimeFormat(void 0,t).format(r)
                        } catch (e) {
                            return "Invalid"
                        }
                    let n = this.parseFormat(t);
                    const s = this._root.timezone;
                    return s && !this._root.utc && (r = s.convertLocal(r)),
                    a.isNumber(r.getTime()) ? (i = this.applyFormat(r, n),
                    this.get("capitalize") && (i = i.replace(/^.{1}/, i.substr(0, 1).toUpperCase())),
                    i) : "Invalid date"
                }
                applyFormat(e, t) {
                    let i, r, n, l, h, u, c, d, p = t.template, f = e.getTime();
                    this._root.utc ? (i = e.getUTCFullYear(),
                    r = e.getUTCMonth(),
                    n = e.getUTCDay(),
                    l = e.getUTCDate(),
                    h = e.getUTCHours(),
                    u = e.getUTCMinutes(),
                    c = e.getUTCSeconds(),
                    d = e.getUTCMilliseconds()) : (i = e.getFullYear(),
                    r = e.getMonth(),
                    n = e.getDay(),
                    l = e.getDate(),
                    h = e.getHours(),
                    u = e.getMinutes(),
                    c = e.getSeconds(),
                    d = e.getMilliseconds());
                    for (let g = 0, m = t.parts.length; g < m; g++) {
                        let m = "";
                        switch (t.parts[g]) {
                        case "G":
                            m = this._t(i < 0 ? "_era_bc" : "_era_ad");
                            break;
                        case "yyyy":
                            m = Math.abs(i).toString(),
                            i < 0 && (m += this._t("_era_bc"));
                            break;
                        case "yyy":
                        case "yy":
                        case "y":
                            m = Math.abs(i).toString().substr(-t.parts[g].length),
                            i < 0 && (m += this._t("_era_bc"));
                            break;
                        case "YYYY":
                        case "YYY":
                        case "YY":
                        case "Y":
                            let a = o.getWeekYear(e, this._root.utc);
                            m = "YYYY" == t.parts[g] ? Math.abs(a).toString() : Math.abs(a).toString().substr(-t.parts[g].length),
                            a < 0 && (m += this._t("_era_bc"));
                            break;
                        case "u":
                        case "F":
                        case "g":
                            break;
                        case "q":
                            m = "" + Math.ceil((e.getMonth() + 1) / 3);
                            break;
                        case "MMMMM":
                            m = this._t(this._getMonth(r)).substr(0, 1);
                            break;
                        case "MMMM":
                            m = this._t(this._getMonth(r));
                            break;
                        case "MMM":
                            m = this._t(this._getShortMonth(r));
                            break;
                        case "MM":
                            m = o.padString(r + 1, 2, "0");
                            break;
                        case "M":
                            m = (r + 1).toString();
                            break;
                        case "ww":
                            m = o.padString(o.getWeek(e, this._root.utc), 2, "0");
                            break;
                        case "w":
                            m = o.getWeek(e, this._root.utc).toString();
                            break;
                        case "W":
                            m = o.getMonthWeek(e, this._root.utc).toString();
                            break;
                        case "dd":
                            m = o.padString(l, 2, "0");
                            break;
                        case "d":
                            m = l.toString();
                            break;
                        case "DD":
                        case "DDD":
                            m = o.padString(o.getYearDay(e, this._root.utc).toString(), t.parts[g].length, "0");
                            break;
                        case "D":
                            m = o.getYearDay(e, this._root.utc).toString();
                            break;
                        case "t":
                            m = this._root.language.translateFunc("_dateOrd").call(this, l);
                            break;
                        case "E":
                            m = (n || 7).toString();
                            break;
                        case "EE":
                            m = o.padString((n || 7).toString(), 2, "0");
                            break;
                        case "EEE":
                        case "eee":
                            m = this._t(this._getShortWeekday(n));
                            break;
                        case "EEEE":
                        case "eeee":
                            m = this._t(this._getWeekday(n));
                            break;
                        case "EEEEE":
                        case "eeeee":
                            m = this._t(this._getShortWeekday(n)).substr(0, 1);
                            break;
                        case "e":
                        case "ee":
                            m = (n - (this._root.locale.firstDayOfWeek || 1) + 1).toString(),
                            "ee" == t.parts[g] && (m = o.padString(m, 2, "0"));
                            break;
                        case "a":
                            m = h >= 12 ? this._t("PM") : this._t("AM");
                            break;
                        case "aa":
                            m = h >= 12 ? this._t("P.M.") : this._t("A.M.");
                            break;
                        case "aaa":
                            m = h >= 12 ? this._t("P") : this._t("A");
                            break;
                        case "h":
                            m = o.get12Hours(h).toString();
                            break;
                        case "hh":
                            m = o.padString(o.get12Hours(h), 2, "0");
                            break;
                        case "H":
                            m = h.toString();
                            break;
                        case "HH":
                            m = o.padString(h, 2, "0");
                            break;
                        case "K":
                            m = o.get12Hours(h, 0).toString();
                            break;
                        case "KK":
                            m = o.padString(o.get12Hours(h, 0), 2, "0");
                            break;
                        case "k":
                            m = (h + 1).toString();
                            break;
                        case "kk":
                            m = o.padString(h + 1, 2, "0");
                            break;
                        case "m":
                            m = u.toString();
                            break;
                        case "mm":
                            m = o.padString(u, 2, "0");
                            break;
                        case "s":
                            m = c.toString();
                            break;
                        case "ss":
                            m = o.padString(c, 2, "0");
                            break;
                        case "S":
                        case "SS":
                        case "SSS":
                            m = Math.round(d / 1e3 * Math.pow(10, t.parts[g].length)).toString();
                            break;
                        case "x":
                            m = f.toString();
                            break;
                        case "n":
                        case "nn":
                        case "nnn":
                            m = o.padString(d, t.parts[g].length, "0");
                            break;
                        case "z":
                            m = o.getTimeZone(e, !1, !1, this._root.utc);
                            break;
                        case "zz":
                            m = o.getTimeZone(e, !0, !1, this._root.utc);
                            break;
                        case "zzz":
                            m = o.getTimeZone(e, !1, !0, this._root.utc);
                            break;
                        case "zzzz":
                            m = o.getTimeZone(e, !0, !0, this._root.utc);
                            break;
                        case "Z":
                        case "ZZ":
                            let p = this._root.utc ? "UTC" : this._root.timezone;
                            p instanceof s.r && (p = p.name);
                            const b = p ? o.getTimezoneOffset(p) : e.getTimezoneOffset();
                            let _ = Math.abs(b) / 60
                              , v = Math.floor(_)
                              , y = 60 * _ - 60 * v;
                            this._root.utc && (v = 0,
                            y = 0),
                            "Z" == t.parts[g] ? (m = "GMT",
                            m += b > 0 ? "-" : "+",
                            m += o.padString(v, 2) + ":" + o.padString(y, 2)) : (m = b > 0 ? "-" : "+",
                            m += o.padString(v, 2) + o.padString(y, 2));
                            break;
                        case "i":
                            m = e.toISOString();
                            break;
                        case "I":
                            m = e.toUTCString()
                        }
                        p = p.replace(a.PLACEHOLDER, m)
                    }
                    return p
                }
                parseFormat(e) {
                    let t = {
                        template: "",
                        parts: []
                    }
                      , i = n.V.chunk(e, !0);
                    for (let e = 0; e < i.length; e++) {
                        let r = i[e];
                        if ("value" === r.type) {
                            if (r.text.match(/^date$/i)) {
                                let e = this.get("dateFormat", "yyyy-MM-dd");
                                a.isString(e) || (e = "yyyy-MM-dd"),
                                r.text = e
                            }
                            let e = r.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|q|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);
                            if (e)
                                for (let i = 0; i < e.length; i++)
                                    t.parts.push(e[i]),
                                    r.text = r.text.replace(e[i], a.PLACEHOLDER)
                        }
                        t.template += r.text
                    }
                    return t
                }
                _months() {
                    return ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
                }
                _getMonth(e) {
                    return this._months()[e]
                }
                _shortMonths() {
                    return ["Jan", "Feb", "Mar", "Apr", "May(short)", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
                }
                _getShortMonth(e) {
                    return this._shortMonths()[e]
                }
                _weekdays() {
                    return ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
                }
                _getWeekday(e) {
                    return this._weekdays()[e]
                }
                _shortWeekdays() {
                    return ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]
                }
                _getShortWeekday(e) {
                    return this._shortWeekdays()[e]
                }
                parse(e, t) {
                    if (e instanceof Date)
                        return e;
                    if (a.isNumber(e))
                        return new Date(e);
                    let i;
                    a.isString(e) || (e = e.toString());
                    let r = "";
                    t = (t = o.cleanFormat(t)).substr(0, e.length);
                    let n = this.parseFormat(t)
                      , s = {
                        year: -1,
                        year3: -1,
                        year2: -1,
                        year1: -1,
                        month: -1,
                        monthShort: -1,
                        monthLong: -1,
                        weekdayShort: -1,
                        weekdayLong: -1,
                        day: -1,
                        yearDay: -1,
                        week: -1,
                        hourBase0: -1,
                        hour12Base0: -1,
                        hourBase1: -1,
                        hour12Base1: -1,
                        minute: -1,
                        second: -1,
                        millisecond: -1,
                        millisecondDigits: -1,
                        am: -1,
                        zone: -1,
                        timestamp: -1,
                        iso: -1
                    }
                      , l = {
                        year: 1970,
                        month: 0,
                        day: 1,
                        hour: 0,
                        minute: 0,
                        second: 0,
                        millisecond: 0,
                        timestamp: null,
                        offset: 0,
                        utc: this._root.utc
                    }
                      , h = 0
                      , u = 0;
                    for (let e = 0; e < n.parts.length; e++) {
                        switch (u = e + h + 1,
                        n.parts[e]) {
                        case "yyyy":
                        case "YYYY":
                            r += "([0-9]{4})",
                            s.year = u;
                            break;
                        case "yyy":
                        case "YYY":
                            r += "([0-9]{3})",
                            s.year3 = u;
                            break;
                        case "yy":
                        case "YY":
                            r += "([0-9]{2})",
                            s.year2 = u;
                            break;
                        case "y":
                        case "Y":
                            r += "([0-9]{1})",
                            s.year1 = u;
                            break;
                        case "MMMM":
                            r += "(" + this.getStringList(this._months()).join("|") + ")",
                            s.monthLong = u;
                            break;
                        case "MMM":
                            r += "(" + this.getStringList(this._shortMonths()).join("|") + ")",
                            s.monthShort = u;
                            break;
                        case "MM":
                        case "M":
                            r += "([0-9]{2}|[0-9]{1})",
                            s.month = u;
                            break;
                        case "ww":
                        case "w":
                            r += "([0-9]{2}|[0-9]{1})",
                            s.week = u;
                            break;
                        case "dd":
                        case "d":
                            r += "([0-9]{2}|[0-9]{1})",
                            s.day = u;
                            break;
                        case "DDD":
                        case "DD":
                        case "D":
                            r += "([0-9]{3}|[0-9]{2}|[0-9]{1})",
                            s.yearDay = u;
                            break;
                        case "dddd":
                            r += "(" + this.getStringList(this._weekdays()).join("|") + ")",
                            s.weekdayLong = u;
                            break;
                        case "ddd":
                            r += "(" + this.getStringList(this._shortWeekdays()).join("|") + ")",
                            s.weekdayShort = u;
                            break;
                        case "aaa":
                        case "aa":
                        case "a":
                            r += "(" + this.getStringList(["AM", "PM", "A.M.", "P.M.", "A", "P"]).join("|") + ")",
                            s.am = u;
                            break;
                        case "hh":
                        case "h":
                            r += "([0-9]{2}|[0-9]{1})",
                            s.hour12Base1 = u;
                            break;
                        case "HH":
                        case "H":
                            r += "([0-9]{2}|[0-9]{1})",
                            s.hourBase0 = u;
                            break;
                        case "KK":
                        case "K":
                            r += "([0-9]{2}|[0-9]{1})",
                            s.hour12Base0 = u;
                            break;
                        case "kk":
                        case "k":
                            r += "([0-9]{2}|[0-9]{1})",
                            s.hourBase1 = u;
                            break;
                        case "mm":
                        case "m":
                            r += "([0-9]{2}|[0-9]{1})",
                            s.minute = u;
                            break;
                        case "ss":
                        case "s":
                            r += "([0-9]{2}|[0-9]{1})",
                            s.second = u;
                            break;
                        case "SSS":
                        case "SS":
                        case "S":
                            r += "([0-9]{3}|[0-9]{2}|[0-9]{1})",
                            s.millisecond = u,
                            s.millisecondDigits = n.parts[e].length;
                            break;
                        case "nnn":
                        case "nn":
                        case "n":
                            r += "([0-9]{3}|[0-9]{2}|[0-9]{1})",
                            s.millisecond = u;
                            break;
                        case "x":
                            r += "([0-9]{1,})",
                            s.timestamp = u;
                            break;
                        case "Z":
                            r += "GMT([-+]+[0-9]{2}:[0-9]{2})",
                            s.zone = u;
                            break;
                        case "ZZ":
                            r += "([\\-+]+[0-9]{2}[0-9]{2})",
                            s.zone = u;
                            break;
                        case "i":
                            r += "([0-9]{4})-?([0-9]{2})-?([0-9]{2})T?([0-9]{2}):?([0-9]{2}):?([0-9]{2})\\.?([0-9]{0,3})([zZ]|[+\\-][0-9]{2}:?[0-9]{2}|$)",
                            s.iso = u,
                            h += 7;
                            break;
                        case "G":
                        case "YYYY":
                        case "YYY":
                        case "YY":
                        case "Y":
                        case "MMMMM":
                        case "W":
                        case "EEEEE":
                        case "EEEE":
                        case "EEE":
                        case "EE":
                        case "E":
                        case "eeeee":
                        case "eeee":
                        case "eee":
                        case "ee":
                        case "e":
                        case "zzzz":
                        case "zzz":
                        case "zz":
                        case "z":
                        case "t":
                            h--
                        }
                        r += "[^0-9]*"
                    }
                    let c = new RegExp(r)
                      , d = e.match(c);
                    if (d) {
                        if (s.year > -1 && (l.year = parseInt(d[s.year])),
                        s.year3 > -1) {
                            let e = parseInt(d[s.year3]);
                            e += 1e3,
                            l.year = e
                        }
                        if (s.year2 > -1) {
                            let e = parseInt(d[s.year2]);
                            e += e > 50 ? 1e3 : 2e3,
                            l.year = e
                        }
                        if (s.year1 > -1) {
                            let e = parseInt(d[s.year1]);
                            e = 10 * Math.floor((new Date).getFullYear() / 10) + e,
                            l.year = e
                        }
                        if (s.monthLong > -1 && (l.month = this.resolveMonth(d[s.monthLong])),
                        s.monthShort > -1 && (l.month = this.resolveShortMonth(d[s.monthShort])),
                        s.month > -1 && (l.month = parseInt(d[s.month]) - 1),
                        s.week > -1 && -1 === s.day && (l.month = 0,
                        l.day = o.getDayFromWeek(parseInt(d[s.week]), l.year, 1, this._root.utc)),
                        s.day > -1 && (l.day = parseInt(d[s.day])),
                        s.yearDay > -1 && (l.month = 0,
                        l.day = parseInt(d[s.yearDay])),
                        s.hourBase0 > -1 && (l.hour = parseInt(d[s.hourBase0])),
                        s.hourBase1 > -1 && (l.hour = parseInt(d[s.hourBase1]) - 1),
                        s.hour12Base0 > -1) {
                            let e = parseInt(d[s.hour12Base0]);
                            11 == e && (e = 0),
                            s.am > -1 && !this.isAm(d[s.am]) && (e += 12),
                            l.hour = e
                        }
                        if (s.hour12Base1 > -1) {
                            let e = parseInt(d[s.hour12Base1]);
                            12 == e && (e = 0),
                            s.am > -1 && !this.isAm(d[s.am]) && (e += 12),
                            l.hour = e
                        }
                        if (s.minute > -1 && (l.minute = parseInt(d[s.minute])),
                        s.second > -1 && (l.second = parseInt(d[s.second])),
                        s.millisecond > -1) {
                            let e = parseInt(d[s.millisecond]);
                            2 == s.millisecondDigits ? e *= 10 : 1 == s.millisecondDigits && (e *= 100),
                            l.millisecond = e
                        }
                        if (s.timestamp > -1) {
                            l.timestamp = parseInt(d[s.timestamp]);
                            const e = new Date(l.timestamp);
                            l.year = e.getUTCFullYear(),
                            l.month = e.getUTCMonth(),
                            l.day = e.getUTCDate(),
                            l.hour = e.getUTCHours(),
                            l.minute = e.getUTCMinutes(),
                            l.second = e.getUTCSeconds(),
                            l.millisecond = e.getUTCMilliseconds()
                        }
                        s.zone > -1 && (l.offset = this.resolveTimezoneOffset(new Date(l.year,l.month,l.day), d[s.zone])),
                        s.iso > -1 && (l.year = a.toNumber(d[s.iso + 0]),
                        l.month = a.toNumber(d[s.iso + 1]) - 1,
                        l.day = a.toNumber(d[s.iso + 2]),
                        l.hour = a.toNumber(d[s.iso + 3]),
                        l.minute = a.toNumber(d[s.iso + 4]),
                        l.second = a.toNumber(d[s.iso + 5]),
                        l.millisecond = a.toNumber(d[s.iso + 6]),
                        "Z" == d[s.iso + 7] || "z" == d[s.iso + 7] ? l.utc = !0 : "" != d[s.iso + 7] && (l.offset = this.resolveTimezoneOffset(new Date(l.year,l.month,l.day), d[s.iso + 7]))),
                        i = l.utc ? new Date(Date.UTC(l.year, l.month, l.day, l.hour, l.minute, l.second, l.millisecond)) : new Date(l.year,l.month,l.day,l.hour,l.minute + l.offset,l.second,l.millisecond)
                    } else
                        i = new Date(e);
                    return i
                }
                resolveTimezoneOffset(e, t) {
                    if (t.match(/([+\-]?)([0-9]{2}):?([0-9]{2})/)) {
                        let i = t.match(/([+\-]?)([0-9]{2}):?([0-9]{2})/)
                          , r = i[1]
                          , n = i[2]
                          , s = i[3]
                          , a = 60 * parseInt(n) + parseInt(s);
                        return "+" == r && (a *= -1),
                        a - (e || new Date).getTimezoneOffset()
                    }
                    return 0
                }
                resolveMonth(e) {
                    let t = this._months().indexOf(e);
                    return t > -1 || !this._root.language.isDefault() && (t = this._root.language.translateAll(this._months()).indexOf(e),
                    t > -1) ? t : 0
                }
                resolveShortMonth(e) {
                    let t = this._shortMonths().indexOf(e);
                    return t > -1 ? t : (t = this._months().indexOf(e),
                    t > -1 || this._root.language && !this._root.language.isDefault() && (t = this._root.language.translateAll(this._shortMonths()).indexOf(e),
                    t > -1) ? t : 0)
                }
                isAm(e) {
                    return this.getStringList(["AM", "A.M.", "A"]).indexOf(e.toUpperCase()) > -1
                }
                getStringList(e) {
                    let t = [];
                    for (let i = 0; i < e.length; i++)
                        this._root.language ? t.push(o.escapeForRgex(this._t(e[i]))) : t.push(o.escapeForRgex(e[i]));
                    return t
                }
            }
        },
        7449: function(e, t, i) {
            "use strict";
            i.d(t, {
                DM: function() {
                    return h
                },
                FV: function() {
                    return o
                },
                KK: function() {
                    return n
                },
                cx: function() {
                    return l
                },
                ku: function() {
                    return s
                },
                rk: function() {
                    return a
                }
            });
            var r = i(5071);
            class n {
                constructor() {
                    Object.defineProperty(this, "_disposed", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    this._disposed = !1
                }
                isDisposed() {
                    return this._disposed
                }
                dispose() {
                    this._disposed || (this._disposed = !0,
                    this._dispose())
                }
            }
            class s {
                constructor(e) {
                    Object.defineProperty(this, "_disposed", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_dispose", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    this._disposed = !1,
                    this._dispose = e
                }
                isDisposed() {
                    return this._disposed
                }
                dispose() {
                    this._disposed || (this._disposed = !0,
                    this._dispose())
                }
            }
            class a extends n {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "_disposers", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    })
                }
                _dispose() {
                    r.each(this._disposers, (e => {
                        e.dispose()
                    }
                    ))
                }
            }
            class o extends n {
                constructor(e) {
                    super(),
                    Object.defineProperty(this, "_disposers", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    this._disposers = e
                }
                _dispose() {
                    r.each(this._disposers, (e => {
                        e.dispose()
                    }
                    ))
                }
                get disposers() {
                    return this._disposers
                }
            }
            class l extends n {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "_disposer", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_value", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    })
                }
                _dispose() {
                    null != this._disposer && (this._disposer.dispose(),
                    this._disposer = void 0)
                }
                get() {
                    return this._value
                }
                set(e, t) {
                    null != this._disposer && this._disposer.dispose(),
                    this._disposer = t,
                    this._value = e
                }
                reset() {
                    this.set(void 0, void 0)
                }
            }
            class h extends s {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "_counter", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    })
                }
                increment() {
                    return ++this._counter,
                    new s(( () => {
                        --this._counter,
                        0 === this._counter && this.dispose()
                    }
                    ))
                }
            }
        },
        798: function(e, t, i) {
            "use strict";
            i.d(t, {
                $: function() {
                    return l
                }
            });
            var r = i(6331)
              , n = i(7255)
              , s = i(256)
              , a = i(7652)
              , o = i(5040);
            class l extends r.JH {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "_unitAliases", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {
                            Y: "y",
                            D: "d",
                            H: "h",
                            K: "h",
                            k: "h",
                            n: "S"
                        }
                    })
                }
                _setDefaults() {
                    const e = "_duration_millisecond"
                      , t = "_duration_second"
                      , i = "_duration_minute"
                      , r = "_duration_hour"
                      , n = "_duration_day"
                      , s = "_duration_week"
                      , a = "_duration_month"
                      , o = "_minute"
                      , l = "_hour"
                      , h = "_day"
                      , u = "_week"
                      , c = "_week"
                      , d = "_year";
                    this._setDefault("negativeBase", 0),
                    this._setDefault("baseUnit", "second"),
                    this._setDefault("durationFormats", {
                        millisecond: {
                            millisecond: this._t(e),
                            second: this._t(e + "_second"),
                            minute: this._t(e + o),
                            hour: this._t(e + l),
                            day: this._t(e + h),
                            week: this._t(e + u),
                            month: this._t(e + c),
                            year: this._t(e + d)
                        },
                        second: {
                            second: this._t(t),
                            minute: this._t(t + o),
                            hour: this._t(t + l),
                            day: this._t(t + h),
                            week: this._t(t + u),
                            month: this._t(t + c),
                            year: this._t(t + d)
                        },
                        minute: {
                            minute: this._t(i),
                            hour: this._t(i + l),
                            day: this._t(i + h),
                            week: this._t(i + u),
                            month: this._t(i + c),
                            year: this._t(i + d)
                        },
                        hour: {
                            hour: this._t(r),
                            day: this._t(r + h),
                            week: this._t(r + u),
                            month: this._t(r + c),
                            year: this._t(r + d)
                        },
                        day: {
                            day: this._t(n),
                            week: this._t(n + u),
                            month: this._t(n + c),
                            year: this._t(n + d)
                        },
                        week: {
                            week: this._t(s),
                            month: this._t(s + c),
                            year: this._t(s + d)
                        },
                        month: {
                            month: this._t(a),
                            year: this._t(a + d)
                        },
                        year: {
                            year: this._t("_duration_year")
                        }
                    }),
                    super._setDefaults()
                }
                _beforeChanged() {
                    super._beforeChanged()
                }
                format(e, t, i) {
                    let r = i || this.get("baseUnit");
                    void 0 !== t && "" !== t || (t = null != this.get("durationFormat") ? this.get("durationFormat") : this.getFormat(o.toNumber(e), void 0, r)),
                    t = a.cleanFormat(t);
                    let n, s = this.parseFormat(t, r), l = Number(e);
                    n = l > this.get("negativeBase") ? s.positive : l < this.get("negativeBase") ? s.negative : s.zero;
                    let h = this.applyFormat(l, n);
                    return "" !== n.color && (h = "[" + n.color + "]" + h + "[/]"),
                    h
                }
                parseFormat(e, t) {
                    let i = t || this.get("baseUnit")
                      , r = {
                        positive: {
                            color: "",
                            template: "",
                            parts: [],
                            source: "",
                            baseUnit: i,
                            parsed: !1,
                            absolute: !1
                        },
                        negative: {
                            color: "",
                            template: "",
                            parts: [],
                            source: "",
                            baseUnit: i,
                            parsed: !1,
                            absolute: !1
                        },
                        zero: {
                            color: "",
                            template: "",
                            parts: [],
                            source: "",
                            baseUnit: i,
                            parsed: !1,
                            absolute: !1
                        }
                    }
                      , a = (e = e.replace("||", o.PLACEHOLDER2)).split("|");
                    return r.positive.source = a[0],
                    void 0 === a[2] ? r.zero = r.positive : r.zero.source = a[2],
                    void 0 === a[1] ? r.negative = r.positive : r.negative.source = a[1],
                    s.each(r, ( (e, t) => {
                        if (t.parsed)
                            return;
                        let i = t.source
                          , r = [];
                        r = t.source.match(/^\[([^\]]*)\]/),
                        r && r.length && "" !== r[0] && (i = t.source.substr(r[0].length),
                        t.color = r[1]);
                        let s = n.V.chunk(i, !0);
                        for (let e = 0; e < s.length; e++) {
                            let i = s[e];
                            if (i.text = i.text.replace(o.PLACEHOLDER2, "|"),
                            "value" === i.type) {
                                i.text.match(/[yYMdDwhHKkmsSn]+a/) && (t.absolute = !0,
                                i.text = i.text.replace(/([yYMdDwhHKkmsSn]+)a/, "$1"));
                                let e = i.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);
                                if (e)
                                    for (let r = 0; r < e.length; r++)
                                        null == e[r] && (e[r] = this._unitAliases[e[r]]),
                                        t.parts.push(e[r]),
                                        i.text = i.text.replace(e[r], o.PLACEHOLDER)
                            }
                            t.template += i.text
                        }
                        t.parsed = !0
                    }
                    )),
                    r
                }
                applyFormat(e, t) {
                    let i = !t.absolute && e < this.get("negativeBase");
                    e = Math.abs(e);
                    let r = this.toTimeStamp(e, t.baseUnit)
                      , n = t.template;
                    for (let e = 0, i = t.parts.length; e < i; e++) {
                        let i = t.parts[e]
                          , s = this._toTimeUnit(i.substr(0, 1))
                          , l = i.length
                          , h = Math.floor(r / this._getUnitValue(s));
                        n = n.replace(o.PLACEHOLDER, a.padString(h, l, "0")),
                        r -= h * this._getUnitValue(s)
                    }
                    return i && (n = "-" + n),
                    n
                }
                toTimeStamp(e, t) {
                    return e * this._getUnitValue(t)
                }
                _toTimeUnit(e) {
                    switch (e) {
                    case "S":
                        return "millisecond";
                    case "s":
                        return "second";
                    case "m":
                        return "minute";
                    case "h":
                        return "hour";
                    case "d":
                        return "day";
                    case "w":
                        return "week";
                    case "M":
                        return "month";
                    case "y":
                        return "year"
                    }
                }
                getFormat(e, t, i) {
                    if (null != this.get("durationFormat"))
                        return this.get("durationFormat");
                    if (i || (i = this.get("baseUnit")),
                    null != t && e != t) {
                        e = Math.abs(e),
                        t = Math.abs(t);
                        let r = this.getValueUnit(Math.max(e, t), i);
                        return this.get("durationFormats")[i][r]
                    }
                    {
                        let t = this.getValueUnit(e, i);
                        return this.get("durationFormats")[i][t]
                    }
                }
                getValueUnit(e, t) {
                    let i;
                    t || (t = this.get("baseUnit"));
                    let r = this.getMilliseconds(e, t);
                    return s.eachContinue(this._getUnitValues(), ( (e, n) => {
                        if (e == t || i) {
                            if (r / n <= 1)
                                return i || (i = e),
                                !1;
                            i = e
                        }
                        return !0
                    }
                    )),
                    i
                }
                getMilliseconds(e, t) {
                    return t || (t = this.get("baseUnit")),
                    e * this._getUnitValue(t)
                }
                _getUnitValue(e) {
                    return this._getUnitValues()[e]
                }
                _getUnitValues() {
                    return {
                        millisecond: 1,
                        second: 1e3,
                        minute: 6e4,
                        hour: 36e5,
                        day: 864e5,
                        week: 6048e5,
                        month: 2592e6,
                        year: 31536e6
                    }
                }
            }
        },
        9395: function(e, t, i) {
            "use strict";
            i.r(t),
            i.d(t, {
                bounce: function() {
                    return g
                },
                circle: function() {
                    return u
                },
                cubic: function() {
                    return a
                },
                elastic: function() {
                    return _
                },
                exp: function() {
                    return l
                },
                inOut: function() {
                    return p
                },
                linear: function() {
                    return n
                },
                out: function() {
                    return d
                },
                pow: function() {
                    return o
                },
                quad: function() {
                    return s
                },
                sine: function() {
                    return h
                },
                yoyo: function() {
                    return c
                }
            });
            var r = i(751);
            function n(e) {
                return e
            }
            function s(e) {
                return e * e
            }
            function a(e) {
                return e * e * e
            }
            function o(e, t) {
                return Math.pow(e, t)
            }
            function l(e) {
                return Math.pow(2, 10 * e - 10)
            }
            function h(e) {
                return 1 - Math.cos(e * r.HALFPI)
            }
            function u(e) {
                return 1 - Math.sqrt(1 - e * e)
            }
            function c(e) {
                return function(t) {
                    return e(t < .5 ? 2 * t : 2 * (1 - t))
                }
            }
            function d(e) {
                return function(t) {
                    return 1 - e(1 - t)
                }
            }
            function p(e) {
                return function(t) {
                    return t <= .5 ? e(2 * t) / 2 : 1 - e(2 * (1 - t)) / 2
                }
            }
            let f = 7.5625;
            function g(e) {
                return 1 - function(e) {
                    return e < .36363636363636365 ? f * e * e : e < .7272727272727273 ? f * (e -= .5454545454545454) * e + .75 : e < .9090909090909091 ? f * (e -= .8181818181818182) * e + .9375 : f * (e -= .9545454545454546) * e + .984375
                }(1 - e)
            }
            let m = .3 / (2 * Math.PI)
              , b = Math.asin(1) * m;
            function _(e) {
                let t = e;
                return 1 * Math.pow(2, 10 * --t) * Math.sin((b - t) / m)
            }
        },
        6331: function(e, t, i) {
            "use strict";
            i.d(t, {
                JH: function() {
                    return b
                },
                Zr: function() {
                    return m
                }
            });
            var r = i(7449)
              , n = i(9770)
              , s = i(6490)
              , a = i(256)
              , o = i(9395);
            class l {
                constructor(e, t) {
                    Object.defineProperty(this, "_entity", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_settings", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_userSettings", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    this._entity = e,
                    this._settings = t,
                    a.each(t, (e => {
                        this._userSettings[e] = !0
                    }
                    ))
                }
                get(e, t) {
                    const i = this._settings[e];
                    return void 0 !== i ? i : t
                }
                setRaw(e, t) {
                    this._settings[e] = t
                }
                set(e, t) {
                    this._userSettings[e] = !0,
                    this.setRaw(e, t)
                }
                remove(e) {
                    delete this._userSettings[e],
                    delete this._settings[e]
                }
                setAll(e) {
                    a.keys(e).forEach((t => {
                        this.set(t, e[t])
                    }
                    ))
                }
                _eachSetting(e) {
                    a.each(this._settings, e)
                }
                apply() {
                    const e = {
                        stateAnimationEasing: !0,
                        stateAnimationDuration: !0
                    }
                      , t = this._entity.states.lookup("default");
                    this._eachSetting(( (i, r) => {
                        e[i] || (e[i] = !0,
                        this !== t && (i in t._settings || (t._settings[i] = this._entity.get(i))),
                        this._entity.set(i, r))
                    }
                    ))
                }
                applyAnimate(e) {
                    null == e && (e = this._settings.stateAnimationDuration),
                    null == e && (e = this.get("stateAnimationDuration", this._entity.get("stateAnimationDuration", 0)));
                    let t = this._settings.stateAnimationEasing;
                    null == t && (t = this.get("stateAnimationEasing", this._entity.get("stateAnimationEasing", o.cubic)));
                    const i = this._entity.states.lookup("default")
                      , r = {
                        stateAnimationEasing: !0,
                        stateAnimationDuration: !0
                    }
                      , n = {};
                    return this._eachSetting(( (s, a) => {
                        if (!r[s]) {
                            r[s] = !0,
                            this != i && (s in i._settings || (i._settings[s] = this._entity.get(s)));
                            const o = this._entity.animate({
                                key: s,
                                to: a,
                                duration: e,
                                easing: t
                            });
                            o && (n[s] = o)
                        }
                    }
                    )),
                    n
                }
            }
            class h {
                constructor(e) {
                    Object.defineProperty(this, "_states", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_entity", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    this._entity = e
                }
                lookup(e) {
                    return this._states[e]
                }
                create(e, t) {
                    const i = this._states[e];
                    if (i)
                        return i.setAll(t),
                        i;
                    {
                        const i = new l(this._entity,t);
                        return this._states[e] = i,
                        i
                    }
                }
                remove(e) {
                    delete this._states[e]
                }
                apply(e) {
                    const t = this._states[e];
                    t && t.apply(),
                    this._entity._applyState(e)
                }
                applyAnimate(e, t) {
                    let i;
                    const r = this._states[e];
                    return r && (i = r.applyAnimate(t)),
                    this._entity._applyStateAnimated(e, t),
                    i
                }
            }
            var u = i(3145)
              , c = i(5071)
              , d = i(3540);
            class p {
                constructor(e) {
                    Object.defineProperty(this, "_entity", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_callbacks", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_disabled", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    this._entity = e
                }
                add(e, t) {
                    let i = this._callbacks[e];
                    return void 0 === i && (i = this._callbacks[e] = []),
                    i.push(t),
                    this._entity._markDirtyKey(e),
                    new r.ku(( () => {
                        c.removeFirst(i, t) && this._entity._markDirtyKey(e)
                    }
                    ))
                }
                remove(e) {
                    const t = this._callbacks[e];
                    void 0 !== t && (delete this._callbacks[e],
                    0 !== t.length && this._entity._markDirtyKey(e))
                }
                enable(e) {
                    this._disabled[e] && (delete this._disabled[e],
                    this._entity._markDirtyKey(e))
                }
                disable(e) {
                    this._disabled[e] || (this._disabled[e] = !0,
                    this._entity._markDirtyKey(e))
                }
                fold(e, t) {
                    if (!this._disabled[e]) {
                        const i = this._callbacks[e];
                        if (void 0 !== i)
                            for (let r = 0, n = i.length; r < n; ++r)
                                t = i[r](t, this._entity, e)
                    }
                    return t
                }
            }
            class f {
                constructor(e, t, i, r, a, o, l) {
                    Object.defineProperty(this, "_animation", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_from", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_to", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_duration", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_easing", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_loops", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_interpolate", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_oldTime", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_time", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 0
                    }),
                    Object.defineProperty(this, "_stopped", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_playing", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !0
                    }),
                    Object.defineProperty(this, "events", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new n.p
                    }),
                    this._animation = e,
                    this._from = t,
                    this._to = i,
                    this._duration = r,
                    this._easing = a,
                    this._loops = o,
                    this._interpolate = (0,
                    s.XG)(t, i),
                    this._oldTime = l
                }
                get to() {
                    return this._to
                }
                get from() {
                    return this._from
                }
                get playing() {
                    return this._playing
                }
                get stopped() {
                    return this._stopped
                }
                stop() {
                    this._stopped || (this._stopped = !0,
                    this._playing = !1,
                    this.events.isEnabled("stopped") && this.events.dispatch("stopped", {
                        type: "stopped",
                        target: this
                    }))
                }
                pause() {
                    this._playing = !1,
                    this._oldTime = null
                }
                play() {
                    this._stopped || this._playing || (this._playing = !0,
                    this._animation._startAnimation())
                }
                get percentage() {
                    return this._time / this._duration
                }
                waitForStop() {
                    return new Promise(( (e, t) => {
                        if (this._stopped)
                            e();
                        else {
                            const t = () => {
                                i.dispose(),
                                e()
                            }
                              , i = this.events.on("stopped", t)
                        }
                    }
                    ))
                }
                _checkEnded() {
                    return !(this._loops > 1 && (--this._loops,
                    1))
                }
                _run(e) {
                    null !== this._oldTime && (this._time += e - this._oldTime,
                    this._time > this._duration && (this._time = this._duration)),
                    this._oldTime = e
                }
                _reset(e) {
                    this._oldTime = e,
                    this._time = 0
                }
                _value(e) {
                    return this._interpolate(this._easing(e), this._from, this._to)
                }
            }
            let g = 0;
            class m {
                constructor(e) {
                    Object.defineProperty(this, "uid", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: ++g
                    }),
                    Object.defineProperty(this, "_settings", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_privateSettings", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_settingEvents", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_privateSettingEvents", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_prevSettings", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_prevPrivateSettings", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_animatingSettings", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_animatingPrivateSettings", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_disposed", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_userProperties", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    this._settings = e
                }
                _checkDirty() {
                    a.keys(this._settings).forEach((e => {
                        this._userProperties[e] = !0,
                        this._markDirtyKey(e)
                    }
                    ))
                }
                resetUserSettings() {
                    this._userProperties = {}
                }
                _runAnimation(e) {
                    if (this.isDisposed())
                        return !1;
                    {
                        let t = !1;
                        return a.each(this._animatingSettings, ( (i, r) => {
                            if (r._stopped)
                                this._stopAnimation(i);
                            else if (r._playing) {
                                r._run(e);
                                const n = r.percentage;
                                n >= 1 ? r._checkEnded() ? this.set(i, r._value(1)) : (t = !0,
                                r._reset(e),
                                this._set(i, r._value(1))) : (t = !0,
                                this._set(i, r._value(n)))
                            }
                        }
                        )),
                        a.each(this._animatingPrivateSettings, ( (i, r) => {
                            if (r._stopped)
                                this._stopAnimationPrivate(i);
                            else if (r._playing) {
                                r._run(e);
                                const n = r.percentage;
                                n >= 1 ? r._checkEnded() ? this.setPrivate(i, r._value(1)) : (t = !0,
                                r._reset(e),
                                this._setPrivate(i, r._value(1))) : (t = !0,
                                this._setPrivate(i, r._value(n)))
                            }
                        }
                        )),
                        t
                    }
                }
                _markDirtyKey(e) {
                    this.markDirty()
                }
                _markDirtyPrivateKey(e) {
                    this.markDirty()
                }
                on(e, t) {
                    let i = this._settingEvents[e];
                    return void 0 === i && (i = this._settingEvents[e] = []),
                    i.push(t),
                    new r.ku(( () => {
                        c.removeFirst(i, t),
                        0 === i.length && delete this._settingEvents[e]
                    }
                    ))
                }
                onPrivate(e, t) {
                    let i = this._privateSettingEvents[e];
                    return void 0 === i && (i = this._privateSettingEvents[e] = []),
                    i.push(t),
                    new r.ku(( () => {
                        c.removeFirst(i, t),
                        0 === i.length && delete this._privateSettingEvents[e]
                    }
                    ))
                }
                getRaw(e, t) {
                    const i = this._settings[e];
                    return void 0 !== i ? i : t
                }
                get(e, t) {
                    return this.getRaw(e, t)
                }
                _sendKeyEvent(e, t) {
                    const i = this._settingEvents[e];
                    void 0 !== i && c.each(i, (i => {
                        i(t, this, e)
                    }
                    ))
                }
                _sendPrivateKeyEvent(e, t) {
                    const i = this._privateSettingEvents[e];
                    void 0 !== i && c.each(i, (i => {
                        i(t, this, e)
                    }
                    ))
                }
                _setRaw(e, t, i) {
                    this._prevSettings[e] = t,
                    this._sendKeyEvent(e, i)
                }
                setRaw(e, t) {
                    const i = this._settings[e];
                    this._settings[e] = t,
                    i !== t && this._setRaw(e, i, t)
                }
                _set(e, t) {
                    const i = this._settings[e];
                    this._settings[e] = t,
                    i !== t && (this._setRaw(e, i, t),
                    this._markDirtyKey(e))
                }
                _stopAnimation(e) {
                    const t = this._animatingSettings[e];
                    t && (delete this._animatingSettings[e],
                    t.stop())
                }
                set(e, t) {
                    return this._set(e, t),
                    this._stopAnimation(e),
                    t
                }
                remove(e) {
                    e in this._settings && (this._prevSettings[e] = this._settings[e],
                    delete this._settings[e],
                    this._sendKeyEvent(e, void 0),
                    this._markDirtyKey(e)),
                    this._stopAnimation(e)
                }
                removeAll() {
                    c.each(a.keys(this._settings), (e => {
                        this.remove(e)
                    }
                    ))
                }
                getPrivate(e, t) {
                    const i = this._privateSettings[e];
                    return void 0 !== i ? i : t
                }
                _setPrivateRaw(e, t, i) {
                    this._prevPrivateSettings[e] = t,
                    this._sendPrivateKeyEvent(e, i)
                }
                setPrivateRaw(e, t) {
                    const i = this._privateSettings[e];
                    this._privateSettings[e] = t,
                    i !== t && this._setPrivateRaw(e, i, t)
                }
                _setPrivate(e, t) {
                    const i = this._privateSettings[e];
                    this._privateSettings[e] = t,
                    i !== t && (this._setPrivateRaw(e, i, t),
                    this._markDirtyPrivateKey(e))
                }
                _stopAnimationPrivate(e) {
                    const t = this._animatingPrivateSettings[e];
                    t && (t.stop(),
                    delete this._animatingPrivateSettings[e])
                }
                setPrivate(e, t) {
                    return this._setPrivate(e, t),
                    this._stopAnimationPrivate(e),
                    t
                }
                removePrivate(e) {
                    e in this._privateSettings && (this._prevPrivateSettings[e] = this._privateSettings[e],
                    delete this._privateSettings[e],
                    this._markDirtyPrivateKey(e)),
                    this._stopAnimationPrivate(e)
                }
                setAll(e) {
                    a.each(e, ( (e, t) => {
                        this.set(e, t)
                    }
                    ))
                }
                animate(e) {
                    const t = e.key
                      , i = e.to
                      , r = e.duration || 0
                      , n = e.loops || 1
                      , s = void 0 === e.from ? this.get(t) : e.from
                      , a = void 0 === e.easing ? o.linear : e.easing;
                    if (0 === r)
                        this.set(t, i);
                    else {
                        if (void 0 !== s && s !== i) {
                            this.set(t, s);
                            const e = this._animatingSettings[t] = new f(this,s,i,r,a,n,this._animationTime());
                            return this._startAnimation(),
                            e
                        }
                        this.set(t, i)
                    }
                    const l = new f(this,s,i,r,a,n,null);
                    return l.stop(),
                    l
                }
                animatePrivate(e) {
                    const t = e.key
                      , i = e.to
                      , r = e.duration || 0
                      , n = e.loops || 1
                      , s = void 0 === e.from ? this.getPrivate(t) : e.from
                      , a = void 0 === e.easing ? o.linear : e.easing;
                    if (0 === r)
                        this.setPrivate(t, i);
                    else {
                        if (void 0 !== s && s !== i) {
                            this.setPrivate(t, s);
                            const e = this._animatingPrivateSettings[t] = new f(this,s,i,r,a,n,this._animationTime());
                            return this._startAnimation(),
                            e
                        }
                        this.setPrivate(t, i)
                    }
                    const l = new f(this,s,i,r,a,n,null);
                    return l.stop(),
                    l
                }
                _dispose() {}
                isDisposed() {
                    return this._disposed
                }
                dispose() {
                    this._disposed || (this._disposed = !0,
                    this._dispose())
                }
            }
            class b extends m {
                constructor(e, t, i, r=[]) {
                    if (super(t),
                    Object.defineProperty(this, "_root", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_user_id", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "states", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new h(this)
                    }),
                    Object.defineProperty(this, "adapters", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new p(this)
                    }),
                    Object.defineProperty(this, "events", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this._createEvents()
                    }),
                    Object.defineProperty(this, "_userPrivateProperties", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_dirty", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_dirtyPrivate", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_template", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_templates", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    }),
                    Object.defineProperty(this, "_internalTemplates", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_defaultThemes", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    }),
                    Object.defineProperty(this, "_templateDisposers", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    }),
                    Object.defineProperty(this, "_disposers", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    }),
                    Object.defineProperty(this, "_runSetup", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !0
                    }),
                    Object.defineProperty(this, "_disposerProperties", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    !i)
                        throw new Error("You cannot use `new Class()`, instead use `Class.new()`");
                    this._root = e,
                    this._internalTemplates = r,
                    t.id && this._registerId(t.id)
                }
                static new(e, t, i) {
                    const r = new this(e,t,!0);
                    return r._template = i,
                    r._afterNew(),
                    r
                }
                static _new(e, t, i=[]) {
                    const r = new this(e,t,!0,i);
                    return r._afterNew(),
                    r
                }
                _afterNew() {
                    this._checkDirty();
                    let e = !1;
                    const t = this._template;
                    t && (e = !0,
                    t._setObjectTemplate(this)),
                    c.each(this._internalTemplates, (t => {
                        e = !0,
                        t._setObjectTemplate(this)
                    }
                    )),
                    e && this._applyTemplates(!1),
                    this.states.create("default", {}),
                    this._setDefaults()
                }
                _afterNewApplyThemes() {
                    this._checkDirty();
                    const e = this._template;
                    e && e._setObjectTemplate(this),
                    c.each(this._internalTemplates, (e => {
                        e._setObjectTemplate(this)
                    }
                    )),
                    this.states.create("default", {}),
                    this._setDefaults(),
                    this._applyThemes()
                }
                _createEvents() {
                    return new n.p
                }
                get classNames() {
                    return this.constructor.classNames
                }
                get className() {
                    return this.constructor.className
                }
                _setDefaults() {}
                _setDefault(e, t) {
                    e in this._settings || super.set(e, t)
                }
                _setRawDefault(e, t) {
                    e in this._settings || super.setRaw(e, t)
                }
                _clearDirty() {
                    a.keys(this._dirty).forEach((e => {
                        this._dirty[e] = !1
                    }
                    )),
                    a.keys(this._dirtyPrivate).forEach((e => {
                        this._dirtyPrivate[e] = !1
                    }
                    ))
                }
                isDirty(e) {
                    return !!this._dirty[e]
                }
                isPrivateDirty(e) {
                    return !!this._dirtyPrivate[e]
                }
                _markDirtyKey(e) {
                    this._dirty[e] = !0,
                    super._markDirtyKey(e)
                }
                _markDirtyPrivateKey(e) {
                    this._dirtyPrivate[e] = !0,
                    super._markDirtyKey(e)
                }
                isType(e) {
                    return -1 !== this.classNames.indexOf(e)
                }
                _pushPropertyDisposer(e, t) {
                    let i = this._disposerProperties[e];
                    return void 0 === i && (i = this._disposerProperties[e] = []),
                    i.push(t),
                    t
                }
                _disposeProperty(e) {
                    const t = this._disposerProperties[e];
                    void 0 !== t && (c.each(t, (e => {
                        e.dispose()
                    }
                    )),
                    delete this._disposerProperties[e])
                }
                set template(e) {
                    const t = this._template;
                    t !== e && (this._template = e,
                    t && t._removeObjectTemplate(this),
                    e && e._setObjectTemplate(this),
                    this._applyTemplates())
                }
                get template() {
                    return this._template
                }
                markDirty() {
                    this._root._addDirtyEntity(this)
                }
                _startAnimation() {
                    this._root._addAnimation(this)
                }
                _animationTime() {
                    return this._root.animationTime
                }
                _applyState(e) {}
                _applyStateAnimated(e, t) {}
                get(e, t) {
                    const i = this.adapters.fold(e, this._settings[e]);
                    return void 0 !== i ? i : t
                }
                isUserSetting(e) {
                    return this._userProperties[e] || !1
                }
                set(e, t) {
                    return this._userProperties[e] = !0,
                    super.set(e, t)
                }
                setRaw(e, t) {
                    this._userProperties[e] = !0,
                    super.setRaw(e, t)
                }
                _setSoft(e, t) {
                    return this._userProperties[e] ? t : super.set(e, t)
                }
                remove(e) {
                    delete this._userProperties[e],
                    this._removeTemplateProperty(e)
                }
                setPrivate(e, t) {
                    return this._userPrivateProperties[e] = !0,
                    super.setPrivate(e, t)
                }
                setPrivateRaw(e, t) {
                    this._userPrivateProperties[e] = !0,
                    super.setPrivateRaw(e, t)
                }
                removePrivate(e) {
                    delete this._userPrivateProperties[e],
                    this._removeTemplatePrivateProperty(e)
                }
                _setTemplateProperty(e, t, i) {
                    this._userProperties[t] || e === this._findTemplateByKey(t) && super.set(t, i)
                }
                _setTemplatePrivateProperty(e, t, i) {
                    this._userPrivateProperties[t] || e === this._findTemplateByPrivateKey(t) && super.setPrivate(t, i)
                }
                _removeTemplateProperty(e) {
                    if (!this._userProperties[e]) {
                        const t = this._findTemplateByKey(e);
                        t ? super.set(e, t._settings[e]) : super.remove(e)
                    }
                }
                _removeTemplatePrivateProperty(e) {
                    if (!this._userPrivateProperties[e]) {
                        const t = this._findTemplateByPrivateKey(e);
                        t ? super.setPrivate(e, t._privateSettings[e]) : super.removePrivate(e)
                    }
                }
                _walkParents(e) {
                    e(this._root._rootContainer),
                    e(this)
                }
                _applyStateByKey(e) {
                    const t = this.states.create(e, {})
                      , i = {};
                    this._eachTemplate((r => {
                        const n = r.states.lookup(e);
                        n && n._apply(t, i)
                    }
                    )),
                    a.each(t._settings, (e => {
                        i[e] || t._userSettings[e] || t.remove(e)
                    }
                    ))
                }
                _applyTemplate(e, t) {
                    this._templateDisposers.push(e._apply(this, t)),
                    a.each(e._settings, ( (e, i) => {
                        t.settings[e] || this._userProperties[e] || (t.settings[e] = !0,
                        super.set(e, i))
                    }
                    )),
                    a.each(e._privateSettings, ( (e, i) => {
                        t.privateSettings[e] || this._userPrivateProperties[e] || (t.privateSettings[e] = !0,
                        super.setPrivate(e, i))
                    }
                    )),
                    this._runSetup && e.setup && (this._runSetup = !1,
                    e.setup(this))
                }
                _findStaticTemplate(e) {
                    if (this._template && e(this._template))
                        return this._template
                }
                _eachTemplate(e) {
                    this._findStaticTemplate((t => (e(t),
                    !1))),
                    c.eachReverse(this._internalTemplates, e),
                    c.each(this._templates, e)
                }
                _applyTemplates(e=!0) {
                    e && this._disposeTemplates();
                    const t = {
                        settings: {},
                        privateSettings: {},
                        states: {}
                    };
                    this._eachTemplate((e => {
                        this._applyTemplate(e, t)
                    }
                    )),
                    e && (a.each(this._settings, (e => {
                        this._userProperties[e] || t.settings[e] || super.remove(e)
                    }
                    )),
                    a.each(this._privateSettings, (e => {
                        this._userPrivateProperties[e] || t.privateSettings[e] || super.removePrivate(e)
                    }
                    )))
                }
                _findTemplate(e) {
                    const t = this._findStaticTemplate(e);
                    if (void 0 === t) {
                        const t = c.findReverse(this._internalTemplates, e);
                        return void 0 === t ? c.find(this._templates, e) : t
                    }
                    return t
                }
                _findTemplateByKey(e) {
                    return this._findTemplate((t => e in t._settings))
                }
                _findTemplateByPrivateKey(e) {
                    return this._findTemplate((t => e in t._privateSettings))
                }
                _disposeTemplates() {
                    c.each(this._templateDisposers, (e => {
                        e.dispose()
                    }
                    )),
                    this._templateDisposers.length = 0
                }
                _removeTemplates() {
                    c.each(this._templates, (e => {
                        e._removeObjectTemplate(this)
                    }
                    )),
                    this._templates.length = 0
                }
                _applyThemes() {
                    let e = !1;
                    const t = [];
                    let i = [];
                    const r = new Set
                      , n = this.get("themeTagsSelf");
                    return n && c.each(n, (e => {
                        r.add(e)
                    }
                    )),
                    this._walkParents((n => {
                        n === this._root._rootContainer && (e = !0),
                        n._defaultThemes.length > 0 && t.push(n._defaultThemes);
                        const s = n.get("themes");
                        s && i.push(s);
                        const a = n.get("themeTags");
                        a && c.each(a, (e => {
                            r.add(e)
                        }
                        ))
                    }
                    )),
                    i = t.concat(i),
                    this._removeTemplates(),
                    e && c.eachReverse(this.classNames, (e => {
                        const t = [];
                        c.each(i, (i => {
                            c.each(i, (i => {
                                const n = i._lookupRules(e);
                                n && c.eachReverse(n, (e => {
                                    if (e.tags.every((e => r.has(e)))) {
                                        const i = c.getFirstSortedIndex(t, (t => {
                                            const i = d.qu(e.tags.length, t.tags.length);
                                            return 0 === i ? d.wq(e.tags, t.tags, d.qu) : i
                                        }
                                        ));
                                        t.splice(i.index, 0, e)
                                    }
                                }
                                ))
                            }
                            ))
                        }
                        )),
                        c.each(t, (e => {
                            this._templates.push(e.template),
                            e.template._setObjectTemplate(this)
                        }
                        ))
                    }
                    )),
                    this._applyTemplates(),
                    e && (this._runSetup = !1),
                    e
                }
                _changed() {}
                _beforeChanged() {
                    if (this.isDirty("id")) {
                        const e = this.get("id");
                        e && this._registerId(e);
                        const t = this._prevSettings.id;
                        t && delete u.i_.entitiesById[t]
                    }
                }
                _registerId(e) {
                    if (u.i_.entitiesById[e] && u.i_.entitiesById[e] !== this)
                        throw new Error('An entity with id "' + e + '" already exists.');
                    u.i_.entitiesById[e] = this
                }
                _afterChanged() {}
                addDisposer(e) {
                    return this._disposers.push(e),
                    e
                }
                _dispose() {
                    super._dispose();
                    const e = this._template;
                    e && e._removeObjectTemplate(this),
                    c.each(this._internalTemplates, (e => {
                        e._removeObjectTemplate(this)
                    }
                    )),
                    this._removeTemplates(),
                    this._disposeTemplates(),
                    this.events.dispose(),
                    this._disposers.forEach((e => {
                        e.dispose()
                    }
                    )),
                    a.each(this._disposerProperties, ( (e, t) => {
                        c.each(t, (e => {
                            e.dispose()
                        }
                        ))
                    }
                    ));
                    const t = this.get("id");
                    t && delete u.i_.entitiesById[t]
                }
                setTimeout(e, t) {
                    const i = setTimeout(( () => {
                        this.removeDispose(n),
                        e()
                    }
                    ), t)
                      , n = new r.ku(( () => {
                        clearTimeout(i)
                    }
                    ));
                    return this._disposers.push(n),
                    n
                }
                removeDispose(e) {
                    if (!this.isDisposed()) {
                        let t = c.indexOf(this._disposers, e);
                        t > -1 && this._disposers.splice(t, 1)
                    }
                    e.dispose()
                }
                hasTag(e) {
                    return -1 !== c.indexOf(this.get("themeTags", []), e)
                }
                addTag(e) {
                    if (!this.hasTag(e)) {
                        const t = this.get("themeTags", []);
                        t.push(e),
                        this.set("themeTags", t)
                    }
                }
                removeTag(e) {
                    if (this.hasTag(e)) {
                        const t = this.get("themeTags", []);
                        c.remove(t, e),
                        this.set("themeTags", t)
                    }
                }
                _t(e, t, ...i) {
                    return this._root.language.translate(e, t, ...i)
                }
                get root() {
                    return this._root
                }
            }
            Object.defineProperty(b, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Entity"
            }),
            Object.defineProperty(b, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: ["Entity"]
            })
        },
        9770: function(e, t, i) {
            "use strict";
            i.d(t, {
                p: function() {
                    return a
                }
            });
            var r = i(7449)
              , n = i(5071)
              , s = i(5040);
            class a {
                constructor() {
                    Object.defineProperty(this, "_listeners", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_killed", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_disabled", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_iterating", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_enabled", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_disposed", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    this._listeners = [],
                    this._killed = [],
                    this._disabled = {},
                    this._iterating = 0,
                    this._enabled = !0,
                    this._disposed = !1
                }
                isDisposed() {
                    return this._disposed
                }
                dispose() {
                    if (!this._disposed) {
                        this._disposed = !0;
                        const e = this._listeners;
                        this._iterating = 1,
                        this._listeners = null,
                        this._disabled = null;
                        try {
                            n.each(e, (e => {
                                e.disposer.dispose()
                            }
                            ))
                        } finally {
                            this._killed = null,
                            this._iterating = null
                        }
                    }
                }
                hasListeners() {
                    return 0 !== this._listeners.length
                }
                hasListenersByType(e) {
                    return n.any(this._listeners, (t => (null === t.type || t.type === e) && !t.killed))
                }
                enable() {
                    this._enabled = !0
                }
                disable() {
                    this._enabled = !1
                }
                enableType(e) {
                    delete this._disabled[e]
                }
                disableType(e, t=1 / 0) {
                    this._disabled[e] = t
                }
                _removeListener(e) {
                    if (0 === this._iterating) {
                        const t = this._listeners.indexOf(e);
                        if (-1 === t)
                            throw new Error("Invalid state: could not remove listener");
                        this._listeners.splice(t, 1)
                    } else
                        this._killed.push(e)
                }
                _removeExistingListener(e, t, i, r) {
                    if (this._disposed)
                        throw new Error("EventDispatcher is disposed");
                    this._eachListener((n => {
                        n.once !== e || n.type !== t || void 0 !== i && n.callback !== i || n.context !== r || n.disposer.dispose()
                    }
                    ))
                }
                isEnabled(e) {
                    if (this._disposed)
                        throw new Error("EventDispatcher is disposed");
                    return this._enabled && this._listeners.length > 0 && this.hasListenersByType(e) && void 0 === this._disabled[e]
                }
                removeType(e) {
                    if (this._disposed)
                        throw new Error("EventDispatcher is disposed");
                    this._eachListener((t => {
                        t.type === e && t.disposer.dispose()
                    }
                    ))
                }
                has(e, t, i) {
                    return -1 !== n.findIndex(this._listeners, (r => !0 !== r.once && r.type === e && (void 0 === t || r.callback === t) && r.context === i))
                }
                _shouldDispatch(e) {
                    if (this._disposed)
                        throw new Error("EventDispatcher is disposed");
                    const t = this._disabled[e];
                    return s.isNumber(t) ? (t <= 1 ? delete this._disabled[e] : --this._disabled[e],
                    !1) : this._enabled
                }
                _eachListener(e) {
                    ++this._iterating;
                    try {
                        n.each(this._listeners, e)
                    } finally {
                        --this._iterating,
                        0 === this._iterating && 0 !== this._killed.length && (n.each(this._killed, (e => {
                            this._removeListener(e)
                        }
                        )),
                        this._killed.length = 0)
                    }
                }
                dispatch(e, t) {
                    this._shouldDispatch(e) && this._eachListener((i => {
                        i.killed || null !== i.type && i.type !== e || i.dispatch(e, t)
                    }
                    ))
                }
                _on(e, t, i, n, s, a) {
                    if (this._disposed)
                        throw new Error("EventDispatcher is disposed");
                    this._removeExistingListener(e, t, i, n);
                    const o = {
                        type: t,
                        callback: i,
                        context: n,
                        shouldClone: s,
                        dispatch: a,
                        killed: !1,
                        once: e,
                        disposer: new r.ku(( () => {
                            o.killed = !0,
                            this._removeListener(o)
                        }
                        ))
                    };
                    return this._listeners.push(o),
                    o
                }
                onAll(e, t, i=!0) {
                    return this._on(!1, null, e, t, i, ( (i, r) => e.call(t, r))).disposer
                }
                on(e, t, i, r=!0) {
                    return this._on(!1, e, t, i, r, ( (e, r) => t.call(i, r))).disposer
                }
                once(e, t, i, r=!0) {
                    const n = this._on(!0, e, t, i, r, ( (e, r) => {
                        n.disposer.dispose(),
                        t.call(i, r)
                    }
                    ));
                    return n.disposer
                }
                off(e, t, i) {
                    this._removeExistingListener(!1, e, t, i)
                }
                copyFrom(e) {
                    if (this._disposed)
                        throw new Error("EventDispatcher is disposed");
                    if (e === this)
                        throw new Error("Cannot copyFrom the same TargetedEventDispatcher");
                    const t = [];
                    return n.each(e._listeners, (e => {
                        !e.killed && e.shouldClone && (null === e.type ? t.push(this.onAll(e.callback, e.context)) : e.once ? t.push(this.once(e.type, e.callback, e.context)) : t.push(this.on(e.type, e.callback, e.context)))
                    }
                    )),
                    new r.FV(t)
                }
            }
        },
        9821: function(e, t, i) {
            "use strict";
            i.d(t, {
                v: function() {
                    return n
                }
            });
            var r = i(6331);
            class n extends r.JH {
            }
            Object.defineProperty(n, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "InterfaceColors"
            }),
            Object.defineProperty(n, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.JH.classNames.concat([n.className])
            })
        },
        7144: function(e, t, i) {
            "use strict";
            i.d(t, {
                aV: function() {
                    return a
                },
                dn: function() {
                    return o
                },
                o: function() {
                    return l
                }
            });
            var r = i(9770)
              , n = i(5071);
            function s(e, t) {
                if (!(e >= 0 && e < t))
                    throw new Error("Index out of bounds: " + e)
            }
            class a {
                constructor(e=[]) {
                    Object.defineProperty(this, "_values", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "events", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new r.p
                    }),
                    this._values = e
                }
                get values() {
                    return this._values
                }
                contains(e) {
                    return -1 !== this._values.indexOf(e)
                }
                removeValue(e) {
                    let t = 0
                      , i = this._values.length;
                    for (; t < i; )
                        this._values[t] === e ? (this.removeIndex(t),
                        --i) : ++t
                }
                indexOf(e) {
                    return n.indexOf(this._values, e)
                }
                get length() {
                    return this._values.length
                }
                hasIndex(e) {
                    return e >= 0 && e < this._values.length
                }
                getIndex(e) {
                    return this._values[e]
                }
                _onPush(e) {
                    this.events.isEnabled("push") && this.events.dispatch("push", {
                        type: "push",
                        target: this,
                        newValue: e
                    })
                }
                _onInsertIndex(e, t) {
                    this.events.isEnabled("insertIndex") && this.events.dispatch("insertIndex", {
                        type: "insertIndex",
                        target: this,
                        index: e,
                        newValue: t
                    })
                }
                _onSetIndex(e, t, i) {
                    this.events.isEnabled("setIndex") && this.events.dispatch("setIndex", {
                        type: "setIndex",
                        target: this,
                        index: e,
                        oldValue: t,
                        newValue: i
                    })
                }
                _onRemoveIndex(e, t) {
                    this.events.isEnabled("removeIndex") && this.events.dispatch("removeIndex", {
                        type: "removeIndex",
                        target: this,
                        index: e,
                        oldValue: t
                    })
                }
                _onMoveIndex(e, t, i) {
                    this.events.isEnabled("moveIndex") && this.events.dispatch("moveIndex", {
                        type: "moveIndex",
                        target: this,
                        oldIndex: e,
                        newIndex: t,
                        value: i
                    })
                }
                _onClear(e) {
                    this.events.isEnabled("clear") && this.events.dispatch("clear", {
                        type: "clear",
                        target: this,
                        oldValues: e
                    })
                }
                setIndex(e, t) {
                    s(e, this._values.length);
                    const i = this._values[e];
                    return i !== t && (this._values[e] = t,
                    this._onSetIndex(e, i, t)),
                    i
                }
                insertIndex(e, t) {
                    return s(e, this._values.length + 1),
                    n.insertIndex(this._values, e, t),
                    this._onInsertIndex(e, t),
                    t
                }
                swap(e, t) {
                    const i = this._values.length;
                    if (s(e, i),
                    s(t, i),
                    e !== t) {
                        const i = this._values[e]
                          , r = this._values[t];
                        this._values[e] = r,
                        this._onSetIndex(e, i, r),
                        this._values[t] = i,
                        this._onSetIndex(t, r, i)
                    }
                }
                removeIndex(e) {
                    s(e, this._values.length);
                    const t = this._values[e];
                    return n.removeIndex(this._values, e),
                    this._onRemoveIndex(e, t),
                    t
                }
                moveValue(e, t) {
                    let i = this.indexOf(e);
                    if (-1 !== i)
                        if (n.removeIndex(this._values, i),
                        null == t) {
                            const t = this._values.length;
                            this._values.push(e),
                            this._onMoveIndex(i, t, e)
                        } else
                            n.insertIndex(this._values, t, e),
                            this._onMoveIndex(i, t, e);
                    else
                        null == t ? (this._values.push(e),
                        this._onPush(e)) : (n.insertIndex(this._values, t, e),
                        this._onInsertIndex(t, e));
                    return e
                }
                push(e) {
                    return this._values.push(e),
                    this._onPush(e),
                    e
                }
                unshift(e) {
                    return this.insertIndex(0, e),
                    e
                }
                pushAll(e) {
                    n.each(e, (e => {
                        this.push(e)
                    }
                    ))
                }
                copyFrom(e) {
                    this.pushAll(e._values)
                }
                pop() {
                    return this._values.length - 1 < 0 ? void 0 : this.removeIndex(this._values.length - 1)
                }
                shift() {
                    return this._values.length ? this.removeIndex(0) : void 0
                }
                setAll(e) {
                    const t = this._values;
                    this._values = [],
                    this._onClear(t),
                    n.each(e, (e => {
                        this._values.push(e),
                        this._onPush(e)
                    }
                    ))
                }
                clear() {
                    this.setAll([])
                }
                *[Symbol.iterator]() {
                    const e = this._values.length;
                    for (let t = 0; t < e; ++t)
                        yield this._values[t]
                }
                each(e) {
                    n.each(this._values, e)
                }
                eachReverse(e) {
                    n.eachReverse(this._values, e)
                }
            }
            class o extends a {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "autoDispose", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !0
                    }),
                    Object.defineProperty(this, "_disposed", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    })
                }
                _onSetIndex(e, t, i) {
                    this.autoDispose && t.dispose(),
                    super._onSetIndex(e, t, i)
                }
                _onRemoveIndex(e, t) {
                    this.autoDispose && t.dispose(),
                    super._onRemoveIndex(e, t)
                }
                _onClear(e) {
                    this.autoDispose && n.each(e, (e => {
                        e.dispose()
                    }
                    )),
                    super._onClear(e)
                }
                isDisposed() {
                    return this._disposed
                }
                dispose() {
                    this._disposed || (this._disposed = !0,
                    this.autoDispose && n.each(this._values, (e => {
                        e.dispose()
                    }
                    )))
                }
            }
            class l extends o {
                constructor(e, t) {
                    super(),
                    Object.defineProperty(this, "template", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "make", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    this.template = e,
                    this.make = t
                }
            }
        },
        751: function(e, t, i) {
            "use strict";
            i.r(t),
            i.d(t, {
                DEGREES: function() {
                    return o
                },
                HALFPI: function() {
                    return s
                },
                PI: function() {
                    return n
                },
                RADIANS: function() {
                    return a
                },
                boundsOverlap: function() {
                    return k
                },
                ceil: function() {
                    return h
                },
                closest: function() {
                    return D
                },
                cos: function() {
                    return g
                },
                fitAngleToRange: function() {
                    return y
                },
                fitToRange: function() {
                    return d
                },
                getAngle: function() {
                    return x
                },
                getArcBounds: function() {
                    return b
                },
                getArcPoint: function() {
                    return _
                },
                getCubicControlPointA: function() {
                    return u
                },
                getCubicControlPointB: function() {
                    return c
                },
                getPointOnLine: function() {
                    return P
                },
                getPointOnQuadraticCurve: function() {
                    return O
                },
                inBounds: function() {
                    return w
                },
                mergeBounds: function() {
                    return v
                },
                normalizeAngle: function() {
                    return m
                },
                round: function() {
                    return l
                },
                sin: function() {
                    return p
                },
                tan: function() {
                    return f
                }
            });
            var r = i(5040);
            const n = Math.PI
              , s = n / 2
              , a = n / 180
              , o = 180 / n;
            function l(e, t, i) {
                if (!(0,
                r.isNumber)(t) || t <= 0) {
                    let t = Math.round(e);
                    return i && t - e == .5 && t--,
                    t
                }
                {
                    let i = Math.pow(10, t);
                    return Math.round(e * i) / i
                }
            }
            function h(e, t) {
                if (!(0,
                r.isNumber)(t) || t <= 0)
                    return Math.ceil(e);
                {
                    let i = Math.pow(10, t);
                    return Math.ceil(e * i) / i
                }
            }
            function u(e, t, i, r, n) {
                return {
                    x: (-e.x + t.x / r + i.x) * r,
                    y: (-e.y + t.y / n + i.y) * n
                }
            }
            function c(e, t, i, r, n) {
                return {
                    x: (e.x + t.x / r - i.x) * r,
                    y: (e.y + t.y / n - i.y) * n
                }
            }
            function d(e, t, i) {
                return Math.min(Math.max(e, t), i)
            }
            function p(e) {
                return Math.sin(a * e)
            }
            function f(e) {
                return Math.tan(a * e)
            }
            function g(e) {
                return Math.cos(a * e)
            }
            function m(e) {
                return (e %= 360) < 0 && (e += 360),
                e
            }
            function b(e, t, i, r, n) {
                let s = Number.MAX_VALUE
                  , a = Number.MAX_VALUE
                  , o = -Number.MAX_VALUE
                  , l = -Number.MAX_VALUE
                  , h = [];
                h.push(_(n, i)),
                h.push(_(n, r));
                let u = Math.min(90 * Math.floor(i / 90), 90 * Math.floor(r / 90))
                  , c = Math.max(90 * Math.ceil(i / 90), 90 * Math.ceil(r / 90));
                for (let e = u; e <= c; e += 90)
                    e >= i && e <= r && h.push(_(n, e));
                for (let e = 0; e < h.length; e++) {
                    let t = h[e];
                    t.x < s && (s = t.x),
                    t.y < a && (a = t.y),
                    t.x > o && (o = t.x),
                    t.y > l && (l = t.y)
                }
                return {
                    left: e + s,
                    top: t + a,
                    right: e + o,
                    bottom: t + l
                }
            }
            function _(e, t) {
                return {
                    x: e * g(t),
                    y: e * p(t)
                }
            }
            function v(e) {
                const t = e.length;
                if (t > 0) {
                    let i = e[0]
                      , r = i.left
                      , n = i.top
                      , s = i.right
                      , a = i.bottom;
                    if (t > 1)
                        for (let o = 1; o < t; o++)
                            i = e[o],
                            r = Math.min(i.left, r),
                            s = Math.max(i.right, s),
                            n = Math.min(i.top, n),
                            a = Math.max(i.bottom, a);
                    return {
                        left: r,
                        right: s,
                        top: n,
                        bottom: a
                    }
                }
                return {
                    left: 0,
                    right: 0,
                    top: 0,
                    bottom: 0
                }
            }
            function y(e, t, i) {
                if (t > i) {
                    let e = t;
                    t = i,
                    i = e
                }
                e = m(e);
                let r = (t - m(t)) / 360;
                return e < t && (e += 360 * (r + 1)),
                e > i && (e - 360 > t ? e -= 360 : e = e < t + (i - t) / 2 + 180 ? i : t),
                e < t && (e = e > t + (i - t) / 2 - 180 ? t : i),
                e
            }
            function w(e, t) {
                return e.x >= t.left && e.y >= t.top && e.x <= t.right && e.y <= t.bottom
            }
            function x(e, t) {
                t || (t = {
                    x: 2 * e.x,
                    y: 2 * e.y
                });
                let i = t.x - e.x
                  , r = t.y - e.y
                  , n = Math.atan2(r, i) * o;
                return n < 0 && (n += 360),
                m(n)
            }
            function O(e, t, i, r) {
                return {
                    x: (1 - r) * (1 - r) * e.x + 2 * (1 - r) * r * i.x + r * r * t.x,
                    y: (1 - r) * (1 - r) * e.y + 2 * (1 - r) * r * i.y + r * r * t.y
                }
            }
            function P(e, t, i) {
                return {
                    x: e.x + (t.x - e.x) * i,
                    y: e.y + (t.y - e.y) * i
                }
            }
            function D(e, t) {
                return e.reduce((function(e, i) {
                    return Math.abs(i - t) < Math.abs(e - t) ? i : e
                }
                ))
            }
            function k(e, t) {
                return !(e.bottom < t.top || t.bottom < e.top || e.right < t.left || t.right < e.left)
            }
        },
        8219: function(e, t, i) {
            "use strict";
            i.d(t, {
                u: function() {
                    return o
                }
            });
            var r = i(6331)
              , n = i(7652)
              , s = i(7449);
            let a;
            class o extends r.JH {
                _afterNew() {
                    super._afterNewApplyThemes(),
                    this._setRawDefault("deactivateRoot", !0),
                    function(e, t, i) {
                        const r = t.interfaceColors
                          , o = r.get("secondaryButton").toCSS()
                          , l = r.get("text").toCSS()
                          , h = r.get("alternativeBackground").toCSS(.45);
                        if (!a) {
                            const t = new s.FV([new n.StyleRule(e,".am5-modal",{
                                width: "100%",
                                height: "100%",
                                position: "absolute",
                                "z-index": "100000",
                                top: "0",
                                left: "0"
                            }), new n.StyleRule(e,".am5-modal-curtain",{
                                top: "0",
                                left: "0",
                                width: "100%",
                                height: "100%",
                                position: "absolute",
                                background: r.get("background").toCSS(.5),
                                "z-index": "100"
                            }), new n.StyleRule(e,".am5-modal-wrapper",{
                                top: "0",
                                left: "0",
                                width: "100%",
                                height: "100%",
                                position: "absolute",
                                "text-align": "center",
                                "white-space": "nowrap",
                                background: r.get("background").toCSS(.5),
                                "z-index": "101"
                            }), new n.StyleRule(e,".am5-modal-wrapper:before",{
                                content: "''",
                                display: "inline-block",
                                height: "100%",
                                "vertical-align": "middle",
                                "margin-right": "-0.25em"
                            }), new n.StyleRule(e,".am5-modal-content",{
                                display: "inline-block",
                                padding: "1.2em",
                                "vertical-align": "middle",
                                "text-align": "left",
                                "white-space": "normal",
                                background: r.get("background").toCSS(),
                                "border-radius": "4px",
                                "-webkit-box-shadow": "0px 0px 36px 0px " + h,
                                "box-shadow": "0px 0px 36px 0px " + h,
                                color: l
                            }), new n.StyleRule(e,".am5-modal-content h1",{
                                "font-size": "1em",
                                margin: "0 0 0.5em 0"
                            }), new n.StyleRule(e,".am5-modal-table",{
                                display: "table",
                                margin: "1em 0"
                            }), new n.StyleRule(e,".am5-modal-table-row",{
                                display: "table-row"
                            }), new n.StyleRule(e,".am5-modal-table-heading",{
                                display: "table-heading",
                                padding: "3px 10px 3px 0"
                            }), new n.StyleRule(e,".am5-modal-table-cell",{
                                display: "table-cell",
                                padding: "3px 0 3px 0"
                            }), new n.StyleRule(e,".am5-modal-table-cell > *",{
                                "vertical-align": "middle"
                            }), new n.StyleRule(e,".am5-modal-content input[type=text], .am5-modal-content input[type=number], .am5-modal-content select",{
                                border: "1px solid " + o,
                                "border-radius": "4px",
                                padding: "3px 5px",
                                margin: "2px"
                            }), new n.StyleRule(e,".am5-modal-input-narrow",{
                                width: "50px"
                            }), new n.StyleRule(e,".am5-modal-button",{
                                "font-weight": "400",
                                color: r.get("secondaryButtonText").toCSS(),
                                "line-height": "1.5",
                                "text-align": "center",
                                "text-decoration": "none",
                                "vertical-align": "middle",
                                cursor: "pointer",
                                padding: "0.2em 0.8em",
                                "font-size": "1em",
                                "border-radius": "0.25em",
                                margin: "0 0.25em 0 0",
                                border: "1px solid " + r.get("secondaryButtonStroke").toCSS(),
                                background: r.get("secondaryButton").toCSS()
                            }), new n.StyleRule(e,".am5-modal-button:hover",{
                                background: r.get("secondaryButtonHover").toCSS()
                            }), new n.StyleRule(e,".am5-modal-button.am5-modal-primary",{
                                color: r.get("primaryButtonText").toCSS(),
                                border: "1px solid " + r.get("primaryButtonStroke").toCSS(),
                                background: r.get("primaryButton").toCSS()
                            }), new n.StyleRule(e,".am5-modal-button.am5-modal-primary:hover",{
                                background: r.get("primaryButtonHover").toCSS()
                            })]);
                            a = new s.DM(( () => {
                                a = void 0,
                                t.dispose()
                            }
                            ))
                        }
                        a.increment()
                    }(n.getShadowRoot(this._root.dom), this._root);
                    const e = document.createElement("div");
                    e.className = "am5-modal",
                    e.style.display = "none",
                    this.root._inner.appendChild(e),
                    this.setPrivate("container", e);
                    const t = document.createElement("div");
                    t.className = "am5-modal-curtain",
                    e.appendChild(t),
                    this.setPrivate("curtain", t),
                    this._disposers.push(n.addEventListener(t, "click", ( () => {
                        this.cancel()
                    }
                    )));
                    const i = document.createElement("div");
                    i.className = "am5-modal-wrapper",
                    e.appendChild(i),
                    this.setPrivate("wrapper", i);
                    const r = document.createElement("div");
                    r.className = "am5-modal-content",
                    i.appendChild(r),
                    this.setPrivate("content", r);
                    const o = this.get("content");
                    o && (r.innerHTML = o),
                    n.supports("keyboardevents") && this._disposers.push(n.addEventListener(document, "keydown", (e => {
                        this.isOpen() && 27 == e.keyCode && this.cancel()
                    }
                    )))
                }
                _beforeChanged() {
                    super._beforeChanged(),
                    this.isDirty("content") && (this.getPrivate("content").innerHTML = this.get("content", ""))
                }
                isOpen() {
                    return "none" != this.getPrivate("container").style.display
                }
                open() {
                    this.getPrivate("container").style.display = "block",
                    this.get("deactivateRoot") && this.setTimeout(( () => {
                        this._root._renderer.interactionsEnabled = !1
                    }
                    ), 10),
                    this.events.dispatch("opened", {
                        type: "opened",
                        target: this
                    })
                }
                close() {
                    this.getPrivate("container").style.display = "none",
                    this.get("deactivateRoot") && (this._root._renderer.interactionsEnabled = !0),
                    this.events.dispatch("closed", {
                        type: "closed",
                        target: this
                    })
                }
                cancel() {
                    this.getPrivate("container").style.display = "none",
                    this.get("deactivateRoot") && (this._root._renderer.interactionsEnabled = !0),
                    this.events.dispatch("cancelled", {
                        type: "cancelled",
                        target: this
                    })
                }
                dispose() {
                    super.dispose(),
                    this.root.dom.removeChild(this.getPrivate("container"))
                }
            }
            Object.defineProperty(o, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Modal"
            }),
            Object.defineProperty(o, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.JH.classNames.concat([o.className])
            })
        },
        780: function(e, t, i) {
            "use strict";
            i.d(t, {
                e: function() {
                    return l
                }
            });
            var r = i(6331)
              , n = i(7255)
              , s = i(256)
              , a = i(7652)
              , o = i(5040);
            class l extends r.JH {
                _setDefaults() {
                    this._setDefault("negativeBase", 0),
                    this._setDefault("numberFormat", "#,###.#####"),
                    this._setDefault("smallNumberThreshold", 1);
                    const e = "_big_number_suffix_"
                      , t = "_small_number_suffix_"
                      , i = "_byte_suffix_";
                    this._setDefault("bigNumberPrefixes", [{
                        number: 1e3,
                        suffix: this._t(e + "3")
                    }, {
                        number: 1e6,
                        suffix: this._t(e + "6")
                    }, {
                        number: 1e9,
                        suffix: this._t(e + "9")
                    }, {
                        number: 1e12,
                        suffix: this._t(e + "12")
                    }, {
                        number: 1e15,
                        suffix: this._t(e + "15")
                    }, {
                        number: 1e18,
                        suffix: this._t(e + "18")
                    }, {
                        number: 1e21,
                        suffix: this._t(e + "21")
                    }, {
                        number: 1e24,
                        suffix: this._t(e + "24")
                    }]),
                    this._setDefault("smallNumberPrefixes", [{
                        number: 1e-24,
                        suffix: this._t(t + "24")
                    }, {
                        number: 1e-21,
                        suffix: this._t(t + "21")
                    }, {
                        number: 1e-18,
                        suffix: this._t(t + "18")
                    }, {
                        number: 1e-15,
                        suffix: this._t(t + "15")
                    }, {
                        number: 1e-12,
                        suffix: this._t(t + "12")
                    }, {
                        number: 1e-9,
                        suffix: this._t(t + "9")
                    }, {
                        number: 1e-6,
                        suffix: this._t(t + "6")
                    }, {
                        number: .001,
                        suffix: this._t(t + "3")
                    }]),
                    this._setDefault("bytePrefixes", [{
                        number: 1,
                        suffix: this._t(i + "B")
                    }, {
                        number: 1024,
                        suffix: this._t(i + "KB")
                    }, {
                        number: 1048576,
                        suffix: this._t(i + "MB")
                    }, {
                        number: 1073741824,
                        suffix: this._t(i + "GB")
                    }, {
                        number: 1099511627776,
                        suffix: this._t(i + "TB")
                    }, {
                        number: 0x4000000000000,
                        suffix: this._t(i + "PB")
                    }]),
                    super._setDefaults()
                }
                _beforeChanged() {
                    super._beforeChanged()
                }
                format(e, t, i) {
                    let r;
                    (null == t || o.isString(t) && "number" === t.toLowerCase()) && (t = this.get("numberFormat", ""));
                    let n = Number(e);
                    if (o.isObject(t))
                        try {
                            return this.get("intlLocales") ? new Intl.NumberFormat(this.get("intlLocales"),t).format(n) : new Intl.NumberFormat(void 0,t).format(n)
                        } catch (e) {
                            return "Invalid"
                        }
                    else {
                        t = a.cleanFormat(t);
                        let e, l = this.parseFormat(t, this._root.language);
                        e = n > this.get("negativeBase") ? l.positive : n < this.get("negativeBase") ? l.negative : l.zero,
                        null == i || e.mod || (e = s.copy(e),
                        e.decimals.active = 0 == n ? 0 : i),
                        r = e.template.split(o.PLACEHOLDER).join(this.applyFormat(n, e))
                    }
                    return !0 === this.get("forceLTR") && (r = "‎" + r),
                    r
                }
                parseFormat(e, t) {
                    const i = t.translateEmpty("_thousandSeparator")
                      , r = t.translateEmpty("_decimalSeparator");
                    let a = {
                        positive: {
                            thousands: {
                                active: -1,
                                passive: -1,
                                interval: -1,
                                separator: i
                            },
                            decimals: {
                                active: -1,
                                passive: -1,
                                separator: r
                            },
                            template: "",
                            source: "",
                            parsed: !1
                        },
                        negative: {
                            thousands: {
                                active: -1,
                                passive: -1,
                                interval: -1,
                                separator: i
                            },
                            decimals: {
                                active: -1,
                                passive: -1,
                                separator: r
                            },
                            template: "",
                            source: "",
                            parsed: !1
                        },
                        zero: {
                            thousands: {
                                active: -1,
                                passive: -1,
                                interval: -1,
                                separator: i
                            },
                            decimals: {
                                active: -1,
                                passive: -1,
                                separator: r
                            },
                            template: "",
                            source: "",
                            parsed: !1
                        }
                    }
                      , l = (e = e.replace("||", o.PLACEHOLDER2)).split("|");
                    return a.positive.source = l[0],
                    void 0 === l[2] ? a.zero = a.positive : a.zero.source = l[2],
                    void 0 === l[1] ? a.negative = a.positive : a.negative.source = l[1],
                    s.each(a, ( (e, t) => {
                        if (t.parsed)
                            return;
                        let i = t.source;
                        "number" === i.toLowerCase() && (i = this.get("numberFormat", "#,###.#####"));
                        let r = n.V.chunk(i, !0);
                        for (let e = 0; e < r.length; e++) {
                            let i = r[e];
                            if (i.text = i.text.replace(o.PLACEHOLDER2, "|"),
                            "value" === i.type) {
                                let e = i.text.match(/[#0.,]+[ ]?[abespABESP%!]?[abespABESP‰!]?/);
                                if (e)
                                    if (null === e || "" === e[0])
                                        t.template += i.text;
                                    else {
                                        let r = e[0].match(/[abespABESP%‰!]{2}|[abespABESP%‰]{1}$/);
                                        r && (t.mod = r[0].toLowerCase(),
                                        t.modSpacing = !!e[0].match(/[ ]{1}[abespABESP%‰!]{1}$/));
                                        let n = e[0].split(".");
                                        if ("" === n[0])
                                            ;
                                        else {
                                            t.thousands.active = (n[0].match(/0/g) || []).length,
                                            t.thousands.passive = (n[0].match(/\#/g) || []).length + t.thousands.active;
                                            let e = n[0].split(",");
                                            1 === e.length || (t.thousands.interval = (e.pop() || "").length,
                                            0 === t.thousands.interval && (t.thousands.interval = -1))
                                        }
                                        void 0 === n[1] || (t.decimals.active = (n[1].match(/0/g) || []).length,
                                        t.decimals.passive = (n[1].match(/\#/g) || []).length + t.decimals.active),
                                        t.template += i.text.split(e[0]).join(o.PLACEHOLDER)
                                    }
                            } else
                                t.template += i.text
                        }
                        t.parsed = !0
                    }
                    )),
                    a
                }
                applyFormat(e, t) {
                    let i = e < 0;
                    e = Math.abs(e);
                    let r = ""
                      , n = ""
                      , s = t.mod ? t.mod.split("") : [];
                    if (-1 !== s.indexOf("b")) {
                        let i = this.applyPrefix(e, this.get("bytePrefixes"), -1 !== s.indexOf("!"));
                        e = i[0],
                        r = i[1],
                        n = i[2],
                        t.modSpacing && (n = " " + n)
                    } else if (-1 !== s.indexOf("a")) {
                        let i = this.applyPrefix(e, e < this.get("smallNumberThreshold") ? this.get("smallNumberPrefixes") : this.get("bigNumberPrefixes"), -1 !== s.indexOf("!"));
                        e = i[0],
                        r = i[1],
                        n = i[2],
                        t.modSpacing && (n = " " + n)
                    } else if (-1 !== s.indexOf("p")) {
                        let t = Math.min(e.toString().length + 2, 21);
                        e = parseFloat(e.toPrecision(t)),
                        r = this._root.language.translate("_percentPrefix"),
                        n = this._root.language.translate("_percentSuffix"),
                        "" == r && "" == n && (n = "%")
                    } else if (-1 !== s.indexOf("%")) {
                        let t = Math.min(e.toString().length + 2, 21);
                        e *= 100,
                        e = parseFloat(e.toPrecision(t)),
                        n = "%"
                    } else if (-1 !== s.indexOf("‰")) {
                        let t = Math.min(e.toString().length + 3, 21);
                        e *= 1e3,
                        e = parseFloat(e.toPrecision(t)),
                        n = "‰"
                    }
                    if (-1 !== s.indexOf("e")) {
                        let i;
                        i = t.decimals.passive >= 0 ? e.toExponential(t.decimals.passive).split("e") : e.toExponential().split("e"),
                        e = Number(i[0]),
                        n = "e" + i[1],
                        t.modSpacing && (n = " " + n)
                    } else if (0 === t.decimals.passive)
                        e = Math.round(e);
                    else if (t.decimals.passive > 0) {
                        let i = Math.pow(10, t.decimals.passive);
                        e = Math.round(e * i) / i
                    }
                    let a = ""
                      , l = o.numberToString(e).split(".")
                      , h = l[0];
                    if (h.length < t.thousands.active && (h = Array(t.thousands.active - h.length + 1).join("0") + h),
                    t.thousands.interval > 0) {
                        let e = []
                          , i = h.split("").reverse().join("");
                        for (let r = 0, n = h.length; r <= n; r += t.thousands.interval) {
                            let n = i.substr(r, t.thousands.interval).split("").reverse().join("");
                            "" !== n && e.unshift(n)
                        }
                        h = e.join(t.thousands.separator)
                    }
                    a += h,
                    1 === l.length && l.push("");
                    let u = l[1];
                    return u.length < t.decimals.active && (u += Array(t.decimals.active - u.length + 1).join("0")),
                    "" !== u && (a += t.decimals.separator + u),
                    "" === a && (a = "0"),
                    0 !== e && i && -1 === s.indexOf("s") && (a = "-" + a),
                    r && (a = r + a),
                    n && (a += n),
                    a
                }
                applyPrefix(e, t, i=!1) {
                    let r = e
                      , n = ""
                      , s = ""
                      , a = !1
                      , o = 1;
                    for (let i = 0, l = t.length; i < l; i++)
                        t[i].number <= e && (0 === t[i].number ? r = 0 : (r = e / t[i].number,
                        o = t[i].number),
                        n = t[i].prefix,
                        s = t[i].suffix,
                        a = !0);
                    return !a && i && t.length && 0 != e && (r = e / t[0].number,
                    n = t[0].prefix,
                    s = t[0].suffix,
                    a = !0),
                    a && (r = parseFloat(r.toPrecision(Math.min(o.toString().length + Math.floor(r).toString().replace(/[^0-9]*/g, "").length, 21)))),
                    [r, n, s]
                }
                escape(e) {
                    return e.replace("||", o.PLACEHOLDER2)
                }
                unescape(e) {
                    return e.replace(o.PLACEHOLDER2, "|")
                }
            }
        },
        256: function(e, t, i) {
            "use strict";
            i.r(t),
            i.d(t, {
                copy: function() {
                    return a
                },
                each: function() {
                    return o
                },
                eachContinue: function() {
                    return l
                },
                eachOrdered: function() {
                    return h
                },
                hasKey: function() {
                    return u
                },
                keys: function() {
                    return n
                },
                keysOrdered: function() {
                    return s
                },
                softCopyProperties: function() {
                    return c
                }
            });
            var r = i(5071);
            function n(e) {
                return Object.keys(e)
            }
            function s(e, t) {
                return n(e).sort(t)
            }
            function a(e) {
                return Object.assign({}, e)
            }
            function o(e, t) {
                n(e).forEach((i => {
                    t(i, e[i])
                }
                ))
            }
            function l(e, t) {
                for (let i in e)
                    if (u(e, i) && !t(i, e[i]))
                        break
            }
            function h(e, t, i) {
                r.each(s(e, i), (i => {
                    t(i, e[i])
                }
                ))
            }
            function u(e, t) {
                return {}.hasOwnProperty.call(e, t)
            }
            function c(e, t) {
                return o(e, ( (e, i) => {
                    null != i && null == t[e] && (t[e] = i)
                }
                )),
                t
            }
        },
        3540: function(e, t, i) {
            "use strict";
            function r(e, t) {
                return e === t ? 0 : e < t ? -1 : 1
            }
            function n(e, t, i) {
                const n = e.length
                  , s = t.length
                  , a = Math.min(n, s);
                for (let r = 0; r < a; ++r) {
                    const n = i(e[r], t[r]);
                    if (0 !== n)
                        return n
                }
                return r(n, s)
            }
            function s(e, t) {
                return e === t ? 0 : e < t ? -1 : 1
            }
            i.d(t, {
                HO: function() {
                    return s
                },
                qu: function() {
                    return r
                },
                wq: function() {
                    return n
                }
            })
        },
        6245: function(e, t, i) {
            "use strict";
            i.d(t, {
                AQ: function() {
                    return a
                },
                CI: function() {
                    return o
                },
                aQ: function() {
                    return n
                },
                gG: function() {
                    return r
                },
                p0: function() {
                    return s
                }
            });
            class r {
                constructor(e) {
                    Object.defineProperty(this, "_value", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    this._value = e
                }
                get value() {
                    return this._value / 100
                }
                get percent() {
                    return this._value
                }
                toString() {
                    return this._value + "%"
                }
                interpolate(e, t) {
                    return e + this.value * (t - e)
                }
                static normalize(e, t, i) {
                    return e instanceof r ? e : new r(t === i ? 0 : 100 * Math.min(Math.max(1 / (i - t) * (e - t), 0), 1))
                }
            }
            function n(e) {
                return new r(e)
            }
            const s = n(0)
              , a = n(100)
              , o = n(50)
        },
        2132: function(e, t, i) {
            "use strict";
            i.d(t, {
                q: function() {
                    return o
                }
            });
            var r = i(5040)
              , n = i(7652)
              , s = i(4596)
              , a = i(7255);
            function o(e, t) {
                if (null != t) {
                    t = "" + t;
                    let i, r = (t = a.V.escape(t)).match(/\{([^}]+)\}/g);
                    if (r)
                        for (i = 0; i < r.length; i++) {
                            let n = l(e, r[i].replace(/\{([^}]+)\}/, "$1"), "");
                            null == n && (n = ""),
                            t = t.split(r[i]).join(n)
                        }
                    t = a.V.unescape(t)
                } else
                    t = "";
                return t
            }
            function l(e, t, i) {
                let s;
                const a = e.dataItem;
                let o, h = [], c = /(format[a-zA-Z]*)\((.*)\)|([^.]+)/g;
                for (; o = c.exec(t),
                null !== o; )
                    if (o[3]) {
                        h.push({
                            prop: o[3]
                        });
                        const t = e.getDateFormatter().get("dateFields", [])
                          , i = e.getNumberFormatter().get("numericFields", [])
                          , r = e.getDurationFormatter().get("durationFields", []);
                        -1 !== t.indexOf(o[3]) ? h.push({
                            method: "formatDate",
                            params: []
                        }) : -1 !== i.indexOf(o[3]) ? h.push({
                            method: "formatNumber",
                            params: []
                        }) : -1 !== r.indexOf(o[3]) && h.push({
                            method: "formatDuration",
                            params: []
                        })
                    } else {
                        let e = [];
                        if ("" != n.trim(o[2])) {
                            let t, i = /'([^']*)'|"([^"]*)"|([0-9\-]+)/g;
                            for (; t = i.exec(o[2]),
                            null !== t; )
                                e.push(t[1] || t[2] || t[3])
                        }
                        h.push({
                            method: o[1],
                            params: e
                        })
                    }
                if (a) {
                    s = u(e, h, a._settings),
                    (null == s || r.isObject(s)) && (s = u(e, h, a));
                    let n = a.dataContext;
                    null == s && n && (s = u(e, h, n),
                    null == s && (s = u(e, [{
                        prop: t
                    }], n)),
                    null == s && n.dataContext && (s = u(e, h, n.dataContext))),
                    null == s && a.component && a.component.dataItem !== a && (s = l(a.component, t, i))
                }
                return null == s && (s = u(e, h, e)),
                null == s && e.parent && (s = l(e.parent, t, i)),
                s
            }
            function h(e, t) {
                const i = e.getPrivate("customData");
                if (r.isObject(i))
                    return i[t]
            }
            function u(e, t, i, a) {
                let o = i
                  , l = !1;
                for (let n = 0, u = t.length; n < u; n++) {
                    let u = t[n];
                    if (u.prop) {
                        if (o instanceof s.j) {
                            let e = o.get(u.prop);
                            null == e && (e = o.getPrivate(u.prop)),
                            null == e && (e = h(o, u.prop)),
                            null == e && (e = o[u.prop]),
                            o = e
                        } else if (o.get) {
                            let e = o.get(u.prop);
                            null == e && (e = o[u.prop]),
                            o = e
                        } else
                            o = o[u.prop];
                        if (null == o)
                            return
                    } else
                        switch (u.method) {
                        case "formatNumber":
                            let t = r.toNumber(o);
                            null != t && (o = e.getNumberFormatter().format(t, a || u.params[0] || void 0),
                            l = !0);
                            break;
                        case "formatDate":
                            let n = r.toDate(o);
                            if (!r.isDate(n) || r.isNaN(n.getTime()))
                                return;
                            null != n && (o = e.getDateFormatter().format(n, a || u.params[0] || void 0),
                            l = !0);
                            break;
                        case "formatDuration":
                            let s = r.toNumber(o);
                            null != s && (o = e.getDurationFormatter().format(s, a || u.params[0] || void 0, u.params[1] || void 0),
                            l = !0);
                            break;
                        case "urlEncode":
                        case "encodeURIComponent":
                            o = encodeURIComponent(o);
                            break;
                        default:
                            o[u.method] && o[u.method].apply(i, u.params)
                        }
                }
                if (!l) {
                    let t = [{
                        method: "",
                        params: a
                    }];
                    if (null == a)
                        r.isNumber(o) ? (t[0].method = "formatNumber",
                        t[0].params = "") : r.isDate(o) && (t[0].method = "formatDate",
                        t[0].params = "");
                    else {
                        let e = n.getFormat(a);
                        "number" === e ? t[0].method = "formatNumber" : "date" === e ? t[0].method = "formatDate" : "duration" === e && (t[0].method = "formatDuration")
                    }
                    t[0].method && (o = u(e, t, o))
                }
                return o
            }
        },
        5769: function(e, t, i) {
            "use strict";
            i.d(t, {
                YS: function() {
                    return u
                }
            });
            var r = i(9770)
              , n = i(7449)
              , s = i(5071)
              , a = i(256);
            class o {
                constructor(e, t, i) {
                    Object.defineProperty(this, "_settings", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_template", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    this._name = e,
                    this._template = t,
                    this._settings = i
                }
                get(e, t) {
                    const i = this._settings[e];
                    return void 0 !== i ? i : t
                }
                set(e, t) {
                    this._settings[e] = t,
                    this._template._stateChanged(this._name)
                }
                remove(e) {
                    delete this._settings[e],
                    this._template._stateChanged(this._name)
                }
                setAll(e) {
                    a.keys(e).forEach((t => {
                        this._settings[t] = e[t]
                    }
                    )),
                    this._template._stateChanged(this._name)
                }
                _apply(e, t) {
                    a.each(this._settings, ( (i, r) => {
                        t[i] || e._userSettings[i] || (t[i] = !0,
                        e.setRaw(i, r))
                    }
                    ))
                }
            }
            class l {
                constructor(e) {
                    Object.defineProperty(this, "_template", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_states", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    this._template = e
                }
                lookup(e) {
                    return this._states[e]
                }
                create(e, t) {
                    const i = this._states[e];
                    if (i)
                        return i.setAll(t),
                        i;
                    {
                        const i = new o(e,this._template,t);
                        return this._states[e] = i,
                        this._template._stateChanged(e),
                        i
                    }
                }
                remove(e) {
                    delete this._states[e],
                    this._template._stateChanged(e)
                }
                _apply(e, t) {
                    a.each(this._states, ( (i, r) => {
                        let n = t.states[i];
                        null == n && (n = t.states[i] = {});
                        const s = e.states.create(i, {});
                        r._apply(s, n)
                    }
                    ))
                }
            }
            class h {
                constructor() {
                    Object.defineProperty(this, "_callbacks", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    })
                }
                add(e, t) {
                    let i = this._callbacks[e];
                    return void 0 === i && (i = this._callbacks[e] = []),
                    i.push(t),
                    new n.ku(( () => {
                        s.removeFirst(i, t),
                        0 === i.length && delete this._callbacks[e]
                    }
                    ))
                }
                remove(e) {
                    void 0 !== this._callbacks[e] && delete this._callbacks[e]
                }
                _apply(e) {
                    const t = [];
                    return a.each(this._callbacks, ( (i, r) => {
                        s.each(r, (r => {
                            t.push(e.adapters.add(i, r))
                        }
                        ))
                    }
                    )),
                    new n.FV(t)
                }
            }
            class u {
                constructor(e, t) {
                    if (Object.defineProperty(this, "_settings", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_privateSettings", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_settingEvents", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_privateSettingEvents", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_entities", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    }),
                    Object.defineProperty(this, "states", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new l(this)
                    }),
                    Object.defineProperty(this, "adapters", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new h
                    }),
                    Object.defineProperty(this, "events", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new r.p
                    }),
                    Object.defineProperty(this, "setup", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    !t)
                        throw new Error("You cannot use `new Class()`, instead use `Class.new()`");
                    this._settings = e
                }
                static new(e) {
                    return new u(e,!0)
                }
                get entities() {
                    return this._entities
                }
                get(e, t) {
                    const i = this._settings[e];
                    return void 0 !== i ? i : t
                }
                setRaw(e, t) {
                    this._settings[e] = t
                }
                set(e, t) {
                    this._settings[e] !== t && (this.setRaw(e, t),
                    this._entities.forEach((i => {
                        i._setTemplateProperty(this, e, t)
                    }
                    )))
                }
                remove(e) {
                    e in this._settings && (delete this._settings[e],
                    this._entities.forEach((t => {
                        t._removeTemplateProperty(e)
                    }
                    )))
                }
                removeAll() {
                    a.each(this._settings, ( (e, t) => {
                        this.remove(e)
                    }
                    ))
                }
                getPrivate(e, t) {
                    const i = this._privateSettings[e];
                    return void 0 !== i ? i : t
                }
                setPrivateRaw(e, t) {
                    return this._privateSettings[e] = t,
                    t
                }
                setPrivate(e, t) {
                    return this._privateSettings[e] !== t && (this.setPrivateRaw(e, t),
                    this._entities.forEach((i => {
                        i._setTemplatePrivateProperty(this, e, t)
                    }
                    ))),
                    t
                }
                removePrivate(e) {
                    e in this._privateSettings && (delete this._privateSettings[e],
                    this._entities.forEach((t => {
                        t._removeTemplatePrivateProperty(e)
                    }
                    )))
                }
                setAll(e) {
                    a.each(e, ( (e, t) => {
                        this.set(e, t)
                    }
                    ))
                }
                on(e, t) {
                    let i = this._settingEvents[e];
                    return void 0 === i && (i = this._settingEvents[e] = []),
                    i.push(t),
                    new n.ku(( () => {
                        s.removeFirst(i, t),
                        0 === i.length && delete this._settingEvents[e]
                    }
                    ))
                }
                onPrivate(e, t) {
                    let i = this._privateSettingEvents[e];
                    return void 0 === i && (i = this._privateSettingEvents[e] = []),
                    i.push(t),
                    new n.ku(( () => {
                        s.removeFirst(i, t),
                        0 === i.length && delete this._privateSettingEvents[e]
                    }
                    ))
                }
                _apply(e, t) {
                    const i = [];
                    return a.each(this._settingEvents, ( (t, r) => {
                        s.each(r, (r => {
                            i.push(e.on(t, r))
                        }
                        ))
                    }
                    )),
                    a.each(this._privateSettingEvents, ( (t, r) => {
                        s.each(r, (r => {
                            i.push(e.onPrivate(t, r))
                        }
                        ))
                    }
                    )),
                    this.states._apply(e, t),
                    i.push(this.adapters._apply(e)),
                    i.push(e.events.copyFrom(this.events)),
                    new n.FV(i)
                }
                _setObjectTemplate(e) {
                    this._entities.push(e)
                }
                _removeObjectTemplate(e) {
                    s.remove(this._entities, e)
                }
                _stateChanged(e) {
                    this._entities.forEach((t => {
                        t._applyStateByKey(e)
                    }
                    ))
                }
            }
        },
        7255: function(e, t, i) {
            "use strict";
            i.d(t, {
                V: function() {
                    return s
                }
            });
            var r = i(1112)
              , n = i(5040);
            class s {
                static escape(e) {
                    return e.replace(/\[\[/g, this.prefix + "1").replace(/([^\/\]]{1})\]\]/g, "$1" + this.prefix + "2").replace(/\]\]/g, this.prefix + "2").replace(/\{\{/g, this.prefix + "3").replace(/\}\}/g, this.prefix + "4").replace(/\'\'/g, this.prefix + "5")
                }
                static unescape(e) {
                    return e.replace(new RegExp(this.prefix + "1","g"), "[[").replace(new RegExp(this.prefix + "2","g"), "]]").replace(new RegExp(this.prefix + "3","g"), "{{").replace(new RegExp(this.prefix + "4","g"), "}}").replace(new RegExp(this.prefix + "5","g"), "''")
                }
                static cleanUp(e) {
                    return e.replace(/\[\[/g, "[").replace(/\]\]/g, "]").replace(/\{\{/g, "{").replace(/\}\}/g, "}").replace(/\'\'/g, "'")
                }
                static chunk(e, t=!1, i=!1) {
                    let r = [];
                    e = this.escape(e);
                    let s = t ? e.split("'") : [e];
                    for (let e = 0; e < s.length; e++) {
                        let t = s[e];
                        if ("" !== t)
                            if (e % 2 == 0) {
                                t = t.replace(/\]\[/g, "]" + n.PLACEHOLDER + "["),
                                t = t.replace(/\[\]/g, "[ ]");
                                let e = t.split(/[\[\]]+/);
                                for (let t = 0; t < e.length; t++) {
                                    let s = this.cleanUp(this.unescape(e[t]));
                                    s !== n.PLACEHOLDER && "" !== s && (t % 2 == 0 ? r.push({
                                        type: "value",
                                        text: s
                                    }) : r.push({
                                        type: i ? "value" : "format",
                                        text: "[" + s + "]"
                                    }))
                                }
                            } else {
                                let e = t.split(/[\[\]]+/);
                                for (let t = 0; t < e.length; t++) {
                                    let i = this.cleanUp(this.unescape(e[t]));
                                    "" !== i && (t % 2 == 0 ? r.push({
                                        type: "text",
                                        text: i
                                    }) : this.isImage(i) ? r.push({
                                        type: "image",
                                        text: "[" + i + "]"
                                    }) : r.push({
                                        type: "format",
                                        text: "[" + i + "]"
                                    }))
                                }
                            }
                    }
                    return r
                }
                static isImage(e) {
                    return !!e.match(/img[ ]?:/)
                }
                static getTextStyle(e) {
                    let t = {};
                    if ("" == e || "[ ]" == e)
                        return {};
                    const i = e.match(/('[^']*')|("[^"]*")/gi);
                    if (i)
                        for (let t = 0; t < i.length; t++)
                            e = e.replace(i[t], i[t].replace(/['"]*/g, "").replace(/[ ]+/g, "+"));
                    let n = e.match(/([\w\-]*:[\s]?[^;\s\]]*)|(\#[\w]{1,6})|([\w\-]+)|(\/)/gi);
                    if (!n)
                        return {};
                    for (let e = 0; e < n.length; e++)
                        if (n[e].match(/^(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)$/i))
                            t.fontWeight = n[e];
                        else if (n[e].match(/^(underline|line-through)$/i))
                            t.textDecoration = n[e];
                        else if ("/" == n[e])
                            ;
                        else if (n[e].match(/:/)) {
                            const i = n[e].replace("+", " ").split(/:[ ]*/);
                            t[i[0]] = i[1]
                        } else
                            t.fill = r.Il.fromString(n[e]);
                    return t
                }
            }
            Object.defineProperty(s, "prefix", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "__amcharts__"
            })
        },
        1926: function(e, t, i) {
            "use strict";
            i.r(t),
            i.d(t, {
                add: function() {
                    return g
                },
                checkChange: function() {
                    return f
                },
                chooseInterval: function() {
                    return b
                },
                copy: function() {
                    return p
                },
                getDateIntervalDuration: function() {
                    return u
                },
                getDuration: function() {
                    return l
                },
                getIntervalDuration: function() {
                    return h
                },
                getNextUnit: function() {
                    return o
                },
                getTime: function() {
                    return d
                },
                getUnitValue: function() {
                    return _
                },
                now: function() {
                    return c
                },
                round: function() {
                    return m
                },
                sleep: function() {
                    return s
                },
                timeUnitDurations: function() {
                    return a
                }
            });
            var r = i(5040)
              , n = i(7652);
            function s(e) {
                return new Promise(( (t, i) => {
                    setTimeout(t, e)
                }
                ))
            }
            let a = {
                millisecond: 1,
                second: 1e3,
                minute: 6e4,
                hour: 36e5,
                day: 864e5,
                week: 6048e5,
                month: 2629742400,
                year: 31536e6
            };
            function o(e) {
                switch (e) {
                case "year":
                    return;
                case "month":
                    return "year";
                case "week":
                case "day":
                    return "month";
                case "hour":
                    return "day";
                case "minute":
                    return "hour";
                case "second":
                    return "minute";
                case "millisecond":
                    return "second"
                }
            }
            function l(e, t) {
                return null == t && (t = 1),
                a[e] * t
            }
            function h(e) {
                return e ? a[e.timeUnit] * e.count : 0
            }
            function u(e, t, i, r, n) {
                const s = e.timeUnit
                  , o = e.count;
                if ("hour" == s || "minute" == s || "second" == s || "millisecond" == s)
                    return a[e.timeUnit] * e.count;
                {
                    const e = m(new Date(t.getTime()), s, o, i, r, void 0, n).getTime();
                    let a = e + o * l(s) * 1.05;
                    return a = m(new Date(a), s, 1, i, r, void 0, n).getTime(),
                    a - e
                }
            }
            function c() {
                return new Date
            }
            function d() {
                return c().getTime()
            }
            function p(e) {
                return new Date(e.getTime())
            }
            function f(e, t, i, r, n) {
                if (t - e > l(i, 1.2))
                    return !0;
                let s = new Date(e)
                  , a = new Date(t);
                n && (s = n.convertLocal(s),
                a = n.convertLocal(a));
                let h = 0
                  , u = 0;
                r || "millisecond" == i || (h = s.getTimezoneOffset(),
                s.setUTCMinutes(s.getUTCMinutes() - h),
                u = a.getTimezoneOffset(),
                a.setUTCMinutes(a.getUTCMinutes() - u));
                let c = !1;
                switch (i) {
                case "year":
                    s.getUTCFullYear() != a.getUTCFullYear() && (c = !0);
                    break;
                case "month":
                    (s.getUTCFullYear() != a.getUTCFullYear() || s.getUTCMonth() != a.getUTCMonth()) && (c = !0);
                    break;
                case "day":
                    (s.getUTCMonth() != a.getUTCMonth() || s.getUTCDate() != a.getUTCDate()) && (c = !0);
                    break;
                case "hour":
                    s.getUTCHours() != a.getUTCHours() && (c = !0);
                    break;
                case "minute":
                    s.getUTCMinutes() != a.getUTCMinutes() && (c = !0);
                    break;
                case "second":
                    s.getUTCSeconds() != a.getUTCSeconds() && (c = !0);
                    break;
                case "millisecond":
                    s.getTime() != a.getTime() && (c = !0)
                }
                if (c)
                    return c;
                let d = o(i);
                return !!d && f(e, t, d, r, n)
            }
            function g(e, t, i, r, n) {
                let s = 0;
                switch (r || "millisecond" == t || (s = e.getTimezoneOffset(),
                n && (s -= n.offsetUTC(e)),
                e.setUTCMinutes(e.getUTCMinutes() - s)),
                t) {
                case "day":
                    let t = e.getUTCDate();
                    e.setUTCDate(t + i);
                    break;
                case "second":
                    let r = e.getUTCSeconds();
                    e.setUTCSeconds(r + i);
                    break;
                case "millisecond":
                    let n = e.getUTCMilliseconds();
                    e.setUTCMilliseconds(n + i);
                    break;
                case "hour":
                    let s = e.getUTCHours();
                    e.setUTCHours(s + i);
                    break;
                case "minute":
                    let a = e.getUTCMinutes();
                    e.setUTCMinutes(a + i);
                    break;
                case "year":
                    let o = e.getUTCFullYear();
                    e.setUTCFullYear(o + i);
                    break;
                case "month":
                    let l = e.getUTCMonth();
                    e.setUTCMonth(l + i);
                    break;
                case "week":
                    let h = e.getUTCDate();
                    e.setUTCDate(h + 7 * i)
                }
                if (!r && "millisecond" != t && (e.setUTCMinutes(e.getUTCMinutes() + s),
                "day" == t || "week" == t || "month" == t || "year" == t)) {
                    let t = e.getTimezoneOffset();
                    if (n && (t += n.offsetUTC(e)),
                    t != s) {
                        let i = t - s;
                        e.setUTCMinutes(e.getUTCMinutes() + i),
                        e.getTimezoneOffset() != t && e.setUTCMinutes(e.getUTCMinutes() - i)
                    }
                }
                return e
            }
            function m(e, t, i, n, s, a, o) {
                if (!o || s) {
                    let o = 0;
                    switch (s || "millisecond" == t || (o = e.getTimezoneOffset(),
                    e.setUTCMinutes(e.getUTCMinutes() - o)),
                    t) {
                    case "day":
                        let t = e.getUTCDate();
                        if (i > 1) {
                            if (a) {
                                a = m(a, "day", 1);
                                let t = e.getTime() - a.getTime()
                                  , r = Math.floor(t / l("day") / i)
                                  , n = l("day", r * i);
                                e.setTime(a.getTime() + n - o * l("minute"))
                            }
                        } else
                            e.setUTCDate(t);
                        e.setUTCHours(0, 0, 0, 0);
                        break;
                    case "second":
                        let s = e.getUTCSeconds();
                        i > 1 && (s = Math.floor(s / i) * i),
                        e.setUTCSeconds(s, 0);
                        break;
                    case "millisecond":
                        if (1 == i)
                            return e;
                        let h = e.getUTCMilliseconds();
                        h = Math.floor(h / i) * i,
                        e.setUTCMilliseconds(h);
                        break;
                    case "hour":
                        let u = e.getUTCHours();
                        i > 1 && (u = Math.floor(u / i) * i),
                        e.setUTCHours(u, 0, 0, 0);
                        break;
                    case "minute":
                        let c = e.getUTCMinutes();
                        i > 1 && (c = Math.floor(c / i) * i),
                        e.setUTCMinutes(c, 0, 0);
                        break;
                    case "month":
                        let d = e.getUTCMonth();
                        i > 1 && (d = Math.floor(d / i) * i),
                        e.setUTCMonth(d, 1),
                        e.setUTCHours(0, 0, 0, 0);
                        break;
                    case "year":
                        let p = e.getUTCFullYear();
                        i > 1 && (p = Math.floor(p / i) * i),
                        e.setUTCFullYear(p, 0, 1),
                        e.setUTCHours(0, 0, 0, 0);
                        break;
                    case "week":
                        let f = e.getUTCDate()
                          , g = e.getUTCDay();
                        r.isNumber(n) || (n = 1),
                        f = g >= n ? f - g + n : f - (7 + g) + n,
                        e.setUTCDate(f),
                        e.setUTCHours(0, 0, 0, 0)
                    }
                    if (!s && "millisecond" != t && (e.setUTCMinutes(e.getUTCMinutes() + o),
                    "day" == t || "week" == t || "month" == t || "year" == t)) {
                        let t = e.getTimezoneOffset();
                        if (t != o) {
                            let i = t - o;
                            e.setUTCMinutes(e.getUTCMinutes() + i)
                        }
                    }
                    return e
                }
                {
                    if (isNaN(e.getTime()))
                        return e;
                    let h = o.offsetUTC(e)
                      , u = e.getTimezoneOffset()
                      , c = o.parseDate(e)
                      , d = c.year
                      , p = c.month
                      , f = c.day
                      , g = c.hour
                      , b = c.minute
                      , _ = c.second
                      , v = c.millisecond
                      , y = c.weekday;
                    switch (t) {
                    case "day":
                        if (i > 1 && a) {
                            a = m(a, "day", 1, n, s, void 0, o);
                            let t = e.getTime() - a.getTime()
                              , r = Math.floor(t / l("day") / i)
                              , h = l("day", r * i);
                            e.setTime(a.getTime() + h),
                            c = o.parseDate(e),
                            d = c.year,
                            p = c.month,
                            f = c.day
                        }
                        g = 0,
                        b = h - u,
                        _ = 0,
                        v = 0;
                        break;
                    case "second":
                        b += h - u,
                        i > 1 && (_ = Math.floor(_ / i) * i),
                        v = 0;
                        break;
                    case "millisecond":
                        b += h - u,
                        i > 1 && (v = Math.floor(v / i) * i);
                        break;
                    case "hour":
                        i > 1 && (g = Math.floor(g / i) * i),
                        b = h - u,
                        _ = 0,
                        v = 0;
                        break;
                    case "minute":
                        i > 1 && (b = Math.floor(b / i) * i),
                        b += h - u,
                        _ = 0,
                        v = 0;
                        break;
                    case "month":
                        i > 1 && (p = Math.floor(p / i) * i),
                        f = 1,
                        g = 0,
                        b = h - u,
                        _ = 0,
                        v = 0;
                        break;
                    case "year":
                        i > 1 && (d = Math.floor(d / i) * i),
                        p = 0,
                        f = 1,
                        g = 0,
                        b = h - u,
                        _ = 0,
                        v = 0;
                        break;
                    case "week":
                        r.isNumber(n) || (n = 1),
                        f = y >= n ? f - y + n : f - (7 + y) + n,
                        g = 0,
                        b = h - u,
                        _ = 0,
                        v = 0
                    }
                    let w = (e = new Date(d,p,f,g,b,_,v)).getTimezoneOffset();
                    return w != u && e.setTime(e.getTime() + 6e4 * (u - w)),
                    e
                }
            }
            function b(e, t, i, r) {
                let n = h(r[e])
                  , s = r.length - 1;
                if (e >= s)
                    return Object.assign({}, r[s]);
                let a = Math.ceil(t / n);
                return t < n && e > 0 ? Object.assign({}, r[e - 1]) : a <= i ? Object.assign({}, r[e]) : e + 1 < r.length ? b(e + 1, t, i, r) : Object.assign({}, r[e])
            }
            function _(e, t) {
                switch (t) {
                case "day":
                    return e.getDate();
                case "second":
                    return e.getSeconds();
                case "millisecond":
                    return e.getMilliseconds();
                case "hour":
                    return e.getHours();
                case "minute":
                    return e.getMinutes();
                case "month":
                    return e.getMonth();
                case "year":
                    return e.getFullYear();
                case "week":
                    return n.getWeek(e)
                }
            }
        },
        462: function(e, t, i) {
            "use strict";
            function r(e, t) {
                let i = 0
                  , r = 0
                  , n = 1
                  , s = 0
                  , a = 0
                  , o = 0
                  , l = 0
                  , h = 0;
                return e.formatToParts(t).forEach((e => {
                    switch (e.type) {
                    case "year":
                        i = +e.value;
                        break;
                    case "month":
                        r = +e.value - 1;
                        break;
                    case "day":
                        n = +e.value;
                        break;
                    case "hour":
                        s = +e.value;
                        break;
                    case "minute":
                        a = +e.value;
                        break;
                    case "second":
                        o = +e.value;
                        break;
                    case "fractionalSecond":
                        l = +e.value;
                        break;
                    case "weekday":
                        switch (e.value) {
                        case "Sun":
                            h = 0;
                            break;
                        case "Mon":
                            h = 1;
                            break;
                        case "Tue":
                            h = 2;
                            break;
                        case "Wed":
                            h = 3;
                            break;
                        case "Thu":
                            h = 4;
                            break;
                        case "Fri":
                            h = 5;
                            break;
                        case "Sat":
                            h = 6
                        }
                    }
                }
                )),
                24 === s && (s = 0),
                {
                    year: i,
                    month: r,
                    day: n,
                    hour: s,
                    minute: a,
                    second: o,
                    millisecond: l,
                    weekday: h
                }
            }
            function n(e, t) {
                const {year: i, month: n, day: s, hour: a, minute: o, second: l, millisecond: h} = r(e, t);
                return Date.UTC(i, n, s, a, o, l, h)
            }
            i.d(t, {
                r: function() {
                    return s
                }
            });
            class s {
                constructor(e, t) {
                    if (Object.defineProperty(this, "_utc", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_dtf", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    !t)
                        throw new Error("You cannot use `new Class()`, instead use `Class.new()`");
                    this.name = e,
                    this._utc = new Intl.DateTimeFormat("UTC",{
                        hour12: !1,
                        timeZone: "UTC",
                        year: "numeric",
                        month: "2-digit",
                        day: "2-digit",
                        hour: "2-digit",
                        minute: "2-digit",
                        second: "2-digit",
                        weekday: "short",
                        fractionalSecondDigits: 3
                    }),
                    this._dtf = new Intl.DateTimeFormat("UTC",{
                        hour12: !1,
                        timeZone: e,
                        year: "numeric",
                        month: "2-digit",
                        day: "2-digit",
                        hour: "2-digit",
                        minute: "2-digit",
                        second: "2-digit",
                        weekday: "short",
                        fractionalSecondDigits: 3
                    })
                }
                static new(e) {
                    return new this(e,!0)
                }
                convertLocal(e) {
                    const t = this.offsetUTC(e)
                      , i = e.getTimezoneOffset()
                      , r = new Date(e);
                    r.setUTCMinutes(r.getUTCMinutes() - (t - i));
                    const n = r.getTimezoneOffset();
                    return i != n && r.setUTCMinutes(r.getUTCMinutes() + n - i),
                    r
                }
                offsetUTC(e) {
                    return (n(this._utc, e) - n(this._dtf, e)) / 6e4
                }
                parseDate(e) {
                    return r(this._dtf, e)
                }
            }
        },
        5040: function(e, t, i) {
            "use strict";
            function r(e) {
                return Number(e) !== e
            }
            function n(e) {
                return {}.toString.call(e)
            }
            function s(e, t="Assertion failed") {
                if (!e)
                    throw new Error(t)
            }
            function a(e) {
                if (null != e && !d(e)) {
                    let t = Number(e);
                    return r(t) && c(e) && "" != e ? a(e.replace(/[^0-9.\-]+/g, "")) : t
                }
                return e
            }
            function o(e) {
                if (u(e))
                    return new Date(e);
                if (d(e))
                    return new Date(e);
                {
                    let t = Number(e);
                    return d(t) ? new Date(t) : new Date(e)
                }
            }
            function l(e) {
                if (r(e))
                    return "NaN";
                if (e === 1 / 0)
                    return "Infinity";
                if (e === -1 / 0)
                    return "-Infinity";
                if (0 === e && 1 / e == -1 / 0)
                    return "-0";
                let t = e < 0;
                e = Math.abs(e);
                let i, n = /^([0-9]+)(?:\.([0-9]+))?(?:e[\+\-]([0-9]+))?$/.exec("" + e), s = n[1], a = n[2] || "";
                if (void 0 === n[3])
                    i = "" === a ? s : s + "." + a;
                else {
                    let t = +n[3];
                    if (e < 1)
                        i = "0." + h("0", t - 1) + s + a;
                    else {
                        let e = t - a.length;
                        i = 0 === e ? s + a : e < 0 ? s + a.slice(0, e) + "." + a.slice(e) : s + a + h("0", e)
                    }
                }
                return t ? "-" + i : i
            }
            function h(e, t) {
                return new Array(t + 1).join(e)
            }
            function u(e) {
                return "[object Date]" === n(e)
            }
            function c(e) {
                return "string" == typeof e
            }
            function d(e) {
                return "number" == typeof e && Number(e) == e
            }
            function p(e) {
                return "object" == typeof e && null !== e
            }
            function f(e) {
                return Array.isArray(e)
            }
            i.r(t),
            i.d(t, {
                PLACEHOLDER: function() {
                    return g
                },
                PLACEHOLDER2: function() {
                    return m
                },
                assert: function() {
                    return s
                },
                getType: function() {
                    return n
                },
                isArray: function() {
                    return f
                },
                isDate: function() {
                    return u
                },
                isNaN: function() {
                    return r
                },
                isNumber: function() {
                    return d
                },
                isObject: function() {
                    return p
                },
                isString: function() {
                    return c
                },
                numberToString: function() {
                    return l
                },
                repeat: function() {
                    return h
                },
                toDate: function() {
                    return o
                },
                toNumber: function() {
                    return a
                }
            });
            const g = "__§§§__"
              , m = "__§§§§__"
        },
        7652: function(e, t, i) {
            "use strict";
            i.r(t),
            i.d(t, {
                StyleRule: function() {
                    return D
                },
                StyleSheet: function() {
                    return k
                },
                addClass: function() {
                    return T
                },
                addEventListener: function() {
                    return h
                },
                addSpacing: function() {
                    return z
                },
                alternativeColor: function() {
                    return ae
                },
                blur: function() {
                    return p
                },
                brighten: function() {
                    return ie
                },
                capitalizeFirst: function() {
                    return q
                },
                cleanFormat: function() {
                    return U
                },
                contains: function() {
                    return y
                },
                decimalPlaces: function() {
                    return N
                },
                escapeForRgex: function() {
                    return H
                },
                focus: function() {
                    return f
                },
                get12Hours: function() {
                    return $
                },
                getBrightnessStep: function() {
                    return re
                },
                getDayFromWeek: function() {
                    return X
                },
                getEventTarget: function() {
                    return v
                },
                getFormat: function() {
                    return B
                },
                getLightnessStep: function() {
                    return te
                },
                getMonthWeek: function() {
                    return W
                },
                getPointerId: function() {
                    return d
                },
                getRendererEvent: function() {
                    return g
                },
                getSafeResolution: function() {
                    return S
                },
                getShadowRoot: function() {
                    return O
                },
                getStyle: function() {
                    return _
                },
                getTimeZone: function() {
                    return Z
                },
                getTimezoneOffset: function() {
                    return K
                },
                getWeek: function() {
                    return G
                },
                getWeekYear: function() {
                    return Y
                },
                getYearDay: function() {
                    return V
                },
                hslToRgb: function() {
                    return Q
                },
                iOS: function() {
                    return E
                },
                isLight: function() {
                    return ne
                },
                isLocalEvent: function() {
                    return w
                },
                isTouchEvent: function() {
                    return m
                },
                lighten: function() {
                    return ee
                },
                mergeTags: function() {
                    return oe
                },
                onZoom: function() {
                    return u
                },
                padString: function() {
                    return L
                },
                plainText: function() {
                    return I
                },
                ready: function() {
                    return o
                },
                relativeToValue: function() {
                    return C
                },
                removeClass: function() {
                    return M
                },
                removeElement: function() {
                    return l
                },
                rgbToHsl: function() {
                    return J
                },
                sameBounds: function() {
                    return le
                },
                saturate: function() {
                    return se
                },
                setInteractive: function() {
                    return x
                },
                setStyle: function() {
                    return b
                },
                stripTags: function() {
                    return F
                },
                supports: function() {
                    return c
                },
                trim: function() {
                    return R
                },
                trimLeft: function() {
                    return j
                },
                trimRight: function() {
                    return A
                }
            });
            var r = i(5040)
              , n = i(5071)
              , s = i(256)
              , a = i(7449);
            function o(e) {
                if ("loading" !== document.readyState)
                    e();
                else {
                    const t = () => {
                        "loading" !== document.readyState && (document.removeEventListener("readystatechange", t),
                        e())
                    }
                    ;
                    document.addEventListener("readystatechange", t)
                }
            }
            function l(e) {
                e.parentNode && e.parentNode.removeChild(e)
            }
            function h(e, t, i, r) {
                return e.addEventListener(t, i, r || !1),
                new a.ku(( () => {
                    e.removeEventListener(t, i, r || !1)
                }
                ))
            }
            function u(e) {
                return h(window, "resize", (t => {
                    e()
                }
                ))
            }
            function c(e) {
                switch (e) {
                case "touchevents":
                    return window.hasOwnProperty("TouchEvent");
                case "pointerevents":
                    return window.hasOwnProperty("PointerEvent");
                case "mouseevents":
                    return window.hasOwnProperty("MouseEvent");
                case "wheelevents":
                    return window.hasOwnProperty("WheelEvent");
                case "keyboardevents":
                    return window.hasOwnProperty("KeyboardEvent")
                }
                return !1
            }
            function d(e) {
                return e.pointerId || 0
            }
            function p() {
                if (document.activeElement && document.activeElement != document.body)
                    if (document.activeElement.blur)
                        document.activeElement.blur();
                    else {
                        let e = document.createElement("button");
                        e.style.position = "fixed",
                        e.style.top = "0px",
                        e.style.left = "-10000px",
                        document.body.appendChild(e),
                        e.focus(),
                        e.blur(),
                        document.body.removeChild(e)
                    }
            }
            function f(e) {
                e && e.focus()
            }
            function g(e) {
                if (c("pointerevents"))
                    return e;
                if (c("touchevents"))
                    switch (e) {
                    case "pointerover":
                    case "pointerdown":
                        return "touchstart";
                    case "pointerout":
                    case "pointerleave":
                    case "pointerup":
                        return "touchend";
                    case "pointermove":
                        return "touchmove";
                    case "click":
                        return "click";
                    case "dblclick":
                        return "dblclick"
                    }
                else if (c("mouseevents"))
                    switch (e) {
                    case "pointerover":
                        return "mouseover";
                    case "pointerout":
                        return "mouseout";
                    case "pointerleave":
                        return "mouseleave";
                    case "pointerdown":
                        return "mousedown";
                    case "pointermove":
                        return "mousemove";
                    case "pointerup":
                        return "mouseup";
                    case "click":
                        return "click";
                    case "dblclick":
                        return "dblclick"
                    }
                return e
            }
            function m(e) {
                if ("undefined" != typeof Touch && e instanceof Touch)
                    return !0;
                if ("undefined" != typeof PointerEvent && e instanceof PointerEvent && null != e.pointerType)
                    switch (e.pointerType) {
                    case "touch":
                    case "pen":
                    case 2:
                        return !0;
                    case "mouse":
                    case 4:
                        return !1;
                    default:
                        return !(e instanceof MouseEvent)
                    }
                else if (null != e.type && e.type.match(/^mouse/))
                    return !1;
                return !0
            }
            function b(e, t, i) {
                e.style[t] = i
            }
            function _(e, t) {
                return e.style[t]
            }
            function v(e) {
                if (e.composedPath) {
                    const t = e.composedPath();
                    return 0 === t.length ? null : t[0]
                }
                return e.target
            }
            function y(e, t) {
                let i = t;
                for (; ; ) {
                    if (e === i)
                        return !0;
                    if (null === i.parentNode) {
                        if (null == i.host)
                            return !1;
                        i = i.host
                    } else
                        i = i.parentNode
                }
            }
            function w(e, t) {
                return e.target && y(t.root.dom, e.target)
            }
            function x(e, t) {
                e.style.pointerEvents = t ? "auto" : "none"
            }
            function O(e) {
                let t = e;
                for (; ; ) {
                    if (null === t.parentNode)
                        return null != t.host ? t : null;
                    t = t.parentNode
                }
            }
            let P;
            class D extends a.KK {
                constructor(e, t, i, r="") {
                    super(),
                    Object.defineProperty(this, "_root", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    Object.defineProperty(this, "_rule", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    this._root = function(e, t="") {
                        if (null === e) {
                            if (null == P) {
                                const e = document.createElement("style");
                                e.type = "text/css",
                                "" != t && e.setAttribute("nonce", t),
                                document.head.appendChild(e),
                                P = e.sheet
                            }
                            return P
                        }
                        {
                            const i = document.createElement("style");
                            return i.type = "text/css",
                            "" != t && i.setAttribute("nonce", t),
                            e.appendChild(i),
                            i.sheet
                        }
                    }(e, r);
                    try {
                        this._rule = function(e, t) {
                            const i = e.cssRules.length;
                            return e.insertRule(t + "{}", i),
                            e.cssRules[i]
                        }(this._root, t),
                        s.each(i, ( (e, t) => {
                            this.setStyle(e, t)
                        }
                        ))
                    } catch (e) {
                        this._rule = new CSSStyleRule
                    }
                }
                set selector(e) {
                    this._rule.selectorText = e
                }
                get selector() {
                    return this._rule.selectorText
                }
                _dispose() {
                    const e = n.indexOf(this._root.cssRules, this._rule);
                    if (-1 === e)
                        throw new Error("Could not dispose StyleRule");
                    this._root.deleteRule(e)
                }
                _setVendorPrefixName(e, t) {
                    const i = this._rule.style;
                    i.setProperty("-webkit-" + e, t, ""),
                    i.setProperty("-moz-" + e, t, ""),
                    i.setProperty("-ms-" + e, t, ""),
                    i.setProperty("-o-" + e, t, ""),
                    i.setProperty(e, t, "")
                }
                setStyle(e, t) {
                    "transition" === e ? this._setVendorPrefixName(e, t) : this._rule.style.setProperty(e, t, "")
                }
            }
            class k extends a.KK {
                constructor(e, t, i="") {
                    super(),
                    Object.defineProperty(this, "_element", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    this._element = function(e, t, i="") {
                        const r = document.createElement("style");
                        return r.type = "text/css",
                        "" != i && r.setAttribute("nonce", i),
                        r.textContent = t,
                        null === e ? document.head.appendChild(r) : e.appendChild(r),
                        r
                    }(e, t, i)
                }
                _dispose() {
                    this._element.parentNode && this._element.parentNode.removeChild(this._element)
                }
            }
            function T(e, t) {
                if (e)
                    if (e.classList) {
                        const i = t.split(" ");
                        n.each(i, (t => {
                            e.classList.add(t)
                        }
                        ))
                    } else {
                        let i = e.getAttribute("class");
                        i ? e.setAttribute("class", i.split(" ").filter((e => e !== t)).join(" ") + " " + t) : e.setAttribute("class", t)
                    }
            }
            function M(e, t) {
                if (e)
                    if (e.classList)
                        e.classList.remove(t);
                    else {
                        let i = e.getAttribute("class");
                        i && e.setAttribute("class", i.split(" ").filter((e => e !== t)).join(" "))
                    }
            }
            function E() {
                return /apple/i.test(navigator.vendor) && "ontouchend"in document
            }
            function S() {
                return E() ? 1 : void 0
            }
            function C(e, t) {
                return r.isNumber(e) ? e : null != e && r.isNumber(e.value) && r.isNumber(t) ? t * e.value : 0
            }
            function N(e) {
                let t = ("" + e).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);
                return t ? Math.max(0, (t[1] ? t[1].length : 0) - (t[2] ? +t[2] : 0)) : 0
            }
            function L(e, t=0, i="0") {
                return "string" != typeof e && (e = e.toString()),
                t > e.length ? Array(t - e.length + 1).join(i) + e : e
            }
            function j(e) {
                return e.replace(/^[\s]*/, "")
            }
            function A(e) {
                return e.replace(/[\s]*$/, "")
            }
            function R(e) {
                return j(A(e))
            }
            function B(e) {
                if (void 0 === e)
                    return "string";
                let t = (e = (e = (e = e.toLowerCase().replace(/^\[[^\]]*\]/, "")).replace(/\[[^\]]+\]/, "")).trim()).match(/\/(date|number|duration)$/);
                return t ? t[1] : "number" === e ? "number" : "date" === e ? "date" : "duration" === e ? "duration" : e.match(/[#0]/) ? "number" : e.match(/[ymwdhnsqaxkzgtei]/) ? "date" : "string"
            }
            function U(e) {
                return e.replace(/\/(date|number|duration)$/i, "")
            }
            function F(e) {
                return e ? e.replace(/<[^>]*>/g, "") : e
            }
            function I(e) {
                return e ? F(("" + e).replace(/[\n\r]+/g, ". ")) : e
            }
            function H(e) {
                return e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&")
            }
            function z(e) {
                let t = "";
                for (let i = 0; i < e.length; i++) {
                    const r = e.charAt(i);
                    r.toUpperCase() == r && 0 != i && (t += " "),
                    t += r
                }
                return t
            }
            function V(e, t=!1) {
                const i = new Date(e.getFullYear(),0,0)
                  , r = e.getTime() - i.getTime() + 60 * (i.getTimezoneOffset() - e.getTimezoneOffset()) * 1e3;
                return Math.floor(r / 864e5)
            }
            function G(e, t=!1) {
                const i = new Date(Date.UTC(e.getFullYear(), e.getMonth(), e.getDate()))
                  , r = i.getUTCDay() || 7;
                i.setUTCDate(i.getUTCDate() + 4 - r);
                const n = new Date(Date.UTC(i.getUTCFullYear(), 0, 1));
                return Math.ceil(((i.getTime() - n.getTime()) / 864e5 + 1) / 7)
            }
            function Y(e, t=!1) {
                const i = new Date(Date.UTC(e.getFullYear(), e.getMonth(), e.getDate()))
                  , r = i.getUTCDay() || 7;
                return i.setUTCDate(i.getUTCDate() + 4 - r),
                new Date(Date.UTC(i.getUTCFullYear(), 0, 1)).getFullYear()
            }
            function W(e, t=!1) {
                const i = G(new Date(e.getFullYear(),e.getMonth(),1), t);
                let r = G(e, t);
                return 1 == r && (r = 53),
                r - i + 1
            }
            function X(e, t, i=1, r=!1) {
                let n = new Date(t,0,4,0,0,0,0);
                return r && n.setUTCFullYear(t),
                7 * e + i - ((n.getDay() || 7) + 3)
            }
            function $(e, t) {
                return e > 12 ? e -= 12 : 0 === e && (e = 12),
                null != t ? e + (t - 1) : e
            }
            function Z(e, t=!1, i=!1, r=!1) {
                if (r)
                    return t ? "Coordinated Universal Time" : "UTC";
                let n = e.toLocaleString("UTC")
                  , s = e.toLocaleString("UTC", {
                    timeZoneName: t ? "long" : "short"
                }).substr(n.length);
                return !1 === i && (s = s.replace(/ (standard|daylight|summer|winter) /i, " ")),
                s
            }
            function K(e) {
                const t = new Date(Date.UTC(2012, 0, 1, 0, 0, 0, 0))
                  , i = new Date(t.toLocaleString("en-US", {
                    timeZone: "UTC"
                }));
                return (new Date(t.toLocaleString("en-US", {
                    timeZone: e
                })).getTime() - i.getTime()) / 6e4 * -1
            }
            function q(e) {
                return e.charAt(0).toUpperCase() + e.slice(1)
            }
            function Q(e) {
                let t, i, r, n = e.h, s = e.s, a = e.l;
                if (0 == s)
                    t = i = r = a;
                else {
                    let e = function(e, t, i) {
                        return i < 0 && (i += 1),
                        i > 1 && (i -= 1),
                        i < 1 / 6 ? e + 6 * (t - e) * i : i < .5 ? t : i < 2 / 3 ? e + (t - e) * (2 / 3 - i) * 6 : e
                    }
                      , o = a < .5 ? a * (1 + s) : a + s - a * s
                      , l = 2 * a - o;
                    t = e(l, o, n + 1 / 3),
                    i = e(l, o, n),
                    r = e(l, o, n - 1 / 3)
                }
                return {
                    r: Math.round(255 * t),
                    g: Math.round(255 * i),
                    b: Math.round(255 * r)
                }
            }
            function J(e) {
                let t = e.r / 255
                  , i = e.g / 255
                  , r = e.b / 255
                  , n = Math.max(t, i, r)
                  , s = Math.min(t, i, r)
                  , a = 0
                  , o = 0
                  , l = (n + s) / 2;
                if (n === s)
                    a = o = 0;
                else {
                    let e = n - s;
                    switch (o = l > .5 ? e / (2 - n - s) : e / (n + s),
                    n) {
                    case t:
                        a = (i - r) / e + (i < r ? 6 : 0);
                        break;
                    case i:
                        a = (r - t) / e + 2;
                        break;
                    case r:
                        a = (t - i) / e + 4
                    }
                    a /= 6
                }
                return {
                    h: a,
                    s: o,
                    l: l
                }
            }
            function ee(e, t) {
                return e ? {
                    r: Math.max(0, Math.min(255, e.r + te(e.r, t))),
                    g: Math.max(0, Math.min(255, e.g + te(e.g, t))),
                    b: Math.max(0, Math.min(255, e.b + te(e.b, t))),
                    a: e.a
                } : e
            }
            function te(e, t) {
                let i = t > 0 ? 255 - e : e;
                return Math.round(i * t)
            }
            function ie(e, t) {
                if (e) {
                    let i = te(Math.min(Math.max(e.r, e.g, e.b), 230), t);
                    return {
                        r: Math.max(0, Math.min(255, Math.round(e.r + i))),
                        g: Math.max(0, Math.min(255, Math.round(e.g + i))),
                        b: Math.max(0, Math.min(255, Math.round(e.b + i))),
                        a: e.a
                    }
                }
                return e
            }
            function re(e, t) {
                return Math.round(255 * t)
            }
            function ne(e) {
                return (299 * e.r + 587 * e.g + 114 * e.b) / 1e3 >= 128
            }
            function se(e, t) {
                if (void 0 === e || 1 == t)
                    return e;
                let i = J(e);
                return i.s = t,
                Q(i)
            }
            function ae(e, t={
                r: 255,
                g: 255,
                b: 255
            }, i={
                r: 255,
                g: 255,
                b: 255
            }) {
                let r = t
                  , n = i;
                return ne(i) && (r = i,
                n = t),
                ne(e) ? n : r
            }
            function oe(e, t) {
                return e || (e = []),
                [...e, ...t].filter(( (e, t, i) => i.indexOf(e) === t))
            }
            function le(e, t) {
                return !!t && e.left == t.left && e.right == t.right && e.top == t.top && e.bottom == t.bottom
            }
        },
        3360: function(e, t, i) {
            "use strict";
            i.d(t, {
                z: function() {
                    return y
                }
            });
            var r = i(5125)
              , n = i(6331)
              , s = i(4596)
              , a = i(8777)
              , o = i(1112)
              , l = i(6245)
              , h = i(5769)
              , u = i(5040)
              , c = i(5071)
              , d = i(256)
              , p = {
                AccumulationDistribution: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.AccumulationDistribution)),
                AccumulativeSwingIndex: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.AccumulativeSwingIndex)),
                Annotator: () => Promise.resolve().then((function() {
                    if (!i.m[396]) {
                        var e = new Error("Module '396' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(396)
                }
                )).then((e => e.Annotator)),
                Aroon: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.Aroon)),
                AverageSeries: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.AverageSeries)),
                AwesomeOscillator: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.AwesomeOscillator)),
                Axis: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.Axis)),
                AxisBullet: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.AxisBullet)),
                AxisLabel: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.AxisLabel)),
                AxisLabelRadial: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.AxisLabelRadial)),
                AxisRenderer: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.AxisRenderer)),
                AxisRendererCircular: () => Promise.resolve().then((function() {
                    if (!i.m[2051]) {
                        var e = new Error("Module '2051' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2051)
                }
                )).then((e => e.AxisRendererCircular)),
                AxisRendererRadial: () => Promise.resolve().then((function() {
                    if (!i.m[2051]) {
                        var e = new Error("Module '2051' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2051)
                }
                )).then((e => e.AxisRendererRadial)),
                AxisRendererX: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.AxisRendererX)),
                AxisRendererY: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.AxisRendererY)),
                AxisTick: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.AxisTick)),
                BaseColumnSeries: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.BaseColumnSeries)),
                BollingerBands: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.BollingerBands)),
                BreadcrumbBar: () => Promise.resolve().then((function() {
                    if (!i.m[496]) {
                        var e = new Error("Module '496' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(496)
                }
                )).then((e => e.BreadcrumbBar)),
                Bullet: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Bullet)),
                Button: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Button)),
                CalloutSeries: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.CalloutSeries)),
                Candlestick: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.Candlestick)),
                CandlestickSeries: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.CandlestickSeries)),
                CategoryAxis: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.CategoryAxis)),
                CategoryDateAxis: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.CategoryDateAxis)),
                ChaikinMoneyFlow: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.ChaikinMoneyFlow)),
                ChaikinOscillator: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.ChaikinOscillator)),
                Chart: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Chart)),
                ChartIndicator: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.ChartIndicator)),
                Chord: () => Promise.resolve().then((function() {
                    if (!i.m[2924]) {
                        var e = new Error("Module '2924' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2924)
                }
                )).then((e => e.Chord)),
                ChordDirected: () => Promise.resolve().then((function() {
                    if (!i.m[2924]) {
                        var e = new Error("Module '2924' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2924)
                }
                )).then((e => e.ChordDirected)),
                ChordLink: () => Promise.resolve().then((function() {
                    if (!i.m[2924]) {
                        var e = new Error("Module '2924' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2924)
                }
                )).then((e => e.ChordLink)),
                ChordLinkDirected: () => Promise.resolve().then((function() {
                    if (!i.m[2924]) {
                        var e = new Error("Module '2924' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2924)
                }
                )).then((e => e.ChordLinkDirected)),
                ChordNodes: () => Promise.resolve().then((function() {
                    if (!i.m[2924]) {
                        var e = new Error("Module '2924' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2924)
                }
                )).then((e => e.ChordNodes)),
                ChordNonRibbon: () => Promise.resolve().then((function() {
                    if (!i.m[2924]) {
                        var e = new Error("Module '2924' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2924)
                }
                )).then((e => e.ChordNonRibbon)),
                Circle: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Circle)),
                CirclePattern: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.CirclePattern)),
                ClockHand: () => Promise.resolve().then((function() {
                    if (!i.m[2051]) {
                        var e = new Error("Module '2051' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2051)
                }
                )).then((e => e.ClockHand)),
                ColorControl: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.ColorControl)),
                ColorSet: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.ColorSet)),
                ColumnSeries: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.ColumnSeries)),
                CommodityChannelIndex: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.CommodityChannelIndex)),
                ComparisonControl: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.ComparisonControl)),
                Component: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Component)),
                Container: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Container)),
                DateAxis: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.DateAxis)),
                DateRangeSelector: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.DateRangeSelector)),
                DisparityIndex: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.DisparityIndex)),
                DoodleSeries: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.DoodleSeries)),
                DrawingControl: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.DrawingControl)),
                DrawingSeries: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.DrawingSeries)),
                DrawingToolControl: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.DrawingToolControl)),
                Dropdown: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.Dropdown)),
                DropdownColors: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.DropdownColors)),
                DropdownList: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.DropdownList)),
                DropdownListControl: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.DropdownListControl)),
                DurationAxis: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.DurationAxis)),
                Ellipse: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Ellipse)),
                EllipseSeries: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.EllipseSeries)),
                Entity: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Entity)),
                Exporting: () => Promise.resolve().then((function() {
                    if (!i.m[396]) {
                        var e = new Error("Module '396' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(396)
                }
                )).then((e => e.Exporting)),
                ExportingMenu: () => Promise.resolve().then((function() {
                    if (!i.m[396]) {
                        var e = new Error("Module '396' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(396)
                }
                )).then((e => e.ExportingMenu)),
                FibonacciSeries: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.FibonacciSeries)),
                FibonacciTimezoneSeries: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.FibonacciTimezoneSeries)),
                Flow: () => Promise.resolve().then((function() {
                    if (!i.m[2924]) {
                        var e = new Error("Module '2924' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2924)
                }
                )).then((e => e.Flow)),
                FlowLink: () => Promise.resolve().then((function() {
                    if (!i.m[2924]) {
                        var e = new Error("Module '2924' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2924)
                }
                )).then((e => e.FlowLink)),
                FlowNode: () => Promise.resolve().then((function() {
                    if (!i.m[2924]) {
                        var e = new Error("Module '2924' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2924)
                }
                )).then((e => e.FlowNode)),
                FlowNodes: () => Promise.resolve().then((function() {
                    if (!i.m[2924]) {
                        var e = new Error("Module '2924' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2924)
                }
                )).then((e => e.FlowNodes)),
                ForceDirected: () => Promise.resolve().then((function() {
                    if (!i.m[496]) {
                        var e = new Error("Module '496' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(496)
                }
                )).then((e => e.ForceDirected)),
                FunnelSeries: () => Promise.resolve().then((function() {
                    if (!i.m[2536]) {
                        var e = new Error("Module '2536' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2536)
                }
                )).then((e => e.FunnelSeries)),
                FunnelSlice: () => Promise.resolve().then((function() {
                    if (!i.m[2536]) {
                        var e = new Error("Module '2536' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2536)
                }
                )).then((e => e.FunnelSlice)),
                GaplessDateAxis: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.GaplessDateAxis)),
                Gradient: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Gradient)),
                Graphics: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Graphics)),
                GraticuleSeries: () => Promise.resolve().then((function() {
                    if (!i.m[6970]) {
                        var e = new Error("Module '6970' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(6970)
                }
                )).then((e => e.GraticuleSeries)),
                Grid: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.Grid)),
                GridLayout: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.GridLayout)),
                HeatLegend: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.HeatLegend)),
                Hierarchy: () => Promise.resolve().then((function() {
                    if (!i.m[496]) {
                        var e = new Error("Module '496' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(496)
                }
                )).then((e => e.Hierarchy)),
                HierarchyLink: () => Promise.resolve().then((function() {
                    if (!i.m[496]) {
                        var e = new Error("Module '496' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(496)
                }
                )).then((e => e.HierarchyLink)),
                HierarchyNode: () => Promise.resolve().then((function() {
                    if (!i.m[496]) {
                        var e = new Error("Module '496' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(496)
                }
                )).then((e => e.HierarchyNode)),
                HorizontalLayout: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.HorizontalLayout)),
                HorizontalLineSeries: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.HorizontalLineSeries)),
                HorizontalRaySeries: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.HorizontalRaySeries)),
                IconControl: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.IconControl)),
                IconSeries: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.IconSeries)),
                Indicator: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.Indicator)),
                IndicatorControl: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.IndicatorControl)),
                InterfaceColors: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.InterfaceColors)),
                IntervalControl: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.IntervalControl)),
                Label: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Label)),
                LabelSeries: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.LabelSeries)),
                Layout: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Layout)),
                Legend: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Legend)),
                Line: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Line)),
                LinePattern: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.LinePattern)),
                LineSeries: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.LineSeries)),
                LinearGradient: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.LinearGradient)),
                LinkedHierarchy: () => Promise.resolve().then((function() {
                    if (!i.m[496]) {
                        var e = new Error("Module '496' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(496)
                }
                )).then((e => e.LinkedHierarchy)),
                LinkedHierarchyNode: () => Promise.resolve().then((function() {
                    if (!i.m[496]) {
                        var e = new Error("Module '496' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(496)
                }
                )).then((e => e.LinkedHierarchyNode)),
                MACD: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.MACD)),
                MapChart: () => Promise.resolve().then((function() {
                    if (!i.m[6970]) {
                        var e = new Error("Module '6970' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(6970)
                }
                )).then((e => e.MapChart)),
                MapLine: () => Promise.resolve().then((function() {
                    if (!i.m[6970]) {
                        var e = new Error("Module '6970' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(6970)
                }
                )).then((e => e.MapLine)),
                MapLineSeries: () => Promise.resolve().then((function() {
                    if (!i.m[6970]) {
                        var e = new Error("Module '6970' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(6970)
                }
                )).then((e => e.MapLineSeries)),
                MapPointSeries: () => Promise.resolve().then((function() {
                    if (!i.m[6970]) {
                        var e = new Error("Module '6970' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(6970)
                }
                )).then((e => e.MapPointSeries)),
                MapPolygon: () => Promise.resolve().then((function() {
                    if (!i.m[6970]) {
                        var e = new Error("Module '6970' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(6970)
                }
                )).then((e => e.MapPolygon)),
                MapPolygonSeries: () => Promise.resolve().then((function() {
                    if (!i.m[6970]) {
                        var e = new Error("Module '6970' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(6970)
                }
                )).then((e => e.MapPolygonSeries)),
                MapSeries: () => Promise.resolve().then((function() {
                    if (!i.m[6970]) {
                        var e = new Error("Module '6970' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(6970)
                }
                )).then((e => e.MapSeries)),
                MedianPrice: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.MedianPrice)),
                Modal: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Modal)),
                MovingAverage: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.MovingAverage)),
                MovingAverageDeviation: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.MovingAverageDeviation)),
                MovingAverageEnvelope: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.MovingAverageEnvelope)),
                OHLC: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.OHLC)),
                OHLCSeries: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.OHLCSeries)),
                OnBalanceVolume: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.OnBalanceVolume)),
                Pack: () => Promise.resolve().then((function() {
                    if (!i.m[496]) {
                        var e = new Error("Module '496' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(496)
                }
                )).then((e => e.Pack)),
                PanelControls: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.PanelControls)),
                Partition: () => Promise.resolve().then((function() {
                    if (!i.m[496]) {
                        var e = new Error("Module '496' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(496)
                }
                )).then((e => e.Partition)),
                PathPattern: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.PathPattern)),
                Pattern: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Pattern)),
                PercentChart: () => Promise.resolve().then((function() {
                    if (!i.m[2536]) {
                        var e = new Error("Module '2536' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2536)
                }
                )).then((e => e.PercentChart)),
                PercentSeries: () => Promise.resolve().then((function() {
                    if (!i.m[2536]) {
                        var e = new Error("Module '2536' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2536)
                }
                )).then((e => e.PercentSeries)),
                PeriodSelector: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.PeriodSelector)),
                PictorialStackedSeries: () => Promise.resolve().then((function() {
                    if (!i.m[2536]) {
                        var e = new Error("Module '2536' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2536)
                }
                )).then((e => e.PictorialStackedSeries)),
                Picture: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Picture)),
                PicturePattern: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.PicturePattern)),
                PieChart: () => Promise.resolve().then((function() {
                    if (!i.m[2536]) {
                        var e = new Error("Module '2536' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2536)
                }
                )).then((e => e.PieChart)),
                PieSeries: () => Promise.resolve().then((function() {
                    if (!i.m[2536]) {
                        var e = new Error("Module '2536' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2536)
                }
                )).then((e => e.PieSeries)),
                PointedRectangle: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.PointedRectangle)),
                PolylineSeries: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.PolylineSeries)),
                PyramidSeries: () => Promise.resolve().then((function() {
                    if (!i.m[2536]) {
                        var e = new Error("Module '2536' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2536)
                }
                )).then((e => e.PyramidSeries)),
                QuadrantLineSeries: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.QuadrantLineSeries)),
                RadarChart: () => Promise.resolve().then((function() {
                    if (!i.m[2051]) {
                        var e = new Error("Module '2051' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2051)
                }
                )).then((e => e.RadarChart)),
                RadarColumnSeries: () => Promise.resolve().then((function() {
                    if (!i.m[2051]) {
                        var e = new Error("Module '2051' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2051)
                }
                )).then((e => e.RadarColumnSeries)),
                RadarCursor: () => Promise.resolve().then((function() {
                    if (!i.m[2051]) {
                        var e = new Error("Module '2051' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2051)
                }
                )).then((e => e.RadarCursor)),
                RadarLineSeries: () => Promise.resolve().then((function() {
                    if (!i.m[2051]) {
                        var e = new Error("Module '2051' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2051)
                }
                )).then((e => e.RadarLineSeries)),
                RadialGradient: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.RadialGradient)),
                RadialLabel: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.RadialLabel)),
                RadialText: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.RadialText)),
                Rectangle: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Rectangle)),
                RectanglePattern: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.RectanglePattern)),
                RectangleSeries: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.RectangleSeries)),
                RegressionSeries: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.RegressionSeries)),
                RelativeStrengthIndex: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.RelativeStrengthIndex)),
                ResetControl: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.ResetControl)),
                RoundedRectangle: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.RoundedRectangle)),
                Sankey: () => Promise.resolve().then((function() {
                    if (!i.m[2924]) {
                        var e = new Error("Module '2924' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2924)
                }
                )).then((e => e.Sankey)),
                SankeyLink: () => Promise.resolve().then((function() {
                    if (!i.m[2924]) {
                        var e = new Error("Module '2924' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2924)
                }
                )).then((e => e.SankeyLink)),
                SankeyNodes: () => Promise.resolve().then((function() {
                    if (!i.m[2924]) {
                        var e = new Error("Module '2924' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2924)
                }
                )).then((e => e.SankeyNodes)),
                Scrollbar: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Scrollbar)),
                SerialChart: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.SerialChart)),
                Serializer: () => Promise.resolve().then((function() {
                    if (!i.m[9075]) {
                        var e = new Error("Module '9075' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9075)
                }
                )).then((e => e.Serializer)),
                Series: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Series)),
                SeriesTypeControl: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.SeriesTypeControl)),
                SettingsControl: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.SettingsControl)),
                SettingsModal: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.SettingsModal)),
                SimpleLineSeries: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.SimpleLineSeries)),
                Slice: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Slice)),
                SliceGrouper: () => Promise.resolve().then((function() {
                    if (!i.m[1790]) {
                        var e = new Error("Module '1790' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(1790)
                }
                )).then((e => e.SliceGrouper)),
                SlicedChart: () => Promise.resolve().then((function() {
                    if (!i.m[2536]) {
                        var e = new Error("Module '2536' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2536)
                }
                )).then((e => e.SlicedChart)),
                Slider: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Slider)),
                SmoothedRadarLineSeries: () => Promise.resolve().then((function() {
                    if (!i.m[2051]) {
                        var e = new Error("Module '2051' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(2051)
                }
                )).then((e => e.SmoothedRadarLineSeries)),
                SmoothedXLineSeries: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.SmoothedXLineSeries)),
                SmoothedXYLineSeries: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.SmoothedXYLineSeries)),
                SmoothedYLineSeries: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.SmoothedYLineSeries)),
                Sprite: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Sprite)),
                SpriteResizer: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.SpriteResizer)),
                StandardDeviation: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.StandardDeviation)),
                Star: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Star)),
                StepLineSeries: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.StepLineSeries)),
                StochasticOscillator: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.StochasticOscillator)),
                StockChart: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.StockChart)),
                StockControl: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.StockControl)),
                StockLegend: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.StockLegend)),
                StockPanel: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.StockPanel)),
                StockToolbar: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.StockToolbar)),
                Sunburst: () => Promise.resolve().then((function() {
                    if (!i.m[496]) {
                        var e = new Error("Module '496' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(496)
                }
                )).then((e => e.Sunburst)),
                Text: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Text)),
                Tick: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Tick)),
                Tooltip: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Tooltip)),
                Tree: () => Promise.resolve().then((function() {
                    if (!i.m[496]) {
                        var e = new Error("Module '496' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(496)
                }
                )).then((e => e.Tree)),
                Treemap: () => Promise.resolve().then((function() {
                    if (!i.m[496]) {
                        var e = new Error("Module '496' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(496)
                }
                )).then((e => e.Treemap)),
                TrendLineSeries: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.TrendLineSeries)),
                Triangle: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.Triangle)),
                Trix: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.Trix)),
                TypicalPrice: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.TypicalPrice)),
                VWAP: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.VWAP)),
                ValueAxis: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.ValueAxis)),
                Venn: () => Promise.resolve().then((function() {
                    if (!i.m[8034]) {
                        var e = new Error("Module '8034' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(8034)
                }
                )).then((e => e.Venn)),
                VerticalLayout: () => Promise.resolve().then((function() {
                    if (!i.m[9852]) {
                        var e = new Error("Module '9852' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(9852)
                }
                )).then((e => e.VerticalLayout)),
                VerticalLineSeries: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.VerticalLineSeries)),
                Volume: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.Volume)),
                WilliamsR: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.WilliamsR)),
                WordCloud: () => Promise.resolve().then((function() {
                    if (!i.m[6769]) {
                        var e = new Error("Module '6769' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(6769)
                }
                )).then((e => e.WordCloud)),
                XYChart: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.XYChart)),
                XYChartScrollbar: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.XYChartScrollbar)),
                XYCursor: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.XYCursor)),
                XYSeries: () => Promise.resolve().then((function() {
                    if (!i.m[3955]) {
                        var e = new Error("Module '3955' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(3955)
                }
                )).then((e => e.XYSeries)),
                ZigZag: () => Promise.resolve().then((function() {
                    if (!i.m[721]) {
                        var e = new Error("Module '721' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(721)
                }
                )).then((e => e.ZigZag)),
                ZoomControl: () => Promise.resolve().then((function() {
                    if (!i.m[6970]) {
                        var e = new Error("Module '6970' is not available (weak dependency)");
                        throw e.code = "MODULE_NOT_FOUND",
                        e
                    }
                    return i(6970)
                }
                )).then((e => e.ZoomControl))
            };
            function f(e) {
                return u.isObject(e)
            }
            function g(e, t) {
                if ("#" === e[0]) {
                    const i = e.slice(1);
                    if ("#" === e[1])
                        return {
                            isValue: !0,
                            value: i
                        };
                    {
                        const e = i.split(/\./g);
                        let r = function(e, t) {
                            let i = e.length;
                            for (; i--; ) {
                                const r = e[i];
                                if (t in r)
                                    return r[t]
                            }
                            throw new Error("Could not find ref #" + t)
                        }(t, e[0]);
                        for (let t = 1; t < e.length; ++t)
                            r = r[e[t]];
                        return {
                            isValue: !0,
                            value: r
                        }
                    }
                }
                return {
                    isValue: !0,
                    value: e
                }
            }
            function m(e, t) {
                t.properties && c.each(t.properties, (t => {
                    t(e)
                }
                ))
            }
            function b(e, t) {
                m(e, t),
                t.adapters && c.each(t.adapters, (t => {
                    e.adapters.add(t.key, t.callback)
                }
                )),
                e instanceof a.W && t.children && t.children.forEach((t => {
                    null == t.index ? e.children.push(t.value) : e.children.insertIndex(t.index, t.value)
                }
                ))
            }
            function _(e, t) {
                if (!t.construct)
                    return t.value;
                const i = t.construct.new(e, t.settings || {});
                return b(i, t),
                i
            }
            class v {
                constructor() {
                    Object.defineProperty(this, "_caching", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_cache", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    }),
                    Object.defineProperty(this, "_delayed", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: []
                    })
                }
                afterParse() {
                    this._delayed.forEach((e => {
                        e()
                    }
                    ))
                }
                getClass(e) {
                    return this._cache[e]
                }
                storeClass(e) {
                    return (0,
                    r.mG)(this, void 0, void 0, (function*() {
                        const t = p[e];
                        this._cache[e] = yield t()
                    }
                    ))
                }
                cacheClass(e) {
                    let t = this._caching[e];
                    return null == t && (t = this._caching[e] = this.storeClass(e)),
                    t
                }
                parseAsyncArray(e) {
                    return (0,
                    r.mG)(this, void 0, void 0, (function*() {
                        yield Promise.all(c.map(e, (e => this.parseAsync(e))))
                    }
                    ))
                }
                parseAsyncObject(e) {
                    return (0,
                    r.mG)(this, void 0, void 0, (function*() {
                        yield Promise.all(c.map(d.keys(e), (t => this.parseAsync(e[t]))))
                    }
                    ))
                }
                parseAsyncSettings(e) {
                    return (0,
                    r.mG)(this, void 0, void 0, (function*() {
                        yield Promise.all(c.map(d.keys(e), (t => this.parseAsyncSetting(t, e[t]))))
                    }
                    ))
                }
                parseAsyncSetting(e, t) {
                    return (0,
                    r.mG)(this, void 0, void 0, (function*() {
                        "geoJSON" !== e && (yield this.parseAsync(t))
                    }
                    ))
                }
                parseAsyncRefs(e) {
                    return (0,
                    r.mG)(this, void 0, void 0, (function*() {
                        u.isArray(e) ? yield Promise.all(c.map(e, (e => this.parseAsyncRefs(e)))) : yield this.parseAsyncObject(e)
                    }
                    ))
                }
                parseAsync(e) {
                    return (0,
                    r.mG)(this, void 0, void 0, (function*() {
                        u.isArray(e) ? yield this.parseAsyncArray(e) : f(e) && ("Color" === e.type || "Percent" === e.type || ("Template" === e.type ? yield Promise.all([e.refs ? this.parseAsyncRefs(e.refs) : Promise.resolve(void 0), e.settings ? this.parseAsyncObject(e.settings) : Promise.resolve(void 0)]) : !0 === e.__parse ? yield this.parseAsyncObject(e) : !1 !== e.__parse && (yield Promise.all([e.type ? this.cacheClass(e.type) : Promise.resolve(void 0), e.refs ? this.parseAsyncRefs(e.refs) : Promise.resolve(void 0), e.settings ? this.parseAsyncSettings(e.settings) : Promise.resolve(void 0), e.properties ? this.parseAsyncObject(e.properties) : Promise.resolve(void 0), e.children ? this.parseAsyncArray(e.children) : Promise.resolve(void 0)]))))
                    }
                    ))
                }
                parseObject(e, t, i) {
                    const r = {};
                    return c.each(d.keys(t), (n => {
                        r[n] = this.parse(e, t[n], i)
                    }
                    )),
                    r
                }
                parseArray(e, t, i) {
                    return c.map(t, (t => this.parse(e, t, i)))
                }
                parseChildren(e, t, i) {
                    return c.map(t, (t => this.parseChild(e, t, i)))
                }
                parseStops(e, t, i) {
                    return c.map(t, (t => this.parseObject(e, t, i)))
                }
                parseSetting(e, t, i, r) {
                    if ("layout" === t)
                        switch (i) {
                        case "horizontal":
                            return e.horizontalLayout;
                        case "vertical":
                            return e.verticalLayout;
                        case "grid":
                            return e.gridLayout
                        }
                    return "geoJSON" === t ? i : "stops" === t ? this.parseStops(e, i, r) : this.parse(e, i, r)
                }
                parseSettings(e, t, i) {
                    const r = {};
                    return c.each(d.keys(t), (n => {
                        r[n] = this.parseSetting(e, n, t[n], i)
                    }
                    )),
                    r
                }
                parseProperties(e, t, i) {
                    return c.map(d.keys(t), (r => {
                        const s = this.parseValue(e, t[r], i);
                        return t => {
                            const i = () => {
                                const i = t[r];
                                i ? s.isValue ? u.isArray(s.value) ? c.each(s.value, (e => {
                                    i.push(e)
                                }
                                )) : t[r] = s.value : s.construct ? t[r] = _(e, s) : i instanceof n.JH || i instanceof h.YS ? function(e, t) {
                                    t.settings && e.setAll(t.settings),
                                    b(e, t)
                                }(i, s) : m(i, s) : s.isValue ? t[r] = s.value : t[r] = _(e, s)
                            }
                            ;
                            if ("data" === r)
                                this._delayed.push(i);
                            else if ("bullets" === r) {
                                const e = t[r];
                                u.assert(null != e),
                                u.assert(s.isValue),
                                u.assert(u.isArray(s.value)),
                                c.each(s.value, (t => {
                                    e.push(( () => t))
                                }
                                ))
                            } else
                                i()
                        }
                    }
                    ))
                }
                parseRefsObject(e, t, i) {
                    const r = {};
                    return c.each(d.keys(t), (n => {
                        r[n] = this.parse(e, t[n], i)
                    }
                    )),
                    r
                }
                parseRefs(e, t, i) {
                    if (u.isArray(t)) {
                        const r = t.length;
                        for (let n = 0; n < r; ++n)
                            i = i.concat([this.parseRefsObject(e, t[n], i)])
                    } else
                        i = i.concat([this.parseRefsObject(e, t, i)]);
                    return i
                }
                parseChild(e, t, i) {
                    if (u.isString(t))
                        return {
                            index: void 0,
                            value: g(t, i).value
                        };
                    if (null != t.ref)
                        return {
                            index: null == t.index ? void 0 : t.index,
                            value: g(t.ref, i).value
                        };
                    {
                        const r = this.parseEntity(e, t, i);
                        return {
                            index: r.index,
                            value: _(e, r)
                        }
                    }
                }
                parseEntity(e, t, i) {
                    t.refs && (i = this.parseRefs(e, t.refs, i));
                    const r = t.type ? this.getClass(t.type) : void 0
                      , n = t.settings ? this.parseSettings(e, t.settings, i) : void 0
                      , s = t.properties ? this.parseProperties(e, t.properties, i) : void 0
                      , a = t.children ? this.parseChildren(e, t.children, i) : void 0
                      , o = null == t.index ? void 0 : t.index;
                    return {
                        isValue: !1,
                        type: t.type,
                        construct: r,
                        settings: n,
                        adapters: t.adapters,
                        children: a,
                        properties: s,
                        index: o,
                        value: t
                    }
                }
                parseValue(e, t, i) {
                    if (t instanceof n.JH)
                        return {
                            isValue: !0,
                            value: t
                        };
                    if (u.isArray(t))
                        return {
                            isValue: !0,
                            value: this.parseArray(e, t, i)
                        };
                    if (f(t)) {
                        if ("Color" === t.type)
                            return {
                                isValue: !0,
                                value: o.Il.fromAny(t.value)
                            };
                        if ("Percent" === t.type)
                            return {
                                isValue: !0,
                                value: new l.gG(t.value)
                            };
                        if ("Template" === t.type) {
                            t.refs && (i = this.parseRefs(e, t.refs, i));
                            const r = t.settings ? this.parseSettings(e, t.settings, i) : {};
                            return {
                                isValue: !0,
                                value: h.YS.new(r)
                            }
                        }
                        return !0 === t.__parse ? {
                            isValue: !0,
                            value: this.parseObject(e, t, i)
                        } : !1 === t.__parse ? {
                            isValue: !0,
                            value: t
                        } : this.parseEntity(e, t, i)
                    }
                    return u.isString(t) ? g(t, i) : {
                        isValue: !0,
                        value: t
                    }
                }
                parse(e, t, i) {
                    const r = this.parseValue(e, t, i);
                    return r.isValue ? r.value : _(e, r)
                }
            }
            class y {
                constructor(e, t) {
                    if (Object.defineProperty(this, "_root", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }),
                    !t)
                        throw new Error("You cannot use `new Class()`, instead use `Class.new()`");
                    this._root = e
                }
                static new(e) {
                    return new this(e,!0)
                }
                parse(e, t={}) {
                    return (0,
                    r.mG)(this, void 0, void 0, (function*() {
                        const i = new v;
                        yield i.parseAsync(e);
                        const r = i.parse(this._root, e, []);
                        if (t.parent) {
                            if (!(r instanceof s.j))
                                throw new Error("When using the parent setting, the entity must be a Sprite");
                            t.parent.children.push(r)
                        }
                        return i.afterParse(),
                        r
                    }
                    ))
                }
                parseString(e, t={}) {
                    return (0,
                    r.mG)(this, void 0, void 0, (function*() {
                        return yield this.parse(JSON.parse(e), t)
                    }
                    ))
                }
            }
        },
        6890: function(e, t, i) {
            "use strict";
            i.d(t, {
                e: function() {
                    return d
                }
            });
            var r = i(6331)
              , n = i(9361)
              , s = i(1112)
              , a = i(6245)
              , o = i(5769)
              , l = i(9582)
              , h = i(5040)
              , u = i(5071)
              , c = i(256);
            class d extends r.JH {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "_refs", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: {}
                    })
                }
                serialize(e, t=0, i=!1) {
                    if (t > this.get("maxDepth", 2))
                        return;
                    if (!1 === e || !0 === e)
                        return e;
                    if (h.isArray(e)) {
                        const r = [];
                        return u.each(e, (e => {
                            r.push(this.serialize(e, t, i))
                        }
                        )),
                        r
                    }
                    if (e instanceof l.k) {
                        const r = [];
                        return u.each(e.values, (e => {
                            r.push(this.serialize(e, t, i))
                        }
                        )),
                        r
                    }
                    const d = {}
                      , p = e instanceof r.JH || e instanceof o.YS || e instanceof s.Il || e instanceof a.gG;
                    if (e instanceof r.JH) {
                        d.type = e.className;
                        let r = c.keys(e._settings);
                        const n = this.get("includeSettings", [])
                          , s = this.get("excludeSettings", []);
                        n.length ? r = n : s.length && (r = r.filter((e => -1 === s.indexOf(e)))),
                        r = r.filter((t => e.isUserSetting(t))),
                        r.length && (d.settings = {},
                        u.each(r, (r => {
                            const n = e.get(r);
                            void 0 !== n && (d.settings[r] = this.serialize(n, t + 1, i))
                        }
                        )))
                    } else if (e instanceof o.YS) {
                        d.type = "Template";
                        let i = c.keys(e._settings);
                        return i.length && (d.settings = {},
                        u.each(i, (i => {
                            d.settings[i] = this.serialize(e.get(i), t + 1)
                        }
                        ))),
                        d
                    }
                    if (e instanceof n.w && e.data.length && (d.properties = {
                        data: this.serialize(e.data.values, 1, !0)
                    }),
                    e instanceof s.Il)
                        return {
                            type: "Color",
                            value: e.toCSSHex()
                        };
                    if (e instanceof a.gG)
                        return {
                            type: "Percent",
                            value: e.percent
                        };
                    if (h.isString(e) || h.isNumber(e))
                        return e;
                    if (h.isObject(e) && i && !p) {
                        const r = this.get("excludeProperties", []);
                        c.each(e, ( (e, n) => {
                            -1 === r.indexOf(e) && void 0 !== n && (d[e] = this.serialize(n, t + 1, i))
                        }
                        ))
                    }
                    return 0 == t && c.keys(this._refs).length && (d.refs = this._refs),
                    d
                }
            }
            Object.defineProperty(d, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Serializer"
            }),
            Object.defineProperty(d, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: r.JH.classNames.concat([d.className])
            })
        },
        3783: function(e, t, i) {
            "use strict";
            i.d(t, {
                X: function() {
                    return h
                },
                v: function() {
                    return l
                }
            });
            var r = i(3409)
              , n = i(6245)
              , s = i(1112)
              , a = i(6881)
              , o = i(9395);
            function l(e, t, i, r) {
                e.set(t, i.get(r)),
                i.on(r, (i => {
                    e.set(t, i)
                }
                ))
            }
            class h extends r.Q {
                setupDefaultRules() {
                    super.setupDefaultRules();
                    const e = this._root.language
                      , t = this._root.interfaceColors
                      , i = this._root.horizontalLayout
                      , r = this._root.verticalLayout
                      , h = this.rule.bind(this);
                    h("InterfaceColors").setAll({
                        stroke: s.Il.fromHex(15066597),
                        fill: s.Il.fromHex(15987699),
                        primaryButton: s.Il.fromHex(6788316),
                        primaryButtonHover: s.Il.fromHex(6779356),
                        primaryButtonDown: s.Il.fromHex(6872182),
                        primaryButtonActive: s.Il.fromHex(6872182),
                        primaryButtonText: s.Il.fromHex(16777215),
                        primaryButtonStroke: s.Il.fromHex(16777215),
                        secondaryButton: s.Il.fromHex(14277081),
                        secondaryButtonHover: s.Il.fromHex(10724259),
                        secondaryButtonDown: s.Il.fromHex(9276813),
                        secondaryButtonActive: s.Il.fromHex(15132390),
                        secondaryButtonText: s.Il.fromHex(0),
                        secondaryButtonStroke: s.Il.fromHex(16777215),
                        grid: s.Il.fromHex(0),
                        background: s.Il.fromHex(16777215),
                        alternativeBackground: s.Il.fromHex(0),
                        text: s.Il.fromHex(0),
                        alternativeText: s.Il.fromHex(16777215),
                        disabled: s.Il.fromHex(11382189),
                        positive: s.Il.fromHex(5288704),
                        negative: s.Il.fromHex(11730944)
                    });
                    {
                        const e = h("ColorSet");
                        e.setAll({
                            passOptions: {
                                hue: .05,
                                saturation: 0,
                                lightness: 0
                            },
                            colors: [s.Il.fromHex(6797276)],
                            step: 1,
                            reuse: !1,
                            startIndex: 0
                        }),
                        e.setPrivate("currentStep", 0),
                        e.setPrivate("currentPass", 0)
                    }
                    h("Entity").setAll({
                        stateAnimationDuration: 0,
                        stateAnimationEasing: o.out(o.cubic)
                    }),
                    h("Component").setAll({
                        interpolationDuration: 0,
                        interpolationEasing: o.out(o.cubic)
                    }),
                    h("Sprite").setAll({
                        visible: !0,
                        scale: 1,
                        opacity: 1,
                        rotation: 0,
                        position: "relative",
                        tooltipX: n.CI,
                        tooltipY: n.CI,
                        tooltipPosition: "fixed",
                        isMeasured: !0
                    }),
                    h("Sprite").states.create("default", {
                        visible: !0,
                        opacity: 1
                    }),
                    h("Container").setAll({
                        interactiveChildren: !0,
                        setStateOnChildren: !1
                    }),
                    h("Graphics").setAll({
                        strokeWidth: 1
                    }),
                    h("Chart").setAll({
                        width: n.AQ,
                        height: n.AQ,
                        interactiveChildren: !1
                    }),
                    h("Sprite", ["horizontal", "center"]).setAll({
                        centerX: n.CI,
                        x: n.CI
                    }),
                    h("Sprite", ["vertical", "center"]).setAll({
                        centerY: n.CI,
                        y: n.CI
                    }),
                    h("Container", ["horizontal", "layout"]).setAll({
                        layout: i
                    }),
                    h("Container", ["vertical", "layout"]).setAll({
                        layout: r
                    }),
                    h("Pattern").setAll({
                        repetition: "repeat",
                        width: 50,
                        height: 50,
                        rotation: 0,
                        fillOpacity: 1
                    }),
                    h("LinePattern").setAll({
                        gap: 6,
                        colorOpacity: 1,
                        width: 49,
                        height: 49
                    }),
                    h("RectanglePattern").setAll({
                        gap: 6,
                        checkered: !1,
                        centered: !0,
                        maxWidth: 5,
                        maxHeight: 5,
                        width: 48,
                        height: 48,
                        strokeWidth: 0
                    }),
                    h("CirclePattern").setAll({
                        gap: 5,
                        checkered: !1,
                        centered: !1,
                        radius: 3,
                        strokeWidth: 0,
                        width: 45,
                        height: 45
                    }),
                    h("LinearGradient").setAll({
                        rotation: 90
                    }),
                    h("Legend").setAll({
                        fillField: "fill",
                        strokeField: "stroke",
                        nameField: "name",
                        layout: a.M.new(this._root, {}),
                        layer: 30,
                        clickTarget: "itemContainer"
                    }),
                    h("Container", ["legend", "item", "itemcontainer"]).setAll({
                        paddingLeft: 5,
                        paddingRight: 5,
                        paddingBottom: 5,
                        paddingTop: 5,
                        layout: i,
                        setStateOnChildren: !0,
                        interactiveChildren: !1,
                        ariaChecked: !0,
                        focusable: !0,
                        ariaLabel: e.translate("Press ENTER to toggle"),
                        role: "checkbox"
                    });
                    {
                        const e = h("Rectangle", ["legend", "item", "background"]);
                        e.setAll({
                            fillOpacity: 0
                        }),
                        l(e, "fill", t, "background")
                    }
                    h("Container", ["legend", "marker"]).setAll({
                        setStateOnChildren: !0,
                        centerY: n.CI,
                        paddingLeft: 0,
                        paddingRight: 0,
                        paddingBottom: 0,
                        paddingTop: 0,
                        width: 18,
                        height: 18
                    }),
                    h("RoundedRectangle", ["legend", "marker", "rectangle"]).setAll({
                        width: n.AQ,
                        height: n.AQ,
                        cornerRadiusBL: 3,
                        cornerRadiusTL: 3,
                        cornerRadiusBR: 3,
                        cornerRadiusTR: 3
                    });
                    {
                        const e = h("RoundedRectangle", ["legend", "marker", "rectangle"]).states.create("disabled", {});
                        l(e, "fill", t, "disabled"),
                        l(e, "stroke", t, "disabled")
                    }
                    h("Label", ["legend", "label"]).setAll({
                        centerY: n.CI,
                        marginLeft: 5,
                        paddingRight: 0,
                        paddingLeft: 0,
                        paddingTop: 0,
                        paddingBottom: 0,
                        populateText: !0
                    }),
                    l(h("Label", ["legend", "label"]).states.create("disabled", {}), "fill", t, "disabled"),
                    h("Label", ["legend", "value", "label"]).setAll({
                        centerY: n.CI,
                        marginLeft: 5,
                        paddingRight: 0,
                        paddingLeft: 0,
                        paddingTop: 0,
                        paddingBottom: 0,
                        width: 50,
                        centerX: n.AQ,
                        populateText: !0
                    }),
                    l(h("Label", ["legend", "value", "label"]).states.create("disabled", {}), "fill", t, "disabled"),
                    h("HeatLegend").setAll({
                        stepCount: 1
                    }),
                    h("RoundedRectangle", ["heatlegend", "marker"]).setAll({
                        cornerRadiusTR: 0,
                        cornerRadiusBR: 0,
                        cornerRadiusTL: 0,
                        cornerRadiusBL: 0
                    }),
                    h("RoundedRectangle", ["vertical", "heatlegend", "marker"]).setAll({
                        height: n.AQ,
                        width: 15
                    }),
                    h("RoundedRectangle", ["horizontal", "heatlegend", "marker"]).setAll({
                        width: n.AQ,
                        height: 15
                    }),
                    h("HeatLegend", ["vertical"]).setAll({
                        height: n.AQ
                    }),
                    h("HeatLegend", ["horizontal"]).setAll({
                        width: n.AQ
                    }),
                    h("Label", ["heatlegend", "start"]).setAll({
                        paddingLeft: 5,
                        paddingRight: 5,
                        paddingTop: 5,
                        paddingBottom: 5
                    }),
                    h("Label", ["heatlegend", "end"]).setAll({
                        paddingLeft: 5,
                        paddingRight: 5,
                        paddingTop: 5,
                        paddingBottom: 5
                    });
                    {
                        const e = h("Label");
                        e.setAll({
                            paddingTop: 8,
                            paddingBottom: 8,
                            paddingLeft: 10,
                            paddingRight: 10,
                            fontFamily: '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"',
                            fontSize: "1em",
                            populateText: !1
                        }),
                        l(e, "fill", t, "text")
                    }
                    h("RadialLabel").setAll({
                        textType: "regular",
                        centerY: n.CI,
                        centerX: n.CI,
                        inside: !1,
                        radius: 0,
                        baseRadius: n.AQ,
                        orientation: "auto",
                        textAlign: "center"
                    }),
                    h("RoundedRectangle").setAll({
                        cornerRadiusTL: 8,
                        cornerRadiusBL: 8,
                        cornerRadiusTR: 8,
                        cornerRadiusBR: 8
                    }),
                    h("PointedRectangle").setAll({
                        pointerBaseWidth: 15,
                        pointerLength: 10,
                        cornerRadius: 8
                    }),
                    h("Slice").setAll({
                        shiftRadius: 0,
                        dRadius: 0,
                        dInnerRadius: 0
                    });
                    {
                        const e = h("Tick");
                        e.setAll({
                            strokeOpacity: .15,
                            isMeasured: !1,
                            length: 4.5,
                            position: "absolute",
                            crisp: !0
                        }),
                        l(e, "stroke", t, "grid")
                    }
                    h("Bullet").setAll({
                        locationX: .5,
                        locationY: .5
                    }),
                    h("Tooltip").setAll({
                        position: "absolute",
                        getFillFromSprite: !0,
                        getStrokeFromSprite: !1,
                        autoTextColor: !0,
                        paddingTop: 9,
                        paddingBottom: 8,
                        paddingLeft: 10,
                        paddingRight: 10,
                        marginBottom: 5,
                        pointerOrientation: "vertical",
                        centerX: n.CI,
                        centerY: n.CI,
                        animationEasing: o.out(o.cubic),
                        exportable: !1
                    }),
                    h("Polygon").setAll({
                        animationEasing: o.out(o.cubic)
                    }),
                    h("PointedRectangle", ["tooltip", "background"]).setAll({
                        strokeOpacity: .9,
                        cornerRadius: 4,
                        pointerLength: 4,
                        pointerBaseWidth: 8,
                        fillOpacity: .9,
                        stroke: s.Il.fromHex(16777215)
                    });
                    {
                        const e = h("Label", ["tooltip"]);
                        e.setAll({
                            role: "tooltip",
                            populateText: !0,
                            paddingRight: 0,
                            paddingTop: 0,
                            paddingLeft: 0,
                            paddingBottom: 0
                        }),
                        l(e, "fill", t, "alternativeText")
                    }
                    h("Button").setAll({
                        paddingTop: 8,
                        paddingBottom: 8,
                        paddingLeft: 10,
                        paddingRight: 10,
                        interactive: !0,
                        layout: i,
                        interactiveChildren: !1,
                        setStateOnChildren: !0,
                        focusable: !0
                    }),
                    h("Button").states.create("hover", {}),
                    h("Button").states.create("down", {
                        stateAnimationDuration: 0
                    }),
                    h("Button").states.create("active", {});
                    {
                        const e = h("RoundedRectangle", ["button", "background"]);
                        l(e, "fill", t, "primaryButton"),
                        l(e, "stroke", t, "primaryButtonStroke")
                    }
                    l(h("RoundedRectangle", ["button", "background"]).states.create("hover", {}), "fill", t, "primaryButtonHover"),
                    l(h("RoundedRectangle", ["button", "background"]).states.create("down", {
                        stateAnimationDuration: 0
                    }), "fill", t, "primaryButtonDown"),
                    l(h("RoundedRectangle", ["button", "background"]).states.create("active", {}), "fill", t, "primaryButtonActive"),
                    l(h("Graphics", ["button", "icon"]), "stroke", t, "primaryButtonText"),
                    l(h("Label", ["button"]), "fill", t, "primaryButtonText"),
                    h("Button", ["zoom"]).setAll({
                        paddingTop: 18,
                        paddingBottom: 18,
                        paddingLeft: 12,
                        paddingRight: 12,
                        centerX: 46,
                        centerY: -10,
                        y: 0,
                        x: n.AQ,
                        role: "button",
                        ariaLabel: e.translate("Zoom Out"),
                        layer: 30
                    });
                    {
                        const e = h("RoundedRectangle", ["background", "button", "zoom"]);
                        e.setAll({
                            cornerRadiusBL: 40,
                            cornerRadiusBR: 40,
                            cornerRadiusTL: 40,
                            cornerRadiusTR: 40
                        }),
                        l(e, "fill", t, "primaryButton")
                    }
                    l(h("RoundedRectangle", ["background", "button", "zoom"]).states.create("hover", {}), "fill", t, "primaryButtonHover"),
                    l(h("RoundedRectangle", ["background", "button", "zoom"]).states.create("down", {
                        stateAnimationDuration: 0
                    }), "fill", t, "primaryButtonDown");
                    {
                        const e = h("Graphics", ["icon", "button", "zoom"]);
                        e.setAll({
                            crisp: !0,
                            strokeOpacity: .7,
                            draw: e => {
                                e.moveTo(0, 0),
                                e.lineTo(12, 0)
                            }
                        }),
                        l(e, "stroke", t, "primaryButtonText")
                    }
                    h("Button", ["resize"]).setAll({
                        paddingTop: 9,
                        paddingBottom: 9,
                        paddingLeft: 13,
                        paddingRight: 13,
                        draggable: !0,
                        centerX: n.CI,
                        centerY: n.CI,
                        position: "absolute",
                        role: "slider",
                        ariaValueMin: "0",
                        ariaValueMax: "100",
                        ariaLabel: e.translate("Use up and down arrows to move selection")
                    });
                    {
                        const e = h("RoundedRectangle", ["background", "resize", "button"]);
                        e.setAll({
                            cornerRadiusBL: 40,
                            cornerRadiusBR: 40,
                            cornerRadiusTL: 40,
                            cornerRadiusTR: 40
                        }),
                        l(e, "fill", t, "secondaryButton"),
                        l(e, "stroke", t, "secondaryButtonStroke")
                    }
                    l(h("RoundedRectangle", ["background", "resize", "button"]).states.create("hover", {}), "fill", t, "secondaryButtonHover"),
                    l(h("RoundedRectangle", ["background", "resize", "button"]).states.create("down", {
                        stateAnimationDuration: 0
                    }), "fill", t, "secondaryButtonDown");
                    {
                        const e = h("Graphics", ["resize", "button", "icon"]);
                        e.setAll({
                            interactive: !1,
                            crisp: !0,
                            strokeOpacity: .5,
                            draw: e => {
                                e.moveTo(0, .5),
                                e.lineTo(0, 12.5),
                                e.moveTo(4, .5),
                                e.lineTo(4, 12.5)
                            }
                        }),
                        l(e, "stroke", t, "secondaryButtonText")
                    }
                    h("Button", ["resize", "vertical"]).setAll({
                        rotation: 90,
                        cursorOverStyle: "ns-resize"
                    }),
                    h("Button", ["resize", "horizontal"]).setAll({
                        cursorOverStyle: "ew-resize"
                    }),
                    h("Button", ["play"]).setAll({
                        paddingTop: 13,
                        paddingBottom: 13,
                        paddingLeft: 14,
                        paddingRight: 14,
                        ariaLabel: e.translate("Play"),
                        toggleKey: "active"
                    });
                    {
                        const e = h("RoundedRectangle", ["play", "background"]);
                        e.setAll({
                            strokeOpacity: .5,
                            cornerRadiusBL: 100,
                            cornerRadiusBR: 100,
                            cornerRadiusTL: 100,
                            cornerRadiusTR: 100
                        }),
                        l(e, "fill", t, "primaryButton")
                    }
                    {
                        const e = h("Graphics", ["play", "icon"]);
                        e.setAll({
                            stateAnimationDuration: 0,
                            dx: 1,
                            draw: e => {
                                e.moveTo(0, -5),
                                e.lineTo(8, 0),
                                e.lineTo(0, 5),
                                e.lineTo(0, -5)
                            }
                        }),
                        l(e, "fill", t, "primaryButtonText")
                    }
                    h("Graphics", ["play", "icon"]).states.create("default", {
                        stateAnimationDuration: 0
                    }),
                    h("Graphics", ["play", "icon"]).states.create("active", {
                        stateAnimationDuration: 0,
                        draw: e => {
                            e.moveTo(-4, -5),
                            e.lineTo(-1, -5),
                            e.lineTo(-1, 5),
                            e.lineTo(-4, 5),
                            e.lineTo(-4, -5),
                            e.moveTo(4, -5),
                            e.lineTo(1, -5),
                            e.lineTo(1, 5),
                            e.lineTo(4, 5),
                            e.lineTo(4, -5)
                        }
                    }),
                    h("Button", ["switch"]).setAll({
                        paddingTop: 4,
                        paddingBottom: 4,
                        paddingLeft: 4,
                        paddingRight: 4,
                        ariaLabel: e.translate("Press ENTER to toggle"),
                        toggleKey: "active",
                        width: 40,
                        height: 24,
                        layout: null
                    });
                    {
                        const e = h("RoundedRectangle", ["switch", "background"]);
                        e.setAll({
                            strokeOpacity: .5,
                            cornerRadiusBL: 100,
                            cornerRadiusBR: 100,
                            cornerRadiusTL: 100,
                            cornerRadiusTR: 100
                        }),
                        l(e, "fill", t, "primaryButton")
                    }
                    {
                        const e = h("Circle", ["switch", "icon"]);
                        e.setAll({
                            radius: 8,
                            centerY: 0,
                            centerX: 0,
                            dx: 0
                        }),
                        l(e, "fill", t, "primaryButtonText")
                    }
                    h("Graphics", ["switch", "icon"]).states.create("active", {
                        dx: 16
                    }),
                    h("Scrollbar").setAll({
                        start: 0,
                        end: 1,
                        layer: 30,
                        animationEasing: o.out(o.cubic)
                    }),
                    h("Scrollbar", ["vertical"]).setAll({
                        marginRight: 13,
                        marginLeft: 13,
                        minWidth: 12,
                        height: n.AQ
                    }),
                    h("Scrollbar", ["horizontal"]).setAll({
                        marginTop: 13,
                        marginBottom: 13,
                        minHeight: 12,
                        width: n.AQ
                    }),
                    this.rule("Button", ["scrollbar"]).setAll({
                        exportable: !1
                    });
                    {
                        const e = h("RoundedRectangle", ["scrollbar", "main", "background"]);
                        e.setAll({
                            cornerRadiusTL: 8,
                            cornerRadiusBL: 8,
                            cornerRadiusTR: 8,
                            cornerRadiusBR: 8,
                            fillOpacity: .8
                        }),
                        l(e, "fill", t, "fill")
                    }
                    {
                        const e = h("RoundedRectangle", ["scrollbar", "thumb"]);
                        e.setAll({
                            role: "slider",
                            ariaLive: "polite",
                            position: "absolute",
                            draggable: !0
                        }),
                        l(e, "fill", t, "secondaryButton")
                    }
                    l(h("RoundedRectangle", ["scrollbar", "thumb"]).states.create("hover", {}), "fill", t, "secondaryButtonHover"),
                    l(h("RoundedRectangle", ["scrollbar", "thumb"]).states.create("down", {
                        stateAnimationDuration: 0
                    }), "fill", t, "secondaryButtonDown"),
                    h("RoundedRectangle", ["scrollbar", "thumb", "vertical"]).setAll({
                        x: n.CI,
                        width: n.AQ,
                        centerX: n.CI,
                        ariaLabel: e.translate("Use up and down arrows to move selection")
                    }),
                    h("RoundedRectangle", ["scrollbar", "thumb", "horizontal"]).setAll({
                        y: n.CI,
                        centerY: n.CI,
                        height: n.AQ,
                        ariaLabel: e.translate("Use left and right arrows to move selection")
                    });
                    {
                        const e = h("PointedRectangle", ["axis", "tooltip", "background"]);
                        e.setAll({
                            cornerRadius: 0
                        }),
                        l(e, "fill", t, "alternativeBackground")
                    }
                    h("Label", ["axis", "tooltip"]).setAll({
                        role: void 0
                    }),
                    h("Label", ["axis", "tooltip", "y"]).setAll({
                        textAlign: "right"
                    }),
                    h("Label", ["axis", "tooltip", "y", "opposite"]).setAll({
                        textAlign: "left"
                    }),
                    h("Label", ["axis", "tooltip", "x"]).setAll({
                        textAlign: "center"
                    }),
                    h("Tooltip", ["categoryaxis"]).setAll({
                        labelText: "{category}"
                    }),
                    h("Star").setAll({
                        spikes: 5,
                        innerRadius: 5,
                        radius: 10
                    }),
                    h("Tooltip", ["stock"]).setAll({
                        paddingTop: 6,
                        paddingBottom: 5,
                        paddingLeft: 7,
                        paddingRight: 7
                    }),
                    h("PointedRectangle", ["tooltip", "stock", "axis"]).setAll({
                        pointerLength: 0,
                        pointerBaseWidth: 0,
                        cornerRadius: 3
                    }),
                    h("Label", ["tooltip", "stock"]).setAll({
                        fontSize: "0.8em"
                    }),
                    h("SpriteResizer").setAll({
                        rotationStep: 10
                    }),
                    h("Container", ["resizer", "grip"]).states.create("hover", {});
                    {
                        const e = h("RoundedRectangle", ["resizer", "grip"]);
                        e.setAll({
                            strokeOpacity: .7,
                            strokeWidth: 1,
                            fillOpacity: 1,
                            width: 12,
                            height: 12
                        }),
                        l(e, "fill", t, "background"),
                        l(e, "stroke", t, "alternativeBackground")
                    }
                    {
                        const e = h("RoundedRectangle", ["resizer", "grip", "outline"]);
                        e.setAll({
                            strokeOpacity: 0,
                            fillOpacity: 0,
                            width: 20,
                            height: 20
                        }),
                        e.states.create("hover", {
                            fillOpacity: .3
                        }),
                        l(e, "fill", t, "alternativeBackground")
                    }
                    h("RoundedRectangle", ["resizer", "grip", "left"]).setAll({
                        cornerRadiusBL: 0,
                        cornerRadiusBR: 0,
                        cornerRadiusTL: 0,
                        cornerRadiusTR: 0
                    }),
                    h("RoundedRectangle", ["resizer", "grip", "right"]).setAll({
                        cornerRadiusBL: 0,
                        cornerRadiusBR: 0,
                        cornerRadiusTL: 0,
                        cornerRadiusTR: 0
                    });
                    {
                        const e = h("Rectangle", ["resizer", "rectangle"]);
                        e.setAll({
                            strokeDasharray: [2, 2],
                            strokeOpacity: .5,
                            strokeWidth: 1
                        }),
                        l(e, "stroke", t, "alternativeBackground")
                    }
                }
            }
        },
        9852: function(e, t, i) {
            "use strict";
            i.r(t),
            i.d(t, {
                ArrayDisposer: function() {
                    return u.rk
                },
                Bullet: function() {
                    return c.g
                },
                Button: function() {
                    return d.z
                },
                CSVParser: function() {
                    return de
                },
                Chart: function() {
                    return W.k
                },
                Circle: function() {
                    return p.C
                },
                CirclePattern: function() {
                    return re
                },
                Color: function() {
                    return k.Il
                },
                ColorSet: function() {
                    return le.U
                },
                Component: function() {
                    return _.w
                },
                Container: function() {
                    return v.W
                },
                CounterDisposer: function() {
                    return u.DM
                },
                DataItem: function() {
                    return _.z
                },
                DataProcessor: function() {
                    return pe
                },
                DateFormatter: function() {
                    return fe.C
                },
                Disposer: function() {
                    return u.ku
                },
                DurationFormatter: function() {
                    return ge.$
                },
                Ellipse: function() {
                    return g.P
                },
                Entity: function() {
                    return h.JH
                },
                Gradient: function() {
                    return Q.p
                },
                Graphics: function() {
                    return m.T
                },
                GridLayout: function() {
                    return y.M
                },
                HeatLegend: function() {
                    return S
                },
                HorizontalLayout: function() {
                    return C.G
                },
                InterfaceColors: function() {
                    return me.v
                },
                JSONParser: function() {
                    return ce
                },
                JsonData: function() {
                    return he.Q
                },
                Label: function() {
                    return w._
                },
                Layout: function() {
                    return N.A
                },
                Legend: function() {
                    return L.D
                },
                Line: function() {
                    return j.x
                },
                LinePattern: function() {
                    return ne
                },
                LinearGradient: function() {
                    return M.o
                },
                ListData: function() {
                    return he.k
                },
                Modal: function() {
                    return l.u
                },
                MultiDisposer: function() {
                    return u.FV
                },
                MutableValueDisposer: function() {
                    return u.cx
                },
                NumberFormatter: function() {
                    return be.e
                },
                PathPattern: function() {
                    return oe
                },
                Pattern: function() {
                    return te.c
                },
                Percent: function() {
                    return x.gG
                },
                Picture: function() {
                    return A.t
                },
                PicturePattern: function() {
                    return se.v
                },
                PointedRectangle: function() {
                    return R.i
                },
                Polygon: function() {
                    return f.m
                },
                RadialGradient: function() {
                    return ee
                },
                RadialLabel: function() {
                    return B.x
                },
                RadialText: function() {
                    return U.f
                },
                Rectangle: function() {
                    return F.A
                },
                RectanglePattern: function() {
                    return ae
                },
                Root: function() {
                    return n.f
                },
                RoundedRectangle: function() {
                    return O.c
                },
                Scrollbar: function() {
                    return H.L
                },
                SerialChart: function() {
                    return X.j
                },
                Series: function() {
                    return Y.F
                },
                Slice: function() {
                    return V.p
                },
                Slider: function() {
                    return z
                },
                Sprite: function() {
                    return G.j
                },
                SpriteResizer: function() {
                    return ve.b
                },
                Star: function() {
                    return b
                },
                Template: function() {
                    return P.YS
                },
                Text: function() {
                    return $.x
                },
                TextFormatter: function() {
                    return _e.V
                },
                Theme: function() {
                    return s.Q
                },
                Tick: function() {
                    return Z.d
                },
                Timezone: function() {
                    return q.r
                },
                Tooltip: function() {
                    return T.u
                },
                Triangle: function() {
                    return I
                },
                VerticalLayout: function() {
                    return K.Z
                },
                addLicense: function() {
                    return a.cP
                },
                array: function() {
                    return J
                },
                color: function() {
                    return k.$_
                },
                disposeAllRootElements: function() {
                    return a.UZ
                },
                ease: function() {
                    return ye
                },
                math: function() {
                    return ie
                },
                net: function() {
                    return r
                },
                object: function() {
                    return ue
                },
                p0: function() {
                    return x.p0
                },
                p100: function() {
                    return x.AQ
                },
                p50: function() {
                    return x.CI
                },
                percent: function() {
                    return x.aQ
                },
                ready: function() {
                    return o.ready
                },
                registry: function() {
                    return a.i_
                },
                time: function() {
                    return Oe
                },
                type: function() {
                    return E
                },
                utils: function() {
                    return o
                }
            });
            var r = {};
            i.r(r),
            i.d(r, {
                load: function() {
                    return we
                },
                readBlob: function() {
                    return xe
                }
            });
            var n = i(6493)
              , s = i(3409)
              , a = i(3145)
              , o = i(7652)
              , l = i(8219)
              , h = i(6331)
              , u = i(7449)
              , c = i(5108)
              , d = i(8054)
              , p = i(8035)
              , f = i(7770)
              , g = i(2433)
              , m = i(1479);
            class b extends m.T {
                _beforeChanged() {
                    super._beforeChanged(),
                    (this.isDirty("radius") || this.isDirty("innerRadius") || this.isDirty("spikes")) && (this._clear = !0)
                }
                _changed() {
                    if (super._changed(),
                    this._clear) {
                        const e = this._display
                          , t = this.get("radius", 0)
                          , i = o.relativeToValue(this.get("innerRadius", 0), t)
                          , r = this.get("spikes", 0)
                          , n = Math.PI / r;
                        let s = Math.PI / 2 * 3;
                        e.moveTo(0, -t);
                        for (let a = 0; a < r; a++)
                            e.lineTo(Math.cos(s) * t, Math.sin(s) * t),
                            s += n,
                            e.lineTo(Math.cos(s) * i, Math.sin(s) * i),
                            s += n;
                        e.lineTo(0, -t),
                        e.closePath()
                    }
                }
            }
            Object.defineProperty(b, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Star"
            }),
            Object.defineProperty(b, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: m.T.classNames.concat([b.className])
            });
            var _ = i(9361)
              , v = i(8777)
              , y = i(6881)
              , w = i(962)
              , x = i(6245)
              , O = i(3497)
              , P = i(5769)
              , D = i(7144)
              , k = i(1112)
              , T = i(2876)
              , M = i(1747)
              , E = i(5040);
            class S extends v.W {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "labelContainer", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this.children.push(v.W.new(this._root, {}))
                    }),
                    Object.defineProperty(this, "markerContainer", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this.children.push(v.W.new(this._root, {}))
                    }),
                    Object.defineProperty(this, "startLabel", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this.labelContainer.children.push(w._.new(this._root, {
                            themeTags: ["start"]
                        }))
                    }),
                    Object.defineProperty(this, "endLabel", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: this.labelContainer.children.push(w._.new(this._root, {
                            themeTags: ["end"]
                        }))
                    }),
                    Object.defineProperty(this, "markers", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: new D.o(P.YS.new({}),( () => O.c._new(this._root, {
                            themeTags: o.mergeTags(this.markers.template.get("themeTags", []), [this.get("orientation"), "heatlegend", "marker"])
                        }, [this.markers.template])))
                    })
                }
                _afterNew() {
                    this._settings.themeTags = o.mergeTags(this._settings.themeTags, ["heatlegend", this._settings.orientation]),
                    super._afterNew(),
                    this.set("tooltip", T.u.new(this._root, {
                        themeTags: ["heatlegend"]
                    }))
                }
                makeMarker() {
                    const e = this.markers.make();
                    return e.states.create("disabled", {}),
                    e
                }
                showValue(e, t, i) {
                    const r = this.getTooltip();
                    if (r && E.isNumber(e)) {
                        const n = this.get("startValue", 0)
                          , s = (e - n) / (this.get("endValue", 1) - n)
                          , a = this.get("startColor")
                          , o = this.get("endColor");
                        let l;
                        t || (t = this.getNumberFormatter().format(e)),
                        i || (i = k.Il.interpolate(s, a, o)),
                        r.label.set("text", t),
                        l = "vertical" == this.get("orientation") ? this.markerContainer.toGlobal({
                            x: 0,
                            y: this.innerHeight() * (1 - s)
                        }) : this.markerContainer.toGlobal({
                            x: this.innerWidth() * s,
                            y: 0
                        });
                        let h = r.get("background");
                        h && h.set("fill", k.Il.interpolate(s, a, o)),
                        r.set("pointTo", l),
                        r.show()
                    }
                }
                _prepareChildren() {
                    super._prepareChildren();
                    const e = this.labelContainer
                      , t = this.get("orientation")
                      , i = this.startLabel
                      , r = this.endLabel
                      , n = this.getTooltip();
                    if (this.isDirty("orientation") && ("vertical" == t ? (this.markerContainer.setAll({
                        layout: this._root.verticalLayout,
                        height: x.AQ
                    }),
                    this.set("layout", this._root.horizontalLayout),
                    i.setAll({
                        y: x.AQ,
                        x: void 0,
                        centerY: x.AQ,
                        centerX: x.AQ
                    }),
                    r.setAll({
                        y: 0,
                        x: void 0,
                        centerY: 0,
                        centerX: x.AQ
                    }),
                    e.setAll({
                        height: x.AQ,
                        width: void 0
                    }),
                    n && n.set("pointerOrientation", "horizontal")) : (this.markerContainer.setAll({
                        layout: this._root.horizontalLayout,
                        width: x.AQ
                    }),
                    this.set("layout", this._root.verticalLayout),
                    i.setAll({
                        x: 0,
                        y: void 0,
                        centerX: 0,
                        centerY: 0
                    }),
                    r.setAll({
                        x: x.AQ,
                        y: void 0,
                        centerX: x.AQ,
                        centerY: 0
                    }),
                    e.setAll({
                        width: x.AQ,
                        height: void 0
                    }),
                    n && n.set("pointerOrientation", "vertical"))),
                    this.isDirty("stepCount")) {
                        const e = this.get("stepCount", 1)
                          , i = this.get("startColor")
                          , r = this.get("endColor");
                        if (this.markerContainer.children.clear(),
                        e > 1)
                            for (let n = 0; n < e; n++) {
                                const s = this.makeMarker();
                                "vertical" == t ? this.markerContainer.children.moveValue(s, 0) : this.markerContainer.children.push(s),
                                i && r && s.set("fill", k.Il.interpolate(n / e, i, r))
                            }
                        else if (1 == e) {
                            const e = this.makeMarker();
                            this.markerContainer.children.push(e);
                            const n = M.o.new(this._root, {
                                stops: [{
                                    color: i
                                }, {
                                    color: r
                                }]
                            });
                            if ("vertical" == t) {
                                n.set("rotation", 90);
                                let e = n.get("stops");
                                e && e.reverse()
                            } else
                                n.set("rotation", 0);
                            i && r && e.set("fillGradient", n)
                        }
                    }
                    (this.isDirty("startText") || this.isDirty("startValue")) && i.set("text", this.get("startText", this.getNumberFormatter().format(this.get("startValue", 0)))),
                    (this.isDirty("endText") || this.isDirty("endValue")) && r.set("text", this.get("endText", this.getNumberFormatter().format(this.get("endValue", 1))))
                }
            }
            Object.defineProperty(S, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "HeatLegend"
            }),
            Object.defineProperty(S, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: v.W.classNames.concat([S.className])
            });
            var C = i(4431)
              , N = i(2010)
              , L = i(3105)
              , j = i(2077)
              , A = i(5021)
              , R = i(8931)
              , B = i(815)
              , U = i(4244)
              , F = i(7142);
            class I extends m.T {
                _beforeChanged() {
                    super._beforeChanged(),
                    (this.isDirty("width") || this.isDirty("height") || this.isPrivateDirty("width") || this.isPrivateDirty("height")) && (this._clear = !0)
                }
                _changed() {
                    super._changed(),
                    this._clear && !this.get("draw") && this._draw()
                }
                _draw() {
                    const e = this.width()
                      , t = this.height()
                      , i = this._display;
                    i.moveTo(-e / 2, t / 2),
                    i.lineTo(0, -t / 2),
                    i.lineTo(e / 2, t / 2),
                    i.lineTo(-e / 2, t / 2),
                    i.closePath()
                }
                _updateSize() {
                    this.markDirty(),
                    this._clear = !0
                }
            }
            Object.defineProperty(I, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Triangle"
            }),
            Object.defineProperty(I, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: m.T.classNames.concat([I.className])
            });
            var H = i(6001);
            class z extends H.L {
                _afterNew() {
                    this._addOrientationClass(),
                    super._afterNew(),
                    this.endGrip.setPrivate("visible", !1),
                    this.thumb.setPrivate("visible", !1)
                }
                updateGrips() {
                    super.updateGrips();
                    const e = this.startGrip;
                    this.endGrip.setAll({
                        x: e.x(),
                        y: e.y()
                    }),
                    this.setRaw("end", this.get("start"))
                }
            }
            Object.defineProperty(z, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "Slider"
            }),
            Object.defineProperty(z, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: H.L.classNames.concat([z.className])
            });
            var V = i(5863)
              , G = i(4596)
              , Y = i(3399)
              , W = i(1337)
              , X = i(5829)
              , $ = i(2036)
              , Z = i(2438)
              , K = i(1706)
              , q = i(462)
              , Q = i(1437)
              , J = i(5071);
            class ee extends Q.p {
                getFill(e) {
                    const t = this.getBounds(e);
                    let i = 0
                      , r = 0
                      , n = t.left || 0
                      , s = t.right || 0
                      , a = t.top || 0;
                    const l = s - n
                      , h = (t.bottom || 0) - a;
                    let u = e.get("radius");
                    E.isNumber(u) ? (i = 0,
                    r = 0) : (u = Math.min(l, h) / 2,
                    i = l / 2,
                    r = h / 2);
                    let c = this.get("x")
                      , d = this.get("y");
                    null != c && (i = o.relativeToValue(c, l)),
                    null != d && (r = o.relativeToValue(d, h));
                    const p = this._root._renderer.createRadialGradient(i, r, 0, i, r, u)
                      , f = this.get("stops");
                    if (f) {
                        let e = 0;
                        J.each(f, (t => {
                            let i = t.offset;
                            E.isNumber(i) || (i = e / (f.length - 1));
                            let r = t.opacity;
                            E.isNumber(r) || (r = 1);
                            let n = t.color;
                            if (n) {
                                const e = t.lighten;
                                e && (n = k.Il.lighten(n, e));
                                const s = t.brighten;
                                s && (n = k.Il.brighten(n, s)),
                                p.addColorStop(i, "rgba(" + n.r + "," + n.g + "," + n.b + "," + r + ")")
                            }
                            e++
                        }
                        ))
                    }
                    return p
                }
            }
            Object.defineProperty(ee, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "RadialGradient"
            }),
            Object.defineProperty(ee, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: Q.p.classNames.concat([ee.className])
            });
            var te = i(3437)
              , ie = i(751);
            class re extends te.c {
                _beforeChanged() {
                    super._beforeChanged(),
                    this.isDirty("gap") && (this._clear = !0)
                }
                _draw() {
                    super._draw();
                    const e = this.get("checkered", !1)
                      , t = this.get("centered", !0)
                      , i = this.get("gap", 0)
                      , r = this.get("rotation", 0);
                    let n = this.get("width", 100)
                      , s = this.get("height", 100)
                      , a = this.get("radius", 3)
                      , o = 2 * a + i
                      , l = 2 * a + i
                      , h = Math.round(n / o)
                      , u = Math.round(s / l);
                    o = n / h,
                    l = s / u,
                    0 != r && (this._display.x = o * ie.cos(r),
                    this._display.y = l * ie.sin(r));
                    const c = this.get("color")
                      , d = this.get("colorOpacity");
                    (c || d) && this._display.beginFill(c, d);
                    for (let n = 0 == r ? 0 : 2 * -u; n < 2 * u; n++)
                        for (let s = 0 == r ? 0 : 2 * -h; s < 2 * h; s++)
                            if (!e || 1 != (1 & n) && 1 != (1 & s) || 1 == (1 & n) && 1 == (1 & s)) {
                                let e = s * o
                                  , r = n * l;
                                t && (e += o + i / 2,
                                r += l + i / 2),
                                this._display.drawCircle(e - a, r - a, a)
                            }
                    e ? (n = n / 2 - 2 * i,
                    s = s / 2 - 2 * i) : (n -= i,
                    s -= i),
                    (c || d) && this._display.endFill()
                }
            }
            Object.defineProperty(re, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "CirclePattern"
            }),
            Object.defineProperty(re, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: te.c.classNames.concat([re.className])
            });
            class ne extends te.c {
                _beforeChanged() {
                    super._beforeChanged(),
                    this.isDirty("gap") && (this._clear = !0)
                }
                _draw() {
                    super._draw();
                    const e = this.get("width", 100)
                      , t = this.get("height", 100)
                      , i = this.get("gap", 0)
                      , r = this.get("strokeWidth", 1);
                    if (i) {
                        let n = i + r
                          , s = t / n;
                        for (let t = -s; t < 2 * s; t++) {
                            const i = Math.round(t * n - n / 2) + .5;
                            this._display.moveTo(-e, i),
                            this._display.lineTo(2 * e, i)
                        }
                    } else
                        this._display.moveTo(0, 0),
                        this._display.lineTo(e, 0);
                    this._display.lineStyle(r, this.get("color"), this.get("colorOpacity"));
                    let n = this.get("strokeDasharray");
                    E.isNumber(n) && (n = n < .5 ? [0] : [n]),
                    this._display.setLineDash(n);
                    const s = this.get("strokeDashoffset");
                    s && this._display.setLineDashOffset(s),
                    this._display.endStroke()
                }
            }
            Object.defineProperty(ne, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "LinePattern"
            }),
            Object.defineProperty(ne, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: te.c.classNames.concat([ne.className])
            });
            var se = i(4429);
            class ae extends te.c {
                _beforeChanged() {
                    super._beforeChanged(),
                    this.isDirty("gap") && (this._clear = !0)
                }
                _draw() {
                    super._draw();
                    const e = this.get("checkered", !1)
                      , t = this.get("centered", !0)
                      , i = this.get("gap", 0)
                      , r = this.get("rotation", 0);
                    let n = this.get("width", 100)
                      , s = this.get("height", 100)
                      , a = this.get("maxWidth", 5)
                      , o = this.get("maxHeight", 5)
                      , l = a + i
                      , h = o + i
                      , u = Math.round(n / l)
                      , c = Math.round(s / h);
                    l = n / u,
                    h = s / c,
                    0 != r && (this._display.x = l / 2 * ie.cos(r),
                    this._display.y = -h / 2 * ie.sin(r));
                    for (let i = 0 == r ? 0 : 2 * -c; i < 2 * c; i++)
                        for (let n = 0 == r ? 0 : 2 * -u; n < 2 * u; n++)
                            if (!e || 1 != (1 & i) && 1 != (1 & n) || 1 == (1 & i) && 1 == (1 & n)) {
                                let e = n * l
                                  , r = i * h;
                                t && (e += (l - a) / 2,
                                r += (h - o) / 2),
                                this._display.drawRect(e, r, a, o)
                            }
                    e ? (n = n / 2 - 2 * i,
                    s = s / 2 - 2 * i) : (n -= i,
                    s -= i);
                    const d = this.get("color")
                      , p = this.get("colorOpacity");
                    (d || p) && (this._display.beginFill(d, p),
                    this._display.endFill())
                }
            }
            Object.defineProperty(ae, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "RectanglePattern"
            }),
            Object.defineProperty(ae, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: te.c.classNames.concat([ae.className])
            });
            class oe extends te.c {
                _beforeChanged() {
                    super._beforeChanged(),
                    this.isDirty("svgPath") && (this._clear = !0)
                }
                _draw() {
                    super._draw();
                    const e = this.get("svgPath");
                    null != e && this._display.svgPath(e);
                    const t = this.get("color")
                      , i = this.get("colorOpacity");
                    (t || i) && (this._display.beginFill(t, i),
                    this._display.endFill())
                }
            }
            Object.defineProperty(oe, "className", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: "PathPattern"
            }),
            Object.defineProperty(oe, "classNames", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: te.c.classNames.concat([oe.className])
            });
            var le = i(2754)
              , he = i(9582)
              , ue = i(256);
            class ce {
                static parse(e, t) {
                    t = this._applyDefaults(t);
                    try {
                        if (E.isString(e)) {
                            let i = JSON.parse(e);
                            return t.reverse && E.isArray(i) && i.reverse(),
                            i
                        }
                        if (E.isArray(e) || E.isObject(e))
                            return e;
                        throw "Unable to parse JSON data"
                    } catch (e) {
                        return
                    }
                }
                static _applyDefaults(e) {
                    const t = {};
                    return e || (e = {}),
                    ue.each({
                        reverse: !1
                    }, ( (i, r) => {
                        t[i] = e[i] || r
                    }
                    )),
                    t
                }
            }
            class de {
                static parse(e, t) {
                    t = this._applyDefaults(t);
                    let i, r, n, s = this.CSVToArray(e, t.delimiter), a = [], o = [];
                    for (r = 0; r < t.skipRows; r++)
                        s.shift();
                    if (t.useColumnNames) {
                        o = s.shift();
                        for (let e = 0; e < o.length; e++)
                            i = null != o[e] ? o[e].replace(/^\s+|\s+$/gm, "") : "",
                            "" === i && (i = "col" + e),
                            o[e] = i
                    }
                    for (; n = t.reverse ? s.pop() : s.shift(),
                    n; ) {
                        if (t.skipEmpty && 1 === n.length && "" === n[0])
                            continue;
                        let e = {};
                        for (r = 0; r < n.length; r++)
                            i = void 0 === o[r] ? "col" + r : o[r],
                            e[i] = n[r];
                        a.push(e)
                    }
                    return a
                }
                static CSVToArray(e, t) {
                    t = t || ",";
                    let i = new RegExp("(\\" + t + '|\\r?\\n|\\r|^)(?:"([^"]*(?:""[^"]*)*)"|([^"\\' + t + "\\r\\n]*))","gi")
                      , r = [[]]
                      , n = null;
                    for (; n = i.exec(e),
                    n; ) {
                        let e, i = n[1];
                        i.length && i !== t && r.push([]),
                        e = n[2] ? n[2].replace(new RegExp('""',"g"), '"') : n[3],
                        r[r.length - 1].push(e)
                    }
                    return r
                }
                static _applyDefaults(e) {
                    const t = {};
                    return e || (e = {}),
                    ue.each({
                        delimiter: ",",
                        reverse: !1,
                        skipRows: 0,
                        skipEmpty: !0,
                        useColumnNames: !1
                    }, ( (i, r) => {
                        t[i] = e[i] || r
                    }
                    )),
                    t
                }
            }
            class pe extends h.JH {
                constructor() {
                    super(...arguments),
                    Object.defineProperty(this, "_checkDates", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_checkNumbers", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_checkColors", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_checkEmpty", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    }),
                    Object.defineProperty(this, "_checkDeep", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: !1
                    })
                }
                _afterNew() {
                    super._afterNew(),
                    this._checkFeatures(),
                    this.on("dateFields", ( () => this._checkFeatures())),
                    this.on("dateFormat", ( () => this._checkFeatures())),
                    this.on("numericFields", ( () => this._checkFeatures())),
                    this.on("colorFields", ( () => this._checkFeatures())),
                    this.on("emptyAs", ( () => this._checkFeatures()))
                }
                _checkFeatures() {
                    (this.isDirty("dateFields") || this.isDirty("dateFormat")) && (this._checkDates = this.get("dateFields") && this.get("dateFields").length > 0),
                    this.isDirty("numericFields") && (this._checkNumbers = this.get("numericFields") && this.get("numericFields").length > 0),
                    this.isDirty("colorFields") && (this._checkColors = this.get("colorFields") && this.get("colorFields").length > 0),
                    this.isDirty("emptyAs") && (this._checkEmpty = null != this.get("emptyAs")),
                    this._checkDeepFeatures()
                }
                _checkDeepFeatures() {
                    const e = [];
                    J.each(["dateFields", "numericFields", "colorFields"], (t => {
                        J.each(this.get(t, []), (t => {
                            const i = t.split(".");
                            for (i.pop(); i.length > 0; )
                                e.push(i.join(".")),
                                i.pop()
                        }
                        ))
                    }
                    )),
                    this._checkDeep = e.length > 0,
                    this.setPrivate("deepFields", e)
                }
                processMany(e) {
                    E.isArray(e) && (this._checkDates || this._checkNumbers || this._checkColors || this._checkEmpty) && J.each(e, (e => {
                        this.processRow(e)
                    }
                    ))
                }
                processRow(e, t="") {
                    ue.each(e, ( (i, r) => {
                        const n = t + i;
                        this._checkEmpty && (e[i] = this._maybeToEmpty(e[i])),
                        this._checkNumbers && (e[i] = this._maybeToNumber(n, e[i])),
                        this._checkDates && (e[i] = this._maybeToDate(n, e[i])),
                        this._checkColors && (e[i] = this._maybeToColor(n, e[i])),
                        this._checkDeep && -1 !== this.getPrivate("deepFields", []).indexOf(n) && E.isObject(e[i]) && this.processRow(e[i], n + ".")
                    }
                    ))
                }
                _maybeToNumber(e, t) {
                    return -1 !== this.get("numericFields").indexOf(e) ? E.toNumber(t) : t
                }
                _maybeToDate(e, t) {
                    return -1 !== this.get("dateFields").indexOf(e) ? this._root.dateFormatter.parse(t, this.get("dateFormat", "")).getTime() : t
                }
                _maybeToEmpty(e) {
                    return null != e && "" != e || null == this.get("emptyAs") ? e : this.get("emptyAs")
                }
                _maybeToColor(e, t) {
                    return -1 !== this.get("colorFields").indexOf(e) ? k.Il.fromAny(t) : t
                }
            }
            var fe = i(6460)
              , ge = i(798)
              , me = i(9821)
              , be = i(780)
              , _e = i(7255)
              , ve = i(1195)
              , ye = i(9395);
            function we(e, t, i) {
                return new Promise(( (r, n) => {
                    let s = null != i && "blob" == i.responseType
                      , a = new XMLHttpRequest;
                    if (a.onload = () => {
                        if (200 === a.status) {
                            let e, i;
                            if (s)
                                return i = a.response,
                                void xe(i).then((e => {
                                    let n = {
                                        xhr: a,
                                        error: !1,
                                        response: e,
                                        blob: i,
                                        type: a.getResponseHeader("Content-Type"),
                                        target: t
                                    };
                                    r(n)
                                }
                                ));
                            e = a.responseText || a.response;
                            let n = {
                                xhr: a,
                                error: !1,
                                response: e,
                                blob: i,
                                type: a.getResponseHeader("Content-Type"),
                                target: t
                            };
                            r(n)
                        } else
                            n({
                                xhr: a,
                                error: !0,
                                type: a.getResponseHeader("Content-Type"),
                                target: t
                            })
                    }
                    ,
                    a.onerror = () => {
                        n({
                            xhr: a,
                            error: !0,
                            type: a.getResponseHeader("Content-Type"),
                            target: t
                        })
                    }
                    ,
                    a.open("GET", e, !0),
                    i && i.withCredentials && (a.withCredentials = !0),
                    null != i) {
                        if (null != i.requestHeaders)
                            for (let e = 0; e < i.requestHeaders.length; e++) {
                                let t = i.requestHeaders[e];
                                a.setRequestHeader(t.key, t.value)
                            }
                        null != i.responseType && (a.responseType = i.responseType)
                    }
                    a.send()
                }
                ))
            }
            function xe(e) {
                return new Promise(( (t, i) => {
                    const r = new FileReader;
                    r.onload = e => {
                        t(r.result)
                    }
                    ,
                    r.onerror = e => {
                        i(e)
                    }
                    ,
                    r.readAsText(e)
                }
                ))
            }
            var Oe = i(1926)
        },
        3100: function(e, t) {
            "use strict";
            t.Z = {
                firstDayOfWeek: 1,
                _decimalSeparator: ".",
                _thousandSeparator: ",",
                _percentPrefix: null,
                _percentSuffix: "%",
                _big_number_suffix_3: "k",
                _big_number_suffix_6: "M",
                _big_number_suffix_9: "G",
                _big_number_suffix_12: "T",
                _big_number_suffix_15: "P",
                _big_number_suffix_18: "E",
                _big_number_suffix_21: "Z",
                _big_number_suffix_24: "Y",
                _small_number_suffix_3: "m",
                _small_number_suffix_6: "μ",
                _small_number_suffix_9: "n",
                _small_number_suffix_12: "p",
                _small_number_suffix_15: "f",
                _small_number_suffix_18: "a",
                _small_number_suffix_21: "z",
                _small_number_suffix_24: "y",
                _byte_suffix_B: "B",
                _byte_suffix_KB: "KB",
                _byte_suffix_MB: "MB",
                _byte_suffix_GB: "GB",
                _byte_suffix_TB: "TB",
                _byte_suffix_PB: "PB",
                _date: "yyyy-MM-dd",
                _date_millisecond: "mm:ss SSS",
                _date_millisecond_full: "HH:mm:ss SSS",
                _date_second: "HH:mm:ss",
                _date_second_full: "HH:mm:ss",
                _date_minute: "HH:mm",
                _date_minute_full: "HH:mm - MMM dd, yyyy",
                _date_hour: "HH:mm",
                _date_hour_full: "HH:mm - MMM dd, yyyy",
                _date_day: "MMM dd",
                _date_day_full: "MMM dd, yyyy",
                _date_week: "ww",
                _date_week_full: "MMM dd, yyyy",
                _date_month: "MMM",
                _date_month_full: "MMM, yyyy",
                _date_year: "yyyy",
                _duration_millisecond: "SSS",
                _duration_millisecond_second: "ss.SSS",
                _duration_millisecond_minute: "mm:ss SSS",
                _duration_millisecond_hour: "hh:mm:ss SSS",
                _duration_millisecond_day: "d'd' mm:ss SSS",
                _duration_millisecond_week: "d'd' mm:ss SSS",
                _duration_millisecond_month: "M'm' dd'd' mm:ss SSS",
                _duration_millisecond_year: "y'y' MM'm' dd'd' mm:ss SSS",
                _duration_second: "ss",
                _duration_second_minute: "mm:ss",
                _duration_second_hour: "hh:mm:ss",
                _duration_second_day: "d'd' hh:mm:ss",
                _duration_second_week: "d'd' hh:mm:ss",
                _duration_second_month: "M'm' dd'd' hh:mm:ss",
                _duration_second_year: "y'y' MM'm' dd'd' hh:mm:ss",
                _duration_minute: "mm",
                _duration_minute_hour: "hh:mm",
                _duration_minute_day: "d'd' hh:mm",
                _duration_minute_week: "d'd' hh:mm",
                _duration_minute_month: "M'm' dd'd' hh:mm",
                _duration_minute_year: "y'y' MM'm' dd'd' hh:mm",
                _duration_hour: "hh'h'",
                _duration_hour_day: "d'd' hh'h'",
                _duration_hour_week: "d'd' hh'h'",
                _duration_hour_month: "M'm' dd'd' hh'h'",
                _duration_hour_year: "y'y' MM'm' dd'd' hh'h'",
                _duration_day: "d'd'",
                _duration_day_week: "d'd'",
                _duration_day_month: "M'm' dd'd'",
                _duration_day_year: "y'y' MM'm' dd'd'",
                _duration_week: "w'w'",
                _duration_week_month: "w'w'",
                _duration_week_year: "w'w'",
                _duration_month: "M'm'",
                _duration_month_year: "y'y' MM'm'",
                _duration_year: "y'y'",
                _era_ad: "AD",
                _era_bc: "BC",
                A: "",
                P: "",
                AM: "",
                PM: "",
                "A.M.": "",
                "P.M.": "",
                January: "",
                February: "",
                March: "",
                April: "",
                May: "",
                June: "",
                July: "",
                August: "",
                September: "",
                October: "",
                November: "",
                December: "",
                Jan: "",
                Feb: "",
                Mar: "",
                Apr: "",
                "May(short)": "May",
                Jun: "",
                Jul: "",
                Aug: "",
                Sep: "",
                Oct: "",
                Nov: "",
                Dec: "",
                Sunday: "",
                Monday: "",
                Tuesday: "",
                Wednesday: "",
                Thursday: "",
                Friday: "",
                Saturday: "",
                Sun: "",
                Mon: "",
                Tue: "",
                Wed: "",
                Thu: "",
                Fri: "",
                Sat: "",
                _dateOrd: function(e) {
                    let t = "th";
                    if (e < 11 || e > 13)
                        switch (e % 10) {
                        case 1:
                            t = "st";
                            break;
                        case 2:
                            t = "nd";
                            break;
                        case 3:
                            t = "rd"
                        }
                    return t
                },
                "Zoom Out": "",
                Play: "",
                Stop: "",
                Legend: "",
                "Press ENTER to toggle": "",
                Loading: "",
                Home: "",
                Chart: "",
                "Serial chart": "",
                "X/Y chart": "",
                "Pie chart": "",
                "Gauge chart": "",
                "Radar chart": "",
                "Sankey diagram": "",
                "Flow diagram": "",
                "Chord diagram": "",
                "TreeMap chart": "",
                "Force directed tree": "",
                "Sliced chart": "",
                Series: "",
                "Candlestick Series": "",
                "OHLC Series": "",
                "Column Series": "",
                "Line Series": "",
                "Pie Slice Series": "",
                "Funnel Series": "",
                "Pyramid Series": "",
                "X/Y Series": "",
                Map: "",
                "Press ENTER to zoom in": "",
                "Press ENTER to zoom out": "",
                "Use arrow keys to zoom in and out": "",
                "Use plus and minus keys on your keyboard to zoom in and out": "",
                Export: "",
                Image: "",
                Data: "",
                Print: "",
                "Press ENTER or use arrow keys to navigate": "",
                "Press ENTER to open": "",
                "Press ENTER to print.": "",
                "Press ENTER to export as %1.": "",
                "(Press ESC to close this message)": "",
                "Image Export Complete": "",
                "Export operation took longer than expected. Something might have gone wrong.": "",
                "Saved from": "",
                PNG: "",
                JPG: "",
                GIF: "",
                SVG: "",
                PDF: "",
                JSON: "",
                CSV: "",
                XLSX: "",
                HTML: "",
                "Use TAB to select grip buttons or left and right arrows to change selection": "",
                "Use left and right arrows to move selection": "",
                "Use left and right arrows to move left selection": "",
                "Use left and right arrows to move right selection": "",
                "Use TAB select grip buttons or up and down arrows to change selection": "",
                "Use up and down arrows to move selection": "",
                "Use up and down arrows to move lower selection": "",
                "Use up and down arrows to move upper selection": "",
                "From %1 to %2": "",
                "From %1": "",
                "To %1": "",
                "No parser available for file: %1": "",
                "Error parsing file: %1": "",
                "Unable to load file: %1": "",
                "Invalid date": "",
                Close: "",
                Minimize: ""
            }
        },
        9629: function(e) {
            var t = function(e) {
                "use strict";
                var t, i = Object.prototype, r = i.hasOwnProperty, n = Object.defineProperty || function(e, t, i) {
                    e[t] = i.value
                }
                , s = "function" == typeof Symbol ? Symbol : {}, a = s.iterator || "@@iterator", o = s.asyncIterator || "@@asyncIterator", l = s.toStringTag || "@@toStringTag";
                function h(e, t, i) {
                    return Object.defineProperty(e, t, {
                        value: i,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }),
                    e[t]
                }
                try {
                    h({}, "")
                } catch (e) {
                    h = function(e, t, i) {
                        return e[t] = i
                    }
                }
                function u(e, t, i, r) {
                    var s = t && t.prototype instanceof m ? t : m
                      , a = Object.create(s.prototype)
                      , o = new E(r || []);
                    return n(a, "_invoke", {
                        value: D(e, i, o)
                    }),
                    a
                }
                function c(e, t, i) {
                    try {
                        return {
                            type: "normal",
                            arg: e.call(t, i)
                        }
                    } catch (e) {
                        return {
                            type: "throw",
                            arg: e
                        }
                    }
                }
                e.wrap = u;
                var d = "suspendedStart"
                  , p = "executing"
                  , f = "completed"
                  , g = {};
                function m() {}
                function b() {}
                function _() {}
                var v = {};
                h(v, a, (function() {
                    return this
                }
                ));
                var y = Object.getPrototypeOf
                  , w = y && y(y(S([])));
                w && w !== i && r.call(w, a) && (v = w);
                var x = _.prototype = m.prototype = Object.create(v);
                function O(e) {
                    ["next", "throw", "return"].forEach((function(t) {
                        h(e, t, (function(e) {
                            return this._invoke(t, e)
                        }
                        ))
                    }
                    ))
                }
                function P(e, t) {
                    function i(n, s, a, o) {
                        var l = c(e[n], e, s);
                        if ("throw" !== l.type) {
                            var h = l.arg
                              , u = h.value;
                            return u && "object" == typeof u && r.call(u, "__await") ? t.resolve(u.__await).then((function(e) {
                                i("next", e, a, o)
                            }
                            ), (function(e) {
                                i("throw", e, a, o)
                            }
                            )) : t.resolve(u).then((function(e) {
                                h.value = e,
                                a(h)
                            }
                            ), (function(e) {
                                return i("throw", e, a, o)
                            }
                            ))
                        }
                        o(l.arg)
                    }
                    var s;
                    n(this, "_invoke", {
                        value: function(e, r) {
                            function n() {
                                return new t((function(t, n) {
                                    i(e, r, t, n)
                                }
                                ))
                            }
                            return s = s ? s.then(n, n) : n()
                        }
                    })
                }
                function D(e, t, i) {
                    var r = d;
                    return function(n, s) {
                        if (r === p)
                            throw new Error("Generator is already running");
                        if (r === f) {
                            if ("throw" === n)
                                throw s;
                            return C()
                        }
                        for (i.method = n,
                        i.arg = s; ; ) {
                            var a = i.delegate;
                            if (a) {
                                var o = k(a, i);
                                if (o) {
                                    if (o === g)
                                        continue;
                                    return o
                                }
                            }
                            if ("next" === i.method)
                                i.sent = i._sent = i.arg;
                            else if ("throw" === i.method) {
                                if (r === d)
                                    throw r = f,
                                    i.arg;
                                i.dispatchException(i.arg)
                            } else
                                "return" === i.method && i.abrupt("return", i.arg);
                            r = p;
                            var l = c(e, t, i);
                            if ("normal" === l.type) {
                                if (r = i.done ? f : "suspendedYield",
                                l.arg === g)
                                    continue;
                                return {
                                    value: l.arg,
                                    done: i.done
                                }
                            }
                            "throw" === l.type && (r = f,
                            i.method = "throw",
                            i.arg = l.arg)
                        }
                    }
                }
                function k(e, i) {
                    var r = i.method
                      , n = e.iterator[r];
                    if (n === t)
                        return i.delegate = null,
                        "throw" === r && e.iterator.return && (i.method = "return",
                        i.arg = t,
                        k(e, i),
                        "throw" === i.method) || "return" !== r && (i.method = "throw",
                        i.arg = new TypeError("The iterator does not provide a '" + r + "' method")),
                        g;
                    var s = c(n, e.iterator, i.arg);
                    if ("throw" === s.type)
                        return i.method = "throw",
                        i.arg = s.arg,
                        i.delegate = null,
                        g;
                    var a = s.arg;
                    return a ? a.done ? (i[e.resultName] = a.value,
                    i.next = e.nextLoc,
                    "return" !== i.method && (i.method = "next",
                    i.arg = t),
                    i.delegate = null,
                    g) : a : (i.method = "throw",
                    i.arg = new TypeError("iterator result is not an object"),
                    i.delegate = null,
                    g)
                }
                function T(e) {
                    var t = {
                        tryLoc: e[0]
                    };
                    1 in e && (t.catchLoc = e[1]),
                    2 in e && (t.finallyLoc = e[2],
                    t.afterLoc = e[3]),
                    this.tryEntries.push(t)
                }
                function M(e) {
                    var t = e.completion || {};
                    t.type = "normal",
                    delete t.arg,
                    e.completion = t
                }
                function E(e) {
                    this.tryEntries = [{
                        tryLoc: "root"
                    }],
                    e.forEach(T, this),
                    this.reset(!0)
                }
                function S(e) {
                    if (e) {
                        var i = e[a];
                        if (i)
                            return i.call(e);
                        if ("function" == typeof e.next)
                            return e;
                        if (!isNaN(e.length)) {
                            var n = -1
                              , s = function i() {
                                for (; ++n < e.length; )
                                    if (r.call(e, n))
                                        return i.value = e[n],
                                        i.done = !1,
                                        i;
                                return i.value = t,
                                i.done = !0,
                                i
                            };
                            return s.next = s
                        }
                    }
                    return {
                        next: C
                    }
                }
                function C() {
                    return {
                        value: t,
                        done: !0
                    }
                }
                return b.prototype = _,
                n(x, "constructor", {
                    value: _,
                    configurable: !0
                }),
                n(_, "constructor", {
                    value: b,
                    configurable: !0
                }),
                b.displayName = h(_, l, "GeneratorFunction"),
                e.isGeneratorFunction = function(e) {
                    var t = "function" == typeof e && e.constructor;
                    return !!t && (t === b || "GeneratorFunction" === (t.displayName || t.name))
                }
                ,
                e.mark = function(e) {
                    return Object.setPrototypeOf ? Object.setPrototypeOf(e, _) : (e.__proto__ = _,
                    h(e, l, "GeneratorFunction")),
                    e.prototype = Object.create(x),
                    e
                }
                ,
                e.awrap = function(e) {
                    return {
                        __await: e
                    }
                }
                ,
                O(P.prototype),
                h(P.prototype, o, (function() {
                    return this
                }
                )),
                e.AsyncIterator = P,
                e.async = function(t, i, r, n, s) {
                    void 0 === s && (s = Promise);
                    var a = new P(u(t, i, r, n),s);
                    return e.isGeneratorFunction(i) ? a : a.next().then((function(e) {
                        return e.done ? e.value : a.next()
                    }
                    ))
                }
                ,
                O(x),
                h(x, l, "Generator"),
                h(x, a, (function() {
                    return this
                }
                )),
                h(x, "toString", (function() {
                    return "[object Generator]"
                }
                )),
                e.keys = function(e) {
                    var t = Object(e)
                      , i = [];
                    for (var r in t)
                        i.push(r);
                    return i.reverse(),
                    function e() {
                        for (; i.length; ) {
                            var r = i.pop();
                            if (r in t)
                                return e.value = r,
                                e.done = !1,
                                e
                        }
                        return e.done = !0,
                        e
                    }
                }
                ,
                e.values = S,
                E.prototype = {
                    constructor: E,
                    reset: function(e) {
                        if (this.prev = 0,
                        this.next = 0,
                        this.sent = this._sent = t,
                        this.done = !1,
                        this.delegate = null,
                        this.method = "next",
                        this.arg = t,
                        this.tryEntries.forEach(M),
                        !e)
                            for (var i in this)
                                "t" === i.charAt(0) && r.call(this, i) && !isNaN(+i.slice(1)) && (this[i] = t)
                    },
                    stop: function() {
                        this.done = !0;
                        var e = this.tryEntries[0].completion;
                        if ("throw" === e.type)
                            throw e.arg;
                        return this.rval
                    },
                    dispatchException: function(e) {
                        if (this.done)
                            throw e;
                        var i = this;
                        function n(r, n) {
                            return o.type = "throw",
                            o.arg = e,
                            i.next = r,
                            n && (i.method = "next",
                            i.arg = t),
                            !!n
                        }
                        for (var s = this.tryEntries.length - 1; s >= 0; --s) {
                            var a = this.tryEntries[s]
                              , o = a.completion;
                            if ("root" === a.tryLoc)
                                return n("end");
                            if (a.tryLoc <= this.prev) {
                                var l = r.call(a, "catchLoc")
                                  , h = r.call(a, "finallyLoc");
                                if (l && h) {
                                    if (this.prev < a.catchLoc)
                                        return n(a.catchLoc, !0);
                                    if (this.prev < a.finallyLoc)
                                        return n(a.finallyLoc)
                                } else if (l) {
                                    if (this.prev < a.catchLoc)
                                        return n(a.catchLoc, !0)
                                } else {
                                    if (!h)
                                        throw new Error("try statement without catch or finally");
                                    if (this.prev < a.finallyLoc)
                                        return n(a.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(e, t) {
                        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                            var n = this.tryEntries[i];
                            if (n.tryLoc <= this.prev && r.call(n, "finallyLoc") && this.prev < n.finallyLoc) {
                                var s = n;
                                break
                            }
                        }
                        s && ("break" === e || "continue" === e) && s.tryLoc <= t && t <= s.finallyLoc && (s = null);
                        var a = s ? s.completion : {};
                        return a.type = e,
                        a.arg = t,
                        s ? (this.method = "next",
                        this.next = s.finallyLoc,
                        g) : this.complete(a)
                    },
                    complete: function(e, t) {
                        if ("throw" === e.type)
                            throw e.arg;
                        return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg,
                        this.method = "return",
                        this.next = "end") : "normal" === e.type && t && (this.next = t),
                        g
                    },
                    finish: function(e) {
                        for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                            var i = this.tryEntries[t];
                            if (i.finallyLoc === e)
                                return this.complete(i.completion, i.afterLoc),
                                M(i),
                                g
                        }
                    },
                    catch: function(e) {
                        for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                            var i = this.tryEntries[t];
                            if (i.tryLoc === e) {
                                var r = i.completion;
                                if ("throw" === r.type) {
                                    var n = r.arg;
                                    M(i)
                                }
                                return n
                            }
                        }
                        throw new Error("illegal catch attempt")
                    },
                    delegateYield: function(e, i, r) {
                        return this.delegate = {
                            iterator: S(e),
                            resultName: i,
                            nextLoc: r
                        },
                        "next" === this.method && (this.arg = t),
                        g
                    }
                },
                e
            }(e.exports);
            try {
                regeneratorRuntime = t
            } catch (e) {
                "object" == typeof globalThis ? globalThis.regeneratorRuntime = t : Function("r", "regeneratorRuntime = r")(t)
            }
        },
        5125: function(e, t, i) {
            "use strict";
            function r(e, t, i, r) {
                return new (i || (i = Promise))((function(n, s) {
                    function a(e) {
                        try {
                            l(r.next(e))
                        } catch (e) {
                            s(e)
                        }
                    }
                    function o(e) {
                        try {
                            l(r.throw(e))
                        } catch (e) {
                            s(e)
                        }
                    }
                    function l(e) {
                        var t;
                        e.done ? n(e.value) : (t = e.value,
                        t instanceof i ? t : new i((function(e) {
                            e(t)
                        }
                        ))).then(a, o)
                    }
                    l((r = r.apply(e, t || [])).next())
                }
                ))
            }
            i.d(t, {
                mG: function() {
                    return r
                }
            }),
            Object.create,
            Object.create
        },
        8494: function(e, t, i) {
            "use strict";
            i.r(t),
            i.d(t, {
                am5: function() {
                    return g
                }
            });
            const r = window.Promise
              , n = r && r.prototype.then
              , s = r && r.prototype.catch
              , a = r && r.prototype.finally
              , o = r && r.reject
              , l = r && r.resolve
              , h = r && r.allSettled
              , u = r && r.all
              , c = r && r.race
              , d = window.fetch
              , p = String.prototype.startsWith
              , f = String.prototype.endsWith;
            i(9629);
            const g = i(9852);
            var m;
            i.p = (m = function() {
                if (document.currentScript)
                    return document.currentScript;
                var e = document.getElementsByTagName("script");
                return e[e.length - 1]
            }().src,
            /(.*\/)[^\/]*$/.exec(m)[1]),
            r && (window.Promise = r,
            n && (r.prototype.then = n),
            s && (r.prototype.catch = s),
            a && (r.prototype.finally = a),
            o && (r.reject = o),
            l && (r.resolve = l),
            h && (r.allSettled = h),
            u && (r.all = u),
            c && (r.race = c)),
            d && (window.fetch = d),
            p && (String.prototype.startsWith = p),
            f && (String.prototype.endsWith = f)
        },
        4138: function(e, t) {
            "use strict";
            var i = {
                value: () => {}
            };
            function r() {
                for (var e, t = 0, i = arguments.length, r = {}; t < i; ++t) {
                    if (!(e = arguments[t] + "") || e in r || /[\s.]/.test(e))
                        throw new Error("illegal type: " + e);
                    r[e] = []
                }
                return new n(r)
            }
            function n(e) {
                this._ = e
            }
            function s(e, t) {
                return e.trim().split(/^|\s+/).map((function(e) {
                    var i = ""
                      , r = e.indexOf(".");
                    if (r >= 0 && (i = e.slice(r + 1),
                    e = e.slice(0, r)),
                    e && !t.hasOwnProperty(e))
                        throw new Error("unknown type: " + e);
                    return {
                        type: e,
                        name: i
                    }
                }
                ))
            }
            function a(e, t) {
                for (var i, r = 0, n = e.length; r < n; ++r)
                    if ((i = e[r]).name === t)
                        return i.value
            }
            function o(e, t, r) {
                for (var n = 0, s = e.length; n < s; ++n)
                    if (e[n].name === t) {
                        e[n] = i,
                        e = e.slice(0, n).concat(e.slice(n + 1));
                        break
                    }
                return null != r && e.push({
                    name: t,
                    value: r
                }),
                e
            }
            n.prototype = r.prototype = {
                constructor: n,
                on: function(e, t) {
                    var i, r = this._, n = s(e + "", r), l = -1, h = n.length;
                    if (!(arguments.length < 2)) {
                        if (null != t && "function" != typeof t)
                            throw new Error("invalid callback: " + t);
                        for (; ++l < h; )
                            if (i = (e = n[l]).type)
                                r[i] = o(r[i], e.name, t);
                            else if (null == t)
                                for (i in r)
                                    r[i] = o(r[i], e.name, null);
                        return this
                    }
                    for (; ++l < h; )
                        if ((i = (e = n[l]).type) && (i = a(r[i], e.name)))
                            return i
                },
                copy: function() {
                    var e = {}
                      , t = this._;
                    for (var i in t)
                        e[i] = t[i].slice();
                    return new n(e)
                },
                call: function(e, t) {
                    if ((i = arguments.length - 2) > 0)
                        for (var i, r, n = new Array(i), s = 0; s < i; ++s)
                            n[s] = arguments[s + 2];
                    if (!this._.hasOwnProperty(e))
                        throw new Error("unknown type: " + e);
                    for (s = 0,
                    i = (r = this._[e]).length; s < i; ++s)
                        r[s].value.apply(t, n)
                },
                apply: function(e, t, i) {
                    if (!this._.hasOwnProperty(e))
                        throw new Error("unknown type: " + e);
                    for (var r = this._[e], n = 0, s = r.length; n < s; ++n)
                        r[n].value.apply(t, i)
                }
            },
            t.Z = r
        },
        5493: function(e, t, i) {
            "use strict";
            i.d(t, {
                ET: function() {
                    return h
                },
                y$: function() {
                    return l
                }
            });
            const r = Math.PI
              , n = 2 * r
              , s = 1e-6
              , a = n - s;
            function o(e) {
                this._ += e[0];
                for (let t = 1, i = e.length; t < i; ++t)
                    this._ += arguments[t] + e[t]
            }
            class l {
                constructor(e) {
                    this._x0 = this._y0 = this._x1 = this._y1 = null,
                    this._ = "",
                    this._append = null == e ? o : function(e) {
                        let t = Math.floor(e);
                        if (!(t >= 0))
                            throw new Error(`invalid digits: ${e}`);
                        if (t > 15)
                            return o;
                        const i = 10 ** t;
                        return function(e) {
                            this._ += e[0];
                            for (let t = 1, r = e.length; t < r; ++t)
                                this._ += Math.round(arguments[t] * i) / i + e[t]
                        }
                    }(e)
                }
                moveTo(e, t) {
                    this._append`M${this._x0 = this._x1 = +e},${this._y0 = this._y1 = +t}`
                }
                closePath() {
                    null !== this._x1 && (this._x1 = this._x0,
                    this._y1 = this._y0,
                    this._append`Z`)
                }
                lineTo(e, t) {
                    this._append`L${this._x1 = +e},${this._y1 = +t}`
                }
                quadraticCurveTo(e, t, i, r) {
                    this._append`Q${+e},${+t},${this._x1 = +i},${this._y1 = +r}`
                }
                bezierCurveTo(e, t, i, r, n, s) {
                    this._append`C${+e},${+t},${+i},${+r},${this._x1 = +n},${this._y1 = +s}`
                }
                arcTo(e, t, i, n, a) {
                    if (e = +e,
                    t = +t,
                    i = +i,
                    n = +n,
                    (a = +a) < 0)
                        throw new Error(`negative radius: ${a}`);
                    let o = this._x1
                      , l = this._y1
                      , h = i - e
                      , u = n - t
                      , c = o - e
                      , d = l - t
                      , p = c * c + d * d;
                    if (null === this._x1)
                        this._append`M${this._x1 = e},${this._y1 = t}`;
                    else if (p > s)
                        if (Math.abs(d * h - u * c) > s && a) {
                            let f = i - o
                              , g = n - l
                              , m = h * h + u * u
                              , b = f * f + g * g
                              , _ = Math.sqrt(m)
                              , v = Math.sqrt(p)
                              , y = a * Math.tan((r - Math.acos((m + p - b) / (2 * _ * v))) / 2)
                              , w = y / v
                              , x = y / _;
                            Math.abs(w - 1) > s && this._append`L${e + w * c},${t + w * d}`,
                            this._append`A${a},${a},0,0,${+(d * f > c * g)},${this._x1 = e + x * h},${this._y1 = t + x * u}`
                        } else
                            this._append`L${this._x1 = e},${this._y1 = t}`
                }
                arc(e, t, i, o, l, h) {
                    if (e = +e,
                    t = +t,
                    h = !!h,
                    (i = +i) < 0)
                        throw new Error(`negative radius: ${i}`);
                    let u = i * Math.cos(o)
                      , c = i * Math.sin(o)
                      , d = e + u
                      , p = t + c
                      , f = 1 ^ h
                      , g = h ? o - l : l - o;
                    null === this._x1 ? this._append`M${d},${p}` : (Math.abs(this._x1 - d) > s || Math.abs(this._y1 - p) > s) && this._append`L${d},${p}`,
                    i && (g < 0 && (g = g % n + n),
                    g > a ? this._append`A${i},${i},0,1,${f},${e - u},${t - c}A${i},${i},0,1,${f},${this._x1 = d},${this._y1 = p}` : g > s && this._append`A${i},${i},0,${+(g >= r)},${f},${this._x1 = e + i * Math.cos(l)},${this._y1 = t + i * Math.sin(l)}`)
                }
                rect(e, t, i, r) {
                    this._append`M${this._x0 = this._x1 = +e},${this._y0 = this._y1 = +t}h${i = +i}v${+r}h${-i}Z`
                }
                toString() {
                    return this._
                }
            }
            function h() {
                return new l
            }
            h.prototype = l.prototype
        },
        832: function(e, t, i) {
            "use strict";
            i.d(t, {
                Z: function() {
                    return D
                }
            });
            var r = i(3141);
            const n = Math.abs
              , s = Math.atan2
              , a = Math.cos
              , o = Math.max
              , l = Math.min
              , h = Math.sin
              , u = Math.sqrt
              , c = 1e-12
              , d = Math.PI
              , p = d / 2
              , f = 2 * d;
            function g(e) {
                return e > 1 ? 0 : e < -1 ? d : Math.acos(e)
            }
            function m(e) {
                return e >= 1 ? p : e <= -1 ? -p : Math.asin(e)
            }
            var b = i(5987);
            function _(e) {
                return e.innerRadius
            }
            function v(e) {
                return e.outerRadius
            }
            function y(e) {
                return e.startAngle
            }
            function w(e) {
                return e.endAngle
            }
            function x(e) {
                return e && e.padAngle
            }
            function O(e, t, i, r, n, s, a, o) {
                var l = i - e
                  , h = r - t
                  , u = a - n
                  , d = o - s
                  , p = d * l - u * h;
                if (!(p * p < c))
                    return [e + (p = (u * (t - s) - d * (e - n)) / p) * l, t + p * h]
            }
            function P(e, t, i, r, n, s, a) {
                var l = e - i
                  , h = t - r
                  , c = (a ? s : -s) / u(l * l + h * h)
                  , d = c * h
                  , p = -c * l
                  , f = e + d
                  , g = t + p
                  , m = i + d
                  , b = r + p
                  , _ = (f + m) / 2
                  , v = (g + b) / 2
                  , y = m - f
                  , w = b - g
                  , x = y * y + w * w
                  , O = n - s
                  , P = f * b - m * g
                  , D = (w < 0 ? -1 : 1) * u(o(0, O * O * x - P * P))
                  , k = (P * w - y * D) / x
                  , T = (-P * y - w * D) / x
                  , M = (P * w + y * D) / x
                  , E = (-P * y + w * D) / x
                  , S = k - _
                  , C = T - v
                  , N = M - _
                  , L = E - v;
                return S * S + C * C > N * N + L * L && (k = M,
                T = E),
                {
                    cx: k,
                    cy: T,
                    x01: -d,
                    y01: -p,
                    x11: k * (n / O - 1),
                    y11: T * (n / O - 1)
                }
            }
            function D() {
                var e = _
                  , t = v
                  , i = (0,
                r.Z)(0)
                  , o = null
                  , D = y
                  , k = w
                  , T = x
                  , M = null
                  , E = (0,
                b.d)(S);
                function S() {
                    var r, b, _ = +e.apply(this, arguments), v = +t.apply(this, arguments), y = D.apply(this, arguments) - p, w = k.apply(this, arguments) - p, x = n(w - y), S = w > y;
                    if (M || (M = r = E()),
                    v < _ && (b = v,
                    v = _,
                    _ = b),
                    v > c)
                        if (x > f - c)
                            M.moveTo(v * a(y), v * h(y)),
                            M.arc(0, 0, v, y, w, !S),
                            _ > c && (M.moveTo(_ * a(w), _ * h(w)),
                            M.arc(0, 0, _, w, y, S));
                        else {
                            var C, N, L = y, j = w, A = y, R = w, B = x, U = x, F = T.apply(this, arguments) / 2, I = F > c && (o ? +o.apply(this, arguments) : u(_ * _ + v * v)), H = l(n(v - _) / 2, +i.apply(this, arguments)), z = H, V = H;
                            if (I > c) {
                                var G = m(I / _ * h(F))
                                  , Y = m(I / v * h(F));
                                (B -= 2 * G) > c ? (A += G *= S ? 1 : -1,
                                R -= G) : (B = 0,
                                A = R = (y + w) / 2),
                                (U -= 2 * Y) > c ? (L += Y *= S ? 1 : -1,
                                j -= Y) : (U = 0,
                                L = j = (y + w) / 2)
                            }
                            var W = v * a(L)
                              , X = v * h(L)
                              , $ = _ * a(R)
                              , Z = _ * h(R);
                            if (H > c) {
                                var K, q = v * a(j), Q = v * h(j), J = _ * a(A), ee = _ * h(A);
                                if (x < d)
                                    if (K = O(W, X, J, ee, q, Q, $, Z)) {
                                        var te = W - K[0]
                                          , ie = X - K[1]
                                          , re = q - K[0]
                                          , ne = Q - K[1]
                                          , se = 1 / h(g((te * re + ie * ne) / (u(te * te + ie * ie) * u(re * re + ne * ne))) / 2)
                                          , ae = u(K[0] * K[0] + K[1] * K[1]);
                                        z = l(H, (_ - ae) / (se - 1)),
                                        V = l(H, (v - ae) / (se + 1))
                                    } else
                                        z = V = 0
                            }
                            U > c ? V > c ? (C = P(J, ee, W, X, v, V, S),
                            N = P(q, Q, $, Z, v, V, S),
                            M.moveTo(C.cx + C.x01, C.cy + C.y01),
                            V < H ? M.arc(C.cx, C.cy, V, s(C.y01, C.x01), s(N.y01, N.x01), !S) : (M.arc(C.cx, C.cy, V, s(C.y01, C.x01), s(C.y11, C.x11), !S),
                            M.arc(0, 0, v, s(C.cy + C.y11, C.cx + C.x11), s(N.cy + N.y11, N.cx + N.x11), !S),
                            M.arc(N.cx, N.cy, V, s(N.y11, N.x11), s(N.y01, N.x01), !S))) : (M.moveTo(W, X),
                            M.arc(0, 0, v, L, j, !S)) : M.moveTo(W, X),
                            _ > c && B > c ? z > c ? (C = P($, Z, q, Q, _, -z, S),
                            N = P(W, X, J, ee, _, -z, S),
                            M.lineTo(C.cx + C.x01, C.cy + C.y01),
                            z < H ? M.arc(C.cx, C.cy, z, s(C.y01, C.x01), s(N.y01, N.x01), !S) : (M.arc(C.cx, C.cy, z, s(C.y01, C.x01), s(C.y11, C.x11), !S),
                            M.arc(0, 0, _, s(C.cy + C.y11, C.cx + C.x11), s(N.cy + N.y11, N.cx + N.x11), S),
                            M.arc(N.cx, N.cy, z, s(N.y11, N.x11), s(N.y01, N.x01), !S))) : M.arc(0, 0, _, R, A, S) : M.lineTo($, Z)
                        }
                    else
                        M.moveTo(0, 0);
                    if (M.closePath(),
                    r)
                        return M = null,
                        r + "" || null
                }
                return S.centroid = function() {
                    var i = (+e.apply(this, arguments) + +t.apply(this, arguments)) / 2
                      , r = (+D.apply(this, arguments) + +k.apply(this, arguments)) / 2 - d / 2;
                    return [a(r) * i, h(r) * i]
                }
                ,
                S.innerRadius = function(t) {
                    return arguments.length ? (e = "function" == typeof t ? t : (0,
                    r.Z)(+t),
                    S) : e
                }
                ,
                S.outerRadius = function(e) {
                    return arguments.length ? (t = "function" == typeof e ? e : (0,
                    r.Z)(+e),
                    S) : t
                }
                ,
                S.cornerRadius = function(e) {
                    return arguments.length ? (i = "function" == typeof e ? e : (0,
                    r.Z)(+e),
                    S) : i
                }
                ,
                S.padRadius = function(e) {
                    return arguments.length ? (o = null == e ? null : "function" == typeof e ? e : (0,
                    r.Z)(+e),
                    S) : o
                }
                ,
                S.startAngle = function(e) {
                    return arguments.length ? (D = "function" == typeof e ? e : (0,
                    r.Z)(+e),
                    S) : D
                }
                ,
                S.endAngle = function(e) {
                    return arguments.length ? (k = "function" == typeof e ? e : (0,
                    r.Z)(+e),
                    S) : k
                }
                ,
                S.padAngle = function(e) {
                    return arguments.length ? (T = "function" == typeof e ? e : (0,
                    r.Z)(+e),
                    S) : T
                }
                ,
                S.context = function(e) {
                    return arguments.length ? (M = null == e ? null : e,
                    S) : M
                }
                ,
                S
            }
        },
        3794: function(e, t, i) {
            "use strict";
            i.d(t, {
                Z: function() {
                    return h
                }
            });
            var r = i(8457)
              , n = i(3141)
              , s = i(964)
              , a = i(774)
              , o = i(5987)
              , l = i(6758);
            function h(e, t, i) {
                var h = null
                  , u = (0,
                n.Z)(!0)
                  , c = null
                  , d = s.Z
                  , p = null
                  , f = (0,
                o.d)(g);
                function g(n) {
                    var s, a, o, l, g, m = (n = (0,
                    r.Z)(n)).length, b = !1, _ = new Array(m), v = new Array(m);
                    for (null == c && (p = d(g = f())),
                    s = 0; s <= m; ++s) {
                        if (!(s < m && u(l = n[s], s, n)) === b)
                            if (b = !b)
                                a = s,
                                p.areaStart(),
                                p.lineStart();
                            else {
                                for (p.lineEnd(),
                                p.lineStart(),
                                o = s - 1; o >= a; --o)
                                    p.point(_[o], v[o]);
                                p.lineEnd(),
                                p.areaEnd()
                            }
                        b && (_[s] = +e(l, s, n),
                        v[s] = +t(l, s, n),
                        p.point(h ? +h(l, s, n) : _[s], i ? +i(l, s, n) : v[s]))
                    }
                    if (g)
                        return p = null,
                        g + "" || null
                }
                function m() {
                    return (0,
                    a.Z)().defined(u).curve(d).context(c)
                }
                return e = "function" == typeof e ? e : void 0 === e ? l.x : (0,
                n.Z)(+e),
                t = "function" == typeof t ? t : void 0 === t ? (0,
                n.Z)(0) : (0,
                n.Z)(+t),
                i = "function" == typeof i ? i : void 0 === i ? l.y : (0,
                n.Z)(+i),
                g.x = function(t) {
                    return arguments.length ? (e = "function" == typeof t ? t : (0,
                    n.Z)(+t),
                    h = null,
                    g) : e
                }
                ,
                g.x0 = function(t) {
                    return arguments.length ? (e = "function" == typeof t ? t : (0,
                    n.Z)(+t),
                    g) : e
                }
                ,
                g.x1 = function(e) {
                    return arguments.length ? (h = null == e ? null : "function" == typeof e ? e : (0,
                    n.Z)(+e),
                    g) : h
                }
                ,
                g.y = function(e) {
                    return arguments.length ? (t = "function" == typeof e ? e : (0,
                    n.Z)(+e),
                    i = null,
                    g) : t
                }
                ,
                g.y0 = function(e) {
                    return arguments.length ? (t = "function" == typeof e ? e : (0,
                    n.Z)(+e),
                    g) : t
                }
                ,
                g.y1 = function(e) {
                    return arguments.length ? (i = null == e ? null : "function" == typeof e ? e : (0,
                    n.Z)(+e),
                    g) : i
                }
                ,
                g.lineX0 = g.lineY0 = function() {
                    return m().x(e).y(t)
                }
                ,
                g.lineY1 = function() {
                    return m().x(e).y(i)
                }
                ,
                g.lineX1 = function() {
                    return m().x(h).y(t)
                }
                ,
                g.defined = function(e) {
                    return arguments.length ? (u = "function" == typeof e ? e : (0,
                    n.Z)(!!e),
                    g) : u
                }
                ,
                g.curve = function(e) {
                    return arguments.length ? (d = e,
                    null != c && (p = d(c)),
                    g) : d
                }
                ,
                g.context = function(e) {
                    return arguments.length ? (null == e ? c = p = null : p = d(c = e),
                    g) : c
                }
                ,
                g
            }
        },
        8457: function(e, t, i) {
            "use strict";
            function r(e) {
                return "object" == typeof e && "length"in e ? e : Array.from(e)
            }
            i.d(t, {
                Z: function() {
                    return r
                }
            }),
            Array.prototype.slice
        },
        3141: function(e, t, i) {
            "use strict";
            function r(e) {
                return function() {
                    return e
                }
            }
            i.d(t, {
                Z: function() {
                    return r
                }
            })
        },
        964: function(e, t, i) {
            "use strict";
            function r(e) {
                this._context = e
            }
            function n(e) {
                return new r(e)
            }
            i.d(t, {
                Z: function() {
                    return n
                }
            }),
            r.prototype = {
                areaStart: function() {
                    this._line = 0
                },
                areaEnd: function() {
                    this._line = NaN
                },
                lineStart: function() {
                    this._point = 0
                },
                lineEnd: function() {
                    (this._line || 0 !== this._line && 1 === this._point) && this._context.closePath(),
                    this._line = 1 - this._line
                },
                point: function(e, t) {
                    switch (e = +e,
                    t = +t,
                    this._point) {
                    case 0:
                        this._point = 1,
                        this._line ? this._context.lineTo(e, t) : this._context.moveTo(e, t);
                        break;
                    case 1:
                        this._point = 2;
                    default:
                        this._context.lineTo(e, t)
                    }
                }
            }
        },
        774: function(e, t, i) {
            "use strict";
            i.d(t, {
                Z: function() {
                    return l
                }
            });
            var r = i(8457)
              , n = i(3141)
              , s = i(964)
              , a = i(5987)
              , o = i(6758);
            function l(e, t) {
                var i = (0,
                n.Z)(!0)
                  , l = null
                  , h = s.Z
                  , u = null
                  , c = (0,
                a.d)(d);
                function d(n) {
                    var s, a, o, d = (n = (0,
                    r.Z)(n)).length, p = !1;
                    for (null == l && (u = h(o = c())),
                    s = 0; s <= d; ++s)
                        !(s < d && i(a = n[s], s, n)) === p && ((p = !p) ? u.lineStart() : u.lineEnd()),
                        p && u.point(+e(a, s, n), +t(a, s, n));
                    if (o)
                        return u = null,
                        o + "" || null
                }
                return e = "function" == typeof e ? e : void 0 === e ? o.x : (0,
                n.Z)(e),
                t = "function" == typeof t ? t : void 0 === t ? o.y : (0,
                n.Z)(t),
                d.x = function(t) {
                    return arguments.length ? (e = "function" == typeof t ? t : (0,
                    n.Z)(+t),
                    d) : e
                }
                ,
                d.y = function(e) {
                    return arguments.length ? (t = "function" == typeof e ? e : (0,
                    n.Z)(+e),
                    d) : t
                }
                ,
                d.defined = function(e) {
                    return arguments.length ? (i = "function" == typeof e ? e : (0,
                    n.Z)(!!e),
                    d) : i
                }
                ,
                d.curve = function(e) {
                    return arguments.length ? (h = e,
                    null != l && (u = h(l)),
                    d) : h
                }
                ,
                d.context = function(e) {
                    return arguments.length ? (null == e ? l = u = null : u = h(l = e),
                    d) : l
                }
                ,
                d
            }
        },
        5987: function(e, t, i) {
            "use strict";
            i.d(t, {
                d: function() {
                    return n
                }
            });
            var r = i(5493);
            function n(e) {
                let t = 3;
                return e.digits = function(i) {
                    if (!arguments.length)
                        return t;
                    if (null == i)
                        t = null;
                    else {
                        const e = Math.floor(i);
                        if (!(e >= 0))
                            throw new RangeError(`invalid digits: ${i}`);
                        t = e
                    }
                    return e
                }
                ,
                () => new r.y$(t)
            }
        },
        6758: function(e, t, i) {
            "use strict";
            function r(e) {
                return e[0]
            }
            function n(e) {
                return e[1]
            }
            i.d(t, {
                x: function() {
                    return r
                },
                y: function() {
                    return n
                }
            })
        },
        7738: function(e, t, i) {
            "use strict";
            i.d(t, {
                B7: function() {
                    return g
                },
                HT: function() {
                    return m
                },
                zO: function() {
                    return p
                }
            });
            var r, n, s = 0, a = 0, o = 0, l = 0, h = 0, u = 0, c = "object" == typeof performance && performance.now ? performance : Date, d = "object" == typeof window && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(e) {
                setTimeout(e, 17)
            }
            ;
            function p() {
                return h || (d(f),
                h = c.now() + u)
            }
            function f() {
                h = 0
            }
            function g() {
                this._call = this._time = this._next = null
            }
            function m(e, t, i) {
                var r = new g;
                return r.restart(e, t, i),
                r
            }
            function b() {
                h = (l = c.now()) + u,
                s = a = 0;
                try {
                    !function() {
                        p(),
                        ++s;
                        for (var e, t = r; t; )
                            (e = h - t._time) >= 0 && t._call.call(void 0, e),
                            t = t._next;
                        --s
                    }()
                } finally {
                    s = 0,
                    function() {
                        for (var e, t, i = r, s = 1 / 0; i; )
                            i._call ? (s > i._time && (s = i._time),
                            e = i,
                            i = i._next) : (t = i._next,
                            i._next = null,
                            i = e ? e._next = t : r = t);
                        n = e,
                        v(s)
                    }(),
                    h = 0
                }
            }
            function _() {
                var e = c.now()
                  , t = e - l;
                t > 1e3 && (u -= t,
                l = e)
            }
            function v(e) {
                s || (a && (a = clearTimeout(a)),
                e - h > 24 ? (e < 1 / 0 && (a = setTimeout(b, e - c.now() - u)),
                o && (o = clearInterval(o))) : (o || (l = c.now(),
                o = setInterval(_, 1e3)),
                s = 1,
                d(b)))
            }
            g.prototype = m.prototype = {
                constructor: g,
                restart: function(e, t, i) {
                    if ("function" != typeof e)
                        throw new TypeError("callback is not a function");
                    i = (null == i ? p() : +i) + (null == t ? 0 : +t),
                    this._next || n === this || (n ? n._next = this : r = this,
                    n = this),
                    this._call = e,
                    this._time = i,
                    v()
                },
                stop: function() {
                    this._call && (this._call = null,
                    this._time = 1 / 0,
                    v())
                }
            }
        },
        7896: function(e, t, i) {
            "use strict";
            function r() {}
            function n(e) {
                return null == e ? r : function() {
                    return this.querySelector(e)
                }
            }
            function s(e) {
                return null == e ? [] : Array.isArray(e) ? e : Array.from(e)
            }
            function a() {
                return []
            }
            function o(e) {
                return null == e ? a : function() {
                    return this.querySelectorAll(e)
                }
            }
            function l(e) {
                return function() {
                    return this.matches(e)
                }
            }
            function h(e) {
                return function(t) {
                    return t.matches(e)
                }
            }
            var u = Array.prototype.find;
            function c() {
                return this.firstElementChild
            }
            var d = Array.prototype.filter;
            function p() {
                return Array.from(this.children)
            }
            function f(e) {
                return new Array(e.length)
            }
            function g(e, t) {
                this.ownerDocument = e.ownerDocument,
                this.namespaceURI = e.namespaceURI,
                this._next = null,
                this._parent = e,
                this.__data__ = t
            }
            function m(e) {
                return function() {
                    return e
                }
            }
            function b(e, t, i, r, n, s) {
                for (var a, o = 0, l = t.length, h = s.length; o < h; ++o)
                    (a = t[o]) ? (a.__data__ = s[o],
                    r[o] = a) : i[o] = new g(e,s[o]);
                for (; o < l; ++o)
                    (a = t[o]) && (n[o] = a)
            }
            function _(e, t, i, r, n, s, a) {
                var o, l, h, u = new Map, c = t.length, d = s.length, p = new Array(c);
                for (o = 0; o < c; ++o)
                    (l = t[o]) && (p[o] = h = a.call(l, l.__data__, o, t) + "",
                    u.has(h) ? n[o] = l : u.set(h, l));
                for (o = 0; o < d; ++o)
                    h = a.call(e, s[o], o, s) + "",
                    (l = u.get(h)) ? (r[o] = l,
                    l.__data__ = s[o],
                    u.delete(h)) : i[o] = new g(e,s[o]);
                for (o = 0; o < c; ++o)
                    (l = t[o]) && u.get(p[o]) === l && (n[o] = l)
            }
            function v(e) {
                return e.__data__
            }
            function y(e) {
                return "object" == typeof e && "length"in e ? e : Array.from(e)
            }
            function w(e, t) {
                return e < t ? -1 : e > t ? 1 : e >= t ? 0 : NaN
            }
            g.prototype = {
                constructor: g,
                appendChild: function(e) {
                    return this._parent.insertBefore(e, this._next)
                },
                insertBefore: function(e, t) {
                    return this._parent.insertBefore(e, t)
                },
                querySelector: function(e) {
                    return this._parent.querySelector(e)
                },
                querySelectorAll: function(e) {
                    return this._parent.querySelectorAll(e)
                }
            };
            var x = "http://www.w3.org/1999/xhtml"
              , O = {
                svg: "http://www.w3.org/2000/svg",
                xhtml: x,
                xlink: "http://www.w3.org/1999/xlink",
                xml: "http://www.w3.org/XML/1998/namespace",
                xmlns: "http://www.w3.org/2000/xmlns/"
            };
            function P(e) {
                var t = e += ""
                  , i = t.indexOf(":");
                return i >= 0 && "xmlns" !== (t = e.slice(0, i)) && (e = e.slice(i + 1)),
                O.hasOwnProperty(t) ? {
                    space: O[t],
                    local: e
                } : e
            }
            function D(e) {
                return function() {
                    this.removeAttribute(e)
                }
            }
            function k(e) {
                return function() {
                    this.removeAttributeNS(e.space, e.local)
                }
            }
            function T(e, t) {
                return function() {
                    this.setAttribute(e, t)
                }
            }
            function M(e, t) {
                return function() {
                    this.setAttributeNS(e.space, e.local, t)
                }
            }
            function E(e, t) {
                return function() {
                    var i = t.apply(this, arguments);
                    null == i ? this.removeAttribute(e) : this.setAttribute(e, i)
                }
            }
            function S(e, t) {
                return function() {
                    var i = t.apply(this, arguments);
                    null == i ? this.removeAttributeNS(e.space, e.local) : this.setAttributeNS(e.space, e.local, i)
                }
            }
            function C(e) {
                return e.ownerDocument && e.ownerDocument.defaultView || e.document && e || e.defaultView
            }
            function N(e) {
                return function() {
                    this.style.removeProperty(e)
                }
            }
            function L(e, t, i) {
                return function() {
                    this.style.setProperty(e, t, i)
                }
            }
            function j(e, t, i) {
                return function() {
                    var r = t.apply(this, arguments);
                    null == r ? this.style.removeProperty(e) : this.style.setProperty(e, r, i)
                }
            }
            function A(e, t) {
                return e.style.getPropertyValue(t) || C(e).getComputedStyle(e, null).getPropertyValue(t)
            }
            function R(e) {
                return function() {
                    delete this[e]
                }
            }
            function B(e, t) {
                return function() {
                    this[e] = t
                }
            }
            function U(e, t) {
                return function() {
                    var i = t.apply(this, arguments);
                    null == i ? delete this[e] : this[e] = i
                }
            }
            function F(e) {
                return e.trim().split(/^|\s+/)
            }
            function I(e) {
                return e.classList || new H(e)
            }
            function H(e) {
                this._node = e,
                this._names = F(e.getAttribute("class") || "")
            }
            function z(e, t) {
                for (var i = I(e), r = -1, n = t.length; ++r < n; )
                    i.add(t[r])
            }
            function V(e, t) {
                for (var i = I(e), r = -1, n = t.length; ++r < n; )
                    i.remove(t[r])
            }
            function G(e) {
                return function() {
                    z(this, e)
                }
            }
            function Y(e) {
                return function() {
                    V(this, e)
                }
            }
            function W(e, t) {
                return function() {
                    (t.apply(this, arguments) ? z : V)(this, e)
                }
            }
            function X() {
                this.textContent = ""
            }
            function $(e) {
                return function() {
                    this.textContent = e
                }
            }
            function Z(e) {
                return function() {
                    var t = e.apply(this, arguments);
                    this.textContent = null == t ? "" : t
                }
            }
            function K() {
                this.innerHTML = ""
            }
            function q(e) {
                return function() {
                    this.innerHTML = e
                }
            }
            function Q(e) {
                return function() {
                    var t = e.apply(this, arguments);
                    this.innerHTML = null == t ? "" : t
                }
            }
            function J() {
                this.nextSibling && this.parentNode.appendChild(this)
            }
            function ee() {
                this.previousSibling && this.parentNode.insertBefore(this, this.parentNode.firstChild)
            }
            function te(e) {
                return function() {
                    var t = this.ownerDocument
                      , i = this.namespaceURI;
                    return i === x && t.documentElement.namespaceURI === x ? t.createElement(e) : t.createElementNS(i, e)
                }
            }
            function ie(e) {
                return function() {
                    return this.ownerDocument.createElementNS(e.space, e.local)
                }
            }
            function re(e) {
                var t = P(e);
                return (t.local ? ie : te)(t)
            }
            function ne() {
                return null
            }
            function se() {
                var e = this.parentNode;
                e && e.removeChild(this)
            }
            function ae() {
                var e = this.cloneNode(!1)
                  , t = this.parentNode;
                return t ? t.insertBefore(e, this.nextSibling) : e
            }
            function oe() {
                var e = this.cloneNode(!0)
                  , t = this.parentNode;
                return t ? t.insertBefore(e, this.nextSibling) : e
            }
            function le(e) {
                return e.trim().split(/^|\s+/).map((function(e) {
                    var t = ""
                      , i = e.indexOf(".");
                    return i >= 0 && (t = e.slice(i + 1),
                    e = e.slice(0, i)),
                    {
                        type: e,
                        name: t
                    }
                }
                ))
            }
            function he(e) {
                return function() {
                    var t = this.__on;
                    if (t) {
                        for (var i, r = 0, n = -1, s = t.length; r < s; ++r)
                            i = t[r],
                            e.type && i.type !== e.type || i.name !== e.name ? t[++n] = i : this.removeEventListener(i.type, i.listener, i.options);
                        ++n ? t.length = n : delete this.__on
                    }
                }
            }
            function ue(e, t, i) {
                return function() {
                    var r, n = this.__on, s = function(e) {
                        return function(t) {
                            e.call(this, t, this.__data__)
                        }
                    }(t);
                    if (n)
                        for (var a = 0, o = n.length; a < o; ++a)
                            if ((r = n[a]).type === e.type && r.name === e.name)
                                return this.removeEventListener(r.type, r.listener, r.options),
                                this.addEventListener(r.type, r.listener = s, r.options = i),
                                void (r.value = t);
                    this.addEventListener(e.type, s, i),
                    r = {
                        type: e.type,
                        name: e.name,
                        value: t,
                        listener: s,
                        options: i
                    },
                    n ? n.push(r) : this.__on = [r]
                }
            }
            function ce(e, t, i) {
                var r = C(e)
                  , n = r.CustomEvent;
                "function" == typeof n ? n = new n(t,i) : (n = r.document.createEvent("Event"),
                i ? (n.initEvent(t, i.bubbles, i.cancelable),
                n.detail = i.detail) : n.initEvent(t, !1, !1)),
                e.dispatchEvent(n)
            }
            function de(e, t) {
                return function() {
                    return ce(this, e, t)
                }
            }
            function pe(e, t) {
                return function() {
                    return ce(this, e, t.apply(this, arguments))
                }
            }
            H.prototype = {
                add: function(e) {
                    this._names.indexOf(e) < 0 && (this._names.push(e),
                    this._node.setAttribute("class", this._names.join(" ")))
                },
                remove: function(e) {
                    var t = this._names.indexOf(e);
                    t >= 0 && (this._names.splice(t, 1),
                    this._node.setAttribute("class", this._names.join(" ")))
                },
                contains: function(e) {
                    return this._names.indexOf(e) >= 0
                }
            };
            var fe = [null];
            function ge(e, t) {
                this._groups = e,
                this._parents = t
            }
            function me() {
                return new ge([[document.documentElement]],fe)
            }
            ge.prototype = me.prototype = {
                constructor: ge,
                select: function(e) {
                    "function" != typeof e && (e = n(e));
                    for (var t = this._groups, i = t.length, r = new Array(i), s = 0; s < i; ++s)
                        for (var a, o, l = t[s], h = l.length, u = r[s] = new Array(h), c = 0; c < h; ++c)
                            (a = l[c]) && (o = e.call(a, a.__data__, c, l)) && ("__data__"in a && (o.__data__ = a.__data__),
                            u[c] = o);
                    return new ge(r,this._parents)
                },
                selectAll: function(e) {
                    e = "function" == typeof e ? function(e) {
                        return function() {
                            return s(e.apply(this, arguments))
                        }
                    }(e) : o(e);
                    for (var t = this._groups, i = t.length, r = [], n = [], a = 0; a < i; ++a)
                        for (var l, h = t[a], u = h.length, c = 0; c < u; ++c)
                            (l = h[c]) && (r.push(e.call(l, l.__data__, c, h)),
                            n.push(l));
                    return new ge(r,n)
                },
                selectChild: function(e) {
                    return this.select(null == e ? c : function(e) {
                        return function() {
                            return u.call(this.children, e)
                        }
                    }("function" == typeof e ? e : h(e)))
                },
                selectChildren: function(e) {
                    return this.selectAll(null == e ? p : function(e) {
                        return function() {
                            return d.call(this.children, e)
                        }
                    }("function" == typeof e ? e : h(e)))
                },
                filter: function(e) {
                    "function" != typeof e && (e = l(e));
                    for (var t = this._groups, i = t.length, r = new Array(i), n = 0; n < i; ++n)
                        for (var s, a = t[n], o = a.length, h = r[n] = [], u = 0; u < o; ++u)
                            (s = a[u]) && e.call(s, s.__data__, u, a) && h.push(s);
                    return new ge(r,this._parents)
                },
                data: function(e, t) {
                    if (!arguments.length)
                        return Array.from(this, v);
                    var i = t ? _ : b
                      , r = this._parents
                      , n = this._groups;
                    "function" != typeof e && (e = m(e));
                    for (var s = n.length, a = new Array(s), o = new Array(s), l = new Array(s), h = 0; h < s; ++h) {
                        var u = r[h]
                          , c = n[h]
                          , d = c.length
                          , p = y(e.call(u, u && u.__data__, h, r))
                          , f = p.length
                          , g = o[h] = new Array(f)
                          , w = a[h] = new Array(f)
                          , x = l[h] = new Array(d);
                        i(u, c, g, w, x, p, t);
                        for (var O, P, D = 0, k = 0; D < f; ++D)
                            if (O = g[D]) {
                                for (D >= k && (k = D + 1); !(P = w[k]) && ++k < f; )
                                    ;
                                O._next = P || null
                            }
                    }
                    return (a = new ge(a,r))._enter = o,
                    a._exit = l,
                    a
                },
                enter: function() {
                    return new ge(this._enter || this._groups.map(f),this._parents)
                },
                exit: function() {
                    return new ge(this._exit || this._groups.map(f),this._parents)
                },
                join: function(e, t, i) {
                    var r = this.enter()
                      , n = this
                      , s = this.exit();
                    return "function" == typeof e ? (r = e(r)) && (r = r.selection()) : r = r.append(e + ""),
                    null != t && (n = t(n)) && (n = n.selection()),
                    null == i ? s.remove() : i(s),
                    r && n ? r.merge(n).order() : n
                },
                merge: function(e) {
                    for (var t = e.selection ? e.selection() : e, i = this._groups, r = t._groups, n = i.length, s = r.length, a = Math.min(n, s), o = new Array(n), l = 0; l < a; ++l)
                        for (var h, u = i[l], c = r[l], d = u.length, p = o[l] = new Array(d), f = 0; f < d; ++f)
                            (h = u[f] || c[f]) && (p[f] = h);
                    for (; l < n; ++l)
                        o[l] = i[l];
                    return new ge(o,this._parents)
                },
                selection: function() {
                    return this
                },
                order: function() {
                    for (var e = this._groups, t = -1, i = e.length; ++t < i; )
                        for (var r, n = e[t], s = n.length - 1, a = n[s]; --s >= 0; )
                            (r = n[s]) && (a && 4 ^ r.compareDocumentPosition(a) && a.parentNode.insertBefore(r, a),
                            a = r);
                    return this
                },
                sort: function(e) {
                    function t(t, i) {
                        return t && i ? e(t.__data__, i.__data__) : !t - !i
                    }
                    e || (e = w);
                    for (var i = this._groups, r = i.length, n = new Array(r), s = 0; s < r; ++s) {
                        for (var a, o = i[s], l = o.length, h = n[s] = new Array(l), u = 0; u < l; ++u)
                            (a = o[u]) && (h[u] = a);
                        h.sort(t)
                    }
                    return new ge(n,this._parents).order()
                },
                call: function() {
                    var e = arguments[0];
                    return arguments[0] = this,
                    e.apply(null, arguments),
                    this
                },
                nodes: function() {
                    return Array.from(this)
                },
                node: function() {
                    for (var e = this._groups, t = 0, i = e.length; t < i; ++t)
                        for (var r = e[t], n = 0, s = r.length; n < s; ++n) {
                            var a = r[n];
                            if (a)
                                return a
                        }
                    return null
                },
                size: function() {
                    let e = 0;
                    for (const t of this)
                        ++e;
                    return e
                },
                empty: function() {
                    return !this.node()
                },
                each: function(e) {
                    for (var t = this._groups, i = 0, r = t.length; i < r; ++i)
                        for (var n, s = t[i], a = 0, o = s.length; a < o; ++a)
                            (n = s[a]) && e.call(n, n.__data__, a, s);
                    return this
                },
                attr: function(e, t) {
                    var i = P(e);
                    if (arguments.length < 2) {
                        var r = this.node();
                        return i.local ? r.getAttributeNS(i.space, i.local) : r.getAttribute(i)
                    }
                    return this.each((null == t ? i.local ? k : D : "function" == typeof t ? i.local ? S : E : i.local ? M : T)(i, t))
                },
                style: function(e, t, i) {
                    return arguments.length > 1 ? this.each((null == t ? N : "function" == typeof t ? j : L)(e, t, null == i ? "" : i)) : A(this.node(), e)
                },
                property: function(e, t) {
                    return arguments.length > 1 ? this.each((null == t ? R : "function" == typeof t ? U : B)(e, t)) : this.node()[e]
                },
                classed: function(e, t) {
                    var i = F(e + "");
                    if (arguments.length < 2) {
                        for (var r = I(this.node()), n = -1, s = i.length; ++n < s; )
                            if (!r.contains(i[n]))
                                return !1;
                        return !0
                    }
                    return this.each(("function" == typeof t ? W : t ? G : Y)(i, t))
                },
                text: function(e) {
                    return arguments.length ? this.each(null == e ? X : ("function" == typeof e ? Z : $)(e)) : this.node().textContent
                },
                html: function(e) {
                    return arguments.length ? this.each(null == e ? K : ("function" == typeof e ? Q : q)(e)) : this.node().innerHTML
                },
                raise: function() {
                    return this.each(J)
                },
                lower: function() {
                    return this.each(ee)
                },
                append: function(e) {
                    var t = "function" == typeof e ? e : re(e);
                    return this.select((function() {
                        return this.appendChild(t.apply(this, arguments))
                    }
                    ))
                },
                insert: function(e, t) {
                    var i = "function" == typeof e ? e : re(e)
                      , r = null == t ? ne : "function" == typeof t ? t : n(t);
                    return this.select((function() {
                        return this.insertBefore(i.apply(this, arguments), r.apply(this, arguments) || null)
                    }
                    ))
                },
                remove: function() {
                    return this.each(se)
                },
                clone: function(e) {
                    return this.select(e ? oe : ae)
                },
                datum: function(e) {
                    return arguments.length ? this.property("__data__", e) : this.node().__data__
                },
                on: function(e, t, i) {
                    var r, n, s = le(e + ""), a = s.length;
                    if (!(arguments.length < 2)) {
                        for (o = t ? ue : he,
                        r = 0; r < a; ++r)
                            this.each(o(s[r], t, i));
                        return this
                    }
                    var o = this.node().__on;
                    if (o)
                        for (var l, h = 0, u = o.length; h < u; ++h)
                            for (r = 0,
                            l = o[h]; r < a; ++r)
                                if ((n = s[r]).type === l.type && n.name === l.name)
                                    return l.value
                },
                dispatch: function(e, t) {
                    return this.each(("function" == typeof t ? pe : de)(e, t))
                },
                [Symbol.iterator]: function*() {
                    for (var e = this._groups, t = 0, i = e.length; t < i; ++t)
                        for (var r, n = e[t], s = 0, a = n.length; s < a; ++s)
                            (r = n[s]) && (yield r)
                }
            };
            var be = me
              , _e = i(4138)
              , ve = i(7738);
            function ye(e, t, i) {
                var r = new ve.B7;
                return t = null == t ? 0 : +t,
                r.restart((i => {
                    r.stop(),
                    e(i + t)
                }
                ), t, i),
                r
            }
            var we = (0,
            _e.Z)("start", "end", "cancel", "interrupt")
              , xe = [];
            function Oe(e, t, i, r, n, s) {
                var a = e.__transition;
                if (a) {
                    if (i in a)
                        return
                } else
                    e.__transition = {};
                !function(e, t, i) {
                    var r, n = e.__transition;
                    function s(l) {
                        var h, u, c, d;
                        if (1 !== i.state)
                            return o();
                        for (h in n)
                            if ((d = n[h]).name === i.name) {
                                if (3 === d.state)
                                    return ye(s);
                                4 === d.state ? (d.state = 6,
                                d.timer.stop(),
                                d.on.call("interrupt", e, e.__data__, d.index, d.group),
                                delete n[h]) : +h < t && (d.state = 6,
                                d.timer.stop(),
                                d.on.call("cancel", e, e.__data__, d.index, d.group),
                                delete n[h])
                            }
                        if (ye((function() {
                            3 === i.state && (i.state = 4,
                            i.timer.restart(a, i.delay, i.time),
                            a(l))
                        }
                        )),
                        i.state = 2,
                        i.on.call("start", e, e.__data__, i.index, i.group),
                        2 === i.state) {
                            for (i.state = 3,
                            r = new Array(c = i.tween.length),
                            h = 0,
                            u = -1; h < c; ++h)
                                (d = i.tween[h].value.call(e, e.__data__, i.index, i.group)) && (r[++u] = d);
                            r.length = u + 1
                        }
                    }
                    function a(t) {
                        for (var n = t < i.duration ? i.ease.call(null, t / i.duration) : (i.timer.restart(o),
                        i.state = 5,
                        1), s = -1, a = r.length; ++s < a; )
                            r[s].call(e, n);
                        5 === i.state && (i.on.call("end", e, e.__data__, i.index, i.group),
                        o())
                    }
                    function o() {
                        for (var r in i.state = 6,
                        i.timer.stop(),
                        delete n[t],
                        n)
                            return;
                        delete e.__transition
                    }
                    n[t] = i,
                    i.timer = (0,
                    ve.HT)((function(e) {
                        i.state = 1,
                        i.timer.restart(s, i.delay, i.time),
                        i.delay <= e && s(e - i.delay)
                    }
                    ), 0, i.time)
                }(e, i, {
                    name: t,
                    index: r,
                    group: n,
                    on: we,
                    tween: xe,
                    time: s.time,
                    delay: s.delay,
                    duration: s.duration,
                    ease: s.ease,
                    timer: null,
                    state: 0
                })
            }
            function Pe(e, t) {
                var i = ke(e, t);
                if (i.state > 0)
                    throw new Error("too late; already scheduled");
                return i
            }
            function De(e, t) {
                var i = ke(e, t);
                if (i.state > 3)
                    throw new Error("too late; already running");
                return i
            }
            function ke(e, t) {
                var i = e.__transition;
                if (!i || !(i = i[t]))
                    throw new Error("transition not found");
                return i
            }
            function Te(e, t) {
                return e = +e,
                t = +t,
                function(i) {
                    return e * (1 - i) + t * i
                }
            }
            var Me, Ee = 180 / Math.PI, Se = {
                translateX: 0,
                translateY: 0,
                rotate: 0,
                skewX: 0,
                scaleX: 1,
                scaleY: 1
            };
            function Ce(e, t, i, r, n, s) {
                var a, o, l;
                return (a = Math.sqrt(e * e + t * t)) && (e /= a,
                t /= a),
                (l = e * i + t * r) && (i -= e * l,
                r -= t * l),
                (o = Math.sqrt(i * i + r * r)) && (i /= o,
                r /= o,
                l /= o),
                e * r < t * i && (e = -e,
                t = -t,
                l = -l,
                a = -a),
                {
                    translateX: n,
                    translateY: s,
                    rotate: Math.atan2(t, e) * Ee,
                    skewX: Math.atan(l) * Ee,
                    scaleX: a,
                    scaleY: o
                }
            }
            function Ne(e, t, i, r) {
                function n(e) {
                    return e.length ? e.pop() + " " : ""
                }
                return function(s, a) {
                    var o = []
                      , l = [];
                    return s = e(s),
                    a = e(a),
                    function(e, r, n, s, a, o) {
                        if (e !== n || r !== s) {
                            var l = a.push("translate(", null, t, null, i);
                            o.push({
                                i: l - 4,
                                x: Te(e, n)
                            }, {
                                i: l - 2,
                                x: Te(r, s)
                            })
                        } else
                            (n || s) && a.push("translate(" + n + t + s + i)
                    }(s.translateX, s.translateY, a.translateX, a.translateY, o, l),
                    function(e, t, i, s) {
                        e !== t ? (e - t > 180 ? t += 360 : t - e > 180 && (e += 360),
                        s.push({
                            i: i.push(n(i) + "rotate(", null, r) - 2,
                            x: Te(e, t)
                        })) : t && i.push(n(i) + "rotate(" + t + r)
                    }(s.rotate, a.rotate, o, l),
                    function(e, t, i, s) {
                        e !== t ? s.push({
                            i: i.push(n(i) + "skewX(", null, r) - 2,
                            x: Te(e, t)
                        }) : t && i.push(n(i) + "skewX(" + t + r)
                    }(s.skewX, a.skewX, o, l),
                    function(e, t, i, r, s, a) {
                        if (e !== i || t !== r) {
                            var o = s.push(n(s) + "scale(", null, ",", null, ")");
                            a.push({
                                i: o - 4,
                                x: Te(e, i)
                            }, {
                                i: o - 2,
                                x: Te(t, r)
                            })
                        } else
                            1 === i && 1 === r || s.push(n(s) + "scale(" + i + "," + r + ")")
                    }(s.scaleX, s.scaleY, a.scaleX, a.scaleY, o, l),
                    s = a = null,
                    function(e) {
                        for (var t, i = -1, r = l.length; ++i < r; )
                            o[(t = l[i]).i] = t.x(e);
                        return o.join("")
                    }
                }
            }
            var Le = Ne((function(e) {
                const t = new ("function" == typeof DOMMatrix ? DOMMatrix : WebKitCSSMatrix)(e + "");
                return t.isIdentity ? Se : Ce(t.a, t.b, t.c, t.d, t.e, t.f)
            }
            ), "px, ", "px)", "deg)")
              , je = Ne((function(e) {
                return null == e ? Se : (Me || (Me = document.createElementNS("http://www.w3.org/2000/svg", "g")),
                Me.setAttribute("transform", e),
                (e = Me.transform.baseVal.consolidate()) ? Ce((e = e.matrix).a, e.b, e.c, e.d, e.e, e.f) : Se)
            }
            ), ", ", ")", ")");
            function Ae(e, t) {
                var i, r;
                return function() {
                    var n = De(this, e)
                      , s = n.tween;
                    if (s !== i)
                        for (var a = 0, o = (r = i = s).length; a < o; ++a)
                            if (r[a].name === t) {
                                (r = r.slice()).splice(a, 1);
                                break
                            }
                    n.tween = r
                }
            }
            function Re(e, t, i) {
                var r, n;
                if ("function" != typeof i)
                    throw new Error;
                return function() {
                    var s = De(this, e)
                      , a = s.tween;
                    if (a !== r) {
                        n = (r = a).slice();
                        for (var o = {
                            name: t,
                            value: i
                        }, l = 0, h = n.length; l < h; ++l)
                            if (n[l].name === t) {
                                n[l] = o;
                                break
                            }
                        l === h && n.push(o)
                    }
                    s.tween = n
                }
            }
            function Be(e, t, i) {
                var r = e._id;
                return e.each((function() {
                    var e = De(this, r);
                    (e.value || (e.value = {}))[t] = i.apply(this, arguments)
                }
                )),
                function(e) {
                    return ke(e, r).value[t]
                }
            }
            function Ue(e, t, i) {
                e.prototype = t.prototype = i,
                i.constructor = e
            }
            function Fe(e, t) {
                var i = Object.create(e.prototype);
                for (var r in t)
                    i[r] = t[r];
                return i
            }
            function Ie() {}
            var He = .7
              , ze = 1 / He
              , Ve = "\\s*([+-]?\\d+)\\s*"
              , Ge = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*"
              , Ye = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*"
              , We = /^#([0-9a-f]{3,8})$/
              , Xe = new RegExp(`^rgb\\(${Ve},${Ve},${Ve}\\)$`)
              , $e = new RegExp(`^rgb\\(${Ye},${Ye},${Ye}\\)$`)
              , Ze = new RegExp(`^rgba\\(${Ve},${Ve},${Ve},${Ge}\\)$`)
              , Ke = new RegExp(`^rgba\\(${Ye},${Ye},${Ye},${Ge}\\)$`)
              , qe = new RegExp(`^hsl\\(${Ge},${Ye},${Ye}\\)$`)
              , Qe = new RegExp(`^hsla\\(${Ge},${Ye},${Ye},${Ge}\\)$`)
              , Je = {
                aliceblue: 15792383,
                antiquewhite: 16444375,
                aqua: 65535,
                aquamarine: 8388564,
                azure: 15794175,
                beige: 16119260,
                bisque: 16770244,
                black: 0,
                blanchedalmond: 16772045,
                blue: 255,
                blueviolet: 9055202,
                brown: 10824234,
                burlywood: 14596231,
                cadetblue: 6266528,
                chartreuse: 8388352,
                chocolate: 13789470,
                coral: 16744272,
                cornflowerblue: 6591981,
                cornsilk: 16775388,
                crimson: 14423100,
                cyan: 65535,
                darkblue: 139,
                darkcyan: 35723,
                darkgoldenrod: 12092939,
                darkgray: 11119017,
                darkgreen: 25600,
                darkgrey: 11119017,
                darkkhaki: 12433259,
                darkmagenta: 9109643,
                darkolivegreen: 5597999,
                darkorange: 16747520,
                darkorchid: 10040012,
                darkred: 9109504,
                darksalmon: 15308410,
                darkseagreen: 9419919,
                darkslateblue: 4734347,
                darkslategray: 3100495,
                darkslategrey: 3100495,
                darkturquoise: 52945,
                darkviolet: 9699539,
                deeppink: 16716947,
                deepskyblue: 49151,
                dimgray: 6908265,
                dimgrey: 6908265,
                dodgerblue: 2003199,
                firebrick: 11674146,
                floralwhite: 16775920,
                forestgreen: 2263842,
                fuchsia: 16711935,
                gainsboro: 14474460,
                ghostwhite: 16316671,
                gold: 16766720,
                goldenrod: 14329120,
                gray: 8421504,
                green: 32768,
                greenyellow: 11403055,
                grey: 8421504,
                honeydew: 15794160,
                hotpink: 16738740,
                indianred: 13458524,
                indigo: 4915330,
                ivory: 16777200,
                khaki: 15787660,
                lavender: 15132410,
                lavenderblush: 16773365,
                lawngreen: 8190976,
                lemonchiffon: 16775885,
                lightblue: 11393254,
                lightcoral: 15761536,
                lightcyan: 14745599,
                lightgoldenrodyellow: 16448210,
                lightgray: 13882323,
                lightgreen: 9498256,
                lightgrey: 13882323,
                lightpink: 16758465,
                lightsalmon: 16752762,
                lightseagreen: 2142890,
                lightskyblue: 8900346,
                lightslategray: 7833753,
                lightslategrey: 7833753,
                lightsteelblue: 11584734,
                lightyellow: 16777184,
                lime: 65280,
                limegreen: 3329330,
                linen: 16445670,
                magenta: 16711935,
                maroon: 8388608,
                mediumaquamarine: 6737322,
                mediumblue: 205,
                mediumorchid: 12211667,
                mediumpurple: 9662683,
                mediumseagreen: 3978097,
                mediumslateblue: 8087790,
                mediumspringgreen: 64154,
                mediumturquoise: 4772300,
                mediumvioletred: 13047173,
                midnightblue: 1644912,
                mintcream: 16121850,
                mistyrose: 16770273,
                moccasin: 16770229,
                navajowhite: 16768685,
                navy: 128,
                oldlace: 16643558,
                olive: 8421376,
                olivedrab: 7048739,
                orange: 16753920,
                orangered: 16729344,
                orchid: 14315734,
                palegoldenrod: 15657130,
                palegreen: 10025880,
                paleturquoise: 11529966,
                palevioletred: 14381203,
                papayawhip: 16773077,
                peachpuff: 16767673,
                peru: 13468991,
                pink: 16761035,
                plum: 14524637,
                powderblue: 11591910,
                purple: 8388736,
                rebeccapurple: 6697881,
                red: 16711680,
                rosybrown: 12357519,
                royalblue: 4286945,
                saddlebrown: 9127187,
                salmon: 16416882,
                sandybrown: 16032864,
                seagreen: 3050327,
                seashell: 16774638,
                sienna: 10506797,
                silver: 12632256,
                skyblue: 8900331,
                slateblue: 6970061,
                slategray: 7372944,
                slategrey: 7372944,
                snow: 16775930,
                springgreen: 65407,
                steelblue: 4620980,
                tan: 13808780,
                teal: 32896,
                thistle: 14204888,
                tomato: 16737095,
                turquoise: 4251856,
                violet: 15631086,
                wheat: 16113331,
                white: 16777215,
                whitesmoke: 16119285,
                yellow: 16776960,
                yellowgreen: 10145074
            };
            function et() {
                return this.rgb().formatHex()
            }
            function tt() {
                return this.rgb().formatRgb()
            }
            function it(e) {
                var t, i;
                return e = (e + "").trim().toLowerCase(),
                (t = We.exec(e)) ? (i = t[1].length,
                t = parseInt(t[1], 16),
                6 === i ? rt(t) : 3 === i ? new ot(t >> 8 & 15 | t >> 4 & 240,t >> 4 & 15 | 240 & t,(15 & t) << 4 | 15 & t,1) : 8 === i ? nt(t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, (255 & t) / 255) : 4 === i ? nt(t >> 12 & 15 | t >> 8 & 240, t >> 8 & 15 | t >> 4 & 240, t >> 4 & 15 | 240 & t, ((15 & t) << 4 | 15 & t) / 255) : null) : (t = Xe.exec(e)) ? new ot(t[1],t[2],t[3],1) : (t = $e.exec(e)) ? new ot(255 * t[1] / 100,255 * t[2] / 100,255 * t[3] / 100,1) : (t = Ze.exec(e)) ? nt(t[1], t[2], t[3], t[4]) : (t = Ke.exec(e)) ? nt(255 * t[1] / 100, 255 * t[2] / 100, 255 * t[3] / 100, t[4]) : (t = qe.exec(e)) ? pt(t[1], t[2] / 100, t[3] / 100, 1) : (t = Qe.exec(e)) ? pt(t[1], t[2] / 100, t[3] / 100, t[4]) : Je.hasOwnProperty(e) ? rt(Je[e]) : "transparent" === e ? new ot(NaN,NaN,NaN,0) : null
            }
            function rt(e) {
                return new ot(e >> 16 & 255,e >> 8 & 255,255 & e,1)
            }
            function nt(e, t, i, r) {
                return r <= 0 && (e = t = i = NaN),
                new ot(e,t,i,r)
            }
            function st(e) {
                return e instanceof Ie || (e = it(e)),
                e ? new ot((e = e.rgb()).r,e.g,e.b,e.opacity) : new ot
            }
            function at(e, t, i, r) {
                return 1 === arguments.length ? st(e) : new ot(e,t,i,null == r ? 1 : r)
            }
            function ot(e, t, i, r) {
                this.r = +e,
                this.g = +t,
                this.b = +i,
                this.opacity = +r
            }
            function lt() {
                return `#${dt(this.r)}${dt(this.g)}${dt(this.b)}`
            }
            function ht() {
                const e = ut(this.opacity);
                return `${1 === e ? "rgb(" : "rgba("}${ct(this.r)}, ${ct(this.g)}, ${ct(this.b)}${1 === e ? ")" : `, ${e})`}`
            }
            function ut(e) {
                return isNaN(e) ? 1 : Math.max(0, Math.min(1, e))
            }
            function ct(e) {
                return Math.max(0, Math.min(255, Math.round(e) || 0))
            }
            function dt(e) {
                return ((e = ct(e)) < 16 ? "0" : "") + e.toString(16)
            }
            function pt(e, t, i, r) {
                return r <= 0 ? e = t = i = NaN : i <= 0 || i >= 1 ? e = t = NaN : t <= 0 && (e = NaN),
                new gt(e,t,i,r)
            }
            function ft(e) {
                if (e instanceof gt)
                    return new gt(e.h,e.s,e.l,e.opacity);
                if (e instanceof Ie || (e = it(e)),
                !e)
                    return new gt;
                if (e instanceof gt)
                    return e;
                var t = (e = e.rgb()).r / 255
                  , i = e.g / 255
                  , r = e.b / 255
                  , n = Math.min(t, i, r)
                  , s = Math.max(t, i, r)
                  , a = NaN
                  , o = s - n
                  , l = (s + n) / 2;
                return o ? (a = t === s ? (i - r) / o + 6 * (i < r) : i === s ? (r - t) / o + 2 : (t - i) / o + 4,
                o /= l < .5 ? s + n : 2 - s - n,
                a *= 60) : o = l > 0 && l < 1 ? 0 : a,
                new gt(a,o,l,e.opacity)
            }
            function gt(e, t, i, r) {
                this.h = +e,
                this.s = +t,
                this.l = +i,
                this.opacity = +r
            }
            function mt(e) {
                return (e = (e || 0) % 360) < 0 ? e + 360 : e
            }
            function bt(e) {
                return Math.max(0, Math.min(1, e || 0))
            }
            function _t(e, t, i) {
                return 255 * (e < 60 ? t + (i - t) * e / 60 : e < 180 ? i : e < 240 ? t + (i - t) * (240 - e) / 60 : t)
            }
            function vt(e, t, i, r, n) {
                var s = e * e
                  , a = s * e;
                return ((1 - 3 * e + 3 * s - a) * t + (4 - 6 * s + 3 * a) * i + (1 + 3 * e + 3 * s - 3 * a) * r + a * n) / 6
            }
            Ue(Ie, it, {
                copy(e) {
                    return Object.assign(new this.constructor, this, e)
                },
                displayable() {
                    return this.rgb().displayable()
                },
                hex: et,
                formatHex: et,
                formatHex8: function() {
                    return this.rgb().formatHex8()
                },
                formatHsl: function() {
                    return ft(this).formatHsl()
                },
                formatRgb: tt,
                toString: tt
            }),
            Ue(ot, at, Fe(Ie, {
                brighter(e) {
                    return e = null == e ? ze : Math.pow(ze, e),
                    new ot(this.r * e,this.g * e,this.b * e,this.opacity)
                },
                darker(e) {
                    return e = null == e ? He : Math.pow(He, e),
                    new ot(this.r * e,this.g * e,this.b * e,this.opacity)
                },
                rgb() {
                    return this
                },
                clamp() {
                    return new ot(ct(this.r),ct(this.g),ct(this.b),ut(this.opacity))
                },
                displayable() {
                    return -.5 <= this.r && this.r < 255.5 && -.5 <= this.g && this.g < 255.5 && -.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1
                },
                hex: lt,
                formatHex: lt,
                formatHex8: function() {
                    return `#${dt(this.r)}${dt(this.g)}${dt(this.b)}${dt(255 * (isNaN(this.opacity) ? 1 : this.opacity))}`
                },
                formatRgb: ht,
                toString: ht
            })),
            Ue(gt, (function(e, t, i, r) {
                return 1 === arguments.length ? ft(e) : new gt(e,t,i,null == r ? 1 : r)
            }
            ), Fe(Ie, {
                brighter(e) {
                    return e = null == e ? ze : Math.pow(ze, e),
                    new gt(this.h,this.s,this.l * e,this.opacity)
                },
                darker(e) {
                    return e = null == e ? He : Math.pow(He, e),
                    new gt(this.h,this.s,this.l * e,this.opacity)
                },
                rgb() {
                    var e = this.h % 360 + 360 * (this.h < 0)
                      , t = isNaN(e) || isNaN(this.s) ? 0 : this.s
                      , i = this.l
                      , r = i + (i < .5 ? i : 1 - i) * t
                      , n = 2 * i - r;
                    return new ot(_t(e >= 240 ? e - 240 : e + 120, n, r),_t(e, n, r),_t(e < 120 ? e + 240 : e - 120, n, r),this.opacity)
                },
                clamp() {
                    return new gt(mt(this.h),bt(this.s),bt(this.l),ut(this.opacity))
                },
                displayable() {
                    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1
                },
                formatHsl() {
                    const e = ut(this.opacity);
                    return `${1 === e ? "hsl(" : "hsla("}${mt(this.h)}, ${100 * bt(this.s)}%, ${100 * bt(this.l)}%${1 === e ? ")" : `, ${e})`}`
                }
            }));
            var yt = e => () => e;
            function wt(e, t) {
                var i = t - e;
                return i ? function(e, t) {
                    return function(i) {
                        return e + i * t
                    }
                }(e, i) : yt(isNaN(e) ? t : e)
            }
            var xt = function e(t) {
                var i = function(e) {
                    return 1 == (e = +e) ? wt : function(t, i) {
                        return i - t ? function(e, t, i) {
                            return e = Math.pow(e, i),
                            t = Math.pow(t, i) - e,
                            i = 1 / i,
                            function(r) {
                                return Math.pow(e + r * t, i)
                            }
                        }(t, i, e) : yt(isNaN(t) ? i : t)
                    }
                }(t);
                function r(e, t) {
                    var r = i((e = at(e)).r, (t = at(t)).r)
                      , n = i(e.g, t.g)
                      , s = i(e.b, t.b)
                      , a = wt(e.opacity, t.opacity);
                    return function(t) {
                        return e.r = r(t),
                        e.g = n(t),
                        e.b = s(t),
                        e.opacity = a(t),
                        e + ""
                    }
                }
                return r.gamma = e,
                r
            }(1);
            function Ot(e) {
                return function(t) {
                    var i, r, n = t.length, s = new Array(n), a = new Array(n), o = new Array(n);
                    for (i = 0; i < n; ++i)
                        r = at(t[i]),
                        s[i] = r.r || 0,
                        a[i] = r.g || 0,
                        o[i] = r.b || 0;
                    return s = e(s),
                    a = e(a),
                    o = e(o),
                    r.opacity = 1,
                    function(e) {
                        return r.r = s(e),
                        r.g = a(e),
                        r.b = o(e),
                        r + ""
                    }
                }
            }
            Ot((function(e) {
                var t = e.length - 1;
                return function(i) {
                    var r = i <= 0 ? i = 0 : i >= 1 ? (i = 1,
                    t - 1) : Math.floor(i * t)
                      , n = e[r]
                      , s = e[r + 1]
                      , a = r > 0 ? e[r - 1] : 2 * n - s
                      , o = r < t - 1 ? e[r + 2] : 2 * s - n;
                    return vt((i - r / t) * t, a, n, s, o)
                }
            }
            )),
            Ot((function(e) {
                var t = e.length;
                return function(i) {
                    var r = Math.floor(((i %= 1) < 0 ? ++i : i) * t)
                      , n = e[(r + t - 1) % t]
                      , s = e[r % t]
                      , a = e[(r + 1) % t]
                      , o = e[(r + 2) % t];
                    return vt((i - r / t) * t, n, s, a, o)
                }
            }
            ));
            var Pt = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g
              , Dt = new RegExp(Pt.source,"g");
            function kt(e, t) {
                var i, r, n, s = Pt.lastIndex = Dt.lastIndex = 0, a = -1, o = [], l = [];
                for (e += "",
                t += ""; (i = Pt.exec(e)) && (r = Dt.exec(t)); )
                    (n = r.index) > s && (n = t.slice(s, n),
                    o[a] ? o[a] += n : o[++a] = n),
                    (i = i[0]) === (r = r[0]) ? o[a] ? o[a] += r : o[++a] = r : (o[++a] = null,
                    l.push({
                        i: a,
                        x: Te(i, r)
                    })),
                    s = Dt.lastIndex;
                return s < t.length && (n = t.slice(s),
                o[a] ? o[a] += n : o[++a] = n),
                o.length < 2 ? l[0] ? function(e) {
                    return function(t) {
                        return e(t) + ""
                    }
                }(l[0].x) : function(e) {
                    return function() {
                        return e
                    }
                }(t) : (t = l.length,
                function(e) {
                    for (var i, r = 0; r < t; ++r)
                        o[(i = l[r]).i] = i.x(e);
                    return o.join("")
                }
                )
            }
            function Tt(e, t) {
                var i;
                return ("number" == typeof t ? Te : t instanceof it ? xt : (i = it(t)) ? (t = i,
                xt) : kt)(e, t)
            }
            function Mt(e) {
                return function() {
                    this.removeAttribute(e)
                }
            }
            function Et(e) {
                return function() {
                    this.removeAttributeNS(e.space, e.local)
                }
            }
            function St(e, t, i) {
                var r, n, s = i + "";
                return function() {
                    var a = this.getAttribute(e);
                    return a === s ? null : a === r ? n : n = t(r = a, i)
                }
            }
            function Ct(e, t, i) {
                var r, n, s = i + "";
                return function() {
                    var a = this.getAttributeNS(e.space, e.local);
                    return a === s ? null : a === r ? n : n = t(r = a, i)
                }
            }
            function Nt(e, t, i) {
                var r, n, s;
                return function() {
                    var a, o, l = i(this);
                    if (null != l)
                        return (a = this.getAttribute(e)) === (o = l + "") ? null : a === r && o === n ? s : (n = o,
                        s = t(r = a, l));
                    this.removeAttribute(e)
                }
            }
            function Lt(e, t, i) {
                var r, n, s;
                return function() {
                    var a, o, l = i(this);
                    if (null != l)
                        return (a = this.getAttributeNS(e.space, e.local)) === (o = l + "") ? null : a === r && o === n ? s : (n = o,
                        s = t(r = a, l));
                    this.removeAttributeNS(e.space, e.local)
                }
            }
            function jt(e, t) {
                return function(i) {
                    this.setAttribute(e, t.call(this, i))
                }
            }
            function At(e, t) {
                return function(i) {
                    this.setAttributeNS(e.space, e.local, t.call(this, i))
                }
            }
            function Rt(e, t) {
                var i, r;
                function n() {
                    var n = t.apply(this, arguments);
                    return n !== r && (i = (r = n) && At(e, n)),
                    i
                }
                return n._value = t,
                n
            }
            function Bt(e, t) {
                var i, r;
                function n() {
                    var n = t.apply(this, arguments);
                    return n !== r && (i = (r = n) && jt(e, n)),
                    i
                }
                return n._value = t,
                n
            }
            function Ut(e, t) {
                return function() {
                    Pe(this, e).delay = +t.apply(this, arguments)
                }
            }
            function Ft(e, t) {
                return t = +t,
                function() {
                    Pe(this, e).delay = t
                }
            }
            function It(e, t) {
                return function() {
                    De(this, e).duration = +t.apply(this, arguments)
                }
            }
            function Ht(e, t) {
                return t = +t,
                function() {
                    De(this, e).duration = t
                }
            }
            function zt(e, t) {
                if ("function" != typeof t)
                    throw new Error;
                return function() {
                    De(this, e).ease = t
                }
            }
            function Vt(e, t, i) {
                var r, n, s = function(e) {
                    return (e + "").trim().split(/^|\s+/).every((function(e) {
                        var t = e.indexOf(".");
                        return t >= 0 && (e = e.slice(0, t)),
                        !e || "start" === e
                    }
                    ))
                }(t) ? Pe : De;
                return function() {
                    var a = s(this, e)
                      , o = a.on;
                    o !== r && (n = (r = o).copy()).on(t, i),
                    a.on = n
                }
            }
            var Gt = be.prototype.constructor;
            function Yt(e) {
                return function() {
                    this.style.removeProperty(e)
                }
            }
            function Wt(e, t, i) {
                return function(r) {
                    this.style.setProperty(e, t.call(this, r), i)
                }
            }
            function Xt(e, t, i) {
                var r, n;
                function s() {
                    var s = t.apply(this, arguments);
                    return s !== n && (r = (n = s) && Wt(e, s, i)),
                    r
                }
                return s._value = t,
                s
            }
            function $t(e) {
                return function(t) {
                    this.textContent = e.call(this, t)
                }
            }
            function Zt(e) {
                var t, i;
                function r() {
                    var r = e.apply(this, arguments);
                    return r !== i && (t = (i = r) && $t(r)),
                    t
                }
                return r._value = e,
                r
            }
            var Kt = 0;
            function qt(e, t, i, r) {
                this._groups = e,
                this._parents = t,
                this._name = i,
                this._id = r
            }
            function Qt() {
                return ++Kt
            }
            var Jt = be.prototype;
            qt.prototype = function(e) {
                return be().transition(e)
            }
            .prototype = {
                constructor: qt,
                select: function(e) {
                    var t = this._name
                      , i = this._id;
                    "function" != typeof e && (e = n(e));
                    for (var r = this._groups, s = r.length, a = new Array(s), o = 0; o < s; ++o)
                        for (var l, h, u = r[o], c = u.length, d = a[o] = new Array(c), p = 0; p < c; ++p)
                            (l = u[p]) && (h = e.call(l, l.__data__, p, u)) && ("__data__"in l && (h.__data__ = l.__data__),
                            d[p] = h,
                            Oe(d[p], t, i, p, d, ke(l, i)));
                    return new qt(a,this._parents,t,i)
                },
                selectAll: function(e) {
                    var t = this._name
                      , i = this._id;
                    "function" != typeof e && (e = o(e));
                    for (var r = this._groups, n = r.length, s = [], a = [], l = 0; l < n; ++l)
                        for (var h, u = r[l], c = u.length, d = 0; d < c; ++d)
                            if (h = u[d]) {
                                for (var p, f = e.call(h, h.__data__, d, u), g = ke(h, i), m = 0, b = f.length; m < b; ++m)
                                    (p = f[m]) && Oe(p, t, i, m, f, g);
                                s.push(f),
                                a.push(h)
                            }
                    return new qt(s,a,t,i)
                },
                selectChild: Jt.selectChild,
                selectChildren: Jt.selectChildren,
                filter: function(e) {
                    "function" != typeof e && (e = l(e));
                    for (var t = this._groups, i = t.length, r = new Array(i), n = 0; n < i; ++n)
                        for (var s, a = t[n], o = a.length, h = r[n] = [], u = 0; u < o; ++u)
                            (s = a[u]) && e.call(s, s.__data__, u, a) && h.push(s);
                    return new qt(r,this._parents,this._name,this._id)
                },
                merge: function(e) {
                    if (e._id !== this._id)
                        throw new Error;
                    for (var t = this._groups, i = e._groups, r = t.length, n = i.length, s = Math.min(r, n), a = new Array(r), o = 0; o < s; ++o)
                        for (var l, h = t[o], u = i[o], c = h.length, d = a[o] = new Array(c), p = 0; p < c; ++p)
                            (l = h[p] || u[p]) && (d[p] = l);
                    for (; o < r; ++o)
                        a[o] = t[o];
                    return new qt(a,this._parents,this._name,this._id)
                },
                selection: function() {
                    return new Gt(this._groups,this._parents)
                },
                transition: function() {
                    for (var e = this._name, t = this._id, i = Qt(), r = this._groups, n = r.length, s = 0; s < n; ++s)
                        for (var a, o = r[s], l = o.length, h = 0; h < l; ++h)
                            if (a = o[h]) {
                                var u = ke(a, t);
                                Oe(a, e, i, h, o, {
                                    time: u.time + u.delay + u.duration,
                                    delay: 0,
                                    duration: u.duration,
                                    ease: u.ease
                                })
                            }
                    return new qt(r,this._parents,e,i)
                },
                call: Jt.call,
                nodes: Jt.nodes,
                node: Jt.node,
                size: Jt.size,
                empty: Jt.empty,
                each: Jt.each,
                on: function(e, t) {
                    var i = this._id;
                    return arguments.length < 2 ? ke(this.node(), i).on.on(e) : this.each(Vt(i, e, t))
                },
                attr: function(e, t) {
                    var i = P(e)
                      , r = "transform" === i ? je : Tt;
                    return this.attrTween(e, "function" == typeof t ? (i.local ? Lt : Nt)(i, r, Be(this, "attr." + e, t)) : null == t ? (i.local ? Et : Mt)(i) : (i.local ? Ct : St)(i, r, t))
                },
                attrTween: function(e, t) {
                    var i = "attr." + e;
                    if (arguments.length < 2)
                        return (i = this.tween(i)) && i._value;
                    if (null == t)
                        return this.tween(i, null);
                    if ("function" != typeof t)
                        throw new Error;
                    var r = P(e);
                    return this.tween(i, (r.local ? Rt : Bt)(r, t))
                },
                style: function(e, t, i) {
                    var r = "transform" == (e += "") ? Le : Tt;
                    return null == t ? this.styleTween(e, function(e, t) {
                        var i, r, n;
                        return function() {
                            var s = A(this, e)
                              , a = (this.style.removeProperty(e),
                            A(this, e));
                            return s === a ? null : s === i && a === r ? n : n = t(i = s, r = a)
                        }
                    }(e, r)).on("end.style." + e, Yt(e)) : "function" == typeof t ? this.styleTween(e, function(e, t, i) {
                        var r, n, s;
                        return function() {
                            var a = A(this, e)
                              , o = i(this)
                              , l = o + "";
                            return null == o && (this.style.removeProperty(e),
                            l = o = A(this, e)),
                            a === l ? null : a === r && l === n ? s : (n = l,
                            s = t(r = a, o))
                        }
                    }(e, r, Be(this, "style." + e, t))).each(function(e, t) {
                        var i, r, n, s, a = "style." + t, o = "end." + a;
                        return function() {
                            var l = De(this, e)
                              , h = l.on
                              , u = null == l.value[a] ? s || (s = Yt(t)) : void 0;
                            h === i && n === u || (r = (i = h).copy()).on(o, n = u),
                            l.on = r
                        }
                    }(this._id, e)) : this.styleTween(e, function(e, t, i) {
                        var r, n, s = i + "";
                        return function() {
                            var a = A(this, e);
                            return a === s ? null : a === r ? n : n = t(r = a, i)
                        }
                    }(e, r, t), i).on("end.style." + e, null)
                },
                styleTween: function(e, t, i) {
                    var r = "style." + (e += "");
                    if (arguments.length < 2)
                        return (r = this.tween(r)) && r._value;
                    if (null == t)
                        return this.tween(r, null);
                    if ("function" != typeof t)
                        throw new Error;
                    return this.tween(r, Xt(e, t, null == i ? "" : i))
                },
                text: function(e) {
                    return this.tween("text", "function" == typeof e ? function(e) {
                        return function() {
                            var t = e(this);
                            this.textContent = null == t ? "" : t
                        }
                    }(Be(this, "text", e)) : function(e) {
                        return function() {
                            this.textContent = e
                        }
                    }(null == e ? "" : e + ""))
                },
                textTween: function(e) {
                    var t = "text";
                    if (arguments.length < 1)
                        return (t = this.tween(t)) && t._value;
                    if (null == e)
                        return this.tween(t, null);
                    if ("function" != typeof e)
                        throw new Error;
                    return this.tween(t, Zt(e))
                },
                remove: function() {
                    return this.on("end.remove", function(e) {
                        return function() {
                            var t = this.parentNode;
                            for (var i in this.__transition)
                                if (+i !== e)
                                    return;
                            t && t.removeChild(this)
                        }
                    }(this._id))
                },
                tween: function(e, t) {
                    var i = this._id;
                    if (e += "",
                    arguments.length < 2) {
                        for (var r, n = ke(this.node(), i).tween, s = 0, a = n.length; s < a; ++s)
                            if ((r = n[s]).name === e)
                                return r.value;
                        return null
                    }
                    return this.each((null == t ? Ae : Re)(i, e, t))
                },
                delay: function(e) {
                    var t = this._id;
                    return arguments.length ? this.each(("function" == typeof e ? Ut : Ft)(t, e)) : ke(this.node(), t).delay
                },
                duration: function(e) {
                    var t = this._id;
                    return arguments.length ? this.each(("function" == typeof e ? It : Ht)(t, e)) : ke(this.node(), t).duration
                },
                ease: function(e) {
                    var t = this._id;
                    return arguments.length ? this.each(zt(t, e)) : ke(this.node(), t).ease
                },
                easeVarying: function(e) {
                    if ("function" != typeof e)
                        throw new Error;
                    return this.each(function(e, t) {
                        return function() {
                            var i = t.apply(this, arguments);
                            if ("function" != typeof i)
                                throw new Error;
                            De(this, e).ease = i
                        }
                    }(this._id, e))
                },
                end: function() {
                    var e, t, i = this, r = i._id, n = i.size();
                    return new Promise((function(s, a) {
                        var o = {
                            value: a
                        }
                          , l = {
                            value: function() {
                                0 == --n && s()
                            }
                        };
                        i.each((function() {
                            var i = De(this, r)
                              , n = i.on;
                            n !== e && ((t = (e = n).copy())._.cancel.push(o),
                            t._.interrupt.push(o),
                            t._.end.push(l)),
                            i.on = t
                        }
                        )),
                        0 === n && s()
                    }
                    ))
                },
                [Symbol.iterator]: Jt[Symbol.iterator]
            };
            var ei = {
                time: null,
                delay: 0,
                duration: 250,
                ease: function(e) {
                    return ((e *= 2) <= 1 ? e * e * e : (e -= 2) * e * e + 2) / 2
                }
            };
            function ti(e, t) {
                for (var i; !(i = e.__transition) || !(i = i[t]); )
                    if (!(e = e.parentNode))
                        throw new Error(`transition ${t} not found`);
                return i
            }
            be.prototype.interrupt = function(e) {
                return this.each((function() {
                    !function(e, t) {
                        var i, r, n, s = e.__transition, a = !0;
                        if (s) {
                            for (n in t = null == t ? null : t + "",
                            s)
                                (i = s[n]).name === t ? (r = i.state > 2 && i.state < 5,
                                i.state = 6,
                                i.timer.stop(),
                                i.on.call(r ? "interrupt" : "cancel", e, e.__data__, i.index, i.group),
                                delete s[n]) : a = !1;
                            a && delete e.__transition
                        }
                    }(this, e)
                }
                ))
            }
            ,
            be.prototype.transition = function(e) {
                var t, i;
                e instanceof qt ? (t = e._id,
                e = e._name) : (t = Qt(),
                (i = ei).time = (0,
                ve.zO)(),
                e = null == e ? null : e + "");
                for (var r = this._groups, n = r.length, s = 0; s < n; ++s)
                    for (var a, o = r[s], l = o.length, h = 0; h < l; ++h)
                        (a = o[h]) && Oe(a, e, t, h, o, i || ti(a, t));
                return new qt(r,this._parents,e,t)
            }
        }
    }, a = {};
    function o(e) {
        var t = a[e];
        if (void 0 !== t)
            return t.exports;
        var i = a[e] = {
            id: e,
            loaded: !1,
            exports: {}
        };
        return s[e].call(i.exports, i, i.exports, o),
        i.loaded = !0,
        i.exports
    }
    o.m = s,
    o.amdD = function() {
        throw new Error("define cannot be used indirect")
    }
    ,
    o.amdO = {},
    e = [],
    o.O = function(t, i, r, n) {
        if (!i) {
            var s = 1 / 0;
            for (u = 0; u < e.length; u++) {
                i = e[u][0],
                r = e[u][1],
                n = e[u][2];
                for (var a = !0, l = 0; l < i.length; l++)
                    (!1 & n || s >= n) && Object.keys(o.O).every((function(e) {
                        return o.O[e](i[l])
                    }
                    )) ? i.splice(l--, 1) : (a = !1,
                    n < s && (s = n));
                if (a) {
                    e.splice(u--, 1);
                    var h = r();
                    void 0 !== h && (t = h)
                }
            }
            return t
        }
        n = n || 0;
        for (var u = e.length; u > 0 && e[u - 1][2] > n; u--)
            e[u] = e[u - 1];
        e[u] = [i, r, n]
    }
    ,
    o.n = function(e) {
        var t = e && e.__esModule ? function() {
            return e.default
        }
        : function() {
            return e
        }
        ;
        return o.d(t, {
            a: t
        }),
        t
    }
    ,
    i = Object.getPrototypeOf ? function(e) {
        return Object.getPrototypeOf(e)
    }
    : function(e) {
        return e.__proto__
    }
    ,
    o.t = function(e, r) {
        if (1 & r && (e = this(e)),
        8 & r)
            return e;
        if ("object" == typeof e && e) {
            if (4 & r && e.__esModule)
                return e;
            if (16 & r && "function" == typeof e.then)
                return e
        }
        var n = Object.create(null);
        o.r(n);
        var s = {};
        t = t || [null, i({}), i([]), i(i)];
        for (var a = 2 & r && e; "object" == typeof a && !~t.indexOf(a); a = i(a))
            Object.getOwnPropertyNames(a).forEach((function(t) {
                s[t] = function() {
                    return e[t]
                }
            }
            ));
        return s.default = function() {
            return e
        }
        ,
        o.d(n, s),
        n
    }
    ,
    o.d = function(e, t) {
        for (var i in t)
            o.o(t, i) && !o.o(e, i) && Object.defineProperty(e, i, {
                enumerable: !0,
                get: t[i]
            })
    }
    ,
    o.f = {},
    o.e = function(e) {
        return Promise.all(Object.keys(o.f).reduce((function(t, i) {
            return o.f[i](e, t),
            t
        }
        ), []))
    }
    ,
    o.u = function(e) {
        return "deps/" + {
            643: "pdfmake",
            4297: "xlsx",
            4384: "markerjs2"
        }[e] + ".js"
    }
    ,
    o.o = function(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
    }
    ,
    r = {},
    n = "@amcharts/amcharts5:",
    o.l = function(e, t, i, s) {
        if (r[e])
            r[e].push(t);
        else {
            var a, l;
            if (void 0 !== i)
                for (var h = document.getElementsByTagName("script"), u = 0; u < h.length; u++) {
                    var c = h[u];
                    if (c.getAttribute("src") == e || c.getAttribute("data-webpack") == n + i) {
                        a = c;
                        break
                    }
                }
            a || (l = !0,
            (a = document.createElement("script")).charset = "utf-8",
            a.timeout = 120,
            o.nc && a.setAttribute("nonce", o.nc),
            a.setAttribute("data-webpack", n + i),
            a.src = e),
            r[e] = [t];
            var d = function(t, i) {
                a.onerror = a.onload = null,
                clearTimeout(p);
                var n = r[e];
                if (delete r[e],
                a.parentNode && a.parentNode.removeChild(a),
                n && n.forEach((function(e) {
                    return e(i)
                }
                )),
                t)
                    return t(i)
            }
              , p = setTimeout(d.bind(null, void 0, {
                type: "timeout",
                target: a
            }), 12e4);
            a.onerror = d.bind(null, a.onerror),
            a.onload = d.bind(null, a.onload),
            l && document.head.appendChild(a)
        }
    }
    ,
    o.r = function(e) {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }),
        Object.defineProperty(e, "__esModule", {
            value: !0
        })
    }
    ,
    o.nmd = function(e) {
        return e.paths = [],
        e.children || (e.children = []),
        e
    }
    ,
    o.p = "",
    function() {
        var e = {
            4826: 0
        };
        o.f.j = function(t, i) {
            var r = o.o(e, t) ? e[t] : void 0;
            if (0 !== r)
                if (r)
                    i.push(r[2]);
                else {
                    var n = new Promise((function(i, n) {
                        r = e[t] = [i, n]
                    }
                    ));
                    i.push(r[2] = n);
                    var s = o.p + o.u(t)
                      , a = new Error;
                    o.l(s, (function(i) {
                        if (o.o(e, t) && (0 !== (r = e[t]) && (e[t] = void 0),
                        r)) {
                            var n = i && ("load" === i.type ? "missing" : i.type)
                              , s = i && i.target && i.target.src;
                            a.message = "Loading chunk " + t + " failed.\n(" + n + ": " + s + ")",
                            a.name = "ChunkLoadError",
                            a.type = n,
                            a.request = s,
                            r[1](a)
                        }
                    }
                    ), "chunk-" + t, t)
                }
        }
        ,
        o.O.j = function(t) {
            return 0 === e[t]
        }
        ;
        var t = function(t, i) {
            var r, n, s = i[0], a = i[1], l = i[2], h = 0;
            if (s.some((function(t) {
                return 0 !== e[t]
            }
            ))) {
                for (r in a)
                    o.o(a, r) && (o.m[r] = a[r]);
                if (l)
                    var u = l(o)
            }
            for (t && t(i); h < s.length; h++)
                n = s[h],
                o.o(e, n) && e[n] && e[n][0](),
                e[n] = 0;
            return o.O(u)
        }
          , i = self.webpackChunk_am5 = self.webpackChunk_am5 || [];
        i.forEach(t.bind(null, 0)),
        i.push = t.bind(null, i.push.bind(i))
    }();
    var l = o(8494);
    l = o.O(l);
    var h = window;
    for (var u in l)
        h[u] = l[u];
    l.__esModule && Object.defineProperty(h, "__esModule", {
        value: !0
    })
}();
window.am5geodata_continentsLow = (function() {
    const map = {
        "type": "FeatureCollection",
        "features": [{
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[-77.3742, 8.6583], [-77.4072, 8.427], [-77.2124, 8.0338], [-77.3509, 7.7057], [-77.7439, 7.537], [-77.9011, 7.2294], [-78.1701, 7.5437], [-78.4215, 8.0608], [-78.1139, 8.3795], [-79.0865, 8.997], [-79.4418, 9.0059], [-79.7508, 8.5953], [-80.3687, 8.289], [-80.4581, 8.0768], [-80.0752, 7.6671], [-80.4388, 7.2747], [-80.8456, 7.2201], [-81.0352, 7.711], [-81.5041, 7.7213], [-81.7279, 8.1376], [-82.6796, 8.3218], [-83.1232, 8.3529], [-83.1625, 8.5882], [-83.734, 8.6144], [-83.6373, 9.0352], [-83.8956, 9.2762], [-84.6589, 9.6473], [-85.1145, 9.5816], [-85.6248, 9.9025], [-85.8305, 10.3979], [-85.6672, 10.745], [-85.7453, 11.0886], [-86.4688, 11.7385], [-86.7556, 12.1566], [-87.6676, 12.9037], [-87.4128, 13.1274], [-87.7084, 13.36], [-87.9308, 13.1807], [-88.5121, 13.1838], [-89.2776, 13.4781], [-89.8042, 13.5602], [-90.607, 13.9291], [-91.1461, 13.9255], [-91.8191, 14.2283], [-92.2645, 14.5678], [-92.809, 15.1387], [-93.916, 16.0536], [-94.3741, 16.2848], [-94.6615, 16.2018], [-94.9003, 16.4175], [-95.4643, 15.9745], [-96.2136, 15.6931], [-96.5108, 15.6518], [-97.1846, 15.9093], [-97.7548, 15.967], [-98.5203, 16.3048], [-98.7622, 16.5347], [-99.6906, 16.7198], [-100.0244, 16.9205], [-100.8478, 17.2006], [-101.6002, 17.6516], [-101.847, 17.9223], [-102.6995, 18.0626], [-103.4415, 18.3254], [-103.9125, 18.8283], [-104.9385, 19.3095], [-105.4821, 19.9762], [-105.6694, 20.3855], [-105.2603, 20.579], [-105.4923, 20.7766], [-105.237, 21.1192], [-105.2086, 21.4908], [-105.6492, 21.9879], [-105.7917, 22.6276], [-106.4025, 23.1958], [-106.9354, 23.8811], [-107.9512, 24.6149], [-108.3736, 25.1942], [-109.0288, 25.4805], [-109.385, 25.7273], [-109.4256, 26.0327], [-109.1997, 26.3052], [-109.4829, 26.7105], [-109.7548, 26.703], [-109.9441, 27.0794], [-110.4779, 27.3226], [-110.5298, 27.8642], [-111.1215, 27.9672], [-111.6801, 28.4706], [-112.1618, 29.0188], [-112.2235, 29.2696], [-112.7384, 29.9856], [-113.1104, 30.7934], [-113.0467, 31.1792], [-113.6235, 31.3461], [-113.9478, 31.6293], [-114.1493, 31.5072], [-114.8398, 31.7984], [-114.8819, 31.1565], [-114.6333, 30.5067], [-114.6498, 30.2381], [-114.3726, 29.8302], [-113.7556, 29.3677], [-113.4999, 28.9269], [-113.2056, 28.7986], [-112.8709, 28.4244], [-112.7339, 27.826], [-112.3291, 27.5233], [-112.0091, 26.9671], [-111.5696, 26.7074], [-111.2917, 25.7899], [-111.0345, 25.5271], [-110.6774, 24.7885], [-110.5471, 24.2141], [-110.0229, 24.1746], [-109.4209, 23.4803], [-109.458, 23.2149], [-109.9234, 22.8859], [-110.0861, 23.0053], [-110.3627, 23.605], [-111.4193, 24.329], [-112.0728, 24.84], [-112.0557, 25.488], [-112.3773, 26.2138], [-113.0207, 26.5831], [-113.2058, 26.857], [-113.5986, 26.7212], [-113.841, 26.9666], [-114.4456, 27.2183], [-114.5399, 27.431], [-114.9938, 27.7359], [-114.3006, 27.8731], [-114.0487, 28.4262], [-114.1455, 28.6055], [-114.9938, 29.3845], [-115.6738, 29.7565], [-115.8157, 30.3038], [-116.0622, 30.8041], [-116.6622, 31.5649], [-117.2434, 32.664], [-117.4674, 33.2957], [-118.0806, 33.7222], [-118.4104, 33.744], [-118.5063, 34.0174], [-119.1437, 34.112], [-119.606, 34.4178], [-120.4812, 34.4715], [-120.6448, 34.5798], [-120.6337, 35.0766], [-120.8605, 35.3655], [-121.8774, 36.331], [-121.79, 36.7323], [-122.3948, 37.2077], [-122.4669, 37.838], [-122.9681, 38.0968], [-122.9865, 38.277], [-123.7012, 38.9073], [-123.8845, 39.8608], [-124.324, 40.2519], [-124.3717, 40.4911], [-124.1331, 40.9697], [-124.0687, 41.3843], [-124.5397, 42.8127], [-124.1486, 43.6916], [-123.9293, 45.5768], [-124.0716, 46.7447], [-124.3763, 47.6587], [-124.6211, 47.9041], [-124.6327, 48.3751], [-123.9757, 48.1683], [-122.2421, 48.0107], [-122.7888, 48.993], [-123.0491, 48.993], [-123.3356, 49.4591], [-123.859, 49.4828], [-124.1415, 49.7927], [-124.4833, 49.8082], [-125.21, 50.4763], [-126.4045, 50.5298], [-126.6317, 50.9151], [-127.0579, 50.8676], [-127.7082, 51.1512], [-127.6449, 51.4784], [-128.1024, 51.7884], [-128.3576, 52.1589], [-128.1088, 52.858], [-128.4519, 52.8766], [-128.6523, 53.2437], [-129.2842, 53.3931], [-129.5637, 53.2515], [-130.3351, 53.724], [-130.0433, 54.1335], [-130.8496, 54.8076], [-131.0478, 55.1576], [-130.9186, 55.736], [-131.2875, 56.0121], [-131.8439, 56.1601], [-132.8145, 57.0408], [-133.4659, 57.1722], [-133.5542, 57.6951], [-134.0634, 58.2111], [-134.7761, 58.4539], [-135.3025, 58.2559], [-135.8618, 58.5771], [-136.5827, 58.2453], [-137.5439, 58.5811], [-138.3525, 59.0873], [-140.2168, 59.7265], [-140.8432, 59.749], [-141.6701, 59.9698], [-142.9457, 60.097], [-143.805, 60.0129], [-144.9012, 60.3351], [-145.8989, 60.4783], [-146.8741, 61.005], [-148.3445, 60.8536], [-148.1976, 60.1678], [-148.4306, 59.9891], [-149.4323, 60.0011], [-150.9608, 59.244], [-151.7383, 59.1885], [-151.7345, 59.9882], [-151.4515, 60.2026], [-151.3217, 60.7428], [-150.4412, 61.0236], [-150.6123, 61.3013], [-151.7341, 60.9106], [-151.7505, 60.7548], [-153.1061, 59.875], [-154.0882, 59.3632], [-154.1298, 59.12], [-153.327, 58.8843], [-154.0199, 58.493], [-154.2469, 58.1594], [-155.0069, 58.016], [-156.4784, 57.328], [-156.4751, 57.1051], [-157.5783, 56.6344], [-158.4144, 56.4358], [-158.2757, 56.196], [-159.5233, 55.8101], [-159.9623, 55.7948], [-161.0995, 55.4059], [-161.7416, 55.3911], [-162.0741, 55.1394], [-162.8651, 54.9545], [-162.9621, 55.1838], [-162.1571, 55.7195], [-161.2156, 56.0214], [-160.8514, 55.7719], [-160.3021, 56.3141], [-159.2831, 56.6885], [-158.321, 57.2978], [-157.6076, 57.6016], [-157.5235, 58.4213], [-158.5032, 58.8503], [-159.0827, 58.4697], [-159.6702, 58.9111], [-160.3631, 59.0512], [-161.7554, 58.6119], [-161.8286, 59.5887], [-162.2425, 60.1782], [-163.2193, 59.8455], [-163.9069, 59.8067], [-164.6622, 60.3038], [-165.3538, 60.5413], [-164.8051, 60.892], [-165.566, 61.1024], [-166.0789, 61.8031], [-165.1944, 62.4736], [-164.409, 63.2151], [-163.3589, 63.0457], [-161.974, 63.453], [-161.0997, 63.558], [-160.7786, 63.819], [-160.932, 64.5792], [-161.187, 64.9241], [-161.7594, 64.8162], [-162.807, 64.3743], [-163.7132, 64.5883], [-164.8995, 64.4607], [-166.1428, 64.5827], [-167.4039, 65.4221], [-168.0884, 65.6578], [-164.6742, 66.5549], [-163.7755, 66.5312], [-163.6954, 66.0837], [-161.8164, 66.0536], [-161.557, 66.2504], [-160.2317, 66.4202], [-160.864, 66.6708], [-161.8566, 66.7003], [-161.9653, 67.0499], [-163.0016, 67.0272], [-163.7205, 67.1955], [-164.1251, 67.6067], [-166.3805, 68.4251], [-166.2092, 68.8854], [-164.3024, 68.9364], [-163.1614, 69.3879], [-162.9521, 69.7581], [-161.881, 70.3318], [-160.9963, 70.3045], [-159.3144, 70.8784], [-157.9985, 70.8454], [-156.7833, 71.319], [-155.1669, 71.0993], [-154.1952, 70.801], [-153.2329, 70.9326], [-152.233, 70.8103], [-151.9447, 70.4521], [-149.2694, 70.5009], [-147.7053, 70.2173], [-145.8232, 70.16], [-145.1973, 70.0086], [-143.2184, 70.1163], [-141.4078, 69.6533], [-139.1815, 69.5155], [-138.1283, 69.1519], [-136.7174, 68.8891], [-135.8762, 68.9169], [-135.6914, 69.3111], [-135.1409, 69.4675], [-133.1632, 69.4338], [-130.4985, 70.1431], [-128.9715, 69.7123], [-127.765, 70.2219], [-127.1385, 70.2392], [-126.6122, 69.7305], [-125.9073, 69.4185], [-124.7678, 69.99], [-123.6091, 69.3774], [-123.0258, 69.81], [-120.9624, 69.6604], [-120.2925, 69.4205], [-118.8687, 69.2571], [-118.0953, 69.0429], [-116.0651, 68.8554], [-115.6314, 68.9726], [-114.4138, 68.6596], [-113.9644, 68.3991], [-114.7652, 68.2701], [-115.1332, 67.8194], [-113.6819, 67.7], [-112.4352, 67.6849], [-110.9901, 67.7907], [-110.0426, 67.9772], [-109.6305, 67.7328], [-108.5929, 67.591], [-108.0884, 67.0698], [-107.1564, 66.8819], [-108.2611, 68.1501], [-108.3134, 68.6108], [-106.1646, 68.9198], [-105.4286, 68.4583], [-104.1934, 68.0311], [-103.4741, 68.115], [-102.692, 67.8116], [-101.555, 67.6931], [-100.4561, 67.8396], [-99.1468, 67.7237], [-98.4171, 67.8265], [-97.4549, 67.6169], [-97.2066, 67.8551], [-98.4384, 68.0646], [-98.2184, 68.3174], [-97.2658, 68.453], [-96.9769, 68.2555], [-96.036, 68.1578], [-96.3714, 67.5539], [-95.7826, 67.1937], [-95.2588, 67.2625], [-95.6505, 67.7375], [-95.461, 68.0213], [-94.7443, 68.0708], [-93.6517, 68.5431], [-93.6628, 68.8381], [-94.2707, 69.4551], [-96.0503, 69.8311], [-96.4926, 70.1249], [-96.2265, 70.5418], [-96.549, 70.809], [-96.4058, 71.2737], [-95.2013, 71.9036], [-94.3084, 71.7649], [-92.9488, 71.2622], [-92.9814, 70.8525], [-91.5641, 70.1782], [-92.751, 69.7139], [-90.8221, 69.2904], [-90.4683, 68.8638], [-89.0567, 69.266], [-88.0413, 68.8117], [-87.8103, 68.4042], [-88.3469, 68.2883], [-88.1958, 67.7659], [-87.2663, 67.1839], [-86.5363, 67.5162], [-85.9526, 68.0724], [-85.7338, 68.6301], [-84.8622, 69.074], [-85.3869, 69.2318], [-85.5076, 69.8453], [-84.2416, 69.8351], [-82.6183, 69.691], [-82.642, 69.4584], [-81.3286, 69.12], [-81.2815, 68.6572], [-82.5526, 68.4464], [-81.9764, 67.862], [-81.2702, 67.4598], [-81.4675, 67.0698], [-82.6416, 66.5876], [-84.4784, 66.1794], [-85.6039, 66.5683], [-86.6331, 66.5314], [-86.0429, 66.0225], [-87.2914, 65.3549], [-87.9701, 65.3489], [-89.7494, 65.9359], [-89.9243, 65.7803], [-88.9739, 65.3482], [-87.0275, 65.1982], [-87.2805, 64.8262], [-88.1057, 64.1832], [-88.653, 64.0094], [-90.1418, 63.9819], [-90.0135, 63.8044], [-91.3303, 63.5067], [-90.7466, 63.3516], [-90.8711, 62.9459], [-91.4491, 62.804], [-92.3613, 62.8194], [-93.4206, 61.7059], [-93.9127, 61.4815], [-94.6469, 60.4164], [-94.7858, 59.9536], [-94.7137, 58.9033], [-94.2871, 58.716], [-93.2781, 58.7564], [-92.249, 57.0093], [-91.1115, 57.2412], [-90.5922, 57.2245], [-89.7909, 56.9813], [-88.9484, 56.8512], [-88.0751, 56.4673], [-87.5608, 56.0564], [-85.8305, 55.6569], [-85.061, 55.2856], [-83.9107, 55.3147], [-82.5775, 55.1487], [-82.2195, 54.8135], [-82.4181, 54.3559], [-82.1413, 53.8177], [-82.2605, 52.9612], [-81.5993, 52.4325], [-81.6615, 52.2938], [-80.6579, 51.7585], [-80.368, 51.3299], [-79.8362, 51.1734], [-79.4975, 51.5698], [-78.9777, 51.7338], [-78.4917, 52.2521], [-78.7238, 52.6278], [-79.2418, 54.0989], [-79.6655, 54.6975], [-78.9091, 54.8815], [-77.8911, 55.2364], [-77.3249, 55.5555], [-76.6504, 56.1075], [-76.5257, 56.8918], [-76.6555, 57.3806], [-77.1571, 58.0191], [-78.5152, 58.6823], [-78.4586, 58.8734], [-77.7606, 59.3801], [-77.7262, 59.6759], [-77.312, 60.0424], [-77.8715, 60.7859], [-77.7362, 61.4373], [-78.1372, 62.1074], [-78.0682, 62.3555], [-77.3724, 62.5726], [-74.6899, 62.1835], [-73.6299, 62.4543], [-72.0816, 61.7283], [-71.4229, 61.159], [-70.2792, 61.0687], [-69.6404, 60.6898], [-69.7559, 60.3886], [-69.682, 59.3417], [-69.5317, 58.8692], [-68.6983, 58.9045], [-67.5697, 58.2135], [-66.608, 58.5489], [-65.6061, 59.1106], [-64.9312, 60.2519], [-64.4995, 60.2683], [-63.5398, 59.3328], [-63.1854, 58.8578], [-62.5939, 58.4741], [-62.3056, 57.9723], [-61.899, 57.8613], [-61.851, 57.3812], [-61.3337, 57.0106], [-61.5146, 56.3903], [-61.0893, 55.8662], [-60.8318, 55.9579], [-59.9303, 55.2594], [-58.997, 55.1494], [-58.7802, 54.8384], [-58.1951, 54.8659], [-57.4046, 54.5705], [-58.1516, 54.3503], [-57.4161, 54.1628], [-57.1489, 53.8476], [-56.4651, 53.7651], [-55.7979, 53.212], [-55.8336, 52.3104], [-55.6951, 52.1378], [-56.976, 51.4577], [-58.5103, 51.295], [-59.1655, 50.7799], [-60.0801, 50.2546], [-61.2897, 50.202], [-62.7155, 50.3016], [-64.8679, 50.2754], [-65.2686, 50.32], [-66.4955, 50.2119], [-66.9411, 49.9938], [-67.3719, 49.3486], [-68.2821, 49.1972], [-68.9291, 48.829], [-69.7752, 48.0981], [-69.9057, 47.8322], [-70.7058, 47.1398], [-70.5196, 47.0323], [-68.987, 48.2748], [-67.5608, 48.8558], [-66.1781, 49.2132], [-65.5234, 49.2662], [-64.8364, 49.1917], [-64.2618, 48.9218], [-64.2538, 48.5505], [-65.2595, 48.0213], [-65.9266, 48.1887], [-65.6667, 47.696], [-65.2282, 47.8114], [-64.7033, 47.7248], [-64.9121, 47.3688], [-65.3189, 47.1011], [-64.9057, 46.8881], [-64.5415, 46.2404], [-63.2928, 45.7522], [-62.4831, 45.6217], [-61.9556, 45.868], [-61.4924, 45.6869], [-61.2837, 45.2355], [-62.514, 44.8435], [-63.7611, 44.4862], [-64.286, 44.5501], [-64.3781, 44.3037], [-64.8624, 43.8678], [-65.7382, 43.5607], [-66.1257, 43.8137], [-66.0995, 44.3677], [-65.6567, 44.7605], [-64.4489, 45.2559], [-64.8979, 45.6261], [-65.8847, 45.223], [-66.8726, 45.0672], [-67.3642, 44.697], [-67.9073, 44.4538], [-68.2775, 44.5075], [-69.0683, 44.0978], [-69.7916, 43.8052], [-70.1789, 43.7662], [-70.8292, 42.8251], [-71.0463, 42.3311], [-70.7382, 42.229], [-70.4046, 41.6271], [-70.6572, 41.5343], [-71.4264, 41.6333], [-71.5228, 41.3789], [-72.8471, 41.2657], [-73.5831, 41.022], [-74.2267, 40.6079], [-73.9575, 40.3282], [-74.1761, 39.7268], [-74.4289, 39.3872], [-74.897, 39.1453], [-75.3922, 39.0929], [-75.036, 38.5034], [-75.6592, 37.9539], [-76.2948, 38.4945], [-76.1683, 38.8527], [-76.5194, 38.8985], [-76.5012, 38.5323], [-76.2642, 37.8935], [-76.2635, 37.3568], [-75.8904, 36.6568], [-76.4788, 36.0283], [-75.7724, 35.9], [-75.7742, 35.647], [-76.1739, 35.354], [-76.513, 35.2705], [-76.7449, 34.9412], [-77.751, 34.2851], [-78.0136, 33.9118], [-78.5778, 33.8732], [-78.9202, 33.6588], [-79.276, 33.1354], [-80.0218, 32.6201], [-80.2297, 32.5766], [-80.8494, 32.114], [-81.1978, 31.7043], [-81.1754, 31.5312], [-81.5203, 30.8747], [-81.2496, 29.7938], [-80.9, 29.0498], [-80.524, 28.4861], [-80.6503, 28.1811], [-80.2262, 27.2072], [-80.0413, 26.5685], [-80.1263, 25.8334], [-80.3669, 25.3313], [-80.7366, 25.1564], [-81.0977, 25.3194], [-81.365, 25.8312], [-81.7154, 25.983], [-81.8666, 26.4349], [-82.4414, 27.0599], [-82.6609, 27.7186], [-82.8436, 27.846], [-82.6607, 28.4856], [-82.6518, 28.8874], [-83.2906, 29.452], [-83.6943, 29.9261], [-84.0443, 30.1036], [-84.3828, 29.9074], [-85.3189, 29.6802], [-85.3538, 29.8759], [-86.2573, 30.4929], [-87.7903, 30.2918], [-88.9051, 30.4152], [-89.5885, 30.1658], [-90.2253, 30.3793], [-90.413, 30.1405], [-89.5894, 29.915], [-90.1014, 29.1817], [-90.3793, 29.2953], [-90.7511, 29.1311], [-91.2902, 29.2891], [-91.3312, 29.5137], [-91.8932, 29.836], [-92.2607, 29.5568], [-93.1758, 29.7791], [-93.6947, 29.7698], [-94.8886, 29.3708], [-95.2734, 28.9637], [-95.8534, 28.6401], [-96.4486, 28.5944], [-96.5616, 28.3671], [-97.1564, 28.1443], [-97.1715, 27.8797], [-97.5546, 26.9675], [-97.4023, 26.3967], [-97.1402, 26.0296], [-97.225, 25.5852], [-97.5071, 25.0144], [-97.6676, 24.3898], [-97.8578, 22.6245], [-97.6376, 21.6035], [-97.1214, 20.615], [-96.456, 19.8697], [-96.2895, 19.3437], [-95.821, 18.7546], [-95.1818, 18.7005], [-94.798, 18.5145], [-94.5461, 18.1749], [-94.189, 18.1953], [-93.5522, 18.4306], [-92.8849, 18.4688], [-92.7102, 18.6121], [-91.9738, 18.716], [-91.8031, 18.4705], [-91.2753, 18.6246], [-91.343, 18.9007], [-90.7393, 19.3521], [-90.6934, 19.7299], [-90.5071, 19.9119], [-90.4841, 20.5564], [-90.3531, 21.0096], [-89.8198, 21.2746], [-88.8787, 21.414], [-88.1317, 21.616], [-86.8242, 21.4215], [-86.8648, 20.8849], [-87.4672, 20.1023], [-87.4248, 19.5834], [-87.7619, 18.4461], [-88.0973, 18.1216], [-88.2717, 17.6098], [-88.3134, 16.6328], [-88.6952, 16.2475], [-88.894, 15.8906], [-88.131, 15.7011], [-87.6181, 15.9097], [-86.9072, 15.7624], [-86.3568, 15.7832], [-85.7839, 16.0029], [-85.4836, 15.8995], [-84.9738, 15.9901], [-84.2614, 15.8227], [-83.7604, 15.2204], [-83.3691, 15.2399], [-83.1576, 14.9931], [-83.2992, 14.749], [-83.1878, 14.3401], [-83.4124, 13.9966], [-83.5673, 13.3205], [-83.511, 12.4119], [-83.7693, 11.9316], [-83.6517, 11.6422], [-83.8679, 11.2999], [-83.4482, 10.4658], [-82.7783, 9.6695], [-82.3708, 9.428], [-82.2441, 9.0321], [-81.355, 8.7804], [-80.8387, 8.8874], [-80.1272, 9.2101], [-79.5774, 9.598], [-78.5043, 9.4063], [-78.0828, 9.2363], [-77.3742, 8.6583]]], [[[-25.4583, 70.9426], [-25.4022, 70.6527], [-27.8979, 70.4541], [-27.7088, 70.8971], [-25.4583, 70.9426]]], [[[-53.103, 70.1409], [-52.0452, 69.8071], [-52.1125, 69.4893], [-53.5784, 69.2567], [-53.7831, 69.5064], [-54.804, 69.6304], [-54.8304, 70.1611], [-54.3719, 70.3174], [-53.103, 70.1409]]], [[[-97.4694, 69.6668], [-96.2999, 69.3444], [-95.6856, 68.7358], [-96.4016, 68.4708], [-97.472, 68.544], [-99.254, 68.8632], [-99.5641, 69.0341], [-98.4559, 69.3346], [-98.5483, 69.545], [-97.4694, 69.6668]]], [[[-75.8665, 68.3367], [-75.1538, 68.234], [-75.1274, 67.5373], [-75.7801, 67.2836], [-77.0051, 67.2669], [-77.3058, 67.7062], [-76.7405, 68.2313], [-75.8665, 68.3367]]], [[[-85.0559, 65.4374], [-83.4071, 65.1039], [-82.0501, 64.6442], [-81.7161, 64.0219], [-80.829, 64.09], [-80.3021, 63.7622], [-81.0465, 63.4615], [-82.3782, 63.7067], [-82.4672, 63.9269], [-83.4943, 64.0993], [-83.7283, 63.8135], [-84.6329, 63.3092], [-85.4954, 63.1392], [-85.7142, 63.6579], [-87.1888, 63.6723], [-86.252, 64.1368], [-86.3743, 64.5659], [-85.9617, 65.7042], [-85.241, 65.7954], [-85.0559, 65.4374]]], [[[-82.0477, 62.9705], [-82.1138, 62.6522], [-83.0158, 62.2099], [-83.699, 62.1602], [-83.8994, 62.4765], [-83.3767, 62.905], [-82.0477, 62.9705]]], [[[-79.5978, 62.4132], [-79.324, 62.0261], [-79.7144, 61.6126], [-80.2761, 61.8586], [-80.0215, 62.3431], [-79.5978, 62.4132]]], [[[-166.1355, 60.3835], [-165.7298, 60.3143], [-165.5917, 59.9132], [-166.1876, 59.7738], [-167.1389, 60.0086], [-166.4759, 60.3828], [-166.1355, 60.3835]]], [[[-134.7332, 58.2251], [-134.2671, 57.8846], [-133.9253, 57.3369], [-134.4354, 57.057], [-134.7332, 58.2251]]], [[[-135.7304, 58.2442], [-135.002, 58.0511], [-135.0848, 57.5111], [-136.0767, 57.6747], [-136.5123, 58.0959], [-135.7304, 58.2442]]], [[[-152.8979, 57.8238], [-152.4121, 57.4547], [-153.7933, 56.9895], [-154.339, 56.9209], [-154.7059, 57.3353], [-154.2813, 57.638], [-153.8184, 57.5956], [-152.8979, 57.8238]]], [[[-135.0653, 57.4168], [-134.6207, 56.7183], [-135.787, 57.3173], [-135.0653, 57.4168]]], [[[-133.7078, 57.0627], [-133.0708, 56.9742], [-132.9592, 56.677], [-133.6029, 56.4642], [-133.7078, 57.0627]]], [[[-78.9067, 56.3203], [-79.1755, 55.8851], [-80.0009, 55.9322], [-79.3925, 56.2764], [-78.9067, 56.3203]]], [[[-133.566, 56.3392], [-133.2029, 56.3199], [-131.9764, 55.2086], [-131.9809, 54.8049], [-132.7823, 55.0484], [-133.447, 55.797], [-133.2415, 55.9208], [-133.566, 56.3392]]], [[[-130.965, 55.5679], [-131.6475, 55.5855], [-131.2693, 55.9555], [-130.965, 55.5679]]], [[[-163.4761, 54.9807], [-163.358, 54.7356], [-164.0734, 54.6209], [-164.5907, 54.4043], [-164.8877, 54.6078], [-164.5297, 54.8808], [-163.8681, 55.039], [-163.4761, 54.9807]]], [[[-132.8931, 54.1408], [-131.7025, 53.9864], [-132.0113, 53.2653], [-132.7477, 53.3105], [-133.0522, 53.7784], [-132.8931, 54.1408]]], [[[-166.6153, 53.9009], [-166.4442, 53.6519], [-167.136, 53.5265], [-166.9782, 53.9628], [-166.6153, 53.9009]]], [[[-128.6326, 53.1126], [-128.5099, 52.5186], [-129.0847, 52.8225], [-128.6326, 53.1126]]], [[[-131.8535, 53.23], [-131.6524, 53.103], [-131.8097, 52.5417], [-132.3455, 53.1361], [-131.8535, 53.23]]], [[[-77.7015, 24.2878], [-77.5186, 23.8696], [-77.7712, 23.7524], [-77.9998, 24.2198], [-77.7015, 24.2878]]], [[[-82.1016, 23.1904], [-81.1788, 23.0595], [-80.6503, 23.103], [-80.0752, 22.9423], [-79.183, 22.3879], [-78.6865, 22.367], [-77.8651, 21.9005], [-77.4973, 21.8716], [-76.6475, 21.2844], [-75.7229, 21.1108], [-75.6428, 20.7335], [-74.8826, 20.6505], [-74.2529, 20.0797], [-75.1165, 19.9012], [-76.1586, 19.9895], [-77.7151, 19.8555], [-77.2135, 20.3003], [-77.2297, 20.6438], [-77.9974, 20.7153], [-78.4908, 21.0536], [-78.6366, 21.5156], [-79.2745, 21.5627], [-80.2313, 21.8721], [-80.4992, 22.0634], [-80.9619, 22.0528], [-81.8164, 22.2001], [-81.9036, 22.6791], [-82.7384, 22.6893], [-83.3796, 22.2228], [-84.3264, 22.0745], [-84.3612, 22.379], [-84.045, 22.6662], [-83.2577, 22.9676], [-82.1016, 23.1904]]], [[[-82.5679, 21.6217], [-82.8531, 21.4437], [-83.0826, 21.7913], [-82.7146, 21.8903], [-82.5679, 21.6217]]], [[[-157.7994, 21.4566], [-158.1104, 21.3186], [-158.273, 21.5853], [-157.9625, 21.7012], [-157.7994, 21.4566]]], [[[-155.5813, 19.0121], [-155.8813, 19.0707], [-156.0487, 19.7498], [-155.8203, 20.014], [-155.8316, 20.2759], [-155.1989, 19.9944], [-154.8042, 19.5243], [-155.5813, 19.0121]]], [[[-71.7682, 18.0391], [-72.0601, 18.2286], [-72.8766, 18.1518], [-73.3851, 18.2513], [-73.8849, 18.0417], [-74.4189, 18.3463], [-74.2276, 18.6628], [-73.5915, 18.5225], [-72.7894, 18.4346], [-72.3477, 18.6747], [-72.8112, 19.0716], [-72.7033, 19.4409], [-73.0526, 19.6109], [-73.1177, 19.9039], [-72.6369, 19.9008], [-71.8348, 19.6966], [-71.5578, 19.8954], [-70.9541, 19.9141], [-70.1294, 19.6362], [-69.7394, 19.2993], [-69.3228, 19.2012], [-68.6848, 18.9047], [-68.3392, 18.6121], [-68.6588, 18.222], [-68.9349, 18.408], [-69.7707, 18.4435], [-70.1831, 18.2517], [-70.6448, 18.336], [-71.0281, 18.273], [-71.3958, 17.6462], [-71.7682, 18.0391]]], [[[-66.153, 18.4705], [-65.6288, 18.3813], [-65.9708, 17.9743], [-67.1968, 17.9942], [-67.1586, 18.4994], [-66.153, 18.4705]]], [[[-77.3544, 18.4666], [-76.9083, 18.3902], [-76.3499, 18.1518], [-76.5245, 17.8664], [-76.8533, 17.9738], [-77.3615, 17.8336], [-77.7681, 17.8775], [-78.2167, 18.4479], [-77.8735, 18.522], [-77.3544, 18.4666]]], [[[-61.0041, 10.168], [-61.5967, 10.0646], [-61.4648, 10.5391], [-61.0338, 10.67], [-61.0041, 10.168]]], [[[-80.7096, 52.7874], [-81.839, 52.9579], [-81.8473, 53.1865], [-81.1359, 53.2058], [-80.7096, 52.7874]]], [[[-55.4532, 51.5623], [-55.8714, 50.9073], [-56.6939, 50.0597], [-55.7648, 49.9605], [-55.892, 49.5803], [-54.9827, 49.268], [-54.579, 49.4908], [-53.9577, 49.4418], [-53.5733, 49.1413], [-53.853, 48.8112], [-53.5312, 48.2317], [-53.695, 47.921], [-52.955, 48.0293], [-53.1756, 47.6529], [-52.6536, 47.5495], [-53.0697, 46.6812], [-53.6164, 46.6803], [-53.5813, 46.9573], [-54.1737, 46.8805], [-53.8692, 47.387], [-54.8566, 47.3848], [-55.3156, 46.9058], [-55.7886, 46.8672], [-55.1909, 47.4492], [-56.2211, 47.6715], [-56.9525, 47.5743], [-58.3332, 47.6769], [-59.1169, 47.5708], [-59.3623, 47.8655], [-58.7105, 48.325], [-58.7165, 48.5979], [-58.0158, 49.5426], [-57.4656, 50.4636], [-56.7503, 51.2751], [-56.0256, 51.5685], [-55.4532, 51.5623]]], [[[-127.7131, 50.8207], [-126.701, 50.5156], [-125.4821, 50.3167], [-124.6429, 49.4285], [-123.9959, 49.2241], [-123.4972, 48.582], [-123.5946, 48.3334], [-124.6893, 48.5975], [-125.8285, 49.0918], [-125.8354, 49.2767], [-126.5485, 49.4189], [-126.6832, 49.8764], [-127.1143, 49.8797], [-127.9059, 50.4452], [-127.7131, 50.8207]]], [[[-61.7456, 49.1058], [-62.2195, 49.0791], [-63.5658, 49.3994], [-64.1315, 49.9416], [-62.8584, 49.7055], [-61.8171, 49.2835], [-61.7456, 49.1058]]], [[[-63.8337, 46.4939], [-63.1294, 46.422], [-62.1635, 46.4872], [-62.8784, 46.0012], [-63.641, 46.2307], [-63.8337, 46.4939]]], [[[-60.9122, 46.0447], [-60.8061, 45.738], [-60.4723, 45.9466], [-60.5049, 46.204], [-59.8651, 46.1596], [-60.3862, 45.6545], [-61.2837, 45.5737], [-61.4952, 45.9413], [-60.8702, 46.7966], [-60.3318, 46.7678], [-60.5768, 46.1721], [-60.9122, 46.0447]]], [[[-72.4274, 41.0385], [-72.3391, 40.8942], [-73.1942, 40.6541], [-73.5738, 40.9195], [-72.4274, 41.0385]]], [[[-77.8402, 24.7942], [-77.7453, 24.4635], [-78.0449, 24.2873], [-78.2988, 24.7538], [-78.0333, 25.1431], [-77.8402, 24.7942]]], [[[-30.7029, 83.5935], [-25.9475, 83.2897], [-24.4702, 82.8773], [-21.5208, 82.5954], [-25.1491, 82.001], [-21.3379, 82.0687], [-21.1466, 81.6952], [-17.2261, 81.4304], [-15.5555, 81.8337], [-12.1928, 81.649], [-11.5288, 81.424], [-14.5035, 80.7633], [-16.7607, 80.5733], [-16.8683, 80.1982], [-19.4292, 80.2577], [-20.1385, 79.8033], [-19.2836, 79.683], [-19.0749, 79.1524], [-20.9557, 78.5551], [-20.8625, 77.9119], [-20.2319, 77.3684], [-18.339, 77.2152], [-18.5103, 76.7782], [-20.9422, 76.887], [-21.8772, 76.5734], [-21.5692, 76.2937], [-20.1036, 76.2191], [-19.5091, 75.7575], [-19.426, 75.2299], [-20.4849, 75.3143], [-19.2252, 74.4795], [-19.3692, 74.284], [-21.1295, 74.1109], [-20.3673, 73.8483], [-20.5096, 73.493], [-22.1851, 73.2699], [-22.0364, 72.9183], [-22.2931, 72.1196], [-24.0692, 72.4986], [-24.6669, 72.4374], [-22.0133, 71.6888], [-21.7523, 71.4784], [-21.5228, 70.5262], [-23.3279, 70.451], [-23.7917, 70.5551], [-24.377, 71.1463], [-25.6558, 71.5301], [-25.7422, 71.1836], [-26.7179, 70.9506], [-27.6887, 70.9934], [-28.5409, 70.4769], [-28.0149, 70.4024], [-26.7472, 70.4756], [-26.4156, 70.2213], [-25.53, 70.3531], [-23.1732, 70.1145], [-23.0882, 69.883], [-26.3414, 68.7023], [-29.2496, 68.2988], [-29.8686, 68.3116], [-30.9786, 68.0613], [-32.1373, 68.3849], [-32.2747, 67.9228], [-33.157, 67.6267], [-34.1016, 66.7258], [-34.6329, 66.4351], [-36.3792, 65.8307], [-37.7541, 65.593], [-39.9609, 65.5562], [-39.5779, 65.3407], [-40.6554, 64.9154], [-40.1822, 64.48], [-40.6179, 64.1317], [-40.5504, 63.7253], [-42.1529, 62.5686], [-42.3216, 62.1526], [-42.1103, 61.8572], [-42.4188, 61.537], [-42.7171, 60.7675], [-43.1565, 60.3329], [-43.3203, 59.9281], [-44.0654, 59.9247], [-45.3793, 60.2028], [-45.5904, 60.5189], [-46.0467, 60.6157], [-46.0116, 61.0971], [-46.8746, 60.8163], [-47.7963, 60.8289], [-48.922, 61.2775], [-49.2891, 61.59], [-49.5534, 62.2328], [-50.3192, 62.4731], [-50.3382, 62.8287], [-51.4688, 63.6423], [-51.4511, 63.9047], [-52.0934, 64.4158], [-52.259, 65.1549], [-53.6346, 66.4136], [-53.0382, 66.8268], [-53.8845, 67.1355], [-53.4189, 67.5746], [-53.578, 67.8369], [-53.0393, 68.6108], [-51.2493, 68.74], [-50.5, 69.9358], [-52.2545, 70.059], [-54.0143, 70.4217], [-54.1659, 70.8201], [-52.4052, 70.6867], [-51.5245, 70.4394], [-51.1301, 70.9717], [-53.117, 71.313], [-53.4761, 71.6402], [-54.689, 71.3672], [-55.5939, 71.5536], [-55.3156, 72.1107], [-55.6017, 72.4536], [-54.7379, 72.8726], [-55.6687, 73.0078], [-55.2972, 73.2624], [-56.104, 73.5582], [-55.9295, 73.8954], [-56.7063, 74.2192], [-56.2555, 74.5268], [-58.6035, 75.3853], [-58.5163, 75.6891], [-61.3747, 76.1801], [-63.4388, 76.3394], [-66.8262, 75.9688], [-68.149, 76.0671], [-69.3728, 76.3319], [-69.252, 76.6861], [-70.7928, 76.869], [-70.8629, 77.1755], [-68.9784, 77.1952], [-68.1354, 77.3795], [-66.4531, 77.393], [-66.6912, 77.6813], [-69.3515, 77.4671], [-72.8181, 78.1944], [-72.3957, 78.5043], [-68.9935, 78.8574], [-67.4822, 79.1169], [-65.9679, 79.1324], [-64.7923, 80.0006], [-66.8437, 80.0761], [-66.996, 80.413], [-62.9932, 81.2069], [-61.436, 81.1337], [-61.2029, 81.7469], [-58.7174, 82.0932], [-54.7259, 82.3513], [-52.7757, 82.3218], [-50.8944, 81.8952], [-49.6942, 81.9722], [-48.8612, 82.4054], [-45.2912, 81.8288], [-44.2389, 82.3681], [-46.4782, 82.9519], [-43.1945, 83.255], [-37.828, 83.4856], [-30.7029, 83.5935]]], [[[-69.5694, 83.0249], [-63.641, 82.8127], [-61.477, 82.4674], [-62.1766, 82.0434], [-64.5741, 81.7336], [-65.4838, 81.2848], [-70.1434, 80.3977], [-71.3878, 79.7618], [-73.2937, 79.5217], [-75.2595, 79.4209], [-76.2558, 79.0068], [-74.4334, 78.724], [-75.866, 78.0098], [-78.0127, 77.9461], [-78.0762, 77.5191], [-79.3408, 77.1584], [-78.2888, 76.978], [-78.2844, 76.5711], [-80.6903, 76.1765], [-81.1708, 76.5128], [-83.8856, 76.4531], [-85.1412, 76.3046], [-89.5701, 76.4919], [-89.4997, 76.8268], [-88.3982, 77.104], [-86.8737, 77.2004], [-88.0946, 77.7193], [-87.0179, 77.8922], [-87.5519, 78.1767], [-86.808, 78.7744], [-84.3162, 78.9753], [-85.0901, 79.6122], [-86.4207, 79.8453], [-86.3073, 80.3194], [-83.7236, 80.229], [-80.051, 80.5287], [-83.4013, 80.714], [-85.3074, 80.526], [-88.9213, 80.8054], [-89.9474, 81.1725], [-88.9786, 81.5414], [-90.4903, 81.8772], [-86.5807, 82.1873], [-84.8968, 82.4494], [-82.1225, 82.6019], [-79.8864, 82.9385], [-77.4796, 82.8831], [-75.7449, 83.0471], [-69.5694, 83.0249]]], [[[-91.9977, 81.1854], [-90.643, 80.5937], [-87.6749, 80.3722], [-87.1442, 79.6624], [-85.5014, 79.5303], [-85.2899, 79.2083], [-87.0164, 78.8987], [-88.7911, 78.1925], [-90.6143, 78.1498], [-92.6782, 78.3893], [-95.1032, 79.29], [-95.297, 79.6531], [-96.7734, 80.1358], [-95.6148, 80.3962], [-96.1328, 80.6913], [-95.2697, 81.0007], [-91.9977, 81.1854]]], [[[-103.7063, 79.3521], [-99.6094, 78.5831], [-99.1664, 77.8569], [-100.5859, 77.8917], [-101.0742, 78.1938], [-102.7313, 78.3711], [-103.5183, 78.7691], [-105.5358, 79.0325], [-105.3877, 79.3235], [-103.7063, 79.3521]]], [[[-96.2564, 78.5511], [-94.8873, 78.3454], [-95.0872, 77.9927], [-96.9895, 77.806], [-98.2548, 78.4293], [-98.212, 78.8046], [-96.2564, 78.5511]]], [[[-109.9412, 78.6785], [-109.3908, 78.3367], [-113.1499, 78.4084], [-110.4077, 78.7566], [-109.9412, 78.6785]]], [[[-110.4581, 78.1035], [-109.7718, 77.9574], [-110.1984, 77.5246], [-111.952, 77.3442], [-113.1643, 77.5302], [-113.2153, 77.9035], [-110.4581, 78.1035]]], [[[-95.4843, 77.7921], [-93.301, 77.7399], [-93.5196, 77.4745], [-95.9872, 77.484], [-95.4843, 77.7921]]], [[[-116.0081, 77.4607], [-115.6239, 77.2658], [-116.2205, 76.6111], [-119.3679, 76.2218], [-119.9128, 75.8589], [-121.9083, 76.0347], [-122.7741, 76.2278], [-121.6138, 76.4415], [-119.0902, 77.3051], [-116.8353, 77.5288], [-116.0081, 77.4607]]], [[[-94.616, 76.9584], [-92.7162, 76.6029], [-91.305, 76.6808], [-90.8547, 76.4373], [-89.2844, 76.3017], [-90.2515, 76.0536], [-88.2014, 75.512], [-87.257, 75.6177], [-86.0687, 75.5022], [-83.932, 75.819], [-82.1538, 75.8309], [-79.6602, 75.4494], [-79.5082, 74.8801], [-80.2779, 74.5816], [-81.8089, 74.4766], [-83.5318, 74.5856], [-84.4256, 74.5081], [-88.4231, 74.4942], [-89.8444, 74.5485], [-91.9616, 74.7931], [-92.4283, 75.3828], [-92.1851, 75.8465], [-93.0917, 76.3541], [-95.2739, 76.2644], [-96.6397, 76.703], [-96.7583, 76.9717], [-94.616, 76.9584]]], [[[-108.3869, 76.0667], [-107.1356, 75.8787], [-106.3967, 76.0602], [-105.4812, 75.7457], [-105.8625, 75.1915], [-107.1533, 74.9272], [-108.8312, 75.0648], [-110.9408, 74.6387], [-112.5193, 74.4169], [-113.5141, 74.43], [-114.4518, 75.0879], [-115.7289, 74.9682], [-117.6001, 75.2716], [-116.6098, 76.0738], [-115.5806, 76.4375], [-114.1939, 76.4515], [-112.6975, 76.2016], [-111.0527, 75.5484], [-109.0865, 75.5065], [-108.9449, 75.6989], [-110.2703, 76.4169], [-109.3386, 76.76], [-108.467, 76.7376], [-108.3869, 76.0667]]], [[[-97.7259, 76.4961], [-97.4097, 75.5522], [-97.7994, 75.1167], [-100.2344, 75.0077], [-100.7122, 75.4064], [-102.5413, 75.5136], [-101.4313, 75.9919], [-102.1378, 76.2848], [-100.388, 76.6135], [-97.7259, 76.4961]]], [[[-102.4259, 76.0864], [-103.3148, 75.7641], [-104.3506, 76.1823], [-103.0981, 76.3115], [-102.4259, 76.0864]]], [[[-93.5518, 75.0513], [-93.5471, 74.691], [-94.6973, 74.6422], [-96.5658, 75.0987], [-95.6707, 75.5287], [-94.4272, 75.5935], [-93.5518, 75.0513]]], [[[-18.0005, 75.4073], [-17.5861, 74.9929], [-18.6708, 75.0015], [-18.0005, 75.4073]]], [[[-119.737, 74.13], [-117.5149, 74.2318], [-115.5107, 73.6188], [-115.4468, 73.4388], [-118.9615, 72.6842], [-119.4078, 72.3604], [-120.1802, 72.2126], [-120.6195, 71.5057], [-123.2107, 71.1235], [-124.0077, 71.6774], [-125.7626, 72.1375], [-124.9871, 72.5881], [-124.8364, 73.0762], [-123.7973, 73.7682], [-124.6962, 74.3481], [-121.3153, 74.5299], [-119.737, 74.13]]], [[[-93.4102, 74.1788], [-92.2228, 73.9726], [-90.3547, 73.8687], [-92.118, 72.7539], [-93.3407, 72.8018], [-94.0376, 72.0288], [-95.1929, 72.0275], [-95.5478, 72.7816], [-95.633, 73.6954], [-94.9736, 74.0414], [-93.4102, 74.1788]]], [[[-100.002, 73.946], [-99.1579, 73.7316], [-97.5819, 73.8876], [-97.0017, 73.6665], [-97.7959, 73.2852], [-97.0519, 72.6367], [-96.6133, 71.8339], [-98.663, 71.3021], [-99.167, 71.3672], [-100.5944, 72.1524], [-101.7241, 72.3149], [-102.7137, 72.783], [-101.9225, 73.0568], [-101.3508, 72.7463], [-100.4847, 72.773], [-100.2828, 73.1203], [-101.4509, 73.431], [-100.9151, 73.8052], [-100.002, 73.946]]], [[[-86.4735, 71.0427], [-84.7896, 71.0933], [-84.6995, 71.6315], [-85.9115, 71.9866], [-85.3411, 72.4216], [-85.6445, 72.7745], [-85.0184, 73.3356], [-82.6596, 73.7296], [-81.406, 73.6346], [-80.2748, 72.7455], [-80.9413, 72.2101], [-78.453, 72.4352], [-77.7532, 72.7248], [-76.6979, 72.6951], [-75.2943, 72.4809], [-74.9032, 72.1005], [-73.7136, 71.7198], [-71.6406, 71.5163], [-69.9501, 70.8449], [-68.3583, 70.5231], [-67.3637, 70.0344], [-66.6852, 69.2858], [-67.7517, 69.0387], [-68.038, 68.5507], [-67.033, 68.3261], [-66.2251, 67.9587], [-64.5275, 67.8127], [-64.0079, 67.3473], [-61.9684, 67.019], [-61.2997, 66.6488], [-61.9915, 66.0354], [-62.6589, 65.6399], [-63.3643, 65.5433], [-63.4018, 65.1185], [-64.6653, 65.1689], [-65.4017, 65.7639], [-65.3054, 66.0085], [-66.4771, 66.2797], [-67.1835, 66.0345], [-68.2568, 65.9386], [-67.3034, 65.4829], [-66.8606, 65.0916], [-65.2748, 64.6316], [-65.0107, 64.0088], [-64.6786, 64.0281], [-64.5144, 63.2639], [-65.0688, 63.2635], [-65.2659, 62.715], [-65.9788, 63.0007], [-67.676, 63.0935], [-66.2815, 62.3027], [-66.2567, 61.8683], [-67.4401, 62.1513], [-69.0823, 62.4052], [-69.5452, 62.7448], [-70.2364, 62.7634], [-71.2538, 63.0424], [-73.4439, 64.4236], [-74.5124, 64.6702], [-75.0675, 64.4567], [-76.7239, 64.242], [-77.7912, 64.367], [-78.1745, 64.6178], [-78.0957, 64.9392], [-77.4474, 65.1618], [-77.3267, 65.4532], [-75.8283, 65.227], [-73.5607, 65.5429], [-74.434, 66.139], [-73.0333, 66.7283], [-72.2201, 67.2543], [-73.3283, 68.2668], [-74.648, 68.7076], [-74.9174, 68.9828], [-76.4034, 68.6923], [-75.7872, 69.3186], [-77.5917, 69.8455], [-77.7219, 70.1707], [-79.3033, 69.8948], [-81.0982, 70.0912], [-82.1387, 69.8413], [-83.0913, 70.004], [-83.8594, 69.9627], [-86.3219, 70.1454], [-86.6244, 70.4013], [-87.9006, 70.2519], [-88.8483, 70.5231], [-89.3655, 71.0671], [-88.0387, 70.9512], [-87.8724, 71.2085], [-89.0794, 71.2879], [-89.8457, 71.4923], [-90.0251, 71.9489], [-89.2631, 73.0691], [-87.7197, 73.7229], [-86.7687, 73.8341], [-85.1108, 73.8081], [-86.6293, 72.8709], [-86.036, 71.7709], [-85.0235, 71.3532], [-86.4735, 71.0427]]], [[[-79.8893, 73.7014], [-78.2866, 73.6659], [-77.2066, 73.4996], [-76.2895, 73.081], [-76.4005, 72.8207], [-77.836, 72.8968], [-79.5006, 72.7559], [-80.1833, 73.2246], [-80.8241, 73.3807], [-80.8492, 73.7211], [-79.8893, 73.7014]]], [[[-105.2006, 72.9474], [-106.9216, 73.4799], [-105.5123, 73.7657], [-104.583, 73.3538], [-105.2006, 72.9474]]], [[[-114.4977, 72.6258], [-113.5003, 72.6944], [-112.7539, 72.986], [-111.2698, 72.7137], [-108.6983, 72.4995], [-108.2105, 71.7511], [-107.306, 71.8947], [-107.6958, 72.1493], [-108.2382, 73.1059], [-107.72, 73.3289], [-106.4822, 73.1962], [-105.415, 72.7883], [-105.2342, 72.415], [-104.3495, 71.434], [-104.5696, 71.1039], [-103.9535, 70.7626], [-100.9732, 70.0295], [-100.9351, 69.7152], [-102.2343, 69.8422], [-102.9197, 69.5647], [-101.9755, 69.4069], [-101.857, 69.0239], [-103.4681, 68.8084], [-105.0195, 69.0813], [-106.1408, 69.1621], [-106.659, 69.4396], [-107.4399, 69.0021], [-108.946, 68.7597], [-111.3108, 68.542], [-113.1277, 68.4941], [-113.6168, 68.8385], [-113.6941, 69.195], [-115.1591, 69.2647], [-116.5135, 69.4247], [-117.1043, 69.8042], [-117.1353, 70.1001], [-114.5923, 70.3125], [-112.6378, 70.2253], [-112.1143, 70.4468], [-113.7573, 70.6907], [-115.991, 70.5864], [-117.5872, 70.6296], [-118.2642, 70.8882], [-117.8141, 71.1588], [-118.8683, 71.687], [-118.9446, 71.9855], [-118.2136, 72.2629], [-118.3745, 72.5339], [-117.5517, 72.8311], [-114.6382, 73.3727], [-114.1091, 72.8611], [-114.4977, 72.6258]]]]
            },
            "properties": {
                "name": "North America",
                "id": "northAmerica"
            },
            "id": "northAmerica"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[179.9991, -16.1686], [179.7483, -16.4464], [179.9281, -16.7443], [179.007, -16.9001], [178.805, -16.6315], [179.5517, -16.2498], [179.9991, -16.1686]]], [[[178.2804, -17.372], [178.5915, -17.6516], [178.6679, -18.0809], [177.8471, -18.2549], [177.3216, -18.0773], [177.2638, -17.8633], [177.6181, -17.4612], [178.2804, -17.372]]], [[[164.0598, -20.1414], [164.4358, -20.2821], [165.1918, -20.7691], [165.6627, -21.2671], [166.3033, -21.6373], [166.9425, -22.0901], [166.7742, -22.376], [166.096, -21.9565], [165.2419, -21.5255], [164.4549, -20.829], [164.1699, -20.4801], [164.0598, -20.1414]]], [[[173.2404, -34.899], [173.8441, -35.0264], [174.3204, -35.2466], [174.5437, -35.5822], [174.391, -35.7739], [174.802, -36.3093], [174.7226, -36.8411], [175.2996, -36.9933], [175.4608, -36.4757], [175.8762, -36.9578], [176.108, -37.645], [176.7698, -37.8895], [177.3358, -37.9907], [178.0091, -37.5548], [178.536, -37.692], [178.2679, -38.5509], [177.9763, -38.7223], [177.9656, -39.1426], [177.4077, -39.0809], [176.954, -39.3677], [177.1098, -39.6731], [176.8422, -40.1578], [175.9828, -41.2134], [175.3098, -41.6107], [175.1656, -41.4176], [174.6356, -41.2893], [175.1625, -40.6217], [175.2543, -40.2892], [175.0093, -39.9523], [173.9342, -39.5093], [173.8441, -39.1395], [174.5974, -38.7849], [174.7155, -38.2256], [174.9281, -37.8043], [174.7292, -37.4488], [174.782, -36.9436], [174.4758, -36.9418], [174.4469, -36.4509], [173.9453, -36.1761], [173.1166, -35.2053], [173.2404, -34.899]]], [[[137.5963, -35.7384], [137.4485, -36.0749], [136.7551, -36.0332], [136.6388, -35.7491], [137.334, -35.5924], [137.5963, -35.7384]]], [[[173.0686, -41.1859], [173.2306, -41.2844], [173.7376, -40.9888], [174.3026, -41.0194], [174.0922, -41.5055], [174.2831, -41.7407], [173.5449, -42.518], [173.2213, -42.9765], [172.7184, -43.2589], [172.9208, -43.8914], [172.3855, -43.8297], [171.4426, -44.136], [171.1133, -45.0393], [170.7005, -45.6843], [169.6866, -46.5516], [168.382, -46.6054], [168.1889, -46.3621], [167.682, -46.193], [166.7316, -46.1979], [166.7338, -45.5436], [167.1946, -44.9634], [167.7872, -44.595], [168.3665, -44.0818], [168.8064, -43.9922], [169.6613, -43.5913], [170.3027, -43.1075], [170.7417, -42.9273], [171.2571, -42.4652], [171.4861, -41.7949], [172.0108, -41.4447], [172.1396, -40.9471], [172.6407, -40.5183], [172.9892, -40.8481], [173.0686, -41.1859]]], [[[144.8184, -40.7216], [145.2832, -40.77], [146.3175, -41.1637], [146.99, -40.9923], [147.4547, -41.0017], [147.9687, -40.7797], [148.2928, -40.9471], [148.3017, -42.0399], [147.9244, -42.5726], [147.9807, -43.1572], [147.4081, -42.894], [146.8741, -43.6126], [145.9943, -43.376], [145.4874, -42.9268], [145.2681, -42.5442], [145.2384, -42.0195], [144.7776, -41.4189], [144.6458, -40.9808], [144.8184, -40.7216]]], [[[167.9559, -46.6946], [168.2409, -47.0701], [167.6292, -47.1425], [167.9559, -46.6946]]], [[[150.9952, -2.6885], [152.1795, -3.4102], [153.1241, -4.2523], [153.0233, -4.6664], [152.6807, -4.4986], [152.5985, -3.9948], [152.1924, -3.5057], [151.9731, -3.4533], [150.9681, -2.7799], [150.9952, -2.6885]]], [[[140.9761, -9.1187], [140.9752, -6.9054], [140.8625, -6.7399], [140.9748, -6.3461], [140.9743, -5.0398], [140.9735, -2.6099], [141.1856, -2.6276], [142.2115, -3.0835], [142.9053, -3.3206], [143.509, -3.4311], [144.0159, -3.7835], [144.4775, -3.8253], [145.0879, -4.3491], [145.3347, -4.3855], [145.767, -4.8231], [145.8527, -5.4712], [146.4036, -5.6164], [147.0344, -5.9191], [147.3766, -5.9506], [147.8018, -6.3151], [147.8453, -6.6626], [147.1191, -6.7217], [146.9607, -6.929], [147.1902, -7.3782], [147.7242, -7.8762], [148.1268, -8.1035], [148.2466, -8.5545], [148.5831, -9.0516], [149.2476, -9.0712], [149.2032, -9.4068], [149.7612, -9.8058], [149.8748, -10.0131], [150.6672, -10.2573], [150.4825, -10.6368], [150.0169, -10.5773], [149.7541, -10.3531], [148.3833, -10.1853], [147.7686, -10.0699], [146.6966, -9.0255], [146.0334, -8.0764], [144.9738, -7.8021], [144.5099, -7.5673], [143.6137, -8.2003], [143.0948, -8.3112], [143.3922, -8.8017], [143.366, -8.9611], [142.6474, -9.3277], [142.2297, -9.1697], [141.1333, -9.2212], [140.9761, -9.1187]]], [[[151.9158, -4.2967], [152.4055, -4.3406], [152.4001, -4.7312], [152.0135, -5.0038], [152.1431, -5.3571], [151.8652, -5.5649], [151.515, -5.5524], [151.2291, -5.92], [150.4284, -6.2764], [149.6524, -6.2906], [149.3825, -6.078], [149.1264, -6.1277], [148.4011, -5.7651], [148.3447, -5.5449], [148.999, -5.4845], [149.2454, -5.5729], [150.2987, -5.5356], [150.953, -5.4237], [151.3268, -4.9603], [151.6713, -4.8835], [151.5518, -4.3455], [151.9158, -4.2967]]], [[[155.9575, -6.687], [155.7191, -6.8628], [155.344, -6.7217], [155.202, -6.3075], [154.782, -5.9706], [154.7412, -5.5453], [154.9969, -5.54], [155.467, -6.145], [155.8225, -6.3803], [155.9575, -6.687]]], [[[159.8793, -8.5341], [158.944, -8.0409], [158.5969, -7.759], [158.7345, -7.6046], [159.1096, -7.9037], [159.8433, -8.3272], [159.8793, -8.5341]]], [[[160.7493, -8.3139], [160.9979, -8.6122], [161.2584, -9.3171], [160.8736, -9.1569], [160.5904, -8.3729], [160.7493, -8.3139]]], [[[159.7505, -9.2727], [159.9707, -9.4334], [160.3547, -9.4214], [160.6254, -9.5888], [160.6494, -9.9288], [159.8535, -9.7916], [159.6218, -9.5319], [159.7505, -9.2727]]], [[[161.7152, -10.3873], [162.1054, -10.4539], [162.1236, -10.8246], [161.5381, -10.5671], [161.7152, -10.3873]]], [[[143.1787, -11.9547], [143.1104, -12.3036], [143.4015, -12.6401], [143.5866, -13.4435], [143.5485, -13.7409], [143.7562, -14.3491], [143.9617, -14.4627], [144.4731, -14.2319], [144.648, -14.4924], [145.2876, -14.943], [145.2717, -15.4765], [145.4581, -16.0563], [145.4261, -16.4061], [145.902, -17.0701], [146.1257, -17.6352], [146.0325, -18.2731], [146.3335, -18.5536], [146.2971, -18.8412], [146.4813, -19.0787], [147.1387, -19.393], [147.4183, -19.3784], [147.9155, -19.8693], [148.7593, -20.2897], [148.6839, -20.5804], [149.205, -21.1251], [149.7039, -22.4408], [150.0763, -22.1647], [150.5415, -22.5593], [150.7639, -22.5762], [150.843, -23.4582], [151.5004, -24.0126], [151.9025, -24.2008], [152.1298, -24.5976], [152.4565, -24.8023], [152.6545, -25.2022], [152.9137, -25.4322], [153.1649, -25.9644], [153.0842, -26.304], [153.117, -27.1944], [153.5756, -28.2407], [153.6044, -28.8546], [153.3483, -29.2905], [153.2724, -29.8924], [153.0305, -30.5635], [152.9439, -31.4349], [152.5595, -32.0457], [152.4703, -32.439], [152.1644, -32.7573], [151.8129, -32.9011], [151.4839, -33.3476], [151.2314, -34.0295], [150.9601, -34.2971], [150.6903, -35.1778], [150.1953, -35.8334], [149.9605, -36.8455], [149.9325, -37.5287], [149.2987, -37.8021], [148.2626, -37.8309], [147.3957, -38.2189], [146.8568, -38.6632], [145.9353, -38.9016], [145.791, -38.6668], [144.6653, -38.21], [143.5392, -38.8208], [142.6123, -38.4515], [141.725, -38.2713], [141.4244, -38.3636], [141.0112, -38.0769], [140.6272, -38.0285], [139.7843, -37.2459], [139.8575, -36.6622], [139.5481, -36.0967], [139.0376, -35.6892], [138.1845, -35.6128], [138.5112, -35.0242], [138.4899, -34.7637], [138.0895, -34.1697], [137.6918, -35.1432], [136.8834, -35.2399], [137.0144, -34.9159], [137.3908, -34.9137], [137.4938, -34.1613], [137.9319, -33.5789], [137.8525, -33.2007], [137.4423, -33.1936], [137.2372, -33.6295], [136.4307, -34.0299], [135.6476, -34.9394], [135.1855, -33.9069], [134.7909, -33.3285], [134.3013, -33.1652], [134.1002, -32.7488], [134.2343, -32.5486], [133.5511, -32.1829], [133.212, -32.1838], [132.7575, -31.956], [132.2146, -32.0071], [131.7214, -31.6964], [131.1435, -31.4957], [130.783, -31.604], [130.1296, -31.5792], [128.9462, -31.7026], [128.0677, -32.0666], [127.3198, -32.2641], [125.9171, -32.2969], [124.759, -32.8829], [124.126, -33.1292], [123.6506, -33.8364], [123.2076, -33.9882], [122.7774, -33.891], [122.1511, -33.9917], [122.061, -33.8745], [121.4054, -33.8266], [120.4186, -33.9629], [119.854, -33.9749], [119.4505, -34.3681], [118.8952, -34.48], [118.1357, -34.9865], [117.5817, -35.0979], [116.5172, -34.9878], [115.9868, -34.7952], [115.7262, -34.5262], [115.0089, -34.2558], [115.1816, -33.6433], [115.5154, -33.5314], [115.6832, -33.1927], [115.6982, -31.6946], [115.1767, -30.8081], [114.9947, -30.2164], [114.9592, -29.4334], [114.5375, -28.5429], [114.165, -28.0809], [114.0283, -27.3471], [113.5818, -26.5583], [113.853, -26.3319], [113.5889, -26.0984], [113.5396, -25.6252], [114.2156, -26.2893], [114.2143, -25.8516], [113.671, -24.9772], [113.4175, -24.4356], [113.5529, -23.7329], [113.7571, -23.4182], [113.7953, -22.9144], [113.683, -22.6379], [113.9586, -21.9392], [114.1637, -22.3231], [114.3777, -22.3413], [114.6027, -21.9423], [114.8588, -21.7359], [115.4563, -21.4917], [116.0107, -21.0305], [116.7068, -20.6537], [117.4063, -20.7211], [118.1991, -20.3753], [118.7513, -20.2617], [119.1047, -19.9954], [119.5858, -20.0384], [120.1962, -19.9092], [120.8785, -19.6651], [121.4937, -19.1067], [121.8337, -18.4773], [122.2372, -17.9686], [122.1604, -17.3138], [122.7202, -16.7878], [122.9705, -16.4367], [123.1419, -16.8633], [123.5254, -17.4856], [123.778, -16.8677], [123.4903, -16.4908], [124.577, -16.1135], [124.3817, -15.758], [124.8389, -15.1609], [125.2433, -14.9448], [125.1789, -14.7148], [125.6814, -14.3881], [126.021, -14.4947], [126.1115, -14.1142], [126.5696, -14.1608], [126.9034, -13.744], [127.6727, -14.195], [128.1996, -14.7517], [129.4589, -14.9332], [129.7536, -14.7894], [129.3786, -14.3926], [129.7097, -13.9802], [129.8389, -13.5731], [130.2597, -13.3024], [130.1682, -12.9575], [130.3999, -12.688], [130.898, -12.5238], [131.0458, -12.1895], [131.4382, -12.277], [132.3722, -12.2392], [132.5839, -12.1101], [132.6829, -11.5055], [133.0247, -11.4527], [133.1854, -11.7057], [133.904, -11.8322], [134.2369, -12.008], [134.7301, -11.9844], [135.218, -12.2215], [135.7884, -11.9072], [136.0818, -12.4226], [136.5403, -11.9578], [136.9474, -12.3498], [136.5372, -12.7843], [136.5945, -13.0036], [135.9273, -13.3041], [135.9894, -13.8102], [135.8833, -14.1533], [135.4053, -14.7583], [135.5309, -15.0002], [136.2052, -15.4033], [136.7844, -15.8942], [137.002, -15.8783], [137.7037, -16.2329], [138.2449, -16.7181], [139.0097, -16.8992], [139.2485, -17.3285], [140.036, -17.7027], [140.5114, -17.6245], [140.8305, -17.4146], [141.2189, -16.6462], [141.412, -16.0696], [141.4515, -15.6053], [141.6255, -15.0566], [141.523, -14.4702], [141.5945, -14.1529], [141.4724, -13.7977], [141.6455, -13.2593], [141.6779, -12.4914], [141.9513, -11.8961], [142.1684, -10.9466], [142.4565, -10.7074], [142.8369, -11.3071], [142.8724, -11.8215], [143.1787, -11.9547]]], [[[130.6188, -11.3763], [131.2682, -11.1899], [131.5385, -11.4367], [130.9508, -11.9263], [130.645, -11.7425], [130.6188, -11.3763]]], [[[136.7148, -13.804], [136.8945, -14.2931], [136.3632, -14.2288], [136.4249, -13.8648], [136.7148, -13.804]]], [[[166.7458, -14.8267], [166.8102, -15.1574], [167.1316, -15.1352], [167.1995, -15.4859], [166.8257, -15.635], [166.6313, -15.406], [166.5274, -14.8502], [166.7458, -14.8267]]], [[[167.4126, -16.0958], [167.8365, -16.4496], [167.4494, -16.5552], [167.4126, -16.0958]]]]
            },
            "properties": {
                "name": "Oceania",
                "id": "oceania"
            },
            "id": "oceania"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[-59.7339, -80.3442], [-60.5828, -80.9484], [-64.2683, -80.7486], [-65.9801, -80.3846], [-62.5189, -80.3736], [-61.3432, -79.8866], [-59.7064, -79.8755], [-59.7339, -80.3442]]], [[[-159.053, -79.8076], [-161.8655, -79.7037], [-164.2259, -79.3206], [-163.2562, -78.7223], [-161.6431, -78.9012], [-159.6842, -79.4023], [-159.053, -79.8076]]], [[[-70.334, -79.6797], [-71.7836, -79.4445], [-70.544, -78.8838], [-67.4785, -78.3627], [-66.7281, -78.3836], [-69.2509, -79.2101], [-70.334, -79.6797]]], [[[-45.2226, -78.8106], [-43.722, -78.8186], [-42.9654, -79.4769], [-43.5278, -80.1916], [-49.1875, -80.643], [-49.773, -80.7842], [-54.1626, -80.8703], [-53.4823, -80.1889], [-52.2971, -80.1414], [-50.3391, -79.4796], [-50.7331, -79.2829], [-50.2197, -78.6051], [-49.0811, -78.0476], [-46.8257, -77.7852], [-45.5302, -77.8815], [-43.8086, -78.2864], [-43.9473, -78.5975], [-45.2226, -78.8106]]], [[[-120.5562, -73.756], [-120.2726, -73.9891], [-121.0625, -74.3375], [-122.8591, -74.3428], [-122.6247, -73.9655], [-123.1121, -73.6823], [-120.5562, -73.756]]], [[[-126.3299, -73.2864], [-124.9933, -73.8297], [-124.8731, -74.2083], [-127.4143, -73.5163], [-126.3299, -73.2864]]], [[[-74.3544, -73.0986], [-74.5748, -73.6113], [-75.9009, -73.3325], [-75.3769, -72.8203], [-74.3544, -73.0986]]], [[[-91.1608, -73.1821], [-91.6699, -72.6236], [-90.8072, -72.6108], [-91.1608, -73.1821]]], [[[-98.0911, -71.9125], [-96.8695, -71.8508], [-95.6095, -72.0683], [-96.0518, -72.5775], [-98.4078, -72.5477], [-100.1951, -72.2725], [-102.2647, -72.1354], [-102.128, -71.9853], [-98.6155, -71.7638], [-98.0911, -71.9125]]], [[[-73.7067, -70.635], [-74.205, -70.924], [-76.1763, -71.1326], [-76.5004, -70.9413], [-75.0076, -70.6088], [-73.7067, -70.635]]], [[[-74.9871, -69.7277], [-74.8489, -70.1791], [-75.7267, -70.0961], [-74.9871, -69.7277]]], [[[-70.0511, -69.1892], [-69.417, -69.5834], [-68.3361, -70.8561], [-68.2411, -71.822], [-69.2092, -72.5344], [-72.3675, -72.6698], [-73.0864, -72.4079], [-71.1066, -72.047], [-72.4121, -71.6622], [-73.8994, -72.1522], [-75.3531, -71.8783], [-75.2925, -71.6151], [-74.1872, -71.383], [-72.6216, -71.3883], [-71.1941, -70.9848], [-71.0611, -70.5369], [-70.328, -70.3611], [-71.8537, -69.9692], [-71.869, -68.9411], [-70.417, -68.7889], [-70.0511, -69.1892]]], [[[-67.9885, -67.4745], [-68.5804, -67.7328], [-69.0825, -67.403], [-68.3359, -66.802], [-67.6878, -67.1473], [-67.9885, -67.4745]]], [[[-57.0206, -63.3729], [-58.2631, -63.7636], [-58.8954, -64.389], [-59.9632, -64.4312], [-61.0598, -64.9812], [-61.7361, -65.0335], [-62.1453, -65.3318], [-62.3051, -65.8405], [-61.8754, -66.296], [-63.7525, -66.2778], [-64.0778, -66.6542], [-64.6862, -66.8064], [-64.8193, -67.3076], [-65.4432, -67.3262], [-65.6394, -68.1306], [-64.8984, -68.6734], [-63.3436, -68.8106], [-63.4559, -69.0419], [-62.4505, -69.5843], [-61.9611, -70.1201], [-61.9611, -70.9005], [-61.0172, -71.1668], [-61.2136, -71.5641], [-60.7193, -72.0728], [-60.3846, -73.0072], [-61.4054, -73.467], [-60.8789, -73.6122], [-61.0107, -74.4782], [-62.2257, -74.5057], [-63.9247, -75.0047], [-63.3634, -75.4517], [-66.3705, -76.0132], [-69.3044, -76.3506], [-70.0954, -76.6546], [-71.7987, -76.7527], [-75.2683, -76.5814], [-77.19, -76.6298], [-76.2487, -77.2747], [-75.3869, -77.474], [-72.852, -77.5903], [-73.2515, -77.8944], [-74.812, -78.1776], [-80.6015, -77.7519], [-81.4411, -77.8855], [-77.4325, -78.4346], [-77.8691, -78.7454], [-80.2923, -78.8226], [-83.246, -78.3569], [-83.26, -78.7742], [-80.1512, -79.2683], [-76.499, -79.3255], [-76.5578, -79.9035], [-75.2366, -80.8028], [-73.0296, -80.9173], [-70.239, -80.8565], [-64.7501, -81.5219], [-64.1371, -81.8695], [-65.9133, -82.1833], [-62.7357, -82.5273], [-61.5898, -83.3414], [-59.5159, -83.4586], [-57.3535, -82.8403], [-53.9862, -82.2006], [-48.3607, -81.8921], [-43.6692, -82.2699], [-41.4338, -81.2977], [-38.7718, -80.8823], [-37.2093, -81.0638], [-35.3269, -80.6505], [-29.3291, -80.172], [-24.2403, -80.0619], [-25.2586, -79.7623], [-29.9494, -79.599], [-30.3161, -79.1631], [-32.9943, -79.2288], [-36.2391, -78.7742], [-36.181, -78.4684], [-34.0758, -77.4252], [-32.0634, -77.1598], [-28.9336, -76.3701], [-26.0594, -75.9573], [-24.2696, -75.7668], [-19.4931, -75.54], [-17.2989, -74.334], [-15.6725, -74.4072], [-15.7488, -73.9456], [-16.5188, -73.6441], [-15.5959, -73.0968], [-14.3211, -73.123], [-14.2978, -72.7328], [-13.2087, -72.7852], [-11.497, -72.4128], [-10.8254, -71.5534], [-9.8879, -71.0274], [-9.2307, -71.1739], [-8.6466, -71.6728], [-7.7137, -71.5463], [-7.8735, -70.9404], [-5.9364, -70.7127], [-5.5879, -70.8569], [-5.9499, -71.3417], [-2.8121, -71.3208], [-0.8958, -71.3492], [-0.5431, -71.7128], [0.835, -71.2023], [2.6096, -70.9], [5.1132, -70.6559], [8.5232, -70.4739], [9.1415, -70.1836], [10.2175, -70.5081], [11.7014, -70.7664], [12.9292, -70.2133], [13.8228, -70.3434], [15.807, -70.3238], [18.1246, -70.5405], [19.1966, -70.2932], [19.2649, -70.9022], [21.0707, -70.8436], [21.705, -70.2586], [22.979, -70.8103], [23.8037, -70.4046], [24.7567, -70.892], [25.9743, -71.0372], [27.207, -70.9111], [30.0035, -70.2999], [31.3787, -70.2257], [32.6212, -70.0007], [32.9892, -69.6243], [32.5675, -69.0743], [33.1214, -68.689], [34.193, -68.7023], [35.2246, -69.6371], [37.5599, -69.7184], [38.8592, -70.006], [39.7053, -69.4258], [39.8637, -68.9669], [41.1328, -68.5749], [42.409, -68.3521], [42.8196, -68.123], [44.6999, -67.9042], [44.9893, -67.7692], [47.1174, -67.5726], [48.6479, -67.7941], [48.7136, -67.217], [49.2472, -66.9414], [50.6059, -67.15], [50.3325, -66.4447], [51.8843, -66.0199], [53.6719, -65.8587], [54.9481, -65.9164], [55.7102, -66.0798], [57.1853, -66.6133], [56.4533, -66.7798], [56.8919, -67.0563], [57.6274, -67.0142], [58.7376, -67.2295], [59.2507, -67.4851], [60.4821, -67.3853], [62.6878, -67.6476], [63.6989, -67.5082], [68.3279, -67.8895], [69.4163, -67.743], [69.9822, -68.4644], [69.5344, -68.7369], [69.6293, -69.2314], [68.9062, -69.3726], [69.0825, -69.8666], [68.1783, -69.8373], [67.2678, -70.2732], [67.9408, -70.4228], [69.2503, -70.4313], [68.8725, -71.0354], [68.0375, -71.391], [67.4321, -72.0031], [66.8919, -72.9486], [67.9714, -73.0857], [68.4197, -72.5149], [69.5548, -72.3746], [71.2766, -71.624], [71.9047, -70.7069], [72.7601, -70.3957], [72.8223, -70.0961], [73.9422, -69.7432], [75.4239, -69.8933], [75.8913, -69.5754], [77.8174, -69.069], [78.7265, -68.2779], [79.288, -68.1195], [82.017, -67.6902], [83.3043, -67.6032], [84.4851, -67.1145], [85.7107, -67.1611], [87.9803, -66.7882], [89.6986, -66.8229], [92.0734, -66.5077], [93.9644, -66.6897], [94.8397, -66.5015], [95.5411, -66.6311], [98.2577, -66.4673], [99.3701, -66.6484], [100.8891, -66.3581], [101.4746, -65.9511], [102.674, -65.8654], [103.9511, -65.9879], [108.1578, -66.6391], [109.4629, -66.9085], [110.6223, -66.5241], [110.9069, -66.0767], [113.0992, -65.8001], [113.7096, -65.9297], [114.3368, -66.3603], [115.3103, -66.561], [115.2739, -67.0279], [113.991, -67.2117], [114.0265, -67.4412], [116.7134, -67.047], [118.1388, -67.0825], [119.1331, -67.3706], [121.4875, -67.0905], [122.1826, -66.8593], [123.9693, -66.608], [124.5978, -66.7083], [125.8656, -66.3643], [126.6646, -66.4975], [127.5413, -67.051], [129.2369, -67.0417], [129.7412, -66.4686], [130.9517, -66.1912], [131.831, -66.2356], [133.4446, -66.0816], [134.9716, -66.3301], [135.352, -66.1273], [136.1941, -66.2924], [137.7539, -66.4065], [139.9001, -66.715], [141.9726, -66.8069], [142.8884, -67], [143.4481, -66.877], [144.6214, -67.1416], [143.9422, -67.7941], [145.9752, -67.6241], [146.8279, -67.9645], [147.0938, -68.3685], [148.4561, -68.467], [151.068, -68.3849], [151.562, -68.6939], [153.0819, -68.8568], [154.1997, -68.4178], [155.5202, -69.0246], [157.4813, -69.3087], [158.1578, -69.2088], [159.7838, -69.5217], [160.2095, -69.9749], [161.0369, -70.3172], [161.4244, -70.8268], [162.6749, -70.3047], [163.3487, -70.6208], [164.4034, -70.5103], [166.6269, -70.6643], [167.5692, -70.8103], [168.1725, -71.1832], [170.1625, -71.6307], [169.8287, -72.7288], [169.545, -73.0502], [167.6158, -73.337], [164.7758, -74.0286], [165.3027, -74.5936], [163.1672, -74.6021], [162.5337, -75.1671], [161.6797, -75.2177], [162.8156, -75.8463], [162.7628, -76.7456], [164.4296, -78.0422], [166.2087, -78.4515], [164.6347, -78.6033], [160.4829, -79.2017], [160.542, -80.425], [160.9078, -81.3901], [162.8214, -81.8664], [167.2328, -82.9521], [168.1099, -83.3618], [171.9172, -83.6441], [179.403, -84.2061], [180, -84.3517], [180, -89.9989], [-180, -89.9989], [-180, -89.583], [-180, -89.2931], [-180, -88.5869], [-180, -87.8811], [-180, -87.1753], [-180, -86.4695], [-180, -85.7633], [-180, -85.0575], [-180, -84.3517], [-171.7037, -84.5426], [-162.9335, -84.9012], [-157.1276, -85.1858], [-156.9864, -84.8111], [-163.5685, -84.5288], [-164.951, -83.8057], [-167.5528, -83.8111], [-169.1677, -83.4497], [-174.0661, -82.9002], [-171.8213, -82.8474], [-168.4178, -83.2287], [-163.111, -83.329], [-159.4445, -83.5434], [-157.6796, -83.1292], [-155.4594, -82.9805], [-153.0098, -82.4496], [-154.7175, -81.9409], [-153.9566, -81.7003], [-157.0326, -81.319], [-156.5283, -81.1623], [-148.1228, -80.9009], [-150.5755, -80.3536], [-148.3172, -80.0708], [-148.1765, -79.7761], [-152.0914, -79.2416], [-155.21, -78.9646], [-156.4693, -78.6353], [-154.7164, -78.3982], [-155.3416, -78.1918], [-157.2667, -78.1998], [-158.5003, -77.7786], [-158.2136, -77.1571], [-154.8149, -77.1269], [-153.4606, -77.4159], [-151.719, -77.4261], [-149.7177, -77.7976], [-145.967, -77.0688], [-145.7504, -76.7492], [-147.3404, -76.4384], [-146.383, -76.0998], [-143.5742, -75.5635], [-142.3298, -75.4907], [-141.5057, -75.6905], [-139.6911, -75.2129], [-137.6181, -75.0757], [-136.5494, -75.1396], [-135.362, -74.6904], [-133.4748, -74.852], [-132.0495, -74.7659], [-129.7907, -74.8915], [-127.8633, -74.7193], [-123.8894, -74.773], [-119.6771, -74.6544], [-118.3421, -74.3815], [-115.1052, -74.4551], [-114.7909, -73.9886], [-113.5085, -74.0889], [-113.9318, -74.982], [-111.6963, -74.7921], [-111.8064, -74.2696], [-110.307, -74.3668], [-110.3005, -74.7108], [-111.4631, -75.1334], [-109.2722, -75.1849], [-106.6189, -75.3438], [-104.9019, -75.1152], [-101.7081, -75.1272], [-101.0394, -75.4219], [-98.5578, -75.1898], [-101.2518, -74.4858], [-101.7154, -74.0237], [-102.7663, -73.8838], [-102.4108, -73.6166], [-100.9854, -73.7573], [-99.7812, -73.7201], [-100.0209, -73.4027], [-102.6751, -73.321], [-102.4092, -72.9876], [-98.0125, -73.0334], [-96.1521, -73.3095], [-94.2463, -73.313], [-92.241, -73.1785], [-90.9209, -73.3192], [-90.2954, -72.9779], [-88.1945, -72.8585], [-88.4193, -73.2291], [-87.0379, -73.3538], [-85.9808, -73.2087], [-84.9811, -73.5021], [-82.1835, -73.8568], [-81.3088, -73.7383], [-81.2624, -73.3148], [-80.4421, -72.9446], [-79.5217, -73.0897], [-78.4078, -73.5558], [-76.8506, -73.4604], [-77.1349, -73.8177], [-75.293, -73.6388], [-73.9961, -73.6996], [-72.9293, -73.4479], [-68.821, -73.1053], [-67.6671, -72.8345], [-66.8277, -72.0905], [-67.4603, -71.5268], [-67.8884, -70.4215], [-68.4033, -70.0198], [-68.7078, -69.4321], [-67.3717, -69.4125], [-66.9749, -69.1608], [-67.3906, -68.8612], [-66.7933, -68.2402], [-67.1498, -68.0245], [-66.705, -67.5273], [-67.5859, -67.435], [-67.4934, -67.1127], [-66.371, -66.6089], [-65.7664, -66.6249], [-65.6172, -66.1353], [-64.0658, -65.5538], [-64.0381, -65.1791], [-62.5761, -64.7557], [-61.6317, -64.6047], [-60.8643, -64.0734], [-59.5102, -63.8208], [-58.8721, -63.5518], [-57.3897, -63.2264], [-57.0206, -63.3729]]]]
            },
            "properties": {
                "name": "Antarctica",
                "id": "antarctica"
            },
            "id": "antarctica"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[-77.9011, 7.2294], [-77.7439, 7.537], [-77.3509, 7.7057], [-77.2124, 8.0338], [-77.4072, 8.427], [-77.3742, 8.6583], [-76.8519, 8.0906], [-76.8879, 8.6197], [-76.2769, 8.9886], [-76.1355, 9.2656], [-75.6394, 9.4502], [-75.6709, 10.1964], [-75.4459, 10.611], [-74.8446, 11.1095], [-74.4545, 10.9892], [-74.0594, 11.3408], [-73.3137, 11.2959], [-72.7219, 11.7127], [-72.2749, 11.889], [-72.1358, 12.1886], [-71.7145, 12.4199], [-71.2622, 12.3351], [-71.1375, 12.0461], [-71.4886, 11.7189], [-71.8686, 11.6275], [-71.9469, 11.4144], [-71.5942, 10.6572], [-72.1129, 9.8155], [-71.7607, 9.3357], [-71.687, 9.0725], [-71.2979, 9.1257], [-71.0858, 9.3481], [-71.0527, 9.7059], [-71.3867, 10.2639], [-71.5445, 10.7788], [-71.4695, 10.9643], [-70.2326, 11.3732], [-70.2865, 11.8859], [-70.004, 12.1779], [-69.6316, 11.4801], [-68.8279, 11.4317], [-68.3987, 11.161], [-68.234, 10.5693], [-67.8715, 10.4721], [-66.9891, 10.6105], [-66.2471, 10.6323], [-65.8518, 10.2577], [-65.1292, 10.0699], [-64.8504, 10.0979], [-63.8734, 10.6638], [-63.4968, 10.6434], [-62.7024, 10.7499], [-62.8429, 10.4179], [-62.5151, 10.176], [-62.3204, 9.7831], [-62.1196, 9.9847], [-60.7923, 9.3605], [-61.0534, 9.0951], [-61.3039, 8.4102], [-60.801, 8.5926], [-60.3402, 8.6286], [-59.9807, 8.5327], [-59.2003, 8.0746], [-58.6266, 7.5459], [-58.4808, 7.0381], [-57.9825, 6.786], [-56.9698, 5.9927], [-55.9395, 5.7957], [-55.8283, 5.9617], [-54.834, 5.9883], [-53.8472, 5.7823], [-53.4544, 5.5635], [-52.8993, 5.425], [-52.2905, 4.942], [-51.6659, 4.2287], [-51.2198, 4.0938], [-51.0525, 3.2819], [-50.6592, 2.1309], [-50.459, 1.8295], [-49.9572, 1.6599], [-49.8988, 1.1628], [-50.2945, 0.8356], [-50.8163, 0.1724], [-51.2828, -0.085], [-51.7025, -0.7624], [-51.9476, -1.5867], [-51.2975, -1.2236], [-50.9177, -1.1153], [-50.69, -1.7616], [-50.4033, -2.0155], [-49.9993, -1.8317], [-49.7195, -1.9263], [-49.3137, -1.7319], [-48.9913, -1.83], [-48.71, -1.4877], [-48.4459, -1.5206], [-48.4497, -1.1455], [-48.115, -0.7376], [-47.3981, -0.6266], [-46.8113, -0.7797], [-46.6173, -0.9706], [-46.2191, -1.0314], [-45.6447, -1.3479], [-45.0763, -1.4664], [-44.6513, -1.7456], [-44.3084, -2.5353], [-43.9329, -2.5833], [-42.9368, -2.4652], [-42.2496, -2.7919], [-41.8761, -2.7466], [-41.3181, -2.9361], [-40.4745, -2.7954], [-39.9647, -2.8616], [-38.4757, -3.7174], [-38.0489, -4.2163], [-37.1746, -4.9124], [-36.5907, -5.0975], [-35.9799, -5.0544], [-35.5493, -5.1294], [-35.2357, -5.5667], [-34.9882, -6.3936], [-34.8056, -7.2885], [-34.8346, -7.9717], [-35.1578, -8.9305], [-35.3409, -9.2305], [-36.3983, -10.4841], [-36.9378, -10.8206], [-37.4119, -11.4971], [-37.6887, -12.0999], [-38.2397, -12.8443], [-38.7879, -12.7826], [-38.8352, -13.147], [-39.0894, -13.5882], [-38.9422, -14.0308], [-39.0596, -14.6549], [-38.8805, -15.8645], [-39.1251, -16.7634], [-39.2152, -17.3156], [-39.1539, -17.704], [-39.4869, -17.9903], [-39.7399, -18.6397], [-39.6999, -19.278], [-40.0013, -19.7419], [-40.3959, -20.5693], [-40.7892, -20.9062], [-41.0471, -21.5059], [-40.9879, -21.9201], [-41.1228, -22.0843], [-41.7054, -22.3098], [-41.9806, -22.5806], [-42.0423, -22.9472], [-42.9583, -22.9672], [-43.5327, -23.0462], [-43.8661, -22.9104], [-44.6373, -23.0556], [-44.9516, -23.3814], [-45.4232, -23.6854], [-45.9721, -23.796], [-46.8672, -24.2363], [-47.8766, -24.9976], [-48.5451, -25.8161], [-48.6776, -26.703], [-48.5542, -27.1962], [-48.6208, -28.0755], [-48.7997, -28.5754], [-49.2713, -28.871], [-49.7461, -29.3633], [-50.0333, -29.8009], [-50.2994, -30.4259], [-51.1572, -30.3642], [-51.4637, -31.0527], [-51.9724, -31.3839], [-52.1935, -31.8855], [-52.1273, -32.1678], [-52.3417, -32.4399], [-52.6523, -33.1377], [-53.4195, -33.7791], [-53.7853, -34.3806], [-54.1686, -34.6709], [-54.9023, -34.9328], [-55.6732, -34.7756], [-56.1179, -34.9079], [-56.8555, -34.6766], [-57.1706, -34.4525], [-57.8291, -34.4773], [-58.4002, -33.9123], [-58.5258, -34.2962], [-58.2835, -34.6838], [-57.3036, -35.1885], [-57.1589, -35.5058], [-57.354, -35.7202], [-57.265, -36.1442], [-56.6981, -36.4265], [-56.6721, -36.8513], [-57.3957, -37.7448], [-57.547, -38.0857], [-58.1792, -38.436], [-59.8282, -38.8381], [-61.1122, -38.9931], [-62.067, -38.9189], [-62.3382, -39.1506], [-62.0537, -39.3739], [-62.2869, -39.8955], [-62.395, -40.8907], [-62.959, -41.1095], [-63.7731, -41.1499], [-64.8533, -40.8139], [-65.1334, -40.8805], [-65.0182, -41.5667], [-65.059, -41.9698], [-64.4205, -42.4337], [-63.596, -42.4066], [-63.6925, -42.8052], [-64.1306, -42.8616], [-64.3246, -42.5722], [-64.6504, -42.5313], [-65.0269, -42.759], [-64.4323, -43.0591], [-64.9858, -43.2935], [-65.2836, -43.63], [-65.3613, -44.4773], [-65.6476, -44.6616], [-65.6388, -45.0078], [-66.1901, -44.9647], [-66.9416, -45.2573], [-67.5568, -45.9701], [-67.5633, -46.3452], [-66.7769, -47.0057], [-65.9985, -47.0936], [-65.7382, -47.3449], [-65.8101, -47.941], [-66.3934, -48.3423], [-67.033, -48.6277], [-67.6849, -49.2465], [-67.7834, -49.8591], [-68.9398, -50.3824], [-69.2352, -50.9506], [-69.0325, -51.6364], [-68.3938, -52.3072], [-69.2409, -52.2055], [-69.5605, -52.4217], [-70.795, -52.7688], [-70.9959, -53.7791], [-71.2977, -53.8834], [-72.1744, -53.6322], [-71.8528, -53.2855], [-71.4005, -53.107], [-71.3878, -52.7644], [-72.4583, -53.2544], [-73.0526, -53.2433], [-74.0146, -52.6392], [-73.8343, -52.2339], [-73.5183, -52.0408], [-73.9733, -51.7847], [-73.8958, -51.3315], [-74.8147, -51.0629], [-75.0948, -50.6812], [-74.3337, -49.9745], [-74.341, -48.5958], [-74.5772, -48.2744], [-74.6549, -47.7022], [-74.1584, -47.1824], [-74.1519, -46.9742], [-75.6567, -46.6102], [-74.9245, -46.1597], [-75.0666, -45.8752], [-74.1579, -45.7673], [-74.0379, -45.4175], [-73.5498, -45.4836], [-73.3625, -44.9781], [-72.739, -44.7344], [-72.6638, -44.4365], [-73.2651, -44.1688], [-72.9965, -43.6317], [-73.101, -43.4551], [-72.878, -43.048], [-72.7854, -42.3014], [-72.4996, -41.9809], [-72.6698, -41.6595], [-73.0149, -41.5441], [-73.5214, -41.7971], [-73.8108, -41.5175], [-73.966, -41.1184], [-73.6694, -40.0824], [-73.4104, -39.789], [-73.2264, -39.2243], [-73.5327, -38.3667], [-73.4648, -38.0405], [-73.6619, -37.6987], [-73.6017, -37.1886], [-73.216, -37.1669], [-73.1181, -36.6884], [-72.8746, -36.3905], [-72.6238, -35.5857], [-72.2237, -35.0961], [-72.0028, -34.1653], [-71.6646, -33.6526], [-71.7429, -33.0951], [-71.4522, -32.6596], [-71.5259, -31.806], [-71.6619, -31.1695], [-71.6695, -30.3305], [-71.4007, -30.1432], [-71.3157, -29.6496], [-71.5192, -28.9265], [-71.1863, -28.3778], [-71.0527, -27.7275], [-70.6465, -26.3293], [-70.7138, -25.7842], [-70.4454, -25.1725], [-70.5742, -24.6442], [-70.4878, -23.7818], [-70.5633, -23.0569], [-70.3316, -22.8487], [-70.0874, -21.4931], [-70.1971, -20.7256], [-70.1485, -19.8049], [-70.2759, -19.2683], [-70.3616, -18.3978], [-71.337, -17.6827], [-71.5325, -17.2943], [-72.1114, -17.0026], [-72.4676, -16.7079], [-72.7939, -16.6147], [-73.825, -16.153], [-74.1473, -15.9124], [-75.1043, -15.4117], [-75.5336, -14.899], [-75.934, -14.6336], [-76.2891, -14.1333], [-76.1839, -13.5154], [-76.8322, -12.3489], [-77.1527, -12.0603], [-77.2204, -11.6635], [-77.6332, -11.288], [-77.7362, -10.8365], [-78.1856, -10.089], [-78.7624, -8.6171], [-79.0123, -8.21], [-79.3774, -7.8354], [-79.7621, -7.0666], [-80.1103, -6.6497], [-80.8117, -6.2822], [-81.1805, -5.9426], [-80.8827, -5.7589], [-81.1084, -5.0278], [-81.3366, -4.6695], [-81.2833, -4.3224], [-80.7986, -3.7312], [-80.0266, -3.2282], [-79.7299, -2.5793], [-80.1272, -2.5282], [-80.4501, -2.6259], [-80.9628, -2.1891], [-80.7704, -2.0768], [-80.8014, -1.383], [-80.9024, -1.0789], [-80.554, -0.8481], [-80.4823, -0.3682], [-80.1334, -0.006], [-80.0251, 0.4104], [-80.0883, 0.7846], [-79.7412, 0.9799], [-78.8996, 1.2063], [-78.7931, 1.8486], [-78.6171, 2.3067], [-78.1201, 2.4882], [-77.67, 2.8788], [-77.2428, 3.5855], [-77.1666, 3.8621], [-77.4272, 4.0605], [-77.2863, 4.7219], [-77.4017, 5.4161], [-77.2492, 5.7801], [-77.4694, 6.177], [-77.36, 6.5045], [-77.9011, 7.2294]]], [[[-91.3057, 0.0912], [-90.7997, -0.7522], [-90.9055, -0.9404], [-91.3716, -1.0172], [-91.4582, -0.7997], [-91.1448, -0.623], [-91.3692, -0.287], [-91.3057, 0.0912]]], [[[-50.2481, -0.1165], [-49.6287, -0.2293], [-49.1169, -0.1636], [-48.3798, -0.3527], [-48.5396, -0.801], [-48.9289, -1.4824], [-49.5878, -1.7123], [-50.5076, -1.7878], [-50.7597, -1.2405], [-50.7713, -0.6452], [-50.6454, -0.2728], [-50.2481, -0.1165]]], [[[-51.6377, -1.3421], [-51.6784, -0.8552], [-51.5461, -0.6497], [-51.1608, -0.6665], [-51.2764, -1.0216], [-51.6377, -1.3421]]], [[[-73.7735, -43.3459], [-74.355, -43.2637], [-74.2094, -42.8789], [-74.037, -41.7953], [-73.5278, -41.8961], [-73.4708, -42.4665], [-73.7893, -42.5859], [-73.4364, -42.9366], [-73.7735, -43.3459]]], [[[-73.7354, -44.3948], [-73.9833, -44.4947], [-73.7271, -45.1192], [-74.0991, -45.3252], [-74.6178, -44.6478], [-74.5017, -44.4733], [-73.7354, -44.3948]]], [[[-72.8971, -44.7122], [-73.445, -44.6411], [-73.2078, -44.3349], [-72.8425, -44.4578], [-72.8971, -44.7122]]], [[[-74.6183, -48.4253], [-74.923, -48.6264], [-75.2128, -48.1417], [-74.7292, -48.1261], [-74.6183, -48.4253]]], [[[-74.5306, -48.8124], [-74.4589, -49.6913], [-74.5699, -49.9909], [-75.3001, -49.8475], [-75.1842, -49.0836], [-74.7934, -48.705], [-74.5306, -48.8124]]], [[[-58.8501, -51.2698], [-58.4737, -51.509], [-57.9767, -51.3843], [-57.8382, -51.7092], [-58.6834, -51.9361], [-59.068, -52.1731], [-59.5708, -51.9254], [-59.0596, -51.6857], [-58.8501, -51.2698]]], [[[-60.4454, -51.3994], [-60.1416, -51.4811], [-59.268, -51.4274], [-59.9214, -51.9694], [-60.4454, -51.3994]]], [[[-69.4141, -52.4865], [-68.7897, -52.5766], [-68.2781, -52.9841], [-68.0085, -53.5638], [-67.2943, -54.0499], [-65.346, -54.8777], [-66.5112, -55.0322], [-66.9305, -54.9248], [-68.3316, -54.8165], [-69.0816, -54.9097], [-69.7235, -54.7122], [-70.4972, -54.8094], [-71.4409, -54.6198], [-70.8982, -54.338], [-70.8678, -53.8843], [-70.0903, -53.4182], [-70.4603, -53.206], [-69.4141, -52.4865]]], [[[-72.9472, -53.4426], [-72.2055, -53.8075], [-73.3048, -53.9438], [-73.6865, -53.4266], [-72.9472, -53.4426]]], [[[-69.8846, -54.8822], [-68.9007, -55.0176], [-68.2826, -55.255], [-68.2932, -55.5214], [-69.4118, -55.4441], [-69.9798, -55.1476], [-69.8846, -54.8822]]], [[[-67.0854, -55.1152], [-67.7679, -55.2595], [-68.107, -54.9292], [-67.2452, -54.9776], [-67.0854, -55.1152]]]]
            },
            "properties": {
                "name": "South America",
                "id": "southAmerica"
            },
            "id": "southAmerica"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[54.719, 81.1159], [57.694, 80.7923], [55.7124, 80.6372], [54.0665, 80.8136], [54.719, 81.1159]]], [[[62.168, 80.8347], [61.0511, 80.4186], [59.3044, 80.5216], [59.5921, 80.8165], [62.168, 80.8347]]], [[[20.898, 80.2499], [22.4507, 80.4021], [26.8608, 80.16], [27.1986, 79.9065], [25.641, 79.4029], [23.9475, 79.1943], [20.8612, 79.3978], [18.7251, 79.7607], [18.3438, 80.0595], [20.898, 80.2499]]], [[[16.7867, 79.9068], [18.5813, 79.5716], [19.0896, 79.1573], [20.4581, 79.1293], [21.3889, 78.7404], [19.7687, 78.6228], [18.4393, 78.0251], [18.228, 77.5226], [17.6234, 77.3994], [16.7006, 76.5793], [14.3657, 77.2345], [14.921, 77.6889], [13.6808, 78.028], [11.7738, 78.7165], [10.866, 79.7965], [12.7535, 79.7758], [13.3838, 79.4808], [15.8163, 79.6819], [16.7867, 79.9068]]], [[[21.6082, 78.5957], [23.1166, 77.9916], [24.2383, 77.8986], [23.8414, 77.4978], [22.057, 77.5011], [21.6082, 77.9161], [20.2282, 78.4779], [21.6082, 78.5957]]], [[[67.7654, 76.2376], [66.2824, 75.9836], [61.3561, 75.3149], [60.2224, 74.7965], [58.5347, 74.499], [58.4415, 74.1288], [56.9638, 73.3665], [55.0067, 73.4539], [54.3, 73.3509], [53.7629, 73.7662], [54.6427, 73.9595], [55.5824, 74.6278], [56.4986, 74.9571], [57.0876, 75.3837], [58.8814, 75.8547], [61.0538, 76.1199], [62.9714, 76.2367], [65.8629, 76.6133], [67.5351, 77.0077], [68.4859, 76.9338], [68.9, 76.5729], [67.7654, 76.2376]]], [[[55.32, 73.3083], [56.4293, 73.2011], [56.0835, 72.7894], [55.356, 72.4651], [55.2979, 71.9354], [56.0431, 71.3456], [56.895, 70.927], [57.1458, 70.5892], [54.6014, 70.68], [53.7225, 70.8145], [53.3638, 71.5416], [51.8124, 71.4912], [51.5825, 72.0712], [52.6221, 72.3009], [53.7531, 73.2932], [55.32, 73.3083]]], [[[67.8751, 68.4763], [68.2688, 67.2858], [67.5444, 66.7227], [66.2021, 66.1716], [64.8011, 65.7162], [63.0824, 64.9054], [61.2167, 64.2824], [60.5424, 61.0083], [60.0644, 59.4402], [59.4318, 58.5187], [58.7984, 57.8522], [58.0265, 57.3293], [57.8276, 56.859], [58.58, 56.5143], [58.6901, 56.0873], [58.0984, 55.5504], [56.084, 55.3471], [56.9735, 54.4686], [57.6207, 53.983], [58.9546, 54.5315], [59.6294, 54.3086], [59.8828, 53.9417], [59.4083, 53.6477], [59.0052, 53.1794], [59.0372, 52.607], [59.707, 52.4616], [60.1789, 52.009], [60.0657, 51.9766], [60.4648, 51.6513], [61.3632, 51.442], [61.5851, 51.23], [61.3894, 50.8609], [60.6379, 50.6638], [59.9552, 50.7992], [59.8122, 50.5819], [58.8836, 50.6945], [58.3594, 51.0638], [57.8387, 51.0917], [57.4423, 50.8889], [57.0117, 51.0651], [56.4915, 51.0196], [55.7977, 50.6021], [55.5424, 50.6017], [54.727, 50.9981], [54.4216, 50.7803], [54.0416, 51.1153], [53.3381, 51.4824], [52.571, 51.4817], [52.3309, 51.6812], [51.6091, 51.4839], [50.7941, 51.7292], [50.2468, 51.2895], [49.498, 51.0835], [48.8086, 50.6012], [48.8432, 50.0131], [48.4344, 49.8284], [47.706, 50.378], [47.3264, 50.2734], [46.9917, 49.8526], [46.8022, 49.367], [47.0144, 49.0987], [46.7028, 48.8055], [46.661, 48.4124], [47.0042, 48.2846], [47.0934, 47.9476], [48.1099, 47.7452], [48.9595, 46.7744], [48.6102, 46.5663], [49.2321, 46.3372], [48.1592, 45.7371], [47.5244, 45.6017], [47.1147, 44.9061], [46.7552, 44.6566], [46.7529, 44.4205], [47.2301, 44.1923], [47.5089, 43.5096], [47.4632, 43.0351], [48.228, 42.181], [49.1064, 41.3017], [49.2263, 41.026], [49.7758, 40.5839], [50.3067, 40.4121], [49.5512, 40.1942], [49.3244, 39.6082], [49.363, 39.3495], [49.0137, 39.1346], [48.8508, 38.8155], [48.8685, 38.4355], [48.5929, 38.4111], [48.0234, 38.819], [48.2422, 38.9788], [47.9958, 39.6842], [47.773, 39.6486], [46.8528, 39.1484], [46.555, 38.9042], [46.1701, 38.8692], [45.4798, 39.0063], [44.5872, 39.7685], [44.3892, 39.4223], [44.023, 39.3774], [44.4309, 38.3569], [44.2112, 37.9081], [44.5614, 37.7448], [44.794, 37.2902], [44.2818, 36.9782], [44.1562, 37.2831], [43.5161, 37.2445], [42.7748, 37.3719], [41.5154, 37.0892], [40.7058, 37.0976], [40.0164, 36.8259], [39.3568, 36.6817], [38.7669, 36.6932], [38.1916, 36.9014], [37.4365, 36.6435], [36.6584, 36.8024], [36.5376, 36.4575], [36.1275, 35.8316], [35.8927, 35.9164], [35.811, 36.3097], [36.1879, 36.659], [36.0489, 36.9107], [35.5376, 36.5969], [34.6014, 36.7846], [33.6945, 36.1818], [32.7947, 36.0358], [32.3775, 36.1836], [32.0219, 36.5352], [31.3525, 36.8011], [30.6441, 36.8654], [30.4838, 36.3106], [29.6893, 36.1565], [29.1433, 36.3971], [29.0381, 36.6937], [28.4837, 36.8037], [28.1339, 37.0297], [27.3491, 37.0195], [27.0779, 37.6875], [27.2323, 37.9787], [26.6828, 38.1984], [26.8612, 38.3729], [26.7636, 38.7098], [27.0135, 38.8869], [26.6819, 39.2922], [26.8271, 39.563], [26.1133, 39.4675], [26.1812, 39.99], [26.7378, 40.4002], [27.2847, 40.4556], [27.4756, 40.3198], [28.2892, 40.4033], [29.3648, 40.8094], [29.0456, 41.0074], [29.3222, 41.2276], [31.2549, 41.1077], [31.4582, 41.3199], [32.3065, 41.7296], [33.3816, 42.0177], [34.7505, 41.9569], [35.0067, 42.0634], [35.2979, 41.7287], [36.0516, 41.6826], [36.5097, 41.2626], [38.3811, 40.9244], [39.4265, 41.1064], [40.2654, 40.9612], [41.4142, 41.4238], [41.7631, 41.9702], [41.4888, 42.6591], [40.8367, 43.0635], [40.5242, 43.1212], [39.8735, 43.4728], [38.7172, 44.2882], [38.1814, 44.4196], [37.8516, 44.6988], [37.4112, 44.7352], [36.9411, 45.2896], [37.6474, 45.3771], [37.9332, 46.0016], [38.1836, 46.0948], [37.9679, 46.6182], [39.2933, 47.1056], [38.485, 47.1757], [37.5435, 47.0745], [37.3398, 46.9169], [36.2793, 46.6586], [35.827, 46.6244], [34.8495, 46.1898], [35.0231, 45.7011], [35.558, 45.3109], [36.1705, 45.453], [36.5749, 45.3935], [36.3934, 45.0655], [35.87, 45.0055], [35.5695, 45.1192], [35.0879, 44.8027], [34.7168, 44.8071], [33.9098, 44.3876], [33.4508, 44.5536], [33.5551, 45.0979], [32.508, 45.4037], [33.6648, 45.947], [33.2022, 46.1756], [32.4769, 46.0837], [32.0357, 46.2609], [31.9744, 46.7087], [30.7963, 46.552], [30.2193, 45.8667], [29.6018, 45.6825], [29.727, 45.3433], [29.5574, 44.8435], [29.0483, 44.7574], [28.6452, 44.2957], [28.5618, 43.5012], [27.9288, 43.186], [27.8889, 42.7497], [27.4849, 42.4682], [27.9825, 42.0474], [28.3465, 41.4664], [29.0572, 41.2298], [28.7802, 40.9741], [28.1721, 41.0806], [27.4996, 40.9732], [27.2581, 40.6873], [26.1053, 40.6114], [25.8558, 40.844], [25.1043, 40.9945], [24.7931, 40.8574], [24.3839, 40.9128], [23.8787, 40.5444], [23.6643, 40.2239], [23.3123, 40.2164], [22.6296, 40.4956], [22.5923, 40.037], [22.919, 39.6291], [22.9656, 39.0307], [22.7739, 38.8004], [23.2528, 38.6614], [23.9671, 38.2748], [24.0554, 37.7097], [23.5804, 38.0107], [23.1938, 37.9592], [23.1614, 37.3337], [22.765, 37.3932], [23.0735, 36.7749], [22.6083, 36.7798], [22.0805, 37.0288], [21.5829, 37.0807], [21.5714, 37.541], [21.1448, 37.9192], [21.4036, 38.1967], [21.8248, 38.3281], [22.7996, 37.9814], [22.4219, 38.4386], [21.4724, 38.3214], [21.1133, 38.3849], [20.7768, 38.8075], [20.7795, 39.0085], [20.301, 39.3273], [19.8517, 40.0437], [19.3981, 40.2847], [19.4407, 41.4247], [19.5774, 41.7873], [19.1863, 41.9484], [18.8943, 42.2494], [17.824, 42.7976], [16.903, 43.3924], [15.9415, 43.6565], [15.123, 44.2567], [14.8548, 45.081], [14.3861, 45.342], [13.9657, 44.8355], [13.6293, 45.1081], [13.517, 45.4818], [13.0305, 45.6376], [12.2745, 45.4459], [12.5235, 44.9678], [12.2483, 44.7223], [12.3961, 44.2238], [12.6913, 43.9948], [13.564, 43.5713], [14.0106, 42.6897], [14.8659, 42.0523], [15.1687, 41.9338], [15.9641, 41.9396], [16.0125, 41.4353], [17.1032, 41.062], [17.955, 40.6554], [18.4859, 40.105], [18.078, 39.9367], [17.8649, 40.2803], [16.9283, 40.4579], [16.5301, 39.8595], [16.5976, 39.6389], [17.1147, 39.3805], [17.1746, 38.9979], [16.559, 38.7147], [16.5456, 38.4093], [16.0569, 37.9419], [15.7244, 37.9392], [15.9721, 38.7125], [16.1967, 38.7591], [16.0236, 39.3535], [15.6929, 39.99], [14.9507, 40.239], [14.7656, 40.6683], [14.1025, 40.8272], [13.7331, 41.2356], [13.0886, 41.244], [12.631, 41.4695], [11.6375, 42.2876], [11.1679, 42.5353], [10.7085, 42.9361], [10.0475, 44.0201], [9.2893, 44.3193], [8.766, 44.4223], [8.0815, 43.9189], [7.1813, 43.6592], [6.4941, 43.1691], [6.1159, 43.0724], [5.4066, 43.2286], [5.0599, 43.4444], [4.7119, 43.3733], [4.0527, 43.5931], [3.2591, 43.1931], [3.0518, 42.9152], [3.248, 41.9445], [2.0827, 41.2875], [1.0329, 41.062], [0.7147, 40.8227], [0.3638, 40.3189], [-0.3269, 39.5199], [-0.2049, 39.0627], [0.2015, 38.7591], [-0.3813, 38.4355], [-0.6467, 38.1518], [-0.8221, 37.581], [-1.3275, 37.561], [-1.7975, 37.233], [-2.1116, 36.7767], [-4.3668, 36.7181], [-4.6742, 36.5063], [-5.1716, 36.4238], [-5.6254, 36.026], [-6.0407, 36.1885], [-6.4924, 36.9547], [-6.8845, 37.1944], [-7.4936, 37.1682], [-7.8342, 37.0057], [-8.5977, 37.1211], [-8.8141, 37.431], [-8.9147, 38.5123], [-9.4742, 38.7307], [-9.3748, 39.3384], [-9.1482, 39.5426], [-8.8867, 40.1795], [-8.6557, 41.0296], [-8.8872, 42.1051], [-8.691, 42.2743], [-9.2352, 42.9769], [-8.8736, 43.3343], [-8.5369, 43.3369], [-8.2568, 43.5797], [-7.6982, 43.7644], [-7.2621, 43.5948], [-5.6658, 43.5824], [-4.523, 43.416], [-3.6046, 43.5194], [-3.0455, 43.3716], [-2.3371, 43.3281], [-1.4848, 43.5638], [-1.2456, 44.5599], [-1.0662, 45.8059], [-1.1463, 46.3115], [-1.7867, 46.5148], [-2.0188, 47.0377], [-3.1587, 47.6946], [-4.312, 47.8229], [-4.6291, 48.0857], [-4.3932, 48.3676], [-4.7208, 48.5398], [-3.2315, 48.8408], [-2.6926, 48.5367], [-2.4463, 48.6483], [-1.4375, 48.6414], [-1.5831, 49.2023], [-1.8564, 49.6837], [-1.2587, 49.6802], [-1.1386, 49.3879], [-0.1636, 49.2966], [0.2777, 49.4633], [0.1867, 49.703], [1.2456, 49.9982], [1.5514, 50.2938], [1.5794, 50.7393], [1.9123, 50.9905], [2.4458, 51.0664], [3.5871, 51.4539], [4.4829, 52.3091], [4.7687, 52.9412], [5.0257, 52.9499], [5.1203, 52.3881], [5.5611, 52.5948], [5.3755, 53.0957], [6.0622, 53.4071], [6.8164, 53.4413], [7.2852, 53.6814], [8.0091, 53.6909], [8.5387, 53.5569], [8.8983, 53.8357], [8.9573, 54.5383], [8.6821, 54.7918], [8.6159, 55.4181], [8.1321, 55.5999], [8.1641, 56.6069], [8.6186, 57.1114], [9.5543, 57.2325], [9.9623, 57.581], [10.5371, 57.4487], [10.2828, 56.6204], [10.8461, 56.5216], [10.3187, 56.2129], [10.1829, 55.8651], [9.5912, 55.4929], [9.6449, 55.0228], [10.2126, 54.4089], [11.0085, 54.1812], [11.3996, 53.9446], [12.1112, 54.1683], [12.5755, 54.4673], [13.0291, 54.4109], [13.8654, 53.8534], [14.4878, 53.6719], [14.7159, 54.0183], [16.1865, 54.2904], [16.5598, 54.5539], [17.2621, 54.7294], [18.3234, 54.8382], [18.6697, 54.4309], [19.407, 54.3861], [19.7585, 54.5448], [19.9747, 54.9214], [21.1887, 54.9352], [21.238, 55.455], [21.0618, 55.8134], [21.0707, 56.8237], [21.7285, 57.571], [22.5546, 57.7241], [23.6479, 56.9711], [24.4034, 57.3251], [24.3018, 57.7841], [24.529, 58.3543], [23.7678, 58.3609], [23.5094, 58.6585], [23.4943, 59.1956], [24.3803, 59.4726], [25.5096, 59.6389], [27.8924, 59.4143], [28.4535, 59.8142], [29.1473, 59.9998], [28.643, 60.3753], [28.6506, 60.611], [27.4623, 60.4647], [27.2421, 60.5386], [25.6565, 60.3331], [23.7216, 59.9656], [22.7934, 60.0768], [22.5759, 60.3591], [21.436, 60.5964], [21.3605, 60.9674], [21.606, 61.5916], [21.2562, 61.9897], [21.1035, 62.6229], [22.2434, 63.4379], [23.2488, 63.8962], [24.2782, 64.5153], [24.5579, 64.8009], [25.3729, 65.0095], [25.348, 65.4792], [24.5814, 65.757], [23.6914, 65.8285], [21.5656, 65.4081], [21.574, 65.1258], [21.1381, 64.8087], [21.4653, 64.3796], [20.7626, 63.8678], [19.0345, 63.2377], [18.4632, 62.8959], [17.8955, 62.8305], [17.4174, 61.7407], [17.1307, 61.5758], [17.251, 60.7011], [17.9559, 60.5899], [18.5574, 60.2537], [18.9706, 59.7572], [17.876, 59.2709], [18.2852, 59.1093], [17.4569, 58.8585], [16.6522, 58.4344], [16.5279, 57.0681], [15.9965, 56.2227], [14.7821, 56.1619], [14.2152, 55.8325], [14.3417, 55.5278], [13.3212, 55.3464], [12.5923, 56.1377], [12.8835, 56.6177], [12.4214, 56.9063], [11.7347, 57.7177], [11.2718, 58.4757], [11.1958, 59.0782], [10.645, 59.3892], [10.1793, 59.0094], [9.6183, 58.946], [8.1663, 58.1452], [7.0051, 58.0242], [5.7067, 58.5236], [5.8452, 59.3535], [5.1314, 59.2265], [5.305, 59.6426], [5.1194, 59.8337], [5.2441, 60.5697], [5.0493, 60.7075], [4.9276, 61.711], [5.5336, 62.3109], [6.353, 62.6114], [7.2838, 62.6023], [7.0082, 62.9576], [8.1006, 63.091], [8.398, 63.5349], [9.6968, 63.6246], [9.7079, 63.8652], [11.3499, 64.9059], [12.1595, 65.1789], [12.2727, 65.5682], [12.9763, 66.0192], [13.1046, 66.5394], [14.755, 67.4991], [14.7989, 67.8094], [16.0645, 68.2], [16.6517, 68.6257], [17.3908, 68.7995], [18.1015, 69.1564], [18.2932, 69.4751], [20.0688, 69.8835], [21.163, 69.8895], [21.4005, 70.1744], [22.6847, 70.3748], [23.0464, 70.1019], [24.4198, 70.702], [24.6582, 71.001], [25.7684, 70.8531], [27.5972, 71.0913], [29.1025, 70.8607], [30.9442, 70.2745], [29.6014, 69.9767], [31.4529, 69.6895], [31.9846, 69.9536], [32.9417, 69.7518], [32.3775, 69.4791], [33.6843, 69.3102], [35.858, 69.1917], [37.7304, 68.6921], [40.3809, 67.8318], [40.9664, 67.7135], [41.1887, 66.8262], [40.5216, 66.4466], [39.2889, 66.1321], [38.3976, 66.0644], [35.5136, 66.3958], [34.8247, 66.6111], [32.4636, 66.9163], [33.5667, 66.321], [34.3999, 66.1286], [34.7865, 65.8645], [34.4065, 65.3957], [34.8034, 64.986], [34.8695, 64.5601], [35.6472, 64.3783], [36.365, 64.0028], [37.4423, 63.8135], [38.0708, 64.0259], [37.9537, 64.3202], [37.1835, 64.4085], [36.5283, 64.8473], [36.883, 65.1724], [38.0096, 64.8788], [39.7581, 64.577], [40.281, 64.998], [39.8167, 65.5979], [40.6916, 65.9634], [41.4759, 66.1235], [42.2106, 66.5196], [44.0971, 66.2351], [44.4886, 66.6719], [44.292, 67.0996], [43.7824, 67.2545], [44.2254, 67.9956], [44.0483, 68.5489], [45.8922, 68.4799], [46.6903, 67.8489], [45.5287, 67.7577], [44.9396, 67.4776], [45.9859, 66.853], [46.6912, 66.8255], [47.7091, 67.045], [47.8746, 67.5841], [48.8778, 67.7315], [50.839, 68.3498], [52.5502, 68.5924], [53.8019, 68.9959], [53.968, 68.2273], [54.5614, 68.273], [56.0436, 68.649], [57.1267, 68.554], [58.9191, 69.0039], [59.8975, 68.4219], [60.9335, 68.9868], [60.1705, 69.5909], [61.0156, 69.8515], [63.3616, 69.6753], [66.416, 68.9477], [67.0024, 68.8736], [67.8751, 68.4763]]], [[[60.4506, 69.935], [59.5783, 69.7385], [58.9529, 69.8928], [58.473, 70.2668], [59.0052, 70.4652], [60.4506, 69.935]]], [[[17.5031, 69.5963], [17.951, 69.1981], [16.9718, 69.1382], [17.5031, 69.5963]]], [[[50.265, 69.1857], [49.6262, 68.8596], [48.667, 68.7331], [48.279, 69.0403], [48.6315, 69.436], [49.225, 69.5113], [50.265, 69.1857]]], [[[-15.5431, 66.2285], [-14.6982, 66.0203], [-14.7576, 65.7557], [-13.6159, 65.4872], [-13.853, 64.8622], [-15.0215, 64.296], [-16.0605, 64.1113], [-16.6404, 63.8656], [-17.8156, 63.7129], [-18.6537, 63.4066], [-20.1982, 63.5558], [-21.8328, 64.2054], [-21.9502, 64.515], [-22.684, 65.0264], [-22.0057, 65.4934], [-22.9024, 65.5804], [-24.2241, 65.4872], [-23.7371, 66.0695], [-22.4261, 66.4302], [-21.3037, 65.8764], [-21.23, 65.4206], [-20.3567, 65.7191], [-20.3567, 66.0331], [-18.7775, 66.1687], [-16.7485, 66.1317], [-16.5407, 66.4466], [-15.9854, 66.5145], [-15.5431, 66.2285]]], [[[-3.1097, 58.5154], [-3.2124, 58.3212], [-3.9901, 57.959], [-3.4029, 57.7082], [-2.0741, 57.7024], [-1.778, 57.4938], [-2.6527, 56.3183], [-3.1783, 56.0802], [-2.1471, 55.9031], [-1.6555, 55.5704], [-1.2917, 54.7738], [-0.6716, 54.5039], [-0.2055, 54.0219], [0.5589, 52.9672], [1.0556, 52.959], [1.6566, 52.7537], [1.7467, 52.4689], [1.559, 52.0869], [0.9553, 51.8077], [0.6867, 51.3865], [1.4151, 51.3632], [0.9601, 50.9259], [0.2051, 50.763], [-1.5168, 50.7477], [-2.5477, 50.6163], [-3.4046, 50.6323], [-3.7933, 50.2293], [-4.1726, 50.3908], [-5.3422, 50.2461], [-4.5832, 50.7763], [-4.1881, 51.1885], [-3.1359, 51.2049], [-4.3863, 51.7411], [-4.9023, 51.6262], [-5.0883, 51.9959], [-4.3832, 52.197], [-3.9804, 52.5417], [-4.1111, 53.2189], [-3.0646, 53.4268], [-2.925, 53.7327], [-3.958, 54.7809], [-5.1354, 54.8575], [-4.7212, 55.421], [-5.2457, 55.9293], [-5.6097, 56.0553], [-5.392, 56.5148], [-5.9368, 56.6058], [-5.562, 57.2328], [-5.8181, 57.4361], [-5.3382, 58.2388], [-4.7155, 58.5101], [-3.1097, 58.5154]]], [[[22.6172, 58.6213], [23.2928, 58.4834], [22.1875, 58.1543], [22.0819, 58.4781], [22.6172, 58.6213]]], [[[19.0767, 57.836], [18.8139, 57.7062], [18.6998, 57.2427], [18.1365, 57.5566], [18.5374, 57.8305], [19.0767, 57.836]]], [[[12.5688, 55.785], [11.6539, 55.1869], [11.2864, 55.2044], [10.9788, 55.7215], [12.219, 56.1186], [12.5688, 55.785]]], [[[10.645, 55.6099], [10.7852, 55.1334], [9.9889, 55.1631], [9.8606, 55.5156], [10.645, 55.6099]]], [[[-7.1786, 55.0568], [-6.1293, 55.2175], [-5.4703, 54.5002], [-5.6068, 54.2727], [-6.3452, 53.9872], [-6.0274, 52.927], [-6.5612, 52.1888], [-7.5275, 52.0989], [-7.6645, 51.9797], [-8.8135, 51.5849], [-9.2964, 51.4981], [-9.5799, 51.6892], [-10.3786, 51.8688], [-9.9558, 52.1367], [-9.2993, 53.0977], [-9.7954, 53.3951], [-9.996, 54.276], [-8.623, 54.3468], [-8.764, 54.6813], [-8.2746, 55.1462], [-7.2468, 55.3531], [-7.1786, 55.0568]]], [[[9.4802, 42.8056], [9.5508, 42.1296], [9.1863, 41.3847], [8.8077, 41.5884], [8.7132, 42.5499], [9.4802, 42.8056]]], [[[9.632, 40.8822], [9.8051, 40.4996], [9.5623, 39.1661], [9.0563, 39.2394], [8.8814, 38.9127], [8.418, 39.2056], [8.4712, 40.2927], [8.1898, 40.6518], [9.2831, 41.2018], [9.632, 40.8822]]], [[[3.1454, 39.7902], [3.4619, 39.6979], [3.0726, 39.3011], [2.3713, 39.6131], [2.785, 39.8546], [3.1454, 39.7902]]], [[[23.4153, 38.9588], [24.0989, 38.6712], [23.7589, 38.4013], [23.252, 38.8013], [23.4153, 38.9588]]], [[[15.5766, 38.2202], [15.0994, 37.4585], [15.2943, 37.0133], [15.1128, 36.6879], [14.502, 36.7989], [14.1428, 37.1038], [13.9054, 37.1007], [12.4356, 37.8198], [13.3518, 38.1807], [13.6816, 38.0009], [14.506, 38.0453], [14.846, 38.1718], [15.5766, 38.2202]]], [[[34.4633, 35.5937], [33.9418, 35.2918], [34.0501, 34.9882], [32.9417, 34.5758], [32.449, 34.7294], [32.3171, 34.9532], [32.9417, 35.3904], [33.4588, 35.3358], [34.4633, 35.5937]]], [[[23.8521, 35.5355], [24.3129, 35.3638], [24.7212, 35.425], [25.4759, 35.306], [25.7449, 35.1427], [24.7998, 34.9345], [24.4638, 35.1604], [23.5618, 35.2949], [23.8521, 35.5355]]], [[[-16.3346, 28.38], [-16.6579, 28.0071], [-16.9054, 28.3396], [-16.3346, 28.38]]]]
            },
            "properties": {
                "name": "Europe",
                "id": "europe"
            },
            "id": "europe"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[32.8862, -26.8495], [32.5346, -28.1998], [32.2856, -28.6215], [31.7782, -28.9371], [31.3352, -29.3779], [30.2885, -30.9701], [28.8561, -32.2943], [27.8604, -33.0538], [27.0774, -33.5212], [26.4293, -33.7596], [25.9894, -33.7112], [25.6383, -34.0113], [25.0031, -33.9735], [24.8273, -34.1688], [23.5858, -33.9851], [23.2679, -34.0814], [22.5537, -34.0099], [22.2457, -34.0694], [21.7889, -34.3726], [21.06, -34.3646], [20.53, -34.4631], [20.0204, -34.7858], [19.6351, -34.7534], [18.8086, -34.108], [18.3545, -33.9389], [18.4331, -33.7174], [17.8782, -32.9614], [18.2511, -32.6521], [18.3105, -32.1225], [18.2107, -31.7425], [17.6776, -31.019], [17.1893, -30.0997], [16.95, -29.4037], [16.4808, -28.6415], [15.7191, -27.9659], [15.3414, -27.3866], [14.9676, -26.3182], [14.8451, -25.7256], [14.8371, -25.0331], [14.5015, -24.2021], [14.474, -23.2811], [14.5259, -22.7027], [14.3217, -22.19], [13.9733, -21.7678], [13.4504, -20.9169], [13.1685, -20.1845], [12.4583, -18.9269], [12.0956, -18.5412], [11.776, -18.0018], [11.7219, -17.467], [11.8191, -16.7043], [11.7507, -15.8321], [11.9678, -15.6341], [12.2803, -14.6376], [12.5506, -13.4377], [12.9834, -12.7759], [13.4171, -12.5202], [13.7855, -11.8127], [13.8477, -11.0545], [13.2093, -9.7033], [12.9985, -9.0481], [13.3589, -8.6872], [13.3785, -8.3698], [12.8622, -7.2317], [12.8236, -6.9547], [12.5213, -6.5903], [12.1555, -5.6328], [12.2066, -5.4681], [11.7773, -4.5657], [11.0321, -3.8266], [10.3471, -3.0129], [9.6245, -2.3671], [9.2658, -1.8251], [9.3306, -1.5348], [9.0647, -1.2982], [8.8215, -0.7083], [9.2969, -0.3514], [9.47, 0.362], [9.3302, 0.611], [9.6258, 0.7792], [9.4944, 1.4353], [9.8069, 1.9276], [9.8216, 2.5393], [9.9485, 3.079], [9.8762, 3.3099], [9.4256, 3.9224], [8.9999, 4.0916], [8.762, 4.5798], [7.1547, 4.5146], [6.7569, 4.3437], [6.0764, 4.2904], [5.5877, 4.6473], [5.2326, 5.4836], [4.8611, 6.0265], [4.4314, 6.3487], [4.126, 6.4113], [2.7726, 6.3758], [1.8182, 6.2609], [1.1057, 6.0513], [0.9499, 5.8103], [0.2597, 5.7575], [-0.3487, 5.5009], [-0.7977, 5.2266], [-1.6384, 4.9807], [-2.0017, 4.7623], [-2.399, 4.9292], [-4.0372, 5.2301], [-5.5646, 5.0894], [-6.8453, 4.6713], [-7.4261, 4.3761], [-7.66, 4.3668], [-8.2591, 4.59], [-9.1322, 5.0548], [-10.2763, 6.0775], [-10.7857, 6.3101], [-11.9292, 7.1837], [-12.4856, 7.3861], [-12.5104, 7.6658], [-12.8809, 7.8566], [-13.1818, 8.5771], [-13.2695, 9.1706], [-13.7003, 9.851], [-14.4269, 10.2483], [-14.7758, 10.9315], [-15.0431, 10.9404], [-15.3933, 11.2173], [-15.5018, 11.7238], [-16.1384, 11.9174], [-16.7121, 12.355], [-16.8248, 13.3409], [-16.5878, 13.6894], [-17.168, 14.6406], [-17.1471, 14.9221], [-16.5354, 15.8383], [-16.5359, 16.2866], [-16.3468, 16.9262], [-16.0789, 17.5459], [-16.0849, 18.5211], [-16.2132, 19.0032], [-16.5146, 19.3619], [-16.2835, 19.7871], [-16.2105, 20.2279], [-16.4298, 20.6523], [-16.6224, 20.6341], [-16.8761, 21.086], [-16.9309, 21.9001], [-16.5143, 22.3333], [-16.2103, 23.0981], [-15.5864, 24.0729], [-15.0388, 24.5488], [-14.856, 24.8715], [-14.7949, 25.4041], [-14.4138, 26.2537], [-13.5758, 26.7349], [-13.176, 27.6556], [-12.949, 27.9144], [-11.9862, 28.1292], [-11.4302, 28.3822], [-11.0809, 28.7138], [-10.4865, 29.0649], [-9.6671, 30.1094], [-9.6529, 30.4476], [-9.8755, 30.718], [-9.8087, 31.4247], [-9.3475, 32.0865], [-9.2458, 32.5726], [-8.5962, 33.1873], [-6.901, 33.969], [-6.3532, 34.776], [-5.9248, 35.7859], [-5.3973, 35.9297], [-5.1054, 35.4676], [-4.3299, 35.1613], [-3.6932, 35.2799], [-2.84, 35.128], [-2.0177, 35.085], [-1.6737, 35.1831], [-0.9175, 35.6683], [-0.4261, 35.8614], [0.0479, 35.9004], [0.5149, 36.2617], [1.2571, 36.5196], [2.5932, 36.6009], [2.9727, 36.7846], [3.7789, 36.8961], [4.7581, 36.8965], [5.1958, 36.6768], [6.0649, 36.8641], [6.4866, 37.0856], [6.9274, 36.9196], [7.6079, 36.9999], [7.9106, 36.8566], [8.8237, 36.9977], [9.6879, 37.3404], [10.1962, 37.2059], [10.5713, 36.8796], [11.1266, 36.8739], [10.5256, 36.3234], [10.5908, 35.8871], [11.0045, 35.6336], [11.1199, 35.2403], [10.5349, 34.5448], [10.0648, 34.2119], [10.1589, 33.8501], [10.7227, 33.5145], [12.2798, 32.8584], [12.7535, 32.8012], [13.2835, 32.9148], [14.237, 32.6813], [14.5135, 32.5109], [15.1767, 32.391], [15.4963, 31.6568], [15.7058, 31.4264], [16.123, 31.2644], [17.3491, 31.0815], [18.1903, 30.7775], [18.9364, 30.2905], [19.2916, 30.2878], [19.7132, 30.4885], [20.1509, 31.0784], [19.9263, 31.8175], [20.1216, 32.2188], [20.621, 32.5801], [21.6357, 32.9374], [22.1875, 32.9183], [23.0908, 32.6187], [23.2866, 32.2139], [24.1295, 32.0093], [24.684, 32.0164], [25.0249, 31.8832], [25.2255, 31.5339], [25.8931, 31.6209], [27.2479, 31.378], [27.9674, 31.0975], [28.5147, 31.0505], [29.0723, 30.8303], [29.5916, 31.0114], [30.3951, 31.4575], [30.7005, 31.4038], [31.1941, 31.5876], [32.1018, 31.0922], [32.6034, 31.0687], [33.1299, 31.1681], [33.6666, 31.1304], [34.1983, 31.3226], [34.9041, 29.4773], [34.7363, 29.2704], [34.3999, 28.016], [34.2201, 27.7643], [33.7602, 28.0475], [33.2475, 28.5678], [33.0757, 29.0729], [32.7215, 29.5217], [32.5653, 29.3863], [32.6318, 28.9921], [32.8982, 28.5651], [33.5471, 27.8984], [33.5498, 27.6072], [33.8929, 27.0492], [33.9591, 26.6488], [34.565, 25.6913], [35.194, 24.4751], [35.6246, 24.0658], [35.5229, 23.4426], [35.6978, 22.9463], [36.2296, 22.6289], [36.8297, 22.0976], [36.9269, 21.5867], [37.1507, 21.1037], [37.2275, 20.5568], [37.2483, 19.5821], [37.4711, 18.8203], [37.9217, 18.5558], [38.2018, 18.2495], [38.5742, 18.0728], [38.9116, 17.427], [39.1424, 16.7292], [39.2991, 15.9213], [39.5064, 15.532], [39.8637, 15.4703], [40.2042, 15.014], [40.5464, 14.9336], [41.1763, 14.6202], [41.6584, 13.9832], [42.2452, 13.5877], [42.7961, 12.8642], [43.0828, 12.8247], [43.41, 12.1899], [43.2719, 11.9697], [42.7992, 11.7394], [43.4411, 11.3465], [43.853, 10.7841], [44.3865, 10.4303], [44.9427, 10.4365], [45.8168, 10.836], [46.5652, 10.7459], [47.405, 11.1738], [48.0194, 11.1392], [48.6745, 11.3226], [48.9031, 11.2546], [50.1101, 11.5294], [50.7923, 11.9835], [51.2549, 11.8308], [51.0844, 11.3354], [51.1408, 10.6567], [50.8984, 10.2532], [50.8248, 9.428], [50.4297, 8.8452], [50.103, 8.1998], [49.8522, 7.9627], [49.7612, 7.6596], [49.3484, 6.9906], [49.0492, 6.1738], [48.6492, 5.4942], [47.9754, 4.4968], [46.879, 3.2854], [46.0511, 2.4753], [44.9201, 1.8099], [44.3328, 1.3909], [43.4677, 0.6216], [41.9798, -0.9728], [41.3872, -1.8664], [40.9957, -1.9507], [40.8984, -2.2699], [40.6441, -2.5393], [40.2224, -2.6885], [40.1154, -3.2504], [39.4909, -4.4787], [39.2281, -4.6656], [38.8192, -5.8778], [38.8738, -6.3315], [39.4722, -6.8788], [39.5193, -7.1243], [39.2884, -7.518], [39.4411, -8.0116], [39.304, -8.444], [39.7838, -9.9146], [39.9836, -10.1596], [40.3889, -10.3536], [40.6117, -10.6616], [40.4031, -11.3319], [40.5806, -12.6356], [40.5451, -13.463], [40.6401, -14.3903], [40.835, -14.7916], [40.6179, -15.1157], [40.5589, -15.4734], [40.1088, -15.9795], [39.8446, -16.4358], [39.0843, -16.9729], [38.145, -17.2428], [37.2443, -17.7399], [36.5403, -18.5181], [35.6512, -19.164], [34.9481, -19.8129], [34.7559, -19.8218], [34.6982, -20.4042], [34.9822, -20.8064], [35.2677, -21.6511], [35.3156, -22.3968], [35.5753, -22.9632], [35.3702, -23.7982], [35.4381, -24.1711], [35.1558, -24.5413], [34.6072, -24.8214], [33.3474, -25.2608], [32.7921, -25.6443], [32.5906, -26.0039], [32.9337, -26.2525], [32.8862, -26.8495]]], [[[49.5384, -12.4323], [49.9374, -13.0724], [50.174, -14.0401], [50.2353, -14.7321], [50.483, -15.3855], [50.2091, -15.9604], [49.8926, -15.4579], [49.6498, -15.5671], [49.8389, -16.4864], [49.4491, -17.2406], [49.478, -17.8984], [48.6071, -20.4575], [48.3509, -21.3488], [47.9084, -22.4661], [47.5582, -23.8745], [47.1773, -24.7872], [46.7285, -25.1498], [46.1586, -25.2306], [45.5078, -25.5631], [45.1154, -25.5431], [44.8131, -25.3341], [44.3457, -25.2262], [44.0354, -24.9958], [43.6874, -24.3579], [43.7225, -23.5296], [43.398, -22.8864], [43.2666, -22.0493], [43.5019, -21.3563], [43.8556, -21.0767], [44.2396, -20.3798], [44.4047, -19.9221], [44.4487, -19.4285], [44.2387, -19.0752], [44.233, -18.7409], [44.0399, -18.2886], [43.9795, -17.3915], [44.4216, -16.7026], [44.4762, -16.2174], [44.9094, -16.1743], [45.1669, -15.983], [45.5984, -15.9928], [45.7, -15.8139], [46.3317, -15.7136], [46.4751, -15.5134], [47.8116, -14.5448], [47.9954, -13.9607], [48.7966, -13.2673], [48.9102, -12.9357], [48.8996, -12.4585], [49.2072, -12.0794], [49.5384, -12.4323]]], [[[55.8225, -21.2778], [55.5575, -21.3586], [55.233, -21.0585], [55.6618, -20.9062], [55.8225, -21.2778]]]]
            },
            "properties": {
                "name": "Africa",
                "id": "africa"
            },
            "id": "africa"
        }, {
            "type": "Feature",
            "geometry": {
                "type": "MultiPolygon",
                "coordinates": [[[[110.8887, 19.9918], [111.0138, 19.6553], [110.5722, 19.1719], [110.4514, 18.748], [109.5193, 18.2184], [108.7016, 18.5354], [108.6936, 19.3384], [109.1792, 19.6739], [109.2188, 19.8426], [109.6511, 19.9842], [110.5882, 20.0726], [110.8887, 19.9918]]], [[[121.1017, 18.6153], [121.8457, 18.2952], [122.2998, 18.4026], [122.1511, 17.7563], [122.2368, 17.4349], [122.5191, 17.1247], [122.1351, 16.1849], [121.5953, 15.9333], [121.6069, 15.67], [121.3925, 15.3242], [121.6957, 14.7374], [121.6486, 14.4813], [121.8004, 14.1137], [122.1999, 14.1479], [122.4907, 14.3224], [122.856, 14.2509], [123.2315, 13.7475], [123.4322, 13.9664], [123.726, 13.8843], [123.608, 13.5283], [124.1428, 13.036], [124.0598, 12.5672], [123.311, 13.044], [123.1632, 13.4417], [122.5954, 13.9078], [122.4068, 13.4927], [121.7778, 13.9375], [121.2034, 13.6401], [120.8407, 13.8847], [120.6166, 14.1879], [120.922, 14.4933], [120.8882, 14.7157], [120.0821, 14.851], [119.8309, 16.327], [120.1598, 16.0478], [120.3893, 16.2218], [120.3054, 16.5294], [120.4088, 16.9555], [120.3582, 17.6382], [120.5997, 18.5078], [121.1017, 18.6153]]], [[[120.7045, 13.4794], [121.2029, 13.4324], [121.5226, 13.131], [121.5407, 12.6382], [121.2367, 12.2188], [120.922, 12.5117], [120.7635, 12.9698], [120.5083, 13.2601], [120.7045, 13.4794]]], [[[53.7633, 12.6369], [54.1872, 12.664], [54.1295, 12.3608], [53.5982, 12.3422], [53.7633, 12.6369]]], [[[125.2397, 12.5277], [125.5358, 12.1912], [125.4568, 11.9524], [125.6281, 11.1321], [125.2335, 11.145], [125.0342, 11.3412], [124.8841, 11.7753], [124.3848, 12.2441], [124.2947, 12.5694], [125.2397, 12.5277]]], [[[122.4964, 11.6151], [123.1583, 11.5356], [123.0167, 11.1166], [122.7699, 10.8236], [122.1977, 10.623], [121.9642, 10.8716], [122.1036, 11.643], [122.4964, 11.6151]]], [[[124.5748, 11.343], [124.9299, 11.3727], [125.0133, 10.7854], [125.2535, 10.2639], [125.0266, 10.033], [124.7807, 10.168], [124.7869, 10.7814], [124.4456, 10.9235], [124.5748, 11.343]]], [[[117.3109, 8.4395], [117.35, 8.7134], [117.8849, 9.2407], [118.1148, 9.3468], [119.0243, 10.3535], [119.2241, 10.4774], [119.2614, 10.8449], [119.5268, 10.9532], [119.6839, 10.5515], [119.1917, 10.061], [118.782, 9.9163], [118.4348, 9.2562], [117.9896, 8.8772], [117.3109, 8.4395]]], [[[123.3705, 9.4498], [123.386, 9.9669], [123.7114, 10.4738], [123.952, 10.3167], [123.6435, 10.0202], [123.3705, 9.4498]]], [[[123.1308, 9.064], [122.5626, 9.4826], [122.4716, 9.9616], [122.8556, 10.0868], [122.8169, 10.5036], [122.9834, 10.8866], [123.2564, 10.9941], [123.5676, 10.7806], [123.1618, 9.8644], [123.3083, 9.357], [123.1308, 9.064]]], [[[124.5938, 9.7871], [124.3599, 9.63], [123.9355, 9.6238], [123.817, 9.8173], [124.1726, 10.1351], [124.577, 10.0268], [124.5938, 9.7871]]], [[[79.9822, 9.8129], [80.253, 9.7965], [80.7111, 9.3663], [81.373, 8.4315], [81.436, 8.119], [81.8741, 7.2885], [81.8612, 6.9014], [81.6375, 6.4251], [81.3801, 6.2409], [80.724, 5.979], [80.2672, 6.0096], [80.0954, 6.153], [79.8593, 6.8295], [79.7923, 7.5854], [79.929, 8.8993], [80.1185, 9.3268], [79.9822, 9.8129]]], [[[126.0059, 9.321], [126.1932, 9.2767], [126.3201, 8.8447], [126.4355, 7.8327], [126.57, 7.6773], [126.5816, 7.2476], [126.08, 6.7332], [125.8243, 7.3333], [125.4008, 6.7957], [125.5886, 6.4659], [125.6681, 5.9785], [125.4559, 5.6643], [124.6365, 5.9981], [124.0776, 6.4042], [123.9853, 6.9937], [124.2068, 7.3963], [123.9684, 7.6644], [123.493, 7.8078], [123.3909, 7.4074], [122.4973, 7.6729], [122.176, 7.0044], [122.0472, 7.3635], [122.132, 7.8105], [122.3371, 8.0284], [122.911, 8.1563], [123.0176, 8.3982], [123.4344, 8.7031], [124.2259, 8.2712], [124.4513, 8.6064], [124.731, 8.5629], [124.8686, 8.9721], [125.5336, 9.1408], [125.4142, 9.6691], [125.5211, 9.7592], [126.0059, 9.321]]], [[[116.8075, 6.691], [117.1285, 6.9689], [117.294, 6.6768], [117.6456, 6.4735], [117.6172, 5.9408], [118.0038, 6.0531], [118.1157, 5.8627], [118.5946, 5.5919], [119.2236, 5.4126], [119.1322, 5.1005], [118.1854, 4.8284], [118.5627, 4.5022], [118.4979, 4.3623], [118.0083, 4.25], [117.741, 4.3375], [117.4654, 4.076], [117.6301, 3.6361], [117.1662, 3.5922], [117.6105, 3.0644], [118.0664, 2.3178], [117.8649, 1.9684], [118.0806, 1.7016], [118.639, 1.319], [118.9848, 0.9821], [118.5347, 0.8134], [118.196, 0.8742], [117.745, 0.7295], [117.5222, 0.2359], [117.4627, -0.3238], [117.5626, -0.7708], [116.5545, -1.474], [116.4236, -2.0528], [116.5656, -2.2996], [116.3308, -2.9024], [115.9561, -3.5949], [114.6937, -4.1697], [114.5361, -3.4946], [114.0825, -3.2788], [113.7953, -3.4564], [113.5258, -3.1843], [112.9714, -3.1869], [112.6003, -3.4005], [112.2852, -3.321], [111.8222, -3.5323], [111.8231, -3.0573], [111.3676, -2.9335], [111.0445, -3.0556], [110.574, -2.8913], [110.2326, -2.9251], [110.0191, -1.399], [109.7874, -1.0114], [109.454, -0.8689], [109.1606, -0.4947], [109.2574, 0.0313], [108.9444, 0.3558], [108.9058, 0.7939], [109.0758, 1.4957], [109.3786, 1.9227], [109.6289, 2.0275], [109.9845, 1.7176], [110.3493, 1.7198], [110.9397, 1.5174], [111.1541, 1.7389], [111.242, 2.4358], [111.7276, 2.854], [112.7375, 3.0706], [113.0447, 3.2051], [113.4459, 3.7404], [113.924, 4.2434], [114.0536, 4.5927], [114.2995, 4.6074], [114.9956, 5.0224], [115.5198, 5.049], [115.419, 5.413], [115.7968, 5.536], [116.1386, 6.1295], [116.4946, 6.5219], [116.8075, 6.691]]], [[[96.4924, 5.2293], [97.4512, 5.2359], [97.9084, 4.8799], [98.2484, 4.4147], [98.3074, 4.0929], [99.7319, 3.1829], [100.4572, 2.2574], [100.6854, 2.1202], [101.0463, 2.2574], [101.4768, 1.6932], [101.7849, 1.6213], [102.1573, 1.2591], [102.4694, 0.7792], [102.8493, 0.7153], [103.0664, 0.492], [103.4788, 0.48], [103.7868, 0.0468], [103.4286, -0.1916], [103.4313, -0.5334], [103.7211, -0.8867], [104.3608, -1.0385], [104.5685, -1.9219], [104.8451, -2.0932], [104.6684, -2.3857], [105.3968, -2.3804], [105.5819, -2.4918], [106.0445, -3.1062], [105.8438, -3.6135], [105.8873, -5.0096], [105.8163, -5.6767], [105.6183, -5.7997], [105.3493, -5.5493], [105.0812, -5.7455], [104.6396, -5.5205], [104.6014, -5.9045], [103.8312, -5.0797], [102.919, -4.4707], [102.5377, -4.152], [102.1276, -3.5993], [101.5785, -3.167], [100.8478, -2.1438], [100.8554, -1.9343], [100.4865, -1.2991], [100.3081, -0.8268], [99.8602, -0.3136], [99.5978, 0.1023], [99.1593, 0.3518], [98.7962, 1.4948], [98.5645, 1.9023], [97.7006, 2.3586], [97.591, 2.8464], [97.3912, 2.9752], [96.9691, 3.5753], [96.4449, 3.8163], [95.4949, 4.7614], [95.2069, 5.2838], [95.2277, 5.5648], [95.629, 5.6092], [96.1333, 5.2941], [96.4924, 5.2293]]], [[[96.4635, 2.3599], [95.8088, 2.6556], [95.8061, 2.9161], [96.4173, 2.5153], [96.4635, 2.3599]]], [[[128.4539, 2.0519], [128.2178, 2.2973], [128.6022, 2.5974], [128.623, 2.2245], [128.4539, 2.0519]]], [[[127.7326, 0.848], [128.161, 1.1579], [128.4242, 1.5174], [128.6883, 1.5725], [128.7025, 1.1064], [128.299, 0.8769], [128.6914, 0.3602], [127.983, 0.4721], [127.8875, 0.2985], [128.0464, -0.706], [127.6918, -0.2417], [127.7086, 0.2883], [127.5555, 0.4898], [127.4201, 1.252], [127.6318, 1.8437], [128.0109, 1.7012], [128.0118, 1.3319], [127.6527, 1.014], [127.7326, 0.848]]], [[[124.889, 0.9954], [124.4274, 0.4707], [123.754, 0.3056], [123.2653, 0.3265], [123.0824, 0.4858], [121.8422, 0.4365], [121.4258, 0.4947], [120.3489, 0.4494], [120.1274, 0.1667], [120.012, -0.307], [120.0972, -0.6501], [120.5176, -1.0394], [120.6676, -1.3701], [121.0338, -1.4065], [121.5194, -0.8556], [121.9691, -0.9333], [122.2798, -0.7571], [122.8888, -0.7553], [123.1716, -0.5706], [123.3798, -0.6488], [123.378, -1.0043], [123.0495, -0.8725], [122.8076, -0.9662], [122.5067, -1.3479], [121.7188, -1.8628], [121.349, -1.9458], [121.8484, -2.3316], [122.3992, -3.2007], [122.2528, -3.6206], [122.8773, -4.1089], [122.8973, -4.3491], [122.207, -4.4964], [121.9172, -4.848], [121.4866, -4.5812], [121.6175, -4.0929], [120.9144, -3.5558], [121.0542, -3.167], [121.052, -2.7515], [120.6539, -2.6676], [120.2539, -3.0529], [120.4368, -3.7072], [120.3627, -4.0858], [120.4199, -4.6176], [120.2792, -5.1463], [120.3116, -5.5418], [119.7172, -5.6932], [119.3768, -5.4255], [119.6116, -4.4236], [119.6236, -4.0343], [119.4194, -3.4755], [118.9946, -3.5376], [118.8126, -3.1568], [118.7837, -2.7648], [119.0922, -2.4829], [119.3217, -1.9298], [119.3089, -1.4083], [119.7718, -0.4836], [119.8091, 0.2386], [120.2694, 0.971], [120.5167, 0.8174], [120.9122, 1.2888], [121.44, 1.2142], [121.5918, 1.0678], [122.4365, 1.018], [122.8924, 0.8498], [123.2781, 0.9279], [123.8468, 0.8383], [124.2738, 1.022], [124.9893, 1.7012], [125.2339, 1.5023], [124.889, 0.9954]]], [[[97.4814, 1.465], [97.9319, 0.9741], [97.8764, 0.6283], [97.4055, 0.9466], [97.2443, 1.4238], [97.4814, 1.465]]], [[[140.9735, -2.6099], [140.9743, -5.0398], [140.9748, -6.3461], [140.8625, -6.7399], [140.9752, -6.9054], [140.9761, -9.1187], [139.9347, -8.1013], [139.3857, -8.1892], [138.8561, -8.1452], [139.0878, -7.5872], [138.7478, -7.2517], [138.8645, -6.8584], [138.4388, -6.3435], [138.2826, -5.8388], [138.0611, -5.4654], [137.0894, -4.9243], [136.6189, -4.8187], [135.9797, -4.5311], [135.1962, -4.4507], [134.6795, -4.0792], [134.1473, -3.7969], [133.9737, -3.8182], [133.6532, -3.3645], [133.2488, -4.0623], [132.9688, -4.0947], [132.7539, -3.7036], [132.7512, -3.2948], [132.3482, -2.9752], [133.1911, -2.4377], [133.6088, -2.5473], [133.9049, -2.391], [133.9213, -2.1021], [132.963, -2.2725], [132.3078, -2.2423], [132.0233, -1.9902], [131.9305, -1.5596], [131.2935, -1.3936], [131.2571, -0.8556], [131.8044, -0.7038], [132.1285, -0.4539], [132.6252, -0.3589], [133.4726, -0.726], [133.9746, -0.7442], [134.2596, -1.363], [134.106, -1.7212], [134.1557, -2.1953], [135.0373, -3.333], [135.4865, -3.345], [136.2433, -2.5833], [136.3898, -2.2734], [136.843, -2.1975], [137.1236, -1.8411], [137.8063, -1.4833], [138.6497, -1.7909], [139.7896, -2.3484], [140.6223, -2.4456], [140.9735, -2.6099]]], [[[135.3831, -0.6514], [135.8936, -0.726], [136.2828, -1.0647], [135.839, -1.1193], [135.3831, -0.6514]]], [[[99.1637, -1.778], [98.8743, -1.664], [98.6017, -1.1979], [98.869, -0.9156], [99.2671, -1.6276], [99.1637, -1.778]]], [[[128.153, -1.6604], [127.5617, -1.7283], [127.6465, -1.3324], [128.153, -1.6604]]], [[[106.0458, -1.6693], [106.3659, -2.4647], [106.6788, -2.704], [106.547, -3.0556], [105.9988, -2.8247], [105.7857, -2.1815], [105.1332, -2.0426], [105.5855, -1.5268], [106.0458, -1.6693]]], [[[135.4741, -1.5916], [136.2016, -1.6551], [136.1927, -1.8593], [135.4741, -1.5916]]], [[[124.9694, -1.7057], [124.8344, -1.8943], [124.4176, -2.0053], [124.3808, -1.6875], [124.9694, -1.7057]]], [[[108.2071, -2.9978], [107.6145, -3.2096], [107.6665, -2.5664], [108.0744, -2.597], [108.2071, -2.9978]]], [[[129.7545, -2.866], [130.3791, -2.9894], [130.8598, -3.5705], [130.8052, -3.8577], [129.8442, -3.3272], [129.4678, -3.4533], [128.9675, -3.3259], [128.4193, -3.416], [128.0819, -3.1843], [128.1987, -2.866], [129.4274, -2.7906], [129.7545, -2.866]]], [[[126.8612, -3.088], [127.2275, -3.3911], [127.2297, -3.6331], [126.6863, -3.8235], [126.1785, -3.5798], [126.0263, -3.1705], [126.8612, -3.088]]], [[[123.1796, -4.551], [123.0553, -4.7481], [122.9856, -5.3935], [122.8121, -5.6714], [122.5843, -5.5445], [122.7663, -5.2102], [122.8533, -4.6185], [123.1796, -4.551]]], [[[122.6452, -5.2692], [122.3961, -5.0699], [122.3691, -4.7672], [122.702, -4.6185], [122.7592, -4.9341], [122.6452, -5.2692]]], [[[140.0488, 75.8289], [140.9442, 75.7004], [141.4853, 76.1372], [142.4605, 75.9035], [143.6856, 75.8636], [145.2552, 75.5857], [144.0199, 75.0446], [141.9873, 74.9913], [139.0993, 74.6566], [138.0922, 74.7973], [137.0064, 75.235], [137.5013, 75.9097], [138.8139, 76.1996], [140.0488, 75.8289]]], [[[146.7951, 75.3709], [150.1039, 75.2193], [150.6463, 74.9445], [149.5969, 74.7725], [148.0926, 74.8258], [146.1483, 75.1984], [146.7951, 75.3709]]], [[[113.3873, 74.4005], [112.7823, 74.0951], [111.6428, 74.2729], [112.0845, 74.549], [113.3873, 74.4005]]], [[[142.1848, 73.8958], [143.3438, 73.5687], [143.1934, 73.2206], [140.6627, 73.4519], [141.0849, 73.8658], [142.1848, 73.8958]]], [[[70.6738, 73.095], [69.996, 73.3594], [70.9402, 73.5145], [71.626, 73.174], [70.6738, 73.095]]], [[[-178.8765, 71.5769], [-177.5322, 71.2631], [-177.8218, 71.0675], [-179.5066, 70.9235], [-180, 70.993], [-180, 71.5378], [-178.8765, 71.5769]]], [[[178.8614, 70.8265], [178.8912, 71.2311], [180, 71.5378], [180, 70.993], [178.8614, 70.8265]]], [[[169.201, 69.5805], [167.789, 69.8369], [168.358, 70.0157], [169.375, 69.8826], [169.201, 69.5805]]], [[[-179.7985, 68.9402], [-178.8738, 68.7542], [-177.4074, 68.2451], [-175.3451, 67.678], [-174.4476, 67.1031], [-173.6796, 67.1449], [-172.6405, 66.9249], [-171.7955, 66.9318], [-170.192, 66.2014], [-170.6663, 65.6217], [-172.2115, 65.4255], [-172.2132, 65.0481], [-172.9239, 64.705], [-173.0091, 64.2975], [-173.7298, 64.3645], [-174.318, 64.6375], [-175.3951, 64.8024], [-175.8538, 65.0109], [-176.0933, 65.471], [-177.0563, 65.6137], [-178.3103, 65.4849], [-178.8794, 65.9364], [-179.7283, 65.8039], [-179.3521, 65.5167], [-180, 65.0672], [-180, 67.0252], [-180, 68.9835], [-179.7985, 68.9402]]], [[[163.635, 58.6033], [163.7615, 59.015], [164.6156, 58.8856], [163.635, 58.6033]]], [[[142.761, 54.3941], [142.9181, 53.7941], [143.2235, 53.2961], [143.3234, 52.6138], [143.1556, 52.0838], [143.4553, 51.4717], [143.8161, 50.2825], [144.272, 49.3113], [143.105, 49.1988], [142.5741, 48.0719], [142.5568, 47.7381], [143.0056, 47.2228], [143.2821, 46.5592], [142.5781, 46.7008], [142.2088, 46.0891], [141.8302, 46.4508], [142.0388, 47.1402], [141.9647, 47.5872], [142.1817, 48.0133], [141.8661, 48.75], [142.1422, 49.5692], [142.0712, 50.5149], [142.2066, 51.2225], [141.7223, 51.7363], [141.661, 52.2729], [141.8035, 52.5557], [141.8235, 53.3394], [142.5262, 53.4475], [142.67, 53.9684], [142.3349, 54.2807], [142.761, 54.3941]]], [[[148.5991, 45.3176], [147.9137, 44.9904], [147.7694, 45.1906], [148.5991, 45.3176]]], [[[143.8241, 44.1169], [144.7985, 43.9402], [145.1012, 43.7644], [145.3471, 43.1767], [144.6307, 42.9468], [143.9693, 42.8815], [143.4295, 42.419], [143.2364, 42.0004], [142.5084, 42.2578], [141.8515, 42.5792], [141.4067, 42.5468], [140.9863, 42.3422], [140.4803, 42.5592], [140.3267, 42.2933], [140.7342, 42.1162], [140.3849, 41.5192], [139.9951, 41.5765], [140.1083, 41.9129], [139.8211, 42.3875], [139.8912, 42.6494], [140.7808, 43.2149], [141.2962, 43.1998], [141.6446, 44.0196], [141.7822, 44.7166], [141.5829, 45.156], [141.9376, 45.5093], [142.7042, 44.8191], [143.8241, 44.1169]]], [[[141.2296, 41.3727], [141.4626, 40.611], [141.7969, 40.2914], [141.978, 39.8444], [141.9007, 39.1115], [141.6584, 38.9748], [141.4675, 38.404], [141.1084, 38.3378], [140.9282, 37.9494], [141.0365, 37.4674], [140.9686, 37.0022], [140.6272, 36.5028], [140.6219, 36.0593], [140.874, 35.7251], [140.4572, 35.5102], [140.3147, 35.1551], [139.7994, 34.9567], [139.6502, 35.409], [139.2494, 35.2781], [138.9826, 34.6984], [138.5773, 35.0863], [138.1889, 34.5963], [136.8848, 34.8058], [136.5332, 34.6784], [136.8537, 34.3242], [136.3299, 34.1768], [135.9162, 33.5615], [135.4528, 33.5531], [135.1753, 33.898], [135.1003, 34.2882], [135.3849, 34.5004], [134.7399, 34.7654], [134.2081, 34.6975], [133.9684, 34.5275], [133.1423, 34.3024], [132.2381, 34.2269], [132.0903, 33.8554], [131.7405, 34.0521], [130.9189, 33.9757], [131.0041, 34.3925], [131.3543, 34.4134], [131.8564, 34.7263], [132.923, 35.5111], [133.3767, 35.4587], [134.2139, 35.5391], [135.1744, 35.7473], [135.68, 35.5031], [136.0955, 35.7677], [136.0063, 35.9905], [136.6983, 36.742], [137.3424, 36.7704], [137.5142, 36.9516], [138.3199, 37.2183], [138.8849, 37.8438], [139.4012, 38.1425], [140.0479, 39.4635], [139.9228, 40.5986], [140.2814, 40.8463], [141.1186, 40.8822], [141.2296, 41.3727]]], [[[134.3572, 34.2562], [134.6373, 34.2265], [134.739, 33.8203], [134.3772, 33.6082], [134.1815, 33.2473], [133.6319, 33.5109], [133.2861, 33.36], [132.9772, 32.842], [132.4951, 32.9166], [132.3659, 33.5123], [132.7841, 33.9926], [133.5822, 34.017], [134.0758, 34.3583], [134.3572, 34.2562]]], [[[131.1745, 33.6024], [131.5829, 33.6525], [131.8968, 33.2548], [131.9767, 32.8438], [131.7321, 32.593], [131.3374, 31.4047], [130.5886, 31.1783], [130.2006, 31.2919], [130.3218, 31.6013], [130.1944, 32.0909], [130.6405, 32.6192], [130.3817, 33.0924], [130.1749, 32.8513], [129.5801, 33.2362], [129.66, 33.3649], [130.3649, 33.6343], [130.4838, 33.8345], [130.953, 33.8718], [131.1745, 33.6024]]], [[[121.009, 22.6205], [120.5815, 22.3564], [120.3258, 22.5424], [120.0724, 23.1496], [120.1589, 23.7089], [121.0405, 25.0326], [121.5936, 25.2754], [121.9292, 24.9736], [121.6393, 24.1302], [121.4773, 23.4239], [121.2957, 22.9667], [121.009, 22.6205]]], [[[96.5265, 81.0755], [97.8316, 80.7983], [97.1751, 80.241], [94.565, 80.126], [93.8725, 80.0102], [91.5239, 80.3584], [93.2626, 80.7912], [93.0651, 80.9885], [95.8008, 81.2804], [96.5265, 81.0755]]], [[[97.6745, 80.1582], [100.0613, 79.7771], [99.4394, 78.8341], [97.5555, 78.8266], [94.6524, 79.1275], [93.0708, 79.4953], [94.9867, 80.0967], [97.6745, 80.1582]]], [[[102.8849, 79.254], [105.146, 78.8188], [105.3125, 78.4998], [103.7194, 78.2581], [101.2043, 78.192], [100.2841, 78.6792], [101.5905, 79.3503], [102.8849, 79.254]]], [[[34.9041, 29.4773], [34.1983, 31.3226], [34.6786, 31.8956], [35.2512, 33.3924], [35.6481, 34.2483], [35.9779, 34.5474], [35.9433, 35.2239], [35.7644, 35.5715], [35.8927, 35.9164], [36.1275, 35.8316], [36.5376, 36.4575], [36.6584, 36.8024], [37.4365, 36.6435], [38.1916, 36.9014], [38.7669, 36.6932], [39.3568, 36.6817], [40.0164, 36.8259], [40.7058, 37.0976], [41.5154, 37.0892], [42.7748, 37.3719], [43.5161, 37.2445], [44.1562, 37.2831], [44.2818, 36.9782], [44.794, 37.2902], [44.5614, 37.7448], [44.2112, 37.9081], [44.4309, 38.3569], [44.023, 39.3774], [44.3892, 39.4223], [44.5872, 39.7685], [45.4798, 39.0063], [46.1701, 38.8692], [46.555, 38.9042], [46.8528, 39.1484], [47.773, 39.6486], [47.9958, 39.6842], [48.2422, 38.9788], [48.0234, 38.819], [48.5929, 38.4111], [48.8685, 38.4355], [49.0811, 37.6676], [49.47, 37.4967], [50.1305, 37.407], [50.5331, 37.0137], [51.1186, 36.7425], [52.1902, 36.6217], [54.0172, 36.9524], [53.8237, 37.9281], [53.8685, 38.9491], [53.6177, 39.2158], [53.125, 39.432], [53.4721, 39.6686], [53.4042, 39.9603], [52.9874, 39.9878], [52.7335, 40.3988], [53.1454, 40.825], [53.6151, 40.8183], [53.8699, 40.6487], [54.7101, 40.8911], [54.5921, 41.1934], [54.0949, 41.5192], [53.8463, 42.0914], [53.1641, 42.0936], [52.6096, 41.5294], [52.4623, 42.1007], [52.5968, 42.7603], [51.8439, 42.9104], [51.3019, 43.4825], [50.8305, 44.1928], [50.3311, 44.3255], [50.4093, 44.6242], [50.8603, 44.6287], [51.4156, 45.358], [52.5311, 45.3988], [52.7739, 45.5728], [53.1352, 46.1916], [53.1703, 46.6692], [52.9159, 46.9542], [52.1888, 46.8397], [51.1781, 47.11], [50.4195, 46.8796], [50, 46.6342], [49.3475, 46.5192], [49.2321, 46.3372], [48.6102, 46.5663], [48.9595, 46.7744], [48.1099, 47.7452], [47.0934, 47.9476], [47.0042, 48.2846], [46.661, 48.4124], [46.7028, 48.8055], [47.0144, 49.0987], [46.8022, 49.367], [46.9917, 49.8526], [47.3264, 50.2734], [47.706, 50.378], [48.4344, 49.8284], [48.8432, 50.0131], [48.8086, 50.6012], [49.498, 51.0835], [50.2468, 51.2895], [50.7941, 51.7292], [51.6091, 51.4839], [52.3309, 51.6812], [52.571, 51.4817], [53.3381, 51.4824], [54.0416, 51.1153], [54.4216, 50.7803], [54.727, 50.9981], [55.5424, 50.6017], [55.7977, 50.6021], [56.4915, 51.0196], [57.0117, 51.0651], [57.4423, 50.8889], [57.8387, 51.0917], [58.3594, 51.0638], [58.8836, 50.6945], [59.8122, 50.5819], [59.9552, 50.7992], [60.6379, 50.6638], [61.3894, 50.8609], [61.5851, 51.23], [61.3632, 51.442], [60.4648, 51.6513], [60.0657, 51.9766], [60.1789, 52.009], [59.707, 52.4616], [59.0372, 52.607], [59.0052, 53.1794], [59.4083, 53.6477], [59.8828, 53.9417], [59.6294, 54.3086], [58.9546, 54.5315], [57.6207, 53.983], [56.9735, 54.4686], [56.084, 55.3471], [58.0984, 55.5504], [58.6901, 56.0873], [58.58, 56.5143], [57.8276, 56.859], [58.0265, 57.3293], [58.7984, 57.8522], [59.4318, 58.5187], [60.0644, 59.4402], [60.5424, 61.0083], [61.2167, 64.2824], [63.0824, 64.9054], [64.8011, 65.7162], [66.2021, 66.1716], [67.5444, 66.7227], [68.2688, 67.2858], [67.8751, 68.4763], [68.3714, 68.3143], [69.1406, 68.9506], [68.5427, 68.967], [68.006, 69.48], [67.0645, 69.6937], [66.9265, 70.0142], [67.2847, 70.7386], [66.6664, 70.9006], [66.9176, 71.2824], [68.2693, 71.6828], [69.039, 72.67], [69.6449, 72.8975], [71.5004, 72.9137], [72.8121, 72.6915], [72.6243, 72.0794], [71.9118, 71.5478], [72.5812, 71.1512], [72.7002, 70.4574], [72.4694, 70.275], [72.5275, 69.0805], [73.548, 68.5744], [73.1521, 67.8651], [72.5946, 67.587], [71.5514, 66.7605], [70.9393, 66.5481], [69.877, 66.8455], [69.1943, 66.5787], [70.3396, 66.3423], [71.9172, 66.2467], [72.4174, 66.5607], [73.7922, 66.9953], [74.0745, 67.4141], [74.7696, 67.7663], [74.3914, 68.4206], [74.5796, 68.7511], [76.4591, 68.9784], [77.2385, 68.4697], [77.6509, 68.9029], [76.0005, 69.2349], [74.8145, 69.0907], [73.7757, 69.1983], [73.56, 69.7072], [74.3111, 70.6538], [73.0864, 71.4448], [73.6719, 71.845], [75.7413, 72.2962], [75.2472, 71.8135], [75.332, 71.3416], [76.1106, 71.2185], [77.4809, 71.3115], [76.3121, 71.5956], [76.0325, 71.9103], [78.4828, 72.395], [79.4221, 72.3808], [80.7626, 72.0892], [81.511, 71.7463], [82.9861, 71.7487], [82.1835, 72.2376], [80.827, 72.4882], [80.5096, 73.0861], [80.5833, 73.5684], [83.5449, 73.6665], [86.5914, 73.8942], [86.6513, 74.6824], [87.6713, 75.1296], [90.1851, 75.591], [93.5498, 75.854], [94.5756, 76.1517], [96.879, 75.931], [98.6621, 76.2427], [98.8055, 76.4806], [100.3223, 76.479], [101.0991, 76.7041], [100.9899, 76.9904], [103.1312, 77.6265], [104.0146, 77.7304], [105.8944, 77.4889], [104.9121, 77.1748], [105.712, 77.0015], [107.4299, 76.9265], [108.0278, 76.7185], [111.1151, 76.7229], [112.6194, 76.3836], [113.8712, 75.856], [113.6137, 75.2929], [111.8683, 74.7403], [109.8402, 74.3219], [108.1996, 73.6941], [107.271, 73.621], [106.4782, 73.1394], [107.7504, 73.1731], [109.8553, 73.4725], [110.2615, 74.0174], [112.1471, 73.7089], [114.0607, 73.5846], [115.3378, 73.7025], [118.4504, 73.5897], [118.4304, 73.2466], [119.7505, 72.9792], [123.1605, 72.955], [123.6222, 73.1933], [123.3052, 73.5331], [124.3883, 73.7549], [125.617, 73.5207], [127.7406, 73.4816], [128.8885, 73.1902], [129.4118, 72.3155], [128.3589, 72.0883], [129.7621, 71.1195], [131.1572, 70.7419], [131.5621, 70.9011], [132.5621, 71.8952], [133.4264, 71.491], [134.1029, 71.3789], [135.8847, 71.6306], [137.3153, 71.3594], [138.1183, 71.5663], [139.695, 71.7003], [139.6014, 72.496], [142.0614, 72.7208], [145.4856, 72.5422], [146.594, 72.3027], [148.402, 72.312], [149.5015, 72.1644], [150.5997, 71.5201], [151.5825, 71.287], [152.5089, 70.8345], [153.7944, 70.88], [155.8949, 71.0955], [158.0371, 71.0394], [159.3506, 70.7908], [160.0062, 70.3096], [159.8327, 69.7849], [161.5368, 69.3796], [162.3757, 69.6491], [164.1597, 69.7192], [164.5135, 69.6091], [166.8204, 69.4995], [167.6287, 69.7403], [168.303, 69.2716], [169.3106, 69.0796], [169.6098, 68.7862], [170.5376, 68.8254], [170.9952, 69.0454], [170.5824, 69.5834], [170.4869, 70.1076], [172.5595, 69.9682], [173.2773, 69.8238], [176.1075, 69.8604], [176.9243, 69.646], [178.8485, 69.3872], [180, 68.9835], [180, 65.0672], [178.5196, 64.6029], [177.4672, 64.7368], [177.433, 64.4445], [178.6501, 63.9653], [178.7065, 63.5216], [179.3324, 63.1902], [179.5703, 62.6875], [179.1206, 62.3204], [177.3513, 62.5874], [175.2681, 62.1025], [174.5144, 61.8237], [173.6235, 61.7161], [172.856, 61.4693], [172.3926, 61.0618], [170.6081, 60.435], [169.9827, 60.067], [169.2267, 60.5959], [168.1374, 60.5739], [166.9642, 60.3069], [166.3521, 60.4847], [165.0843, 60.0985], [163.7802, 60.041], [163.41, 59.8349], [163.2728, 59.3026], [162.1418, 58.4475], [161.9602, 58.0768], [162.4672, 57.7661], [163.2138, 57.6869], [162.7792, 57.3577], [162.8027, 56.8113], [163.2564, 56.6881], [163.3354, 56.2324], [163.0473, 56.0447], [162.5284, 56.2606], [162.085, 56.0897], [161.7294, 55.358], [162.1058, 54.7521], [161.7259, 54.533], [160.7733, 54.5414], [160.0746, 54.1892], [159.8437, 53.7837], [159.8975, 53.3807], [158.6088, 52.8735], [158.4637, 52.3049], [158.1037, 51.8095], [156.7476, 50.9692], [156.5004, 51.475], [156.3645, 52.5093], [156.0986, 53.0065], [155.6201, 54.8646], [155.5549, 55.3484], [155.9828, 56.6952], [156.7285, 57.1522], [156.9767, 57.4662], [156.7915, 57.7479], [157.4503, 57.7994], [158.2102, 58.0253], [159.0368, 58.4239], [159.8473, 59.1271], [160.8554, 59.6269], [161.7534, 60.1522], [162.0037, 60.4201], [162.9732, 60.7828], [163.71, 60.9168], [164.0052, 61.3439], [164.2556, 62.6966], [163.3319, 62.5508], [163.0091, 61.7915], [162.3926, 61.6621], [160.7666, 60.7533], [159.8833, 61.2917], [160.3174, 61.7933], [159.5526, 61.7194], [159.0767, 61.9223], [158.07, 61.7536], [157.4694, 61.7989], [156.6801, 61.4806], [156.63, 61.2724], [155.8532, 60.7772], [154.9707, 60.3766], [154.2929, 59.8333], [154.5827, 59.5401], [155.1669, 59.3601], [154.011, 59.0756], [153.3612, 59.2147], [152.8822, 58.9391], [151.3268, 58.8752], [151.99, 59.1601], [151.4857, 59.5241], [150.4572, 59.5907], [149.6427, 59.7705], [149.205, 59.4882], [147.8746, 59.3881], [147.5146, 59.2687], [146.4444, 59.4305], [145.9317, 59.1983], [145.5544, 59.4136], [143.192, 59.3701], [142.0255, 58.9997], [141.7547, 58.7453], [140.6849, 58.2122], [140.447, 57.8136], [140.0022, 57.6875], [138.6621, 56.9658], [137.6913, 56.1395], [136.175, 55.3522], [135.2623, 54.9434], [135.2579, 54.7314], [135.8514, 54.5838], [136.7973, 54.6209], [136.6828, 53.9313], [137.1555, 53.8217], [137.3282, 53.5389], [138.2923, 53.5924], [138.6608, 53.7449], [138.6958, 54.3199], [139.3195, 54.193], [139.7075, 54.2771], [140.3471, 53.8126], [141.4023, 53.184], [141.1697, 52.3684], [141.4853, 52.1786], [140.6876, 51.2322], [140.4763, 50.546], [140.5171, 49.596], [140.1705, 48.5238], [139.3723, 47.8873], [139.0012, 47.3835], [138.5866, 47.0572], [138.3367, 46.5432], [137.6855, 45.8183], [136.8035, 45.1711], [136.1421, 44.4893], [135.8745, 44.3734], [135.4834, 43.835], [135.1309, 43.5256], [133.7092, 42.83], [133.1601, 42.6968], [132.4814, 42.9099], [132.3344, 43.2388], [131.7947, 43.2553], [131.1586, 42.6258], [130.8341, 42.5228], [130.0684, 42.0457], [129.7563, 41.7123], [129.7088, 40.8574], [128.3043, 40.0362], [127.5684, 39.7818], [127.3944, 39.2079], [127.7863, 39.084], [128.3745, 38.6233], [128.6191, 38.1763], [129.335, 37.2747], [129.4735, 36.742], [129.4034, 36.0522], [129.5619, 35.9475], [129.2143, 35.1818], [128.5112, 35.101], [128.4442, 34.8706], [127.7148, 34.9545], [127.0308, 34.6069], [126.4817, 34.4937], [126.2913, 35.1542], [126.7174, 35.769], [126.5483, 36.4775], [126.2172, 36.8708], [126.8688, 36.9755], [126.5727, 37.7967], [125.9419, 37.8735], [125.4492, 37.7301], [125.1931, 38.0378], [124.6911, 38.1292], [125.0675, 38.5567], [125.4097, 39.2882], [125.3609, 39.5266], [124.2676, 39.9243], [123.3483, 39.7632], [122.3349, 39.3663], [121.6499, 38.8652], [121.7853, 39.4009], [121.5177, 39.6389], [122.2749, 40.5418], [121.859, 40.8423], [121.1745, 40.9013], [120.479, 40.231], [119.5912, 39.9025], [119.2245, 39.4081], [118.9125, 39.1666], [118.2977, 39.0671], [117.7845, 39.1346], [117.5577, 38.625], [118.0149, 38.1834], [118.94, 38.0426], [119.0891, 37.7008], [118.9529, 37.3311], [119.45, 37.1247], [120.3702, 37.7008], [120.7502, 37.834], [121.6402, 37.4603], [122.6025, 37.4265], [122.5195, 36.9467], [121.9327, 36.9595], [120.9899, 36.5978], [120.3933, 36.054], [120.0546, 35.8614], [119.2156, 35.0117], [119.5827, 34.5821], [120.2015, 34.3255], [120.5047, 33.6383], [120.8709, 33.0165], [120.8532, 32.6613], [121.4009, 32.3719], [121.3521, 31.8588], [121.0556, 31.7194], [121.661, 31.3199], [121.8781, 30.9164], [120.9974, 30.5582], [121.1594, 30.3012], [121.9442, 29.8941], [121.7174, 29.2562], [121.602, 28.3667], [121.0986, 28.2903], [120.2788, 27.0971], [119.6484, 25.9186], [119.5392, 25.5915], [119.0252, 25.2235], [118.9089, 24.9287], [118.5605, 24.5803], [118.0873, 24.6269], [118.0562, 24.246], [117.6283, 23.8368], [117.4663, 23.8408], [116.5381, 23.1798], [116.4706, 22.9459], [115.4985, 22.719], [115.1958, 22.8171], [114.854, 22.6169], [114.6515, 22.7554], [114.268, 22.2956], [113.8965, 22.4283], [113.5494, 22.225], [112.3051, 21.7416], [111.9438, 21.8495], [111.6029, 21.5591], [110.771, 21.3865], [110.1935, 21.0376], [110.1802, 20.8587], [110.5114, 20.5182], [110.123, 20.2639], [109.6626, 20.9168], [109.9308, 21.4806], [109.5441, 21.5378], [109.1486, 21.4255], [109.0305, 21.6266], [108.3248, 21.6936], [107.4099, 21.2848], [107.3544, 21.0553], [106.6752, 20.9603], [106.7534, 20.7348], [106.5181, 20.2887], [105.9841, 19.9389], [105.6214, 18.9664], [105.8882, 18.5025], [106.4986, 17.9463], [106.479, 17.7195], [107.1804, 16.8983], [108.0296, 16.331], [108.6741, 15.4836], [108.8215, 15.3779], [109.0847, 14.7161], [109.3035, 13.8563], [109.272, 13.2792], [109.4238, 12.9561], [109.2188, 12.6458], [109.1988, 11.7247], [108.8206, 11.3154], [108.2715, 10.9341], [107.2616, 10.3984], [106.8129, 10.4334], [106.7853, 10.1165], [106.5075, 9.8213], [106.5723, 9.6411], [105.5012, 9.0933], [105.3223, 8.8012], [104.8921, 8.5833], [104.8184, 8.8017], [104.8451, 9.606], [105.028, 10.0672], [104.6635, 10.1698], [104.2623, 10.5413], [103.532, 10.6048], [103.722, 10.8902], [103.5325, 11.1468], [103.153, 10.9137], [103.1254, 11.4606], [102.7628, 12.0124], [101.7236, 12.6893], [101.4449, 12.6187], [100.8634, 12.7146], [100.9624, 13.4319], [100.6561, 13.5211], [100.0173, 13.3534], [100.0901, 13.0457], [99.964, 12.6902], [99.9889, 12.1708], [99.6271, 11.4628], [99.4869, 10.8898], [99.165, 10.3198], [99.161, 9.7339], [99.3936, 9.2136], [99.7239, 9.3144], [99.9046, 9.1129], [99.9605, 8.6712], [100.2792, 8.2686], [100.4537, 7.4425], [100.5864, 7.1762], [101.0178, 6.861], [101.4977, 6.8654], [101.7991, 6.4744], [102.3402, 6.1721], [102.5342, 5.8627], [102.9825, 5.5249], [103.4158, 4.8502], [103.4686, 4.3934], [103.362, 3.7693], [103.4535, 3.5207], [103.4397, 2.933], [103.8121, 2.5805], [104.2884, 1.4806], [103.6945, 1.4495], [102.7273, 1.8557], [101.2953, 2.8851], [101.2997, 3.2535], [100.7156, 3.9664], [100.6143, 4.6522], [100.3525, 5.5875], [100.3431, 5.9843], [100.119, 6.442], [99.6959, 6.8765], [99.7203, 7.106], [99.051, 7.8877], [98.5791, 8.3445], [98.2377, 8.423], [98.2417, 8.7684], [98.5618, 9.8373], [98.465, 10.6758], [98.6754, 10.987], [98.7416, 11.5916], [98.6364, 11.7385], [98.6963, 12.2254], [98.576, 13.162], [98.2453, 13.7333], [97.8121, 14.859], [97.7104, 15.8756], [97.5843, 16.0194], [97.6194, 16.5374], [97.3757, 16.5227], [97.1782, 17.0621], [96.97, 17.3173], [96.8106, 16.7784], [96.6224, 16.564], [95.7635, 16.169], [95.3897, 15.7229], [94.9432, 15.8183], [94.5876, 16.2888], [94.2143, 16.1268], [94.589, 17.5694], [94.4309, 18.2015], [94.07, 18.8936], [93.7056, 19.0267], [93.9981, 19.4409], [93.3625, 20.0583], [93.002, 20.0748], [92.6079, 20.4698], [92.0561, 21.1747], [92.0082, 21.6848], [91.693, 22.5046], [91.4094, 22.7972], [90.9455, 22.597], [90.6334, 23.0946], [90.435, 22.7519], [90.5895, 22.2583], [90.1589, 21.817], [89.8118, 21.9835], [89.0518, 21.6541], [88.2537, 21.6222], [87.9483, 21.8255], [87.678, 21.6537], [87.1005, 21.5006], [86.8595, 21.2369], [86.9753, 20.7002], [86.7503, 20.3131], [86.2793, 19.9194], [85.5748, 19.693], [84.771, 19.1253], [84.1042, 18.2925], [83.6541, 18.0697], [83.1982, 17.609], [82.3597, 17.0963], [82.259, 16.56], [81.7618, 16.3297], [81.2385, 16.264], [80.9788, 15.7584], [80.6468, 15.8951], [80.2934, 15.7109], [80.0533, 15.0739], [80.1656, 14.5776], [80.1119, 14.2123], [80.3422, 13.3613], [80.229, 12.6902], [79.8584, 11.9888], [79.7541, 11.5751], [79.8486, 11.1969], [79.838, 10.3225], [79.3905, 10.3065], [78.9964, 9.6833], [78.9795, 9.2687], [78.4215, 9.1049], [78.1925, 8.8909], [78.0602, 8.3844], [77.5178, 8.0781], [76.9669, 8.4071], [76.5536, 8.9029], [76.3246, 9.452], [76.3463, 9.9221], [75.9224, 10.7841], [75.724, 11.3616], [75.1966, 12.0576], [74.7701, 13.0773], [74.6711, 13.6676], [74.3821, 14.4946], [73.9493, 15.0748], [73.932, 15.397], [73.4761, 16.0544], [73.3376, 16.4597], [73.1561, 17.6218], [72.8711, 18.6832], [72.8116, 19.2988], [72.6678, 19.8311], [72.8809, 20.5631], [72.8138, 21.117], [72.5431, 21.6968], [72.5901, 22.2783], [72.3327, 22.2703], [72.037, 21.8233], [72.2541, 21.5312], [72.0153, 21.1556], [71.0245, 20.7388], [70.7191, 20.7406], [70.1274, 21.0948], [69.0088, 22.1966], [70.1771, 22.5726], [70.2512, 22.9707], [69.6644, 22.759], [69.2361, 22.8487], [68.6408, 23.19], [68.4175, 23.5713], [68.0371, 23.8483], [67.6687, 23.811], [67.3096, 24.175], [67.1715, 24.7561], [66.7032, 24.8608], [66.6988, 25.2261], [66.4284, 25.5755], [65.6796, 25.3553], [64.7767, 25.3074], [64.6591, 25.184], [63.7207, 25.3859], [63.4912, 25.2106], [62.5724, 25.2545], [62.3153, 25.1347], [61.4116, 25.1023], [60.6641, 25.2821], [59.4562, 25.4814], [59.0461, 25.4175], [58.7979, 25.5546], [57.7961, 25.6532], [57.3344, 25.7917], [56.9824, 26.9054], [56.8129, 27.09], [56.3561, 27.2001], [55.6503, 26.9777], [54.8957, 26.5565], [54.6449, 26.509], [54.2472, 26.6968], [53.7056, 26.7256], [53.4548, 26.9431], [52.6918, 27.3235], [52.476, 27.6165], [52.0308, 27.8242], [51.6664, 27.8451], [51.2789, 28.1314], [51.0622, 28.7262], [50.6752, 29.1466], [50.6499, 29.42], [49.9831, 30.2093], [49.5548, 30.0291], [48.9169, 30.397], [48.9191, 30.1209], [48.4544, 29.9385], [47.9825, 30.0113], [47.9696, 29.6167], [48.1836, 28.9793], [48.9067, 27.6289], [49.4052, 27.1815], [49.9858, 26.829], [50.214, 26.3083], [50.0315, 26.1108], [50.5584, 25.0868], [51.0032, 25.9816], [51.2624, 26.1534], [51.543, 25.9022], [51.4853, 25.5249], [51.5869, 24.9647], [51.3099, 24.3406], [51.7676, 24.2545], [51.9061, 23.9855], [52.6483, 24.1546], [53.8934, 24.0769], [54.3972, 24.278], [54.747, 24.8102], [55.0981, 25.0415], [55.5229, 25.4982], [55.9411, 25.7939], [56.1643, 26.2071], [56.4298, 26.327], [56.373, 25.0184], [56.6406, 24.4702], [57.2199, 23.9229], [58.5782, 23.6437], [59.5352, 22.5783], [59.8233, 22.5091], [59.7998, 22.2201], [59.3715, 21.4988], [58.8956, 21.1126], [58.4743, 20.4068], [57.8618, 20.2439], [57.7153, 19.6069], [57.8116, 19.017], [57.1764, 18.9025], [56.6553, 18.5873], [56.551, 18.166], [56.2704, 17.9507], [55.4785, 17.8433], [55.0644, 17.039], [54.0683, 17.0057], [53.6097, 16.7598], [52.5812, 16.4704], [52.3278, 16.2937], [52.1742, 15.9568], [52.2177, 15.6554], [51.6038, 15.3367], [50.5269, 15.0384], [50.1669, 14.851], [49.3497, 14.638], [49.0483, 14.4564], [48.6683, 14.0503], [47.9901, 14.048], [47.4077, 13.6614], [46.7889, 13.4657], [45.6574, 13.3387], [45.0386, 12.8158], [44.6178, 12.8171], [43.9298, 12.6165], [43.4752, 12.8389], [43.232, 13.2672], [43.2826, 13.6397], [43.089, 14.0108], [43.0211, 14.555], [42.7171, 15.6545], [42.8396, 16.0322], [42.6989, 16.7371], [42.3833, 17.1224], [42.294, 17.4349], [41.7498, 17.8855], [41.2296, 18.6783], [41.1159, 19.0822], [40.7591, 19.7556], [40.0808, 20.2661], [39.6138, 20.5178], [39.0936, 21.3101], [38.9879, 21.8819], [39.0958, 22.3928], [38.9413, 22.8819], [38.4641, 23.712], [37.9195, 24.1852], [37.5431, 24.2917], [37.1808, 24.82], [37.1489, 25.2909], [36.7627, 25.7513], [36.2496, 26.5947], [35.5815, 27.4323], [35.1807, 28.0346], [34.616, 28.1483], [34.7798, 28.5074], [34.9041, 29.4773]]], [[[134.747, -5.7069], [134.7559, -6.1708], [134.4411, -6.335], [134.3018, -6.0097], [134.3413, -5.7127], [134.747, -5.7069]]], [[[107.3739, -6.0074], [107.6669, -6.2156], [108.295, -6.2649], [108.6776, -6.7905], [110.4261, -6.9472], [110.7369, -6.4722], [111.1546, -6.6693], [111.5403, -6.6484], [112.0872, -6.8934], [112.5391, -6.9263], [112.7943, -7.5526], [113.2484, -7.7182], [114.0705, -7.633], [114.4442, -7.8958], [114.387, -8.4053], [114.5836, -8.7698], [113.2533, -8.2868], [112.6789, -8.4093], [111.5101, -8.305], [110.6072, -8.1501], [110.0386, -7.8904], [109.2818, -7.7049], [108.7411, -7.6671], [108.4517, -7.7968], [107.9173, -7.724], [107.2852, -7.4718], [106.6317, -7.4155], [106.5199, -7.0537], [105.4838, -6.7816], [105.8683, -6.1166], [106.0751, -5.9142], [106.8253, -6.0984], [107.0463, -5.9045], [107.3739, -6.0074]]], [[[134.5366, -6.4424], [134.3559, -6.8149], [134.0589, -6.7692], [134.1681, -6.1761], [134.5366, -6.4424]]], [[[113.8445, -7.1052], [113.4708, -7.2184], [112.7637, -7.1398], [112.868, -6.9001], [113.9746, -6.873], [113.8445, -7.1052]]], [[[131.3255, -7.9996], [131.0866, -7.8651], [131.2602, -7.4705], [131.5607, -7.1358], [131.6912, -7.439], [131.3255, -7.9996]]], [[[138.5352, -8.2735], [138.2963, -8.4053], [137.6851, -8.2624], [138.0074, -7.6414], [138.2955, -7.4385], [138.77, -7.3906], [138.9893, -7.696], [138.5352, -8.2735]]], [[[126.8009, -7.668], [126.4719, -7.9504], [125.8434, -7.8167], [126.6096, -7.5717], [126.8009, -7.668]]], [[[115.4479, -8.155], [115.7045, -8.4071], [115.2362, -8.7977], [114.4753, -8.1195], [115.4479, -8.155]]], [[[118.2426, -8.3179], [118.9879, -8.3379], [119.0061, -8.7498], [118.2342, -8.808], [117.0614, -9.0991], [116.7884, -9.0064], [116.8351, -8.5323], [117.1649, -8.3672], [117.567, -8.4266], [118.1175, -8.1221], [118.2426, -8.3179]]], [[[122.7828, -8.6117], [121.6513, -8.899], [121.0352, -8.9353], [119.8078, -8.6974], [119.9183, -8.4453], [120.6104, -8.2407], [121.4444, -8.578], [121.9664, -8.4551], [122.263, -8.6251], [122.6034, -8.4027], [122.7828, -8.6117]]], [[[116.6406, -8.614], [116.3774, -8.9291], [116.0764, -8.7449], [116.0613, -8.4373], [116.4014, -8.2043], [116.7343, -8.3871], [116.6406, -8.614]]], [[[127.2963, -8.4244], [126.915, -8.7152], [126.3823, -8.9575], [125.4079, -9.2758], [124.4274, -10.1485], [123.8574, -10.3438], [123.5893, -9.967], [123.7092, -9.6149], [123.9773, -9.373], [124.5756, -9.1555], [125.178, -8.6477], [125.8043, -8.4923], [126.6198, -8.4595], [126.9664, -8.3157], [127.2963, -8.4244]]], [[[120.0124, -9.3748], [120.5038, -9.674], [120.8327, -10.0375], [120.439, -10.2941], [120.1447, -10.2], [119.6009, -9.7734], [119.0856, -9.7068], [119.1855, -9.3846], [120.0124, -9.3748]]]]
            },
            "properties": {
                "name": "Asia",
                "id": "asia"
            },
            "id": "asia"
        }]
    };
    return map;
}
)();
"use strict";
(self.webpackChunk_am5 = self.webpackChunk_am5 || []).push([[4837], {
    9295: function(t, e, i) {
        i.r(e),
        i.d(e, {
            am5themes_Animated: function() {
                return r
            }
        });
        var a = i(3409);
        class n extends a.Q {
            setupDefaultRules() {
                super.setupDefaultRules(),
                this.rule("Component").setAll({
                    interpolationDuration: 600
                }),
                this.rule("Hierarchy").set("animationDuration", 600),
                this.rule("Scrollbar").set("animationDuration", 600),
                this.rule("Tooltip").set("animationDuration", 300),
                this.rule("MapChart").set("animationDuration", 1e3),
                this.rule("MapChart").set("wheelDuration", 300),
                this.rule("Entity").setAll({
                    stateAnimationDuration: 600
                }),
                this.rule("Sprite").states.create("default", {
                    stateAnimationDuration: 600
                }),
                this.rule("Tooltip", ["axis"]).setAll({
                    animationDuration: 200
                }),
                this.rule("WordCloud").set("animationDuration", 500),
                this.rule("Polygon").set("animationDuration", 600),
                this.rule("ArcDiagram").set("animationDuration", 600)
            }
        }
        const r = n
    }
}, function(t) {
    var e = (9295,
    t(t.s = 9295))
      , i = window;
    for (var a in e)
        i[a] = e[a];
    e.__esModule && Object.defineProperty(i, "__esModule", {
        value: !0
    })
}
]);
